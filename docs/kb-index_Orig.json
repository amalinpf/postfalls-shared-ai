[
  {
    "id": "1",
    "name": "1 - Missing Attachments in SharePoint Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/1%20-%20Missing%20Attachments%20in%20SharePoint%20Tickets.html",
    "title": "Missing Attachments In SharePoint Tickets",
    "text": "Missing Attachments in SharePoint Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Missing Attachments in SharePoint Tickets Missing Attachments in SharePoint Tickets 1542 views Less than a minute 0 Attachments on emails sent to a SharePoint list could be missing. This can especially be an issue for attachments on emails sent from Office Outlook for Mac and Outlook Web Access. Are attachments missing from e-mail messages that are sent to a SharePoint document library? If attachments are missing from e-mail messages that are sent to a SharePoint Server 2010 document library, it might be because you associated the document library with an e-mail address. When you do this, Directory Management Service may not add the following two attributes: · internet Encoding = 1310720 · mAPIRecipient = false You must use Active Directory Service Interfaces (ADSI) to manually add these two missing attributes. Note: On servers that are running Windows Server 2008 or Windows Server 2008 R2, ADSI Edit is installed when you install the AD DS role to make a server a domain controller. You can also install Windows Server 2008 Remote Server Administration Tools (RSAT) on domain member servers or stand-alone servers. For more information, see Installing or Removing the Remote Server Administration Tools Pack 8 ( http://go.microsoft.com/fwlink/?LinkId=143345 ). To add attributes by using ADSI Edit Click Start , and then click Run . In the Run dialog box, type Adsiedit.msc , and then click OK . In the ADSI Edit window, expand ADSI Edit , expand Domain [DomainName] , expand DC=DomainName, DC=com , and then expand CN=Users . Right-click the user name to which you want to add the missing attributes, and then click Properties . In the Properties dialog box, double-click internet Encoding on the Attribute Editor tab. In the Integer Attribute Editor dialog box, type 1310720 in the Value box, and then click OK . In the Properties dialog box, double-click mAPIRecipient on the Attribute Editor tab. In the Boolean Attribute Editor dialog box, click False , and then click OK two times. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "10",
    "name": "10 - Missing Attachments in SharePoint Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/10%20-%20Missing%20Attachments%20in%20SharePoint%20Tickets.html",
    "title": "Missing Attachments In SharePoint Tickets",
    "text": "Missing Attachments in SharePoint Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Missing Attachments in SharePoint Tickets Missing Attachments in SharePoint Tickets 1542 views Less than a minute 0 Attachments on emails sent to a SharePoint list could be missing. This can especially be an issue for attachments on emails sent from Office Outlook for Mac and Outlook Web Access. Are attachments missing from e-mail messages that are sent to a SharePoint document library? If attachments are missing from e-mail messages that are sent to a SharePoint Server 2010 document library, it might be because you associated the document library with an e-mail address. When you do this, Directory Management Service may not add the following two attributes: · internet Encoding = 1310720 · mAPIRecipient = false You must use Active Directory Service Interfaces (ADSI) to manually add these two missing attributes. Note: On servers that are running Windows Server 2008 or Windows Server 2008 R2, ADSI Edit is installed when you install the AD DS role to make a server a domain controller. You can also install Windows Server 2008 Remote Server Administration Tools (RSAT) on domain member servers or stand-alone servers. For more information, see Installing or Removing the Remote Server Administration Tools Pack 8 ( http://go.microsoft.com/fwlink/?LinkId=143345 ). To add attributes by using ADSI Edit Click Start , and then click Run . In the Run dialog box, type Adsiedit.msc , and then click OK . In the ADSI Edit window, expand ADSI Edit , expand Domain [DomainName] , expand DC=DomainName, DC=com , and then expand CN=Users . Right-click the user name to which you want to add the missing attributes, and then click Properties . In the Properties dialog box, double-click internet Encoding on the Attribute Editor tab. In the Integer Attribute Editor dialog box, type 1310720 in the Value box, and then click OK . In the Properties dialog box, double-click mAPIRecipient on the Attribute Editor tab. In the Boolean Attribute Editor dialog box, click False , and then click OK two times. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "100",
    "name": "100 - Missing Attachments in SharePoint Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/100%20-%20Missing%20Attachments%20in%20SharePoint%20Tickets.html",
    "title": "Missing Attachments In SharePoint Tickets",
    "text": "Missing Attachments in SharePoint Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Missing Attachments in SharePoint Tickets Missing Attachments in SharePoint Tickets 1542 views Less than a minute 0 Attachments on emails sent to a SharePoint list could be missing. This can especially be an issue for attachments on emails sent from Office Outlook for Mac and Outlook Web Access. Are attachments missing from e-mail messages that are sent to a SharePoint document library? If attachments are missing from e-mail messages that are sent to a SharePoint Server 2010 document library, it might be because you associated the document library with an e-mail address. When you do this, Directory Management Service may not add the following two attributes: · internet Encoding = 1310720 · mAPIRecipient = false You must use Active Directory Service Interfaces (ADSI) to manually add these two missing attributes. Note: On servers that are running Windows Server 2008 or Windows Server 2008 R2, ADSI Edit is installed when you install the AD DS role to make a server a domain controller. You can also install Windows Server 2008 Remote Server Administration Tools (RSAT) on domain member servers or stand-alone servers. For more information, see Installing or Removing the Remote Server Administration Tools Pack 8 ( http://go.microsoft.com/fwlink/?LinkId=143345 ). To add attributes by using ADSI Edit Click Start , and then click Run . In the Run dialog box, type Adsiedit.msc , and then click OK . In the ADSI Edit window, expand ADSI Edit , expand Domain [DomainName] , expand DC=DomainName, DC=com , and then expand CN=Users . Right-click the user name to which you want to add the missing attributes, and then click Properties . In the Properties dialog box, double-click internet Encoding on the Attribute Editor tab. In the Integer Attribute Editor dialog box, type 1310720 in the Value box, and then click OK . In the Properties dialog box, double-click mAPIRecipient on the Attribute Editor tab. In the Boolean Attribute Editor dialog box, click False , and then click OK two times. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "102",
    "name": "102 - Add new ticket link (webpart) in a workspace.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/102%20-%20Add%20new%20ticket%20link%20%28webpart%29%20in%20a%20workspace.html",
    "title": "Add New Ticket Link (webpart) In A Workspace",
    "text": "Add new ticket link (webpart) in a workspace - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Add new ticket link (webpart) in a workspace Add new ticket link (webpart) in a workspace 877 views Less than a minute 0 &#8211; In CCS Service Request a Ticket can be created directly from a page by adding &#8216;Crow Canyon Ticket Launcher&#8217; web part as shown below &#8211; Configure &quot;Crow Canyon Ticket Launch&quot; web part by following these steps 1. Edit a page and add Ticket launcher web part as shown below 2. Edit &#8216;Crow Canyon Ticket Launcher&#8217; web part and configure as shown below 3. Save and Refresh page 4. Create Ticket by providing Category and IssueType values as shown below (without selecting Category and IssueType &#8216;Create Ticket&#8217; link cannot be visible) Ticket Launcher in CCS Service Request: In CCS Service Request site Ticket Launcher can be seen on root site home page as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "104",
    "name": "104 - Mapping for emails to SharePoint list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/104%20-%20Mapping%20for%20emails%20to%20SharePoint%20list.html",
    "title": "Mapping For Emails To SharePoint List",
    "text": "Mapping for emails to SharePoint list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Mapping for emails to SharePoint list Mapping for emails to SharePoint list 1559 views Less than a minute 0 For emails sent to the SharePoint ticket list, below is the syntax to map text in the body of the incoming email to fields on the Ticket. This is usually used when creating the email from a Web form (the code that is run when &quot;Submit&quot; is pressed on the Web form needs to&nbsp;create the email, address it to the SharePoint list&#8217;s email address,&nbsp;and put the data from the fields on the Web form into the format below so that &nbsp; 1. Subject line should end with $mapping string. &nbsp;&nbsp; E.g. Subject: Problem with printer $mapping &nbsp; 2. All the fields that require mapping should be in separate line and format should be DisplayName of the field: Value of the field &nbsp;&nbsp; E.g. Priority: High &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Category: Hardware Problem &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "106",
    "name": "106 - Restricting Assigned Staff list in SharePoint.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/106%20-%20Restricting%20Assigned%20Staff%20list%20in%20SharePoint.html",
    "title": "Restricting Assigned Staff List In SharePoint",
    "text": "Restricting Assigned Staff list in SharePoint - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Restricting Assigned Staff list in SharePoint Restricting Assigned Staff list in SharePoint 906 views Less than a minute 0 You can restrict the Assigned Staff column on a ticket to show only members of a group rather than the whole SharePoint list of users. This is done by going to Tickets/List Tools/List/List Settings, then the Assigned Staff column. Use the &quot;Choose from:&quot; option there. You need to choose a group (or you can create one for this purpose, such as Assigned Staff List).&nbsp; &nbsp; &nbsp; When you click the People Picker icon for Assigned Staff field on the Ticket, you get a short list of the names of whomever is in that group, rather than the full list of all SharePoint users. Only members of that group show up in the box that opens. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "108",
    "name": "108 - How to manage the List View Threhsold in SharePoint On-Premises_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/108%20-%20How%20to%20manage%20the%20List%20View%20Threhsold%20in%20SharePoint%20On-Premises_.html",
    "title": "How To Manage The List View Threhsold In SharePoint On Premises",
    "text": "How to manage the List View Threhsold in SharePoint On-Premises? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to manage the List View Threhsold in SharePoint On-Premises? How to manage the List View Threhsold in SharePoint On-Premises? 973 views 1 min , 16 sec read 0 Applies To: SharePoint On Premises Issue with List View Threshold Limit: Description: By default the List View Threshold limit in SharePoint Central Administration is 5000 items. If the list is having more than 5000 items then it will exceeds the list view threshold limit and will show the &#8220;List View threshold error message&#8221; in views. To avoid this error message, we can increase the list view threshold limit in SharePoint Central Administration, Creating indexed columns in list and creating filtered views using indexed columns. Detailed Steps: 1. Increase the list view threshold limit in Sharepoint Central Administration. Go to SharePoint Central Administration &#8211;&gt; Application Management &#8211;&gt; Manage Web Applications &#8211;&gt; Select the web application and click on &#8220;Resource Throttling&#8221; under general settings as shown below. Increase the list view threshold limit 2. However there might be performance issues when the list view threshold is increased to a larger value. Other possible way is to index the SharePoint list columns and create filtered views with indexed columns in the filter conditions. To create indexed columns, go to List Settings &#8211;&gt; click on Indexed Columns and create a new indexed column as shown below Select the column and click ok. 3. Now create a filtered view using indexed column. We have created a sample view Tickets 2018 which shows all the tickets created in 2018. &nbsp; Issue with Lookup Threshold Limit: &nbsp; This error can appear when there are too many lookup columns in the given view of the list. The standard SharePoint limit is 8 lookup columns in any given view. There are two ways to fix this. One is to reduce the number of lookup columns in the view. However, if you need more than 8 lookup columns in your view you&#8217;ll need to increase the throttle limit for lookup columns: &nbsp; &nbsp; &nbsp; &nbsp; Open SharePoint Central Administration, Go to Application Management &#8211;&gt; Manage Web Applications Click to select the web application that hosts your list (eg. SharePoint &#8211; 80) In the Ribbon, select General Settings/Resource Throttling In the List View Lookup Threshold limit, edit the value you want (for example, 16 instead of the default 8). Click OK to save it. &nbsp; &nbsp; To know more about indexing the columns in different lists to increase the performance, please refer https://www.crowcanyon.help/article/243 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "11",
    "name": "11 - Modifying Column Names in Crow Canyon’s SharePoint applications (Issue Type).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/11%20-%20Modifying%20Column%20Names%20in%20Crow%20Canyon%E2%80%99s%20SharePoint%20applications%20%28Issue%20Type%29.html",
    "title": "Modifying Column Names In Crow Canyon’s SharePoint Applications (Issue Type)",
    "text": "Modifying Column Names in Crow Canyon’s SharePoint applications (Issue Type) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Modifying Column Names in Crow Canyon&#8217;s SharePoint applications (Issue Type) Modifying Column Names in Crow Canyon&#8217;s SharePoint applications (Issue Type) 883 views Less than a minute 0 The name of most columns in the SharePoint lists can be easily modified in List Settings without difficulty. But some columns in the Crow Canyon applications are linked to other columns, workflows, and processes such that a specific procedure is required to modify the name of that column. One of these linked columns is &quot;Issue Type&quot;. &nbsp;Renaming the Issue Type &nbsp;column involves several steps as described in this document: ModifyingIssueType.pdf About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "110",
    "name": "110 - Modifying Column Names in Crow Canyon’s SharePoint applications (Issue Type) - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/110%20-%20Modifying%20Column%20Names%20in%20Crow%20Canyon%E2%80%99s%20SharePoint%20applications%20%28Issue%20Type%29%20-%20Crow%20Canyon%20Software.html",
    "title": "Modifying Column Names In Crow Canyon’s SharePoint Applications (Issue Type) Crow Canyon Software",
    "text": "Modifying Column Names in Crow Canyon’s SharePoint applications (Issue Type) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Modifying Column Names in Crow Canyon&#8217;s SharePoint applications (Issue Type) Modifying Column Names in Crow Canyon&#8217;s SharePoint applications (Issue Type) 883 views Less than a minute 0 The name of most columns in the SharePoint lists can be easily modified in List Settings without difficulty. But some columns in the Crow Canyon applications are linked to other columns, workflows, and processes such that a specific procedure is required to modify the name of that column. One of these linked columns is &quot;Issue Type&quot;. &nbsp;Renaming the Issue Type &nbsp;column involves several steps as described in this document: ModifyingIssueType.pdf About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "111",
    "name": "111 - Requester Phone is the Mobile Number instead of Work Phone.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/111%20-%20Requester%20Phone%20is%20the%20Mobile%20Number%20instead%20of%20Work%20Phone.html",
    "title": "Requester Phone Is The Mobile Number Instead Of Work Phone",
    "text": "Requester Phone is the Mobile Number instead of Work Phone - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Requester Phone is the Mobile Number instead of Work Phone Requester Phone is the Mobile Number instead of Work Phone 875 views Less than a minute 0 &nbsp; In the SharePoint applications, the Requester Phone in the Ticket reads&nbsp; the Mobile Number instead of the Work Phone from SharePoint User Profile. Is there any way to change this to read the Work Phone? Is there a way to change what other&nbsp;user information is pulled into the ticket? Issue: The SharePoint application&nbsp;pulls in Mobile Phone Number of the Requester in the Requester Phone field on the Ticket, when the Work Phone is what is expected or required. Cause: In SharePoint, the User Profile&rsquo;s phone number field is by default the Mobile Phone Number (which is pulled in from Active Directory when the user is created). Possible solutions: 1. Change the SharePoint user profile field mappings in Central Administration by using User Profile Synchronization service. (User Profile Synchronization service is available only in Standard/Enterprise version of SharePoint 2010) &nbsp;&nbsp;&nbsp;&nbsp; Note: Any change made by User Profile Synchro nization service will apply to all sites in your SharePoint farm. 2. Crow Canyon can customize the&ldquo;User Info Filler&rdquo; web part to get information from different user profile mappings. Contact support@crowcanyon.com for more information on this. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "112",
    "name": "112 - How do I set permissions so that end users can submit and update tickets, but can’t see the Service.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/112%20-%20How%20do%20I%20set%20permissions%20so%20that%20end%20users%20can%20submit%20and%20update%20tickets%2C%20but%20can%E2%80%99t%20see%20the%20Service.html",
    "title": "How Do I Set Permissions So That End Users Can Submit And Update Tickets, But Can’t See The Service",
    "text": "How do I set permissions so that end users can submit and update tickets, but can’t see the Service Area? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How do I set permissions so that end users can submit and update tickets, but can&#8217;t see the Service Area? How do I set permissions so that end users can submit and update tickets, but can&#8217;t see the Service Area? 985 views 1 min , 49 sec read 0 Setting permissions requires having users in the correct SharePoint groups in order to permission the groups accordingly. First, you&#8217;ll want to define a SharePoint Group that contains your end users. This could be a group that contains an All Domain Users AD group. Also, you may want to define a new Permission Level such as Contribute without Delete in order to remove the ability for users to delete Tickets. To set Permission Levels, please see this technet article: http://technet.microsoft.com/en-us/library/cc721640%28v=office.15%29.aspx. The article refers to SharePoint 2013, but there is an option on the site to select the articles for SharePoint 2007 and SharePoint 2010. NOTE: Before proceeding to the next steps, make sure that the person who is configuring these permissions and any other users who require access to the Service Area are in a separate SharePoint Group. This group or these groups will retain their access. However, if the users are not in a separate SharePoint Group, their access will also be removed for the Service Area. Once you have your SharePoint Group and Permission Level defined, go to the top level of the service area: For SP 2010, navigate to Site Actions in the upper left corner of the screen and select Site Permissions: &nbsp; For SP 2013, navigate to the gear icon in the upper right corner of the screen and select Site Settings: &nbsp; &nbsp; Then select Site Permissions under Users and Permissions: &nbsp; In either version, click Stop Inheriting Permissions: &nbsp; 2010: 2013: &nbsp; Select the SharePoint Group which contains your end users, and then click Remove User Permissions: &nbsp; 2010: 2013: This will now prevent your end users from accessing the Service Area. The next steps will allow the end users to submit and update Tickets only. There are several lists within the Service Area to which end users will need either Read or Contribute (without Delete) access in order to submit and update Tickets. Open up the Calendar list, and navigate to the permissions section for this list. The easiest way to do this is to go to View All Site Content (2010, under Site Actions) or Site Contents (2013, under the gear icon). Click on the given list or library name. At the top, there is a List ribbon. Open this ribbon and click List Settings on the right-hand side: 2010: 2013: &nbsp; In both 2010 and 2013, choose &#8220;Permissions for this list&#8221; under the Permissions and Managment section: &nbsp; Follow the steps above to break inheritance from the parent site. Then choose Grant Permissions to give Read permissions back to the end users. In 2010, select the Group in the Users/Groups section. Select Grant users permission directly. Then choose the Read permission. Uncheck the Send welcome e-mail to the new users (unless you want to send an email to all end users): &nbsp; In 2013, select the Group in the Invite People section. Click Show Options to choose whether to send an email invitation or not and to select the permission level being granted: Repeat the above steps for each list and library which need to be modifed. The following is the list of lists, and the access required: Normal 0 false false false EN-US X-NONE X-NONE Read only lists and libraries: 1. Calendar 2. Category 3. Configurations 4. Issue type 5. IT Support Tasks 6. Knowledge Base 7. Script Documents Contribute (or new permission level) lists and libraries: Email Tickets Tickets About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "115",
    "name": "115 - Work Log disappearing.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/115%20-%20Work%20Log%20disappearing.html",
    "title": "Work Log Disappearing",
    "text": "Work Log disappearing - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Work Log disappearing Work Log disappearing 898 views Less than a minute 0 When entering text into the Work Log column, the text then disappears when clicking to a new tab. The Work Log column is currently Rich Text. SOLUTION: The Work Log column is a &#8220;rich text box&#8221;. Make it as an &#8220;Enhanced Rich Text box&#8221; and that issue will be solved. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "117",
    "name": "117 - “This value already exists in the list” error when creating a new item - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/117%20-%20%E2%80%9CThis%20value%20already%20exists%20in%20the%20list%E2%80%9D%20error%20when%20creating%20a%20new%20item%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "“This Value Already Exists In The List” Error When Creating A New Item Crow Canyon Software Suppor",
    "text": "“This value already exists in the list” error when creating a new item - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / &#8220;This value already exists in the list&#8221; error when creating a new item &#8220;This value already exists in the list&#8221; error when creating a new item 1250 views Less than a minute 1 Check to see if any of the columns in the entire list (not just on the visible tab) have the “Enforce unique values” option marked as “Yes”. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "119",
    "name": "119 - Not able to close ticket due to pending approvals.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/119%20-%20Not%20able%20to%20close%20ticket%20due%20to%20pending%20approvals.html",
    "title": "Not Able To Close Ticket Due To Pending Approvals",
    "text": "Not able to close ticket due to pending approvals - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Not able to close ticket due to pending approvals Not able to close ticket due to pending approvals 904 views Less than a minute 0 Issue Description: Customer created a ticket and approval process was started for it. Ticket was in pending approval status and customer tried to close it. They were not able to close due to ticket having pending approval. Ticket can&#8217;t be clas there is a approval process attached to it. Not able to close even after removing all the approvals tasks which are associated to the ticket. &nbsp; &nbsp; Cause / Fix Once a ticket is sent for approval a hidden column in Tickets item &quot;Approval status info&quot; is set to &quot;Pending for Approval&quot;. After ticket is approved/denied/sent back, its value is changed to &quot;Approves\\Deny\\Send Back&quot; in the ticket. At the time of closing the ticket, our workflow check the value of this field and do not allow ticket to be closed if its value is &quot;Pending for Approval&quot;. In this situation, there are following options: Mark the ticket approval tasks as approved/denied If approval tasks are deleted then change the value of hidden field as described below &nbsp; 1. GoTo Tickets List Settings-&gt; Crow Canyon Field Manager-&gt; Expand &quot;Edit Form&quot; section select &quot;Approval Status Info&quot; from hidden list and click move back button and save as shown in screenshot. 2. Edit the &quot;Tickets&quot; list and change the &quot;Approval Status Info&quot; value to &quot;Not Required&quot; and save the Ticket. 3. GoTo Tickets List Settings-&gt; Crow Canyon Field Manager-&gt; Expand &quot;Edit Form&quot; section select &quot;Approval Status Info&quot; from visible list and click move forward button and save as shown in screenshot 4. Now ticket can be closed. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "12",
    "name": "12 - Error during Site Collection Migration.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/12%20-%20Error%20during%20Site%20Collection%20Migration.html",
    "title": "Error During Site Collection Migration",
    "text": "Error during Site Collection Migration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Error during Site Collection Migration Error during Site Collection Migration 889 views Less than a minute 0 Issue Description :- &nbsp; While restoring the Site Collection Backup using &ldquo;STSADM&rdquo;, it gave an Error like below &ldquo; &lt;nativehr&gt;0x80070003&lt;/nativehr&gt;&lt;nativestack&gt;&lt;/nativestack&gt;&rdquo; Cause:- These are the Pre requisites for restoring a site collection : 1.Dependency Solutions (The Solutions used in Source Site Collection must be deployed into the Target Site Collection.) 2.Permissions on Site Collection. (One Should have the site collection administrator permissions) 3.Configuration Database version. &nbsp; If the Configuration Database version in Source Server&nbsp; is not matching with the Target Server, this error occurs. &nbsp; Fix:- Since the Configuration Database version of Source did not match with the configuration database version of the Target server, we have to install all the required updates to update the configuration database version in Target Server. To do that Go to Control Panel-&gt;Programs-&gt;View Installed updates under Programs and Feature in the Source server. &nbsp; Under Microsoft SharePoint Foundation 2013 Category Find the Latest Updates and Download them Install them into the Destination Server. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "121",
    "name": "121 - Error during Site Collection Migration.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/121%20-%20Error%20during%20Site%20Collection%20Migration.html",
    "title": "Error During Site Collection Migration",
    "text": "Error during Site Collection Migration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Error during Site Collection Migration Error during Site Collection Migration 889 views Less than a minute 0 Issue Description :- &nbsp; While restoring the Site Collection Backup using &ldquo;STSADM&rdquo;, it gave an Error like below &ldquo; &lt;nativehr&gt;0x80070003&lt;/nativehr&gt;&lt;nativestack&gt;&lt;/nativestack&gt;&rdquo; Cause:- These are the Pre requisites for restoring a site collection : 1.Dependency Solutions (The Solutions used in Source Site Collection must be deployed into the Target Site Collection.) 2.Permissions on Site Collection. (One Should have the site collection administrator permissions) 3.Configuration Database version. &nbsp; If the Configuration Database version in Source Server&nbsp; is not matching with the Target Server, this error occurs. &nbsp; Fix:- Since the Configuration Database version of Source did not match with the configuration database version of the Target server, we have to install all the required updates to update the configuration database version in Target Server. To do that Go to Control Panel-&gt;Programs-&gt;View Installed updates under Programs and Feature in the Source server. &nbsp; Under Microsoft SharePoint Foundation 2013 Category Find the Latest Updates and Download them Install them into the Destination Server. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "123",
    "name": "123 - Issue Types are not getting cascaded according to the selected Category in the Tickets - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/123%20-%20Issue%20Types%20are%20not%20getting%20cascaded%20according%20to%20the%20selected%20Category%20in%20the%20Tickets%20-%20Crow%20Canyon.html",
    "title": "Issue Types Are Not Getting Cascaded According To The Selected Category In The Tickets Crow Canyon",
    "text": "Issue Types are not getting cascaded according to the selected Category in the Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Issue Types are not getting cascaded according to the selected Category in the Tickets Issue Types are not getting cascaded according to the selected Category in the Tickets 892 views Less than a minute 0 Cause :- The Url in&nbsp; &#8216;New Ticket Form&#8217; and&nbsp; &#8216;Constant File&#8217; might not be pointing to the CCSSRScript java script file in Script Documents. Fix: &#8211; Follow the steps below if this is the cause. 1. Go to Script Documents. 2. Copy Shortcut the CCSSRScript java script file. (Copy the Url of the the Java script file ) 3. Download the &#8216;New Ticket Form&#8217; and&nbsp; &#8216;Constant File&#8217; files. 4. Paste the Url of the Java Script file in src as shown below in both the files. &nbsp;5. Save the files. 6. Upload these two files into Script Documents ( check Overwrite Existing files ) &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "124",
    "name": "124 - List is not displaying any items in the SharePoint site.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/124%20-%20List%20is%20not%20displaying%20any%20items%20in%20the%20SharePoint%20site.html",
    "title": "List Is Not Displaying Any Items In The SharePoint Site",
    "text": "List is not displaying any items in the SharePoint site - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / List is not displaying any items in the SharePoint site List is not displaying any items in the SharePoint site 805 views Less than a minute 0 Tickets list is not showing any items as web part is closed on the page Applies to: SharePoint Online and On-prem Issue Description: Tickets List is not displaying any items as shown in below image: Cause: User might have closed the Tickets Webpart in Tickets List by clicking on Close option (while editing the Tickets webpart): Resolution: Edit page&#8211;&gt; Click on&nbsp; &#8216;Add a web part&#8217; &#8211;&gt; In &#8216;Closed Parts&#8217; &#8211;&gt; Select &#8216;Tickets&#8217; Webpart &#8211;&gt; Click OK. After this, web part will be added to the Page and will display the Items as shown below: &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "125",
    "name": "125 - How to get single line spacing in Work Log field or Enhanced Rich Text type fields in SharePoint - C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/125%20-%20How%20to%20get%20single%20line%20spacing%20in%20Work%20Log%20field%20or%20Enhanced%20Rich%20Text%20type%20fields%20in%20SharePoint%20-%20C.html",
    "title": "How To Get Single Line Spacing In Work Log Field Or Enhanced Rich Text Type Fields In SharePoint C",
    "text": "How to get single line spacing in Work Log field or Enhanced Rich Text type fields in SharePoint - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to get single line spacing in Work Log field or Enhanced Rich Text type fields in SharePoint How to get single line spacing in Work Log field or Enhanced Rich Text type fields in SharePoint 885 views Less than a minute 0 Solution for extra line spacing in Work Log field Applies To: SharePoint On-Premises and SharePoint Online Issue Description: After writing something in the work log and hit Enter, it shows extra space between lines Cause/Resolution: If the Worklog is of type Enhanced Rich Text Field, and if we hit &#8220;Enter&#8221; in it, it takes Double Spaces. So, rather than hitting &#8220;Enter&#8221; to move to next line, Use &#8220;Shift + Enter&#8221; so that only a single space occurs. Refer https://support.microsoft.com/en-us/kb/2662794 for more Info. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "126",
    "name": "126 - Category Owner is not getting an email on Ticket creation.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/126%20-%20Category%20Owner%20is%20not%20getting%20an%20email%20on%20Ticket%20creation.html",
    "title": "Category Owner Is Not Getting An Email On Ticket Creation",
    "text": "Category Owner is not getting an email on Ticket creation - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Category Owner is not getting an email on Ticket creation Category Owner is not getting an email on Ticket creation 986 views Less than a minute 0 Category owner is not receiving emails on new Ticket creation with that category Applies To: SharePoint 2013 and 2016 and SharePoint Server Subscription Edition Note : This article assumes that general SharePoint emails and Crow Canyon notifications are working in your environment. Issue is only with Category Owner Emails. Please refer this artcile for general email issues: https://www.crowcanyon.help/article/322 Issue Description: In Crow Canyon Help Desk Product, Tickets have an attribute to define the Category of the issue. This is a lookup column to Category list and in this list we can define an Owner for the Category. For every category it can be specified that Category owner should receive an email when a new Ticket is created with that Category and the defined Priority. The mail content is received as per the configuration in &#8216;New Ticket Utility&#8217; list. Please refer below links for more details: Category List New Ticket Utility Here, the issue is that Category Owner is not receing the mail after configuring the required fields in the Category list. Cause/Resolution : In Category List for the Category Owner column, &#8220;Show Field&#8221; should be set to &#8220;E-Mail&#8221; instead of other options like &#8220;Name&#8221; etc.. If this is not set to &#8220;E-Mail&#8221; then please make the change and try again by creating a new Ticket with respective Category: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "13",
    "name": "13 - The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.”.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/13%20-%20The%20Email%20Tickets%20list%20view%20web%20part%20in%20the%20Display%20form%20of%20a%20Ticket%20shows%20%E2%80%9CThis%20view%20cannot%20be%20displayed%20because%20it%20exceeds%20the%20list%20view%20threshold%20%285000%20items%29%20enforced%20by%20the%20administrator.%E2%80%9D.html",
    "title": "The Email Tickets List View Web Part In The Display Form Of A Ticket Shows “This View Cannot Be Displayed Because It Exceeds The List View Threshold (5000 Items) Enforced By The Administrator.”",
    "text": "The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” 901 views Less than a minute 0 To resolve this issue you will want to index at least one of the columns in the Email Tickets list. Since the link between the Ticket and the Email Tickets list is the Related Ticket ID column, this is the column you should index. To do so, an Admin user will need to perform the following steps: 1. Go to the Site Contents page: 2. Click on the ellipsis in the Email Tickets list to go to the Settings page: 3. Once on the settings page, scroll down below your list of column and click “Indexed Columns”: 4. Click “Create a new index” 5. Choose “Related Ticket ID” as the Primary column. There is no need to set a Secondary column: Click Create to set up the Indexed column. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "134",
    "name": "134 - The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be disp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/134%20-%20The%20Email%20Tickets%20list%20view%20web%20part%20in%20the%20Display%20form%20of%20a%20Ticket%20shows%20%E2%80%9CThis%20view%20cannot%20be%20disp.html",
    "title": "The Email Tickets List View Web Part In The Display Form Of A Ticket Shows “This View Cannot Be Disp",
    "text": "The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” The Email Tickets list view web part in the Display form of a Ticket shows “This view cannot be displayed because it exceeds the list view threshold (5000 items) enforced by the administrator.” 901 views Less than a minute 0 To resolve this issue you will want to index at least one of the columns in the Email Tickets list. Since the link between the Ticket and the Email Tickets list is the Related Ticket ID column, this is the column you should index. To do so, an Admin user will need to perform the following steps: 1. Go to the Site Contents page: 2. Click on the ellipsis in the Email Tickets list to go to the Settings page: 3. Once on the settings page, scroll down below your list of column and click “Indexed Columns”: 4. Click “Create a new index” 5. Choose “Related Ticket ID” as the Primary column. There is no need to set a Secondary column: Click Create to set up the Indexed column. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "137",
    "name": "137 - Office 365 Service Request_ Create recurring Tickets with different schedules - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/137%20-%20Office%20365%20Service%20Request_%20Create%20recurring%20Tickets%20with%20different%20schedules%20-%20Crow%20Canyon%20Software.html",
    "title": "Office 365 Service Request Create Recurring Tickets With Different Schedules Crow Canyon Software",
    "text": "Office 365 Service Request: Create recurring Tickets with different schedules - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Create recurring Tickets with different schedules Office 365 Service Request: Create recurring Tickets with different schedules 971 views 1 min , 4 sec read 0 There is a better way to configure the Recurrence feature now, please refer this article. Use Workflow Manager App to create recurring items with various schedules Workflow Manager App can be used to create recurring Tickets at different intervals. This is important for cases like creating scheduled maintenance Tickets for Assets. Below article describes the steps to create tickes based on daily/weekly/monthly/yearly/specific dates schedules: &nbsp; 1. Create a new list “Recurring Ticket Template” in helpdesk site like below. Title &#8211; Single line of text Ticket Title &#8211; Single line of text Ticket Description &#8211; Multiple lines of Text &#8211; Enhanced Rich Text Ticket Category &#8211; Lookup (Category List title) Ticket Type &#8211; Lookup (IssueType title) Requester &#8211; Person/Group field Staff &#8211; Person/Group field Asset- Lookup (Asset list Title) Recurrence Type &#8211; Choice (Daily, Weekly, Monthly, Yearly and Specific Date) Start Date &#8211; Date/Time field (Date and Time) Specific Date &#8211; Date/Time field (Date and Time) &nbsp; Fields in this list: 2. Go to CrowCanyon Workflow Manager app. Configure Recurrence Schedule workflows in Workflow manager app for Yearly, Monthly, Weekly, Daily recurrences: a) Create Yearly Recurrence Schedule Workflow like below: and create an action (Create New Ticket) like below: b) Create Monthly Recurrence Schedule Workflow like below: &nbsp; c) Create Weekly Recurrence Schedule Workflow like below: &nbsp; d) Create Daily Recurrence Schedule Workflow like below: &nbsp; &nbsp; 3. Go to Recurring Ticket Template list and create/configure Recurring tickets : i) Example to create a Weekly Recurring Ticket: &#8211; Create a new item in Recurring Ticket Template like below and choose Recurrence Type as Weekly. ii) Example to create a Recurring Ticket with a Specific Date. &#8211; Choose Recurrence Type as ‘Specific Date’ and fill Specific Date like below if the recurring tickets has to follow some specific pattern other than above provided recurrence patterns. And then create a workflow in workflow manager app like below: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "138",
    "name": "138 - Office 365 Service Request_ Create a report on re-opened tickets by month for assigned staff - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/138%20-%20Office%20365%20Service%20Request_%20Create%20a%20report%20on%20re-opened%20tickets%20by%20month%20for%20assigned%20staff%20-%20Crow.html",
    "title": "Office 365 Service Request Create A Report On Re Opened Tickets By Month For Assigned Staff Crow",
    "text": "Office 365 Service Request: Create a report on re-opened tickets by month for assigned staff - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Create a report on re-opened tickets by month for assigned staff Office 365 Service Request: Create a report on re-opened tickets by month for assigned staff 829 views Less than a minute 0 Please follow the steps below to create a report to see reopened tickets for each staff by month to analyze staff effectiveness in resolving issues. &nbsp; 1. Create a new list “Reopened tickets” with below fields. Title – Single line of text TicketID &#8211; Single line of text RelatedTicketID – Lookup (Ticket list ID field) Category – Lookup (Category list Title field) IssueType &#8211; Lookup (Issue Type list Title field) Staff – Person/Group field ClosedDate – Date/Time field ReOpenDate – Date/Time field (Default value : Today’s Date) 2. Create a Workflow using CrowCanyon Workflow Manager like below: Create an action like below: All the Reopened ticket instances will be captured in “Reopened Tickets” list. A report can be made on this list using CrowCanyon Report Manager app. 3. Create a Report like below using CrowCanyon Report Manager app: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "139",
    "name": "139 - Office 365 Service Request_ Automatically create tasks for a Ticket based on Category and Issue Type.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/139%20-%20Office%20365%20Service%20Request_%20Automatically%20create%20tasks%20for%20a%20Ticket%20based%20on%20Category%20and%20Issue%20Type.html",
    "title": "Office 365 Service Request Automatically Create Tasks For A Ticket Based On Category And Issue Type",
    "text": "Office 365 Service Request: Automatically create tasks for a Ticket based on Category and Issue Type (Ticket templates) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Automatically create tasks for a Ticket based on Category and Issue Type (Ticket templates) Office 365 Service Request: Automatically create tasks for a Ticket based on Category and Issue Type (Ticket templates) 1069 views Less than a minute 0 Automate creation of Ticket tasks based on the type of Ticket (serial and parallel tasks) &bull; Example1 : A task has to be created automatically if a new ticket has been created with &ldquo;Email&rdquo; Category and &ldquo;Spam&rdquo; Issue Type. &nbsp; &nbsp; &#8211; Create a Workflow using CrowCanyon Workflow Manager app. &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &#8211; Create an action &ldquo;Create Item&rdquo; like below: &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; Select Associated Tasks list as Target List, Add field mappings for the fields in Tickets list with Task Name, Related Ticket ID, Description, Due Date, Assigned To . &nbsp; Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Refer to the Workflow Manager manual for field mappings &nbsp; &bull; Example2 : A level-1 task to order a new printer has to be created automatically if a new ticket has been created with Hardware Request Category and Printer Type. On completion of level-1 task, create a level-2 task to install and configure printer. &nbsp; &#8211; Create a workflow to create level-1 tasks like below: &nbsp; &nbsp;&nbsp; &nbsp; &#8211; Create an Action like below: &nbsp; &nbsp;&nbsp; &nbsp; &#8211; Create a workflow to create level-2 tasks like below: &nbsp; &nbsp;&nbsp; &nbsp; &#8211; Create an Action like below: &nbsp; &nbsp;&nbsp; &nbsp; Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Refer to the Workflow Manager manual for field mappings &nbsp; Note: &#8211; Field Mappings for Due Date will be like: $add([Created],3:0:0:0) About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "14",
    "name": "14 - How to contact Crow Canyon Support.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/14%20-%20How%20to%20contact%20Crow%20Canyon%20Support.html",
    "title": "How To Contact Crow Canyon Support",
    "text": "How to contact Crow Canyon Support - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to contact Crow Canyon Support How to contact Crow Canyon Support 922 views Less than a minute 0 1) Enter a Support Ticket at: Crow Canyon Software Support &#8211; Submit Support Ticket 2) Send email to support@crowcanyon.com We prefer the Support Ticket method so that your request gets into our IT Help Desk for SharePoint ticketing system (yes, we do use our program internally here!) About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "140",
    "name": "140 - Measure effectiveness of technicians with KPIs generated using Ticket resolution statistics - Crow C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/140%20-%20Measure%20effectiveness%20of%20technicians%20with%20KPIs%20generated%20using%20Ticket%20resolution%20statistics%20-%20Crow%20C.html",
    "title": "Measure Effectiveness Of Technicians With KPIs Generated Using Ticket Resolution Statistics Crow C",
    "text": "Measure effectiveness of technicians with KPIs generated using Ticket resolution statistics - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Measure effectiveness of technicians with KPIs generated using Ticket resolution statistics Measure effectiveness of technicians with KPIs generated using Ticket resolution statistics 864 views Less than a minute 0 Ticket resolution statistics are captured in a separate list and reports are generated on the data as per steps below. One specific report has been shown below, depening on the requirements, different data can be captured to generate other reports: &#8211; Create a new list KPI with below fields to capture ticket data. Title &#8211; Single Line text field TicketID &#8211; Single Line Text field RelatedTicketID &#8211; Lookup (Ticket list Title field) Category &#8211; Lookup(Category list Title field) IssueType &#8211; Lookup(Issue Type list Title field) Staff &#8211; Person/Group field AssignedDate &#8211; Date/Time field (Date and Time) DueDate &#8211; Date and Time field (Date and Time) ClosedDate &#8211; Date and Time field (Date and Time, Default value &quot;Today&quot;) Time Spent &#8211; Calculated column &#8211; Formula: [Closed Date]-[Assigned Date] SLAMet &#8211; Calculated column &#8211; Formula: =IF(ClosedDate&lt;=DueDate,&quot;Yes&quot;,&quot;No&quot;) &nbsp; &#8211; Create a workflow on Ticket modification like below: &nbsp; &#8211; Create an Action like below: &nbsp; &#8211; When a ticket gets closed, a new item will get created in KPI list with Staff, Category Issue Type, Related Ticket ID, Time spent on the ticket. &#8211; A Report can be built on the data from KPI list to find performance of the technician. KPI Report Configuration: Create a report on KPI list like below. &nbsp;&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "142",
    "name": "142 - Crow Canyon Workflow Manager (Office 365 App) – Configure complex workflows with calculated columns.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/142%20-%20Crow%20Canyon%20Workflow%20Manager%20%28Office%20365%20App%29%20%E2%80%93%20Configure%20complex%20workflows%20with%20calculated%20columns.html",
    "title": "Crow Canyon Workflow Manager (Office 365 App) – Configure Complex Workflows With Calculated Columns",
    "text": "Crow Canyon Workflow Manager (Office 365 App) – Configure complex workflows with calculated columns - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Workflow Manager (Office 365 App) &#8211; Configure complex workflows with calculated columns Crow Canyon Workflow Manager (Office 365 App) &#8211; Configure complex workflows with calculated columns 1066 views 2 min , 25 sec read 2 Crow Canyon Workflow Manager is an Office 365 App which can be used to create workflows on lists based on business requirements. &nbsp; Here are the two examples which sends alerts on particular time intervals &nbsp; Example 1: Create a workflow on a list which sends an alert every 30 days. It can be controlled at item level to start sending alerts 180/150/120/&#8230; days earlier &nbsp; Create a custom list with the following fields: ( Note: Field names can be customized) 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next renewal date : DateTime field 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alert Days : Choice field (options: 180,150,120,90,60,30) 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auto Renewal period : Choice field(options: Every Month, Every Year, Every Two Years) 4. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Status : Choice field(options: Active, Terminated) 5. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Last Renewal Date : DateTime field 6. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alert Days Calculated : Calculated field, Formula: &ldquo;=DATEDIF(TODAY(),[ Next Renewal Date ],&quot;d&quot;))&rdquo;output field type as number. 7. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Time Span : Calculated field, Formula to add in days: &quot;=IF([ Auto Renewal Period ]=&quot;Every Month&quot;,&quot;&#8217;30:0:0:0&#8217;&quot;,IF([ Auto Renewal Period ]=&quot;Every Year&quot;,&quot;365:0:0:0&quot;,IF([ Auto Renewal Period ]=&quot;Every Two Years&quot;,&quot;730:0:0:0&quot;)))&quot;, Formula to add in months: &quot;=IF([ Auto Renewal Period ]=&quot;Every Month&quot;,&quot;&#8217;1&#8217;&quot;,IF([ Auto Renewal Period ]=&quot;Every Year&quot;,&quot;12&quot;,IF([ Auto Renewal Period ]=&quot;Every Two Years&quot;,&quot;24&quot;)))&quot; output field type as single line of text. Configure workflow as shown below to send repeated alerts before Next Renewal Date &nbsp; Workflow configuration in words: 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Repeat every 30 Days for 6 time(s) from 180days before Next Renewal Date 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Check &ldquo;Process this workflow for items created/modified/deleted by this App&rdquo; checkbox.(This is to allow the App to work on after auto renewal was triggered by App) 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Conditions: a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alert Days Calculated Always Less than or equal [ Alert Days ] ( Note: &lsquo;Alert Days&rsquo; is the display name of the column and it should not contain any special characters) b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Status Always Not equals Terminated c. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alert Days Calculated Always Greater than 0 4. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create Send Mail Action Type to send email Select &quot;To&quot; address and provide to address and from address to send mails. &nbsp; &nbsp; &nbsp; Example 2: This workflow is to auto advance the renewal date and renewal period is as per data in the list item Here a calculated column is used to convert the renewal choice option in the item to actual days/months to advance in the workflow action &nbsp; Configuration in words: 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Based on time in column Next Renewal Date 30 minutes after 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Conditions: a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Status Always Not equals Terminated b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auto Renewal Period Always Not equals None 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create Update Item Action Type a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Item: Current b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Field Mapping: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Select Last Renewal Date from list box and select first radio button and in below drop down select Next Renewal Date . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ii.&nbsp;&nbsp; Select Next Renewal Date from list and select Fixed value/Formula radio button and type the formula like: For Add days formula: $add([ Next Renewal Date ],[ Time Span ]), For Add months formula: $addmonths([ Next Renewal Date ],[ Time Span ]) Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "143",
    "name": "143 - Office 365 Service Request_ Re-assign a Ticket based on priority if it is not closed in time - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/143%20-%20Office%20365%20Service%20Request_%20Re-assign%20a%20Ticket%20based%20on%20priority%20if%20it%20is%20not%20closed%20in%20time%20-%20Crow.html",
    "title": "Office 365 Service Request Re Assign A Ticket Based On Priority If It Is Not Closed In Time Crow",
    "text": "Office 365 Service Request: Re-assign a Ticket based on priority if it is not closed in time - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Re-assign a Ticket based on priority if it is not closed in time Office 365 Service Request: Re-assign a Ticket based on priority if it is not closed in time 911 views Less than a minute 0 Re-assign tickets if not closed within the due date and based on conditions like type of ticket and priority Reassign a high priority ticket if it is not closed within due date of the ticket. (SLA based on Priority of Tickets) Configure a workflow like below: &nbsp; Next Create an Update Action like below to update Assigned Staff. &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "145",
    "name": "145 - Office 365 Service Request_ SLA to send reminder to staff before due date based on priority of Ticke.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/145%20-%20Office%20365%20Service%20Request_%20SLA%20to%20send%20reminder%20to%20staff%20before%20due%20date%20based%20on%20priority%20of%20Ticke.html",
    "title": "Office 365 Service Request SLA To Send Reminder To Staff Before Due Date Based On Priority Of Ticke",
    "text": "Office 365 Service Request: SLA to send reminder to staff before due date based on priority of Ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: SLA to send reminder to staff before due date based on priority of Ticket Office 365 Service Request: SLA to send reminder to staff before due date based on priority of Ticket 997 views Less than a minute 0 Send a remainder to Assigned Staff 1 hour before Due date of the ticket Applies to: SharePoint Online Description: This workflow is to send a reminder email to Assigned Staff, an hour before the due date of the ticket. Detailed Steps: Note: To know how to configure Due Date, refer &#8211; https://www.crowcanyon.help/article/149 &nbsp; Configure workflow as shown below: Create Send Mail action as shown below Mail Template configuration: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "147",
    "name": "147 - Office 365 Exchange settings to forward mails to on-premises servers.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/147%20-%20Office%20365%20Exchange%20settings%20to%20forward%20mails%20to%20on-premises%20servers.html",
    "title": "Office 365 Exchange Settings To Forward Mails To On Premises Servers",
    "text": "Office 365 Exchange settings to forward mails to on-premises servers - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Exchange settings to forward mails to on-premises servers Office 365 Exchange settings to forward mails to on-premises servers 966 views Less than a minute 0 &nbsp; Refer below url for more details : &nbsp; https://technet.microsoft.com/en-in/library/dn751020(v=exchg.150).aspx &nbsp; You can also create rules to forward email as given below: 1. Click on Admin. 2. In Admin Center, click on Exchange 3. In Exchange admin center, Go to &quot;mail flow&quot; and create a new rule &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "148",
    "name": "148 - Office 365 Service Request_ Automatically assign Ticket based on Category and Issue Type if it remai.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/148%20-%20Office%20365%20Service%20Request_%20Automatically%20assign%20Ticket%20based%20on%20Category%20and%20Issue%20Type%20if%20it%20remai.html",
    "title": "Office 365 Service Request Automatically Assign Ticket Based On Category And Issue Type If It Remai",
    "text": "Office 365 Service Request: Automatically assign Ticket based on Category and Issue Type if it remains unassigned for a duration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Automatically assign Ticket based on Category and Issue Type if it remains unassigned for a duration Office 365 Service Request: Automatically assign Ticket based on Category and Issue Type if it remains unassigned for a duration 921 views Less than a minute 0 Auto-assign tickets based on type of ticket or ticket priority Applies to: SharePoint Online Description: If a ticket is created in tickets list and unassigned for certain duration, we want to assign those tickets to perticular staff based on Category and Issue Type of the ticket, we have Crow Canyon Workflow Manager to achieve this requirement. Workflow Configuration: The following workflow is an example to automatically assign a ticket which is unassigned for an issue type &quot;Spam&quot; of Category &quot;Email&quot;.&nbsp; (SLA based on Category and Issue Type of Tickets) Create a workflow like below: &nbsp; Create an Action like below: Field mapping: [Assigned Staff][Value:pavan@crowcanyon365.com] &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "149",
    "name": "149 - Office 365 Service Request_ Automatically set Due Date based on Category and Priority - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/149%20-%20Office%20365%20Service%20Request_%20Automatically%20set%20Due%20Date%20based%20on%20Category%20and%20Priority%20-%20Crow%20Canyon.html",
    "title": "Office 365 Service Request Automatically Set Due Date Based On Category And Priority Crow Canyon",
    "text": "Office 365 Service Request: Automatically set Due Date based on Category and Priority - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Office 365 Service Request: Automatically set Due Date based on Category and Priority Office 365 Service Request: Automatically set Due Date based on Category and Priority 1094 views Less than a minute 0 Applies To: SharePoint Online Description: Workflow configured below is to auto set Due Date of the Ticket to two days after the ticket creation date i.e., Created + 2days based on two conditions Set Due Date based on Category and Priority: Configure a workflow like below Create an action like below Note : To know different configurations of Workflows refer &#8216;User Manual&#8217; in &quot;Crow Canyon WorkFlow Manager App&quot; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "15",
    "name": "15 - SharePoint Online_ Reopen a Ticket on requester email and reporting on reopened Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/15%20-%20SharePoint%20Online_%20Reopen%20a%20Ticket%20on%20requester%20email%20and%20reporting%20on%20reopened%20Tickets.html",
    "title": "SharePoint Online Reopen A Ticket On Requester Email And Reporting On Reopened Tickets",
    "text": "SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets 1153 views 2 min , 44 sec read 0 Reopen Ticket when requester replies back on a closed Ticket (in Office 365 using Workflow Manager) Applies To: SharePoint Online We can use Crow Canyon Workflow Manager App to automatically reopen a Ticket if requester sends an email for that Ticket within a specified time period of closing the Ticket. Also, it is useful to track the reopened Tickets to understand the reasons for Tickets getting reopened and provide feedback to the staff. &nbsp; Steps to create workflow to re-open ticket: 1. Create &#8216;Reopened&#8217; Yes/No field in &#8216;Tickets&#8217; list 2. Create the workflow on Email Tickets list when Email item is updated (Related Ticket Id value is set) 3. Create a &#8216;Query List&#8217; action to get a Ticket matching below criteria (build CAML query): &nbsp;&nbsp;&nbsp;&nbsp; a. Id of Ticket = Related Ticket Id of Email Ticket &nbsp;&nbsp;&nbsp;&nbsp; b. Status of Ticket = Closed &nbsp;&nbsp;&nbsp;&nbsp; c. Created time of Ticket &lt; Created Time of Email Ticket (so as to exclude emails that have created a new Ticket and take only those that came in for existing Tickets) &nbsp;&nbsp;&nbsp;&nbsp; d. Closed Date of Ticket &gt; Today &ndash; 3 (you can use a value different from 3 as per your business requirement) &nbsp;&nbsp;&nbsp;&nbsp; Ex: &lt;View&gt; &nbsp;&nbsp;&nbsp; &lt;Query&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Where&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;ID&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Counter&#8217;&gt;##RelatedTicketID##&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;RequestStatus&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Text&#8217;&gt;Closed&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Geq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;ClosedDate&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&quot;DateTime&quot;&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Today OffsetDays=&#8217;-3&#8242; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Geq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Leq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;Created&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;DateTime&#8217; IncludeTimeValue=&#8217;TRUE&#8217; StorageTZ=&#8217;TRUE&#8217;&gt;##Created##&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Leq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Where&gt; &nbsp;&nbsp;&nbsp; &lt;/Query&gt; &lt;/View&gt; &nbsp; 4. Select option to continue workflow execution only if items are found for above variable &nbsp;&nbsp;&nbsp; &nbsp; 5. Add an &#8216;Update Item&#8217; action to reopen Ticket related to this Email a. Set Request Status to Assigned b. Closed Date = blank c. Reopened = True &nbsp;&nbsp;&nbsp; &nbsp; 6. If required, more actions can be added to workflow to send email etc. &nbsp; &nbsp; Report to show &quot;Reopened Tickets&quot; by Staff 1. Create a View in Tickets list to get &#8216;Reopened Tickets&#8217; as shown below &nbsp; 2. Open &#8216;Crow Canyon Charts, Dashboards and Reports&#8217; App and configure report as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "150",
    "name": "150 - SharePoint Online_ Reopen a Ticket on requester email and reporting on reopened Tickets - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/150%20-%20SharePoint%20Online_%20Reopen%20a%20Ticket%20on%20requester%20email%20and%20reporting%20on%20reopened%20Tickets%20-%20Crow%20Canyo.html",
    "title": "SharePoint Online Reopen A Ticket On Requester Email And Reporting On Reopened Tickets Crow Canyo",
    "text": "SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets SharePoint Online: Reopen a Ticket on requester email and reporting on reopened Tickets 1153 views 2 min , 44 sec read 0 Reopen Ticket when requester replies back on a closed Ticket (in Office 365 using Workflow Manager) Applies To: SharePoint Online We can use Crow Canyon Workflow Manager App to automatically reopen a Ticket if requester sends an email for that Ticket within a specified time period of closing the Ticket. Also, it is useful to track the reopened Tickets to understand the reasons for Tickets getting reopened and provide feedback to the staff. &nbsp; Steps to create workflow to re-open ticket: 1. Create &#8216;Reopened&#8217; Yes/No field in &#8216;Tickets&#8217; list 2. Create the workflow on Email Tickets list when Email item is updated (Related Ticket Id value is set) 3. Create a &#8216;Query List&#8217; action to get a Ticket matching below criteria (build CAML query): &nbsp;&nbsp;&nbsp;&nbsp; a. Id of Ticket = Related Ticket Id of Email Ticket &nbsp;&nbsp;&nbsp;&nbsp; b. Status of Ticket = Closed &nbsp;&nbsp;&nbsp;&nbsp; c. Created time of Ticket &lt; Created Time of Email Ticket (so as to exclude emails that have created a new Ticket and take only those that came in for existing Tickets) &nbsp;&nbsp;&nbsp;&nbsp; d. Closed Date of Ticket &gt; Today &ndash; 3 (you can use a value different from 3 as per your business requirement) &nbsp;&nbsp;&nbsp;&nbsp; Ex: &lt;View&gt; &nbsp;&nbsp;&nbsp; &lt;Query&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Where&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;ID&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Counter&#8217;&gt;##RelatedTicketID##&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;RequestStatus&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Text&#8217;&gt;Closed&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Eq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Geq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;ClosedDate&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&quot;DateTime&quot;&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Today OffsetDays=&#8217;-3&#8242; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Geq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Leq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;FieldRef Name=&#8217;Created&#8217; /&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;DateTime&#8217; IncludeTimeValue=&#8217;TRUE&#8217; StorageTZ=&#8217;TRUE&#8217;&gt;##Created##&lt;/Value&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Leq&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/And&gt; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;/Where&gt; &nbsp;&nbsp;&nbsp; &lt;/Query&gt; &lt;/View&gt; &nbsp; 4. Select option to continue workflow execution only if items are found for above variable &nbsp;&nbsp;&nbsp; &nbsp; 5. Add an &#8216;Update Item&#8217; action to reopen Ticket related to this Email a. Set Request Status to Assigned b. Closed Date = blank c. Reopened = True &nbsp;&nbsp;&nbsp; &nbsp; 6. If required, more actions can be added to workflow to send email etc. &nbsp; &nbsp; Report to show &quot;Reopened Tickets&quot; by Staff 1. Create a View in Tickets list to get &#8216;Reopened Tickets&#8217; as shown below &nbsp; 2. Open &#8216;Crow Canyon Charts, Dashboards and Reports&#8217; App and configure report as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "152",
    "name": "152 - O365 Service Request_ Workflow to update WorkLog comments when an Outgoing Email is sent - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/152%20-%20O365%20Service%20Request_%20Workflow%20to%20update%20WorkLog%20comments%20when%20an%20Outgoing%20Email%20is%20sent%20-%20Crow%20Cany.html",
    "title": "O365 Service Request Workflow To Update WorkLog Comments When An Outgoing Email Is Sent Crow Cany",
    "text": "O365 Service Request: Workflow to update WorkLog comments when an Outgoing Email is sent - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio , NITRO Studio- Workflows , Request Manager , Work Orders / O365 Service Request: Workflow to update WorkLog comments when an Outgoing Email is sent O365 Service Request: Workflow to update WorkLog comments when an Outgoing Email is sent 3323 views Less than a minute 0 Updates the &#8216;work Log&#8217; of a ticket whenever an outgoing mail is sent from the corresponding email item. Configure a workflow in Workflow manager app like shown below on Item Created event of Email Tickets list. with Update Item action on Tickets list as below Field Mapping of Work Log Field is : $strcat(On behalf of, ,[Created By], ,:, ,[Body]) Help Desk NITRO Studio NITRO Studio- Workflows Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "153",
    "name": "153 - SharePoint Online_ Report to show number of items by week number in a time period - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/153%20-%20SharePoint%20Online_%20Report%20to%20show%20number%20of%20items%20by%20week%20number%20in%20a%20time%20period%20-%20Crow%20Canyon%20Soft.html",
    "title": "SharePoint Online Report To Show Number Of Items By Week Number In A Time Period Crow Canyon Soft",
    "text": "SharePoint Online: Report to show number of items by week number in a time period - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio , NITRO Studio- Reports , Request Manager , Work Orders / SharePoint Online: Report to show number of items by week number in a time period SharePoint Online: Report to show number of items by week number in a time period 7154 views Less than a minute 2 Introduction This article explains how to create a report to show number of items in a view of SharePoint list corresponding to week number of a date field in list. Please follow the below steps to configure this report using the Crow Canyon Report App. &nbsp; Create a calculated column of type Text called &#8220;Week Number&#8221; on &#8216;Tickets&#8217; list, using the following formula Go to list settings and Create a new Calculated Column with formula: =IF(INT(([Created]-DATE(YEAR([Created]),1,1)+(TEXT(WEEKDAY(DATE(YEAR([Created]),1,1)-1),&#8221;d&#8221;)))/7)=0,52,INT(([Created]-DATE(YEAR([Created]),1,1)+(TEXT(WEEKDAY(DATE(YEAR([Created]),1,1)-1),&#8221;d&#8221;)))/7)) Above formula will get the week number (1 to 52). If you want to prefix the week number with a text say &#8216;Week-&#8216; then use the below formula instead: =CONCATENATE(&#8220;Week-&#8220;,TEXT(IF(INT((Created-DATE(YEAR(Created),1,1)+(TEXT(WEEKDAY(DATE(YEAR(Created),1,1)-1),&#8221;d&#8221;)))/7)=0,52,INT((Created-DATE(YEAR(Created),1,1)+(TEXT(WEEKDAY(DATE(YEAR(Created),1,1)-1),&#8221;d&#8221;)))/7)),&#8221;0&#8243;)) You can replace the date column in above formula by replacing all instances of &#8216;Created&#8217; with some other date field name. &nbsp; Save it as a &#8216;Single Line of Text&#8217; column. &nbsp; Create a view on the list to get items from a specific period &nbsp; Here we are creating a View called &#8216;Tickets by Year&#8217; on &#8216;Tickets&#8217; list to get all items created in year 2016. Fiter the Items in the View as shown in the below picture. &nbsp; &nbsp; Create Report to show items by Week Navigate to Crow Canyon Reports App. You can click &#8216;Manage Reports&#8217; in Crow Canyon Report Centre. You can also navigate to the Site Contents and then click &#8216;Crow Canyon Reports App&#8217;. Configure the Report as per the settings shown below: &nbsp; Help Desk NITRO Studio NITRO Studio- Reports Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "155",
    "name": "155 - Send an email to requester asking for more details when ticket status is changed and include Employe.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/155%20-%20Send%20an%20email%20to%20requester%20asking%20for%20more%20details%20when%20ticket%20status%20is%20changed%20and%20include%20Employe.html",
    "title": "Send An Email To Requester Asking For More Details When Ticket Status Is Changed And Include Employe",
    "text": "Send an email to requester asking for more details when ticket status is changed and include Employee Portal Ticket Url in the Email - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , Request Manager / Send an email to requester asking for more details when ticket status is changed and include Employee Portal Ticket Url in the Email Send an email to requester asking for more details when ticket status is changed and include Employee Portal Ticket Url in the Email 2601 views Less than a minute 0 1. 1. Go to Employee Portal app &#8211;&gt; View My Tickets &#8211;&gt; Edit any ticket. Copy the Url into a notepad and replace the Ticket number at the end of Url with [[ID || ID]] . After replacing, the url will be like: https://crowcanyonsystemsinc-7416fe40a79290.sharepoint.com/sites/trial1/IT2/CrowCanyonEmployeePortal/Pages/DisplayTicket.aspx?SPHostUrl=https://crowcanyonsystemsinc.sharepoint.com/sites/trial1/IT2&amp;SPLanguage=en-US&amp;SPClientTag=0&amp;SPProductNumber=16.0.5910.1210&amp;SPAppWebUrl=https://CrowCanyonSystemsInc-7416fe40a79290.sharepoint.com/sites/trial1/IT2/CrowCanyonEmployeePortal&amp;TicketID=[[ID || ID]] 2. Go to Manage Mail Templates and Create a Template like below: &#8211; Copy the Employee Portal Edit Form Url which ends with [[ID || ID]] and paste in template using the hyperlink button provided. 3. Configure a workflow in the workflow manager app like below: With a send Mail action like below: Normal 0 false false false false EN-US X-NONE X-NONE Help Desk Request Manager About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs Import Tickets using NITRO Custom Actions How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket How to include all Work Log Comments in Notification on Ticket close mails? Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "156",
    "name": "156 - Send an email to Assigned Staff when comments are added in Work Log field - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/156%20-%20Send%20an%20email%20to%20Assigned%20Staff%20when%20comments%20are%20added%20in%20Work%20Log%20field%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Send An Email To Assigned Staff When Comments Are Added In Work Log Field Crow Canyon Software Sup",
    "text": "Send an email to Assigned Staff when comments are added in Work Log field - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , Request Manager , Work Orders / Send an email to Assigned Staff when comments are added in Work Log field Send an email to Assigned Staff when comments are added in Work Log field 2844 views Less than a minute 1 1. 1. Go to “Manage Mail Templates” in Workflow Manager app and create a Mail Template like below: 2. Create a Workflow in the Workflow Manager like below: &#8211; Create workflow on Tickets list, Item Modified event with condition like : Work Log AfterChange eq [[Any]] &#8211; Create a Send Mail action like below : (Choose the Work Log mail template while creating this action). Normal 0 false false false false EN-US X-NONE X-NONE Help Desk Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs Import Tickets using NITRO Custom Actions How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket How to include all Work Log Comments in Notification on Ticket close mails? Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "158",
    "name": "158 - O365 Service Request_ Show_Hide tabs in list item form based on the selected Category - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/158%20-%20O365%20Service%20Request_%20Show_Hide%20tabs%20in%20list%20item%20form%20based%20on%20the%20selected%20Category%20-%20Crow%20Canyon.html",
    "title": "O365 Service Request Show Hide Tabs In List Item Form Based On The Selected Category Crow Canyon",
    "text": "O365 Service Request: Show/Hide tabs in list item form based on the selected Category - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio , NITRO Studio- Enhanced Forms Manager , Request Manager , Work Orders / O365 Service Request: Show/Hide tabs in list item form based on the selected Category O365 Service Request: Show/Hide tabs in list item form based on the selected Category 3446 views Less than a minute 0 Dynamically Show/Hide tabs in item forms based on values in other columns Description: In a list we can group all the related fields as a tab using &#8216;Crow Canyon Forms Manager&#8217;. Using Forms Manager App we can also configure permissions on Tabs and Columns to Show/Hide tab/column based on the values in other columns such as Category. (For more information, please open &#8216;Crow Canyon Forms Manager App&#8217; and refer &#8216;User Manual&#8217;) &nbsp; &nbsp; This article describes how to configure dynamic tab behaviour in Assets list based the category selected for the Asset 1. Navigate to Forms Manager App from either Site Contents or Crow Canyon Application Administration. Select Assets list and create tab for Vehicle related fields in the list as shown below using Forms Manager App: &nbsp; Enter Tab name and select the fields to show in Tab: &nbsp; 2. Configure Tab Permissions on this tab under &#8216;Tab Permissions&#8217; section: &nbsp; Enter permission name and other details as shown: &nbsp; Check &#8216;Dynamic condition evaluation&#8217; so that Tabs will show/hide as selection changes in the Asset Category field &nbsp; 3. Open Assets New Form, &#8216;Vehicle Details&#8217; tab should only show when &#8216;Asset Category&#8217; is &#8216;Vehicle&#8217;. In all the other cases it will be hidden. Same behaviour wil be there in Edit and Display forms. &nbsp; &nbsp; Similarly, we can Show/Hide any number of tabs/columns based on different conditions. Help Desk NITRO Studio NITRO Studio- Enhanced Forms Manager Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "159",
    "name": "159 - Create a report on closed tickets which exceeded Due Date.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/159%20-%20Create%20a%20report%20on%20closed%20tickets%20which%20exceeded%20Due%20Date.html",
    "title": "Create A Report On Closed Tickets Which Exceeded Due Date",
    "text": "Create a report on closed tickets which exceeded Due Date - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create a report on closed tickets which exceeded Due Date Create a report on closed tickets which exceeded Due Date 938 views Less than a minute 0 Step-1 : Create a Calculated column in Tickets list with formula like below. Say Column name as &lsquo;DueDateExceeded&rsquo; Formula: [Due Date]-[Closed Date] &nbsp; &nbsp; Step-2 : Create a view in tickets list with Conditions like below (say view name &nbsp; &lsquo;DueDateExceeded view&rsquo;) Step-3: Creation of Report Go to Report Center -&gt; Manage Reports -&gt; Create New Report, Create a report like below -&gt; click Save. Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "16",
    "name": "16 - Ensure user enters the value for lookup field (e.g. Category for Tickets list item).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/16%20-%20Ensure%20user%20enters%20the%20value%20for%20lookup%20field%20%28e.g.%20Category%20for%20Tickets%20list%20item%29.html",
    "title": "Ensure User Enters The Value For Lookup Field (e.g. Category For Tickets List Item)",
    "text": "Ensure user enters the value for lookup field (e.g. Category for Tickets list item) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio , NITRO Studio- Enhanced Forms Manager , Request Manager , Work Orders / Ensure user enters the value for lookup field (e.g. Category for Tickets list item) Ensure user enters the value for lookup field (e.g. Category for Tickets list item) 4399 views Less than a minute 0 Conditonal validation on Lookup fields Introduction When a Lookup Field is configured to be required in the field settings, then the first option gets selected by default in the new item form. Because of this users can save the item without selecting the intended value for the lookup field. Crowcanyon Forms Manager App can fix this issue by adding a validation for empty value on the fields. Please follow the below steps for this configuration. We will take the example of Category lookup field in Tickets list. &nbsp; Make Category field not required Go to list settings of &#8216;Tickets&#8217; list and click on Category field to open the field settings page. Ensure that it is NOT required to specify a value for Category field. &nbsp; &nbsp; Configure Crow Canyon validation on Category Field Go to Crow Canyon Forms Manager Add-in (App) from Application Administration or Site Contents. Select &#8216;Tickets&#8217; list in the list dropdown. &nbsp; Under the Column Validation Settings, select the Category column and configure settings as shown in the below picture: &nbsp; Conditional Validation Crow Canyon column validaton supports adding conditions so that validation is performed only in specific cases. For e.g., to validate empty value only when a Ticket is getting closed, add a condition as shown below: Help Desk NITRO Studio NITRO Studio- Enhanced Forms Manager Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "160",
    "name": "160 - Ensure user enters the value for lookup field (e.g. Category for Tickets list item) - Crow Canyon So.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/160%20-%20Ensure%20user%20enters%20the%20value%20for%20lookup%20field%20%28e.g.%20Category%20for%20Tickets%20list%20item%29%20-%20Crow%20Canyon%20So.html",
    "title": "Ensure User Enters The Value For Lookup Field (e.g. Category For Tickets List Item) Crow Canyon So",
    "text": "Ensure user enters the value for lookup field (e.g. Category for Tickets list item) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio , NITRO Studio- Enhanced Forms Manager , Request Manager , Work Orders / Ensure user enters the value for lookup field (e.g. Category for Tickets list item) Ensure user enters the value for lookup field (e.g. Category for Tickets list item) 4399 views Less than a minute 0 Conditonal validation on Lookup fields Introduction When a Lookup Field is configured to be required in the field settings, then the first option gets selected by default in the new item form. Because of this users can save the item without selecting the intended value for the lookup field. Crowcanyon Forms Manager App can fix this issue by adding a validation for empty value on the fields. Please follow the below steps for this configuration. We will take the example of Category lookup field in Tickets list. &nbsp; Make Category field not required Go to list settings of &#8216;Tickets&#8217; list and click on Category field to open the field settings page. Ensure that it is NOT required to specify a value for Category field. &nbsp; &nbsp; Configure Crow Canyon validation on Category Field Go to Crow Canyon Forms Manager Add-in (App) from Application Administration or Site Contents. Select &#8216;Tickets&#8217; list in the list dropdown. &nbsp; Under the Column Validation Settings, select the Category column and configure settings as shown in the below picture: &nbsp; Conditional Validation Crow Canyon column validaton supports adding conditions so that validation is performed only in specific cases. For e.g., to validate empty value only when a Ticket is getting closed, add a condition as shown below: Help Desk NITRO Studio NITRO Studio- Enhanced Forms Manager Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "161",
    "name": "161 - Create a Report on Contracts expiring in 90 days by Asset Location.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/161%20-%20Create%20a%20Report%20on%20Contracts%20expiring%20in%2090%20days%20by%20Asset%20Location.html",
    "title": "Create A Report On Contracts Expiring In 90 Days By Asset Location",
    "text": "Create a Report on Contracts expiring in 90 days by Asset Location - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create a Report on Contracts expiring in 90 days by Asset Location Create a Report on Contracts expiring in 90 days by Asset Location 939 views Less than a minute 0 Create a Report on Contracts expiring in 90 days by Asset Location. (Location is a choice field in Assets lookup list) 1. Create an additional lookup of Asset:Location field in the Contracts list. Go to list settings of Contracts list, edit &ldquo;Assets&rdquo; lookup, select Location checkbox and click ok. &nbsp; Normal 0 false false false false EN-US X-NONE X-NONE This will create an additional lookup Asset:Location in Contracts list like below. &nbsp; 2. Create a view &ldquo;Contracts Expiring in 90 days&rdquo; with condition like below: Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE 3. Go to Report Center and configure a report like below: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "162",
    "name": "162 - Register license for Crow Canyon web parts.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/162%20-%20Register%20license%20for%20Crow%20Canyon%20web%20parts.html",
    "title": "Register License For Crow Canyon Web Parts",
    "text": "Register license for Crow Canyon web parts - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Register license for Crow Canyon web parts Register license for Crow Canyon web parts 1241 views Less than a minute 0 Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Step to get service area details to generate license key: 1. Download license registration tools from CrowCanyon License Registration Tools 2. Run &#8220;Crow Canyon Identification Reader&#8221; tool as &#8216;Run as Administrator&#8217; in SharePoint server. 3. Enter Service Area site Url and click on &#8216;Get Identification&#8217; button to get required Service Area details (See below screenshot). 4. Send us the generated information in the textbox (Service Area ID, Site Collection ID, Farm ID). We will generate and send you a license key. Steps to Register license key: 1. Run &#8220;CrowCanyonRegisterLicenceKey.exe&#8221; tool as &#8216;Run as Administrator&#8217; in SharePoint server. 2. Select Product from the drop down in &#8216;Product Name&#8217; (Ex: Advanced Print). 3. Delete existing license by clicking on &#8220;Delete License Key&#8221; (if any). 4. Enter the license key provided by CrowCanyon and click on &#8220;Register License key&#8221;. 5. Click on &#8220;Check License Status&#8221; to verify the status. 6. If your SharePoint farm has multiple servers, then on each server repeat steps #1, #2 and #5. License key has to be entered on only one server, but &#8220;Check License Status&#8221; has to be done on all servers. Note: This procedure is only for stand-alone Crow Canyon web part licenses. For Crow Canyon Product license registration, please contact Sharepointsupport AT crowcanyon.com Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "163",
    "name": "163 - SharePoint Online_ Report to show number of items created per Week by Staff - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/163%20-%20SharePoint%20Online_%20Report%20to%20show%20number%20of%20items%20created%20per%20Week%20by%20Staff%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "SharePoint Online Report To Show Number Of Items Created Per Week By Staff Crow Canyon Software S",
    "text": "SharePoint Online: Report to show number of items created per Week by Staff - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Report to show number of items created per Week by Staff SharePoint Online: Report to show number of items created per Week by Staff 935 views Less than a minute 0 Report shows number of tickets created in a week for one year. This article explains how to create a report to show number of items created in a Week by Staff. Please follow the below steps to configure this report using the Crow Canyon Report App Create a calculated column of type Text called &quot;Week Number&quot; on &#8216;Tickets&#8217; list, using the following formula Go to List settings of Tickets list and create a new Calculated column with formula: =CONCATENATE(&quot;Week-&quot;,TEXT(IF(INT((Created-DATE(YEAR(Created),1,1)+(TEXT(WEEKDAY(DATE(YEAR(Created),1,1)-1),&quot;d&quot;)))/7)=0,52,INT((Created-DATE(YEAR(Created),1,1)+(TEXT(WEEKDAY(DATE(YEAR(Created),1,1)-1),&quot;d&quot;)))/7)),&quot;0&quot;),&quot;, &quot;,YEAR([Created])) Save it as a &#8216;Single Line of Text&#8217; column Configure Report as shown below Open &#8216;Crow Canyon Charts, Dashboards and Reports&#8217; App -&gt; click on &#8216;Manage Reports&#8217; tab and configure new report as shown below Note: In similar way create Reports for Overdue Tickets by selecting &#8216;Overdue Tickets&#8217; view while creating report About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "164",
    "name": "164 - View to show total Time spent by Staff.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/164%20-%20View%20to%20show%20total%20Time%20spent%20by%20Staff.html",
    "title": "View To Show Total Time Spent By Staff",
    "text": "View to show total Time spent by Staff - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / View to show total Time spent by Staff View to show total Time spent by Staff 2101 views Less than a minute 0 This article explains how to create a view to show total amount of Time spent by a Staff. Please follow the below steps to configure this view Create a calculated column of type Text called &quot;Week Number&quot; on &#8216;Time Tracking&#8217; list Create Calculated column by refering &#8211; https://www.crowcanyon.help/article/163 Create View as shown below Open &#8216;Time Tracking&#8217; list settings and create a view as shown below &nbsp; View displays as shown below &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "165",
    "name": "165 - Add sites to Compatibility mode and Trusted sites.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/165%20-%20Add%20sites%20to%20Compatibility%20mode%20and%20Trusted%20sites.html",
    "title": "Add Sites To Compatibility Mode And Trusted Sites",
    "text": "Add sites to Compatibility mode and Trusted sites - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Add sites to Compatibility mode and Trusted sites Add sites to Compatibility mode and Trusted sites 27751 views 1 min , 4 sec read 4 Applies To SharePoint Online and On-Premises For Internet Explorer To prevent Internet Explorer from blocking features of our Crow Canyon Products, we need to add our domain to the trusted sites and enable compatibility mode. Follow the instructions below to configure settings. Add site to Trusted Sites 1. In Internet Explorer, click &#8216;Gear&#8217; Icon at top right corner of browser, click &#8216;Internet Options&#8217; 2. Click the &#8216;Security&#8217; tab and select &#8216;Trusted sites&#8217; option and click on &#8216;Sites&#8217; 3. Opens a dialog with Pre-filled current site URL. Click &#8216;Add&#8217; button to add it to trusted sites Also, add these URLs to Trusted sites if you are using Office 365 sites https://login.microsoftonline.com Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 https://*.sharepoint.com For On-Premises and Online, add the below URLs to trusted sites https://kendo.cdn.telerik.com https://cdn.crowcanyon.com https://nitrostudio.azurewebsites.net https://crowcanyon.azurewebsites.net https://cdnjs.cloudflare.com https://code.jquery.com https://maxcdn.bootstrapcdn.com (Note: Not required if you are using latest NITRO solutions. Please upgrade to remove references if you are using older solutions) https://ccsportal.azurewebsites.net https://ccsworkflowmanager.azurewebsites.net https://ccsapproval.azurewebsites.net https://ccssrproduct.azurewebsites.net https://ccsemailsync.azurewebsites.net https://crowcanyonapps.azurewebsites.net Add sites to Compatibility settings 1. Click on &#8216;Gear&#8217; Icon, click &#8216;Compatibility View settings&#8217; and add website For Chrome browser: To prevent Google Chrome browser from blocking features of our Crow Canyon Products, we need to add our domain to the trusted sites and enable compatibility mode. Follow the instructions below to configure settings. Add site to Trusted Sites 1. Click the 3 horizontal lines icon on the far right of the Address bar. 2. Click on Settings, scroll to the bottom and click the Show Advanced Settings link. 3. Click on Change proxy settings. 4. Click the Security tab &gt; Trusted Sites icon, then click Sites. For the site URLs to add to trusted sites refer the above mentioned for Internet Explorer and add them to the trusted sites in Chrome browser. Compatibility Trusted Sites About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "166",
    "name": "166 - Configure Crow Canyon Redirect Web Part.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/166%20-%20Configure%20Crow%20Canyon%20Redirect%20Web%20Part.html",
    "title": "Configure Crow Canyon Redirect Web Part",
    "text": "Configure Crow Canyon Redirect Web Part - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Crow Canyon Redirect Web Part Configure Crow Canyon Redirect Web Part 1028 views 1 min , 6 sec read 0 Configure Crow Canyon Redirect Web Part Add and Configure Redirect Web Part in a Page Normal 0 false false false EN-US X-NONE X-NONE 1. &nbsp; Edit any web part page/wiki page and add &lsquo;Crow Canyon Redirect Web part&rsquo; as shown below Normal 0 false false false EN-US X-NONE X-NONE Note: If &lsquo;CrowCanyon&rsquo; folder is not visible then go to Root Site -&gt; Site Settings -&gt; Site Collection Features and Activate &lsquo;Crow Canyon System Web parts&rsquo; feature (If it is already activated, deactivate and activate feature again) 2. Edit &lsquo;Redirect Web Part&rsquo; and configure as shown below &nbsp; Normal 0 false false false EN-US X-NONE X-NONE &nbsp;&nbsp;&nbsp;&nbsp; . Group Name: A group to verify the current user&rsquo;s membership and navigate to target page &nbsp;&nbsp;&nbsp;&nbsp; . Target Relative URL: Server Relative URL to redirect for the users from selected group &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.g. &ldquo; /sites/ccssrv36/IT/Workspaces/Ticket/Manager Dashboard.aspx&quot; &nbsp;&nbsp;&nbsp;&nbsp; . Target Relative URL for others: Server Relative URL to redirect for the users not from selected group &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.g. &ldquo; /sites/ccssrv36/IT/Workspaces/Ticket/Staff Workspace.aspx&rdquo; Normal 0 false false false EN-US X-NONE X-NONE Reconfigure Redirect Web Part in a Page Normal 0 false false false EN-US X-NONE X-NONE To &lsquo;Edit&rsquo; configurations of existing Redirect Web Part, Open Page in &lsquo;Shared&rsquo; mode, edit redirect web part and reconfigure Syntax: PageURL.aspx?PageView=Shared e.g. &ldquo;http://server:portnumber/sites/ccssrv36/IT/Workspaces/Ticket/Redirect.aspx?PageView=Shared&rdquo; Use Cases Use Case 1: Normal 0 false false false EN-US X-NONE X-NONE Based on logged in user role (Manager VS Technician), navigate to corresponding landing page e.g.: Create a quick launch link with page which has redirect web part configured Use Case 2: Normal 0 false false false EN-US X-NONE X-NONE Redirect to landing page after creation of a ticket based on user role e.g.: Create a quick launch link with desired list&rsquo;s default new form URL with &ldquo;source&rdquo; query string http://server:portnumber/sites/ccssrv36/IT/Lists/Tickets/NewForm.aspx?Source=http://server:portnumber/sites/ccssrv36/IT/Workspaces/Ticket/Redirect.aspx &nbsp; &nbsp; Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "167",
    "name": "167 - SharePoint Online_ Auto fill Category and_or Issue Type on Email to Ticket conversion - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/167%20-%20SharePoint%20Online_%20Auto%20fill%20Category%20and_or%20Issue%20Type%20on%20Email%20to%20Ticket%20conversion%20-%20Crow%20Canyon.html",
    "title": "SharePoint Online Auto Fill Category And Or Issue Type On Email To Ticket Conversion Crow Canyon",
    "text": "SharePoint Online: Auto fill Category and/or Issue Type on Email to Ticket conversion - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Auto fill Category and/or Issue Type on Email to Ticket conversion SharePoint Online: Auto fill Category and/or Issue Type on Email to Ticket conversion 3299 views 1 min , 38 sec read 4 Applies To SharePoint Online Normal 0 false false false EN-US X-NONE X-NONE Description Normal 0 false false false EN-US X-NONE X-NONE This article describes the steps to auto set &#8220;Category&#8221; of Tickets created via email based on one of the following criteria Name of Email Tickets list that is receiving the incoming emails Irrespective of the sender of email, it sets the corresponding category in Ticket based on the emails list name configured in category item \\ Sender of the incoming Email (From Address) Irrespective of the list that receives the email, it sets the category based on the sender email address configured in category item Detailed Steps Name of Email Tickets list that is receiving the incoming emails Normal 0 false false false EN-US X-NONE X-NONE This can be configured in &#8220;Associated From Email Address Or Email Tickets List Name&#8221; column in &#8220;Category&#8221; list. Go to “Application Administration”, click on “Categorization”, edit Category item(s) and configure “Sender email addresses” or “Email Tickets” list name in “Associated From Email Address Or Email Tickets List Name“ column (see screen shots below) Example: Emails list name: Sender&#8217;s mail address: Normal 0 false false false EN-US X-NONE X-NONE Note: Multiple sender email addresses and multiple emails list names are allowed to configure with ‘[]’ separator. Normal 0 false false false EN-US X-NONE X-NONE Auto set Category and Issue Type in new Ticket based on Receivers Normal 0 false false false EN-US X-NONE X-NONE Description Normal 0 false false false EN-US X-NONE X-NONE Auto sets &#8220;Category&#8221; and &#8220;Issue Type&#8221; of Tickets created via email based on the email address of the emails list (which is configured using email sync app) being used by the sender to send incoming emails. Normal 0 false false false EN-US X-NONE X-NONE Detailed Steps Normal 0 false false false EN-US X-NONE X-NONE This can be configured in &#8220;Receivers&#8221; column in “Issue Types” list Go to “Application Administration”, click on “Categorization”, edit Issue Type item(s) and configure email addresses in “Receivers“ column (see screen shots below) We may have multiple aliases/alternate emails for a single &#8220;email address&#8221;. Based on the email alias used to create the Ticket, system auto sets corresponding category and issue type. Normal 0 false false false EN-US X-NONE X-NONE Example Single mail address Multiple mail addresses Auto assignment based on issue Type Description Auto assignment is happen based on the category and issue type selection in Ticket during the Ticket creation/update. Detailed Steps Auto assignment can be configured in &#8220;Issue Type&#8221; list. Every Issue Type &#8211; Category combination can be linked to one or more staff. Go to Application Administration &#8211;&gt; Categorization &#8211;&gt; Edit Issue Type item and specify users in &#8220;Assigned Staff&#8221; field. Whenever a Ticket is created with that particular Issue Type then corresponding staff will be automatically get assigned for that Ticket. Round Robin Assignment: When we check &#8220;Enable Round Robin Assignment&#8221; for Issue Type, the Tickets which are created with particular Issue Type having multiple assigned staff then the Ticket gets assigned to each person in the Assigned Staff field in a circular order. Note: Assignment doesn&#8217;t change even if we altered Category and Issue Type for an existing Ticket. Auto assignment using Crow Canyon Workflow Manager Requirement: If we want to auto assign a Ticket based on the sender email address, this can be possible with Crow Canyon workflow manager. For more details refer this article https://www.crowcanyon.help/article/245 Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "168",
    "name": "168 - SharePoint Online_ Tab Permissions Example – Show Tabs based on a field value - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/168%20-%20SharePoint%20Online_%20Tab%20Permissions%20Example%20%E2%80%93%20Show%20Tabs%20based%20on%20a%20field%20value%20-%20Crow%20Canyon%20Software.html",
    "title": "SharePoint Online Tab Permissions Example – Show Tabs Based On A Field Value Crow Canyon Software",
    "text": "SharePoint Online: Tab Permissions Example – Show Tabs based on a field value - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Tab Permissions Example &#8211; Show Tabs based on a field value SharePoint Online: Tab Permissions Example &#8211; Show Tabs based on a field value 1165 views Less than a minute 0 Applies to: SharePoint Online and On-Premises Requirement Let us say, &#8220;Computer&#8221; tab in Assets list has to be shown only for the assets where &#8220;Computer&#8221; is selected in Asset Category. Tab Permission Configuration Go to Assets list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select the Compute tab and configure tab permissions as shown like below. After configuring the tab permissions click &#8220;Publish&#8221; Hide: Show: After configuring these settings, Computer tab will be shown only if &#8220;Computer&#8221; is selected in Asset Category. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "169",
    "name": "169 - How to create Application Administration button in Crow Canyon service areas_ - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/169%20-%20How%20to%20create%20Application%20Administration%20button%20in%20Crow%20Canyon%20service%20areas_%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Create Application Administration Button In Crow Canyon Service Areas Crow Canyon Software",
    "text": "How to create Application Administration button in Crow Canyon service areas? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create Application Administration button in Crow Canyon service areas? How to create Application Administration button in Crow Canyon service areas? 953 views Less than a minute 0 Application Administration button &middot; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. Go to site contents of the site, &quot;Administration&quot; document library , copy the url of &quot;Configure Lists&quot; page. &nbsp; &nbsp; 2. Go to &quot;Site Settings&quot;, Crow Canyon Branding. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 3. Go to &quot;General settings&quot; section, Enable Application Administration link, enter &#8216;Configure Lists&#8217; url (Url copied from Administration document library) in &quot;Page Url&quot; , enter &quot;Page Title&quot; as &quot; Application Administration&quot; and click Apply button. &nbsp; &nbsp; &nbsp; 4. &quot;Application Administration&quot; button will be generated in the site like shown below. &nbsp; &nbsp; Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "17",
    "name": "17 - Move Ticket to a different service area_site using Crow Canyon Workflow Manager.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/17%20-%20Move%20Ticket%20to%20a%20different%20service%20area_site%20using%20Crow%20Canyon%20Workflow%20Manager.html",
    "title": "Move Ticket To A Different Service Area Site Using Crow Canyon Workflow Manager",
    "text": "Move Ticket to a different service area/site using Crow Canyon Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Move Ticket to a different service area/site using Crow Canyon Workflow Manager Move Ticket to a different service area/site using Crow Canyon Workflow Manager 972 views 1 min , 17 sec read 0 Transfer Ticket to another Service Area using Workflow Manager It is a common scenario where customers have multiple service areas in one site collection and each of these service areas is for Tickets for a particular department. In this case sometimes a Ticket has to be transferred from one department to other. Using CrowCanyon Workflow Manager this can be done easily without having to manually copy the Ticket data. &nbsp; 1. Go to list settings of Tickets list (source list), create a Choice field in tickets list (say &quot;TransferTo&quot;) with target sites as the options. Here we should give names for other Service Areas where Ticket could be transferred from this site: 2. Create three &#8216;Single Line Text&#8217; fields in the Tickets list of target site &#8211; &quot;Source Site Name&quot;, &quot;Source List Name&quot;, &quot;Source Item Id&quot;. These fields will have details of the source if Ticket has been created via transfer. For Tickets directly created in this site, these fields will be blank 3. Open Crow Canyon Workflow Manager App and configure a workflow on source list item modified event as shown below. (You can open Crow Canyon Workflow Manager App from Application Administration, Crow Canyon Apps page or directly open from S ite Contents ) &nbsp; &nbsp; This action will copy item to &quot;IT Standard&quot; service area. Similarly, add more actions if Ticket could be transferred to other Service Areas as well. &nbsp; 4. If you want to close the source Ticket, then add an action as per below steps Add an &#8216;Update Item&#8217; action in the above workflow. Select &#8216;Current Item&#8217; as the item to update and configure the field mapping as shown: &nbsp;$strcat(Ticket got transferred to, ,[TransferTo], ,site)] 5. If you want to send mail on Ticket Transfer then configure &#8216;Send an Email&#8217; action in the same workflow. &nbsp; Staff can now easily transfer the Tickets from one service area to another. For this they can edit the Ticket item and set &#8216;TranserTo&#8217; column value to that of desired service area. For e.g. if we edit a Ticket from Source list and select &#8216;Standard&#8217; option in &#8216;TransferTo&#8217; choice column then a copy of that Ticket will get created in target site and the source Ticket will get Closed. &nbsp;&nbsp; Ticket created in target site: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "170",
    "name": "170 - Move Ticket to a different service area_site using Crow Canyon Workflow Manager - Crow Canyon Softwa.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/170%20-%20Move%20Ticket%20to%20a%20different%20service%20area_site%20using%20Crow%20Canyon%20Workflow%20Manager%20-%20Crow%20Canyon%20Softwa.html",
    "title": "Move Ticket To A Different Service Area Site Using Crow Canyon Workflow Manager Crow Canyon Softwa",
    "text": "Move Ticket to a different service area/site using Crow Canyon Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Move Ticket to a different service area/site using Crow Canyon Workflow Manager Move Ticket to a different service area/site using Crow Canyon Workflow Manager 972 views 1 min , 17 sec read 0 Transfer Ticket to another Service Area using Workflow Manager It is a common scenario where customers have multiple service areas in one site collection and each of these service areas is for Tickets for a particular department. In this case sometimes a Ticket has to be transferred from one department to other. Using CrowCanyon Workflow Manager this can be done easily without having to manually copy the Ticket data. &nbsp; 1. Go to list settings of Tickets list (source list), create a Choice field in tickets list (say &quot;TransferTo&quot;) with target sites as the options. Here we should give names for other Service Areas where Ticket could be transferred from this site: 2. Create three &#8216;Single Line Text&#8217; fields in the Tickets list of target site &#8211; &quot;Source Site Name&quot;, &quot;Source List Name&quot;, &quot;Source Item Id&quot;. These fields will have details of the source if Ticket has been created via transfer. For Tickets directly created in this site, these fields will be blank 3. Open Crow Canyon Workflow Manager App and configure a workflow on source list item modified event as shown below. (You can open Crow Canyon Workflow Manager App from Application Administration, Crow Canyon Apps page or directly open from S ite Contents ) &nbsp; &nbsp; This action will copy item to &quot;IT Standard&quot; service area. Similarly, add more actions if Ticket could be transferred to other Service Areas as well. &nbsp; 4. If you want to close the source Ticket, then add an action as per below steps Add an &#8216;Update Item&#8217; action in the above workflow. Select &#8216;Current Item&#8217; as the item to update and configure the field mapping as shown: &nbsp;$strcat(Ticket got transferred to, ,[TransferTo], ,site)] 5. If you want to send mail on Ticket Transfer then configure &#8216;Send an Email&#8217; action in the same workflow. &nbsp; Staff can now easily transfer the Tickets from one service area to another. For this they can edit the Ticket item and set &#8216;TranserTo&#8217; column value to that of desired service area. For e.g. if we edit a Ticket from Source list and select &#8216;Standard&#8217; option in &#8216;TransferTo&#8217; choice column then a copy of that Ticket will get created in target site and the source Ticket will get Closed. &nbsp;&nbsp; Ticket created in target site: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "171",
    "name": "171 - Configure Main Category on top of Category and Issue Types in Crow Canyon application - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/171%20-%20Configure%20Main%20Category%20on%20top%20of%20Category%20and%20Issue%20Types%20in%20Crow%20Canyon%20application%20-%20Crow%20Canyon.html",
    "title": "Configure Main Category On Top Of Category And Issue Types In Crow Canyon Application Crow Canyon",
    "text": "Configure Main Category on top of Category and Issue Types in Crow Canyon application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Main Category on top of Category and Issue Types in Crow Canyon application Configure Main Category on top of Category and Issue Types in Crow Canyon application 1136 views 1 min , 2 sec read 6 Applies to: SharePoint Online Description This article describes the steps to configure three level cascading feature in Tickets list. Summary of Steps Configure List Schema Configure lookup settings in NITRO forms Configure Cascaded Lookup settings in Issue Type list Detailed Instructions 1. Configure List Schema 1. Create “Main Category” list. Go to Site contents &#8211;&gt;Add an App &#8211;&gt; choose Custom List template, create a list and name it as “Main Category”. 2. Create Main Category lookup columns in Tickets, Category and Issue Type lists. see list schema below Category list: Column Name Column Type Title Single line of text Main Category Lookup Issue Type list: Column Name Column Type Title Single line of text Main Category Lookup Category Lookup (It will be created as part of Crow Canyon application) Tickets list: Column Name Column Type Title Single line of text Main Category Lookup Category Lookup (It will be created as part of Crow Canyon application) Issue Type Lookup (It will be created as part of Crow Canyon application) Sample screenshot of Main Category lookup column: 2. Configure lookup Settings in NITRO forms After creating the Main Category lookup columns in Tickets, Category and Issue Type lists, add the &#8220;Main Category&#8221; column to the NITRO forms. Go to Tickets list settings -&gt; Crow Canyon NITRO Forms -&gt; Add &#8220;Main Category&#8221; column to all New,Display and Edit forms and then configure lookup column settings like shown below. Go to Advanced Section in the left hand side panel -&gt; Lookup Settings -&gt; Configure lookup settings for the Category and Issue Type columns in New and Edit forms as shown below. After configuring the lookup settings, publish the forms. &nbsp; 3. Configure Cascaded Lookup settings in Issue Type list Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Cascaded Lookup and configure filtering like shown below. Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "172",
    "name": "172 - Configure Survey on O365 Crow Canyon Service Area.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/172%20-%20Configure%20Survey%20on%20O365%20Crow%20Canyon%20Service%20Area.html",
    "title": "Configure Survey On O365 Crow Canyon Service Area",
    "text": "Configure Survey on O365 Crow Canyon Service Area - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Survey on O365 Crow Canyon Service Area Configure Survey on O365 Crow Canyon Service Area 2285 views Less than a minute 0 Steps to configure Survey on backend site : Normal 0 false false false EN-US X-NONE X-NONE This article assumes that your requirement is to use &#8216;Rating Scale&#8217; field type in &#8216;Survey&#8217; configuration. If not we recommend to configure &#8216;Survey&#8217; functionality from portal by referring SurveyOnPortalSite Disable redirect settings in Portal site: Open &#8216;Portal Settings&#8217; from Portal site and remove settings under &#8216;Security Settings&#8217; (Ignore if redirect settings are not configured) Add Content Editor in Survey list New Form: 1. Download &#8216;CCSIDPopulatorV1.2.js&#8217; file from CCSIDPopulatorV1.2 and upload it into &#8216;Site Assets&#8217; document library (Ignore if file already exists) 2. Copy file URL and save it for further usage. 3. Open &#8216;Service Satisfaction Survey&#8217; list from Site Contents and replace Overview.aspx in URL with NewForm.aspx as shown 4. Edit Page and add content editor web part by following these instructions 5. Edit Content Editor web part and add &#8216; CCSIDPopulatorV1.2.js&#8217; file URL (saved in Step 2) under Content Link and configure as shown 5. Stop Page Editing. Enable the Survey Notification: To enable Survey Notifications please refer &#8216;Enable the Survey Notification&#8217; section in SurveyOnPortalSite article Note: While configuring &#8216;Survey Link&#8217; in &#8216;Mail Template&#8217; we need to configure &#8216;Service Satisfaction Survey&#8217; list new form URL in place of &#8216;Portal Survey Form&#8217; URL Example of URL &#8211; https://abcdefg123.sharepoint.com/sites/demoSP20/Lists/Service%20Satisfaction%20Survey/newform.aspx?TID=[[ID || ID]] About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "174",
    "name": "174 - Configure Dialog Resize script – O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/174%20-%20Configure%20Dialog%20Resize%20script%20%E2%80%93%20O365.html",
    "title": "Configure Dialog Resize Script – O365",
    "text": "Configure Dialog Resize script – O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Dialog Resize script &#8211; O365 Configure Dialog Resize script &#8211; O365 887 views Less than a minute 0 Steps to Configure Dialog Resize script on Tickets list in Crow Canyon Service Request site: 1. Download &#8216;IncreaseModalDialog.txt&#8217; file from IncreaseModalDialog and upload it in to &#8216;Site Assets&#8217; list. 2. Copy file URL and save for further usage 3. Open Tickets list from Site Contents and open &#8216;Default New Form&#8217; under &#8216;List&#8217; ribbon (Open site in browser other than &#8216;Google Chrome&#8217;) 4. Add Content Editor Web part to &#8216;Default New form&#8217; Edit Content Editor web part and add &#8216;IncreaseModalDialog.txt&#8217; file URL (copied in step 2) under &#8216;Content Link&#8217; and configure as shown 5. Configure same for &#8216;Default Display Form&#8217; and &#8216;Default Edit Form&#8217; of Tickets list 6. Clear browser cache and refresh site. 7. Now scroll bar should not be visible on Tickets list Tabs. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "175",
    "name": "175 - Close Ticket while sending an Outgoing Email in SPOnline.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/175%20-%20Close%20Ticket%20while%20sending%20an%20Outgoing%20Email%20in%20SPOnline.html",
    "title": "Close Ticket While Sending An Outgoing Email In SPOnline",
    "text": "Close Ticket while sending an Outgoing Email in SPOnline - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Close Ticket while sending an Outgoing Email in SPOnline Close Ticket while sending an Outgoing Email in SPOnline 937 views Less than a minute 0 Steps to configure Close Action on Outgoing Email on Tickets list: 1. Open Tickets list from Site Contents and Click on &#8216;Crow Canyon Email Settings&#8217; under &#8216;List&#8217; ribbon &nbsp; 2. Configure &#8216;Close Ticket&#8217; action in &#8216;Crow Canyon Email Settings&#8217; by following these steps &nbsp; 3. Now while sending an Outgoing Email we can choose close action to be performed on Ticket After sending Outgoing Email we can see a dialog with status as shown below 4. Now we can see that Ticket gets &#8216;Closed&#8217; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "176",
    "name": "176 - Service Level Agreement (Response Due) using Workflow Manager – O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/176%20-%20Service%20Level%20Agreement%20%28Response%20Due%29%20using%20Workflow%20Manager%20%E2%80%93%20O365.html",
    "title": "Service Level Agreement (Response Due) Using Workflow Manager – O365",
    "text": "Service Level Agreement (Response Due) using Workflow Manager – O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Service Level Agreement (Response Due) using Workflow Manager &#8211; O365 Service Level Agreement (Response Due) using Workflow Manager &#8211; O365 944 views 2 min , 50 sec read 0 Introduction: This document will explain the procedure to configure Response Due functionality on Tickets using Workflow Manager App. Response Due is a field on the Ticket which will be auto set based on configuration. Ticket is to be responded in the given time otherwise an action (send mail, etc.) can be performed for that Ticket. How to determine whether a ticket is responded or not? In this example, we take two different actions as response indication. 1. First reply (Outgoing email) from the Ticket &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a. Crow Canyon Advanced Email App needs to be used to send outgoing email from a Ticket 2. Work Log field update &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.&nbsp; Edit ticket, enter Work Log field information, save &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Implementation: When a ticket is created, Workflow Manager App handles that event and sets the Response Due field on the Ticket. There are 2 different configurations needed to implement the Response Due feature 1. List Schema Updates 2. Configure Workflows using Workflow Manager App List Schema Updates: Create columns in Tickets list if not already present 1.Field Name: Response Due &nbsp;&nbsp; Field Type: Date and Time &nbsp;&nbsp; Default Value: None 2.Field Name: Responded &nbsp;&nbsp; Field Type: Yes/No &nbsp;&nbsp; Default Value: No 3.Field Name: Responded Date &nbsp;&nbsp; Field Type: Date and Time &nbsp;&nbsp; Default Value: None &nbsp; Workflow Manager Configurations: Configure workflows on Tickets, Email Tickets lists using CrowCanyon Workflow Manager App as described below. Workflow1: Configure workflow on &lsquo;Tickets&#8217; List This workflow sets the &lsquo;Response Due&rsquo; date based on desired conditions. In this example, we are setting Response Due to 4 hours from created time if the Ticket&rsquo;s category is &ldquo;Email&rdquo;. Create a workflow on Tickets list, &ldquo;item created&rdquo; event &nbsp; Create &ldquo;Update Item&rdquo; Action This action will set the &lsquo;Response Due&rsquo; date to four hours from the ticket created time Configure the Update Item action as shown in below screenshots Formula: $add([Created],0:4:0:0) Note: If there is another existing workflow configured to set &ldquo;Due Date&rdquo; at the time of ticket creation, same workflow actions can be used to set the Response Due as well. &nbsp; Workflow2: Configure workflow on &lsquo;Tickets&#8217; list This workflow marks a Ticket as responded and updates &ldquo;Responded Time&rdquo; when work log is updated only if the Ticket is not already marked as responded. Create a workflow on Tickets list, &ldquo;item modified&rdquo; event Create &ldquo;Update Item&rdquo; Action This action will mark the Ticket as responded and updates the responded time in to &ldquo;Responded Date&rdquo; field if the ticket is not already marked as responded. Configure the Update Item action as shown in below screenshots &nbsp; Workflow3: Configure workflow on &lsquo;Email Tickets&rsquo; List This workflow marks a Ticket as responded and captures the responded time when an outgoing mail is sent from a Ticket. Create a workflow on Email Tickets list, &ldquo;an item is created&rdquo; event Create &ldquo;Query List&rdquo; Action This action will check whether the ticket from which an outgoing email is sent is already marked as responded or not. Further actions in this workflow will be executed only if the ticket is not already responded. Configure the query list action as shown in below screenshots Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;And&gt;&lt;Eq&gt;&lt;FieldRef Name=&quot;Responded&quot; /&gt;&lt;Value Type=&quot;Boolean&quot;&gt;1&lt;/Value&gt;&lt;/Eq&gt;&lt;Eq&gt; &lt;FieldRef Name=&#8217;ID&#8217; /&gt;&lt;Value Type=&#8217;Number&#8217;&gt;##RelatedTicketID##&lt;/Value&gt;&lt;/Eq&gt;&lt;/And&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Create &ldquo;Update Item&rdquo; Action This action will updates the &lsquo;Responded&rsquo; column to true and &lsquo;Responded Date&rsquo; with the modified date. Configure update item action as shown in below screenshots Note: This update item action will update the Responded, Responded Date fields only if the ticket is not already marked as Responded. Mail Template1: Configure Mail Template on &lsquo;Tickets&#8217; List Go to Crow Canyon Workflow Manager App, create a Mail template on &lsquo;Tickets&rsquo; list as shown in below screenshots Note: This is just a sample mail template. Mail Subject and Mail Body can be configured as required. &nbsp; Workflow4: Configure workflow on &lsquo;Tickets&#8217; List This timer workflow is used to execute action(s) if the ticket is not responded in the given time. In this example, we are sending mail to the Assigned Staff/Staff group if the ticket is not marked as responded with in the given Response Due time. Create a workflow on Tickets list, &ldquo;based on date field in item&rdquo; event. &nbsp; Create &ldquo;Send Mail&rdquo; Action This action will send mail to user in column &lsquo;Assigned Staff&rsquo;. Note that the recipient can be anything as per the needs, we have considered Assigned Staff as an example here. Configure the Update Item action as shown in below screenshots Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "177",
    "name": "177 - Basic settings for Ticket Satisfaction Survey – O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/177%20-%20Basic%20settings%20for%20Ticket%20Satisfaction%20Survey%20%E2%80%93%20O365.html",
    "title": "Basic Settings For Ticket Satisfaction Survey – O365",
    "text": "Basic settings for Ticket Satisfaction Survey – O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Basic settings for Ticket Satisfaction Survey &#8211; O365 Basic settings for Ticket Satisfaction Survey &#8211; O365 1467 views 1 min , 45 sec read 0 Basic settings for Ticket Satisfaction Survey : &#8216;Requester&#8217; will receive a Survey link when a ticket is closed. Survey notification goes to the corresponding requester on every ticket close in this basic scenario. There are two different configurations that needs to be done 1. Add custom script to Survey list New Form 2. Configure Workflows using Workflow Manager App Add custom script to Survey list New Form This setting will help capturing the Ticket Id from Survey link and populate ticket id in Survey form so the link/relation is maintained between survey and ticket. Download the custom Crow Canyon script that goes to Survey list form from CCSIDPopulatorV1.2 Upload custom script “CCSIDPopulatorV1.2.js” file into “Site Assets” document library in service area site. This step can be skipped if the file already present. Copy &#8216;CCSIDPopulatorV1.2.js&#8217; script file URL, open &#8216;Service Satisfaction Survey&#8217; list and change URL from overview.aspx to newform.aspx, edit page, add content editor web part, add content link with the script URL, save. See sample screenshots below. Edit newform.aspx page Add “Content Editor” to newform.aspx page, Edit web part and add ‘CCSIDPopulatorV1.2.js’ script file URL under ‘Content Link’ and save Stop editing the page Configure Workflows using Workflow Manager App This setting will send notification to Requester with a link to Survey on ticket close Create Mail Template on ‘Tickets’ list Go to Workflow Manager App, Manage Mail Templates, click on Create Mail Template and configure as shown in below screenshots Mail Subject and Body can be configured as per the needs and the important piece is to configure the Survey link so that the ticket linking is maintained and user is navigated back to the desired page after submitting the survey. To configure link to survey, click on ‘Insert/edit Hyperlink’ button from the top menu bar of the ‘Mail Body’ section Give survey link URL in the “Url” section of the dialog box. There are two cases exist here: 1. Use the Service Satisfaction Survey list default New Form URL This option cannot be used is the redirection to employee portal is configured for end users Syntax: “Survey” list new form URL?TID=[[ID || ID]]&amp;Source=”Desired URL” Example: https://abcdefg123.sharepoint.com/sites/helpdesk/IT/Lists/Service%20Satisfaction%20Survey/newform.aspx?TID==[[ID||ID]]&amp;Source=https://abcdefg123.sharepoint.com/sites/helpdesk/configportal/SitePages/Index.aspx 2. Use the employee portal Survey new form URL This option is assuming the employee portal is already configured for Survey new form Syntax: “Survey” new form URL in portal&amp;Lookup field internal name=[[ID || ID]] Example: https://abcdefg123.sharepoint.com/sites/helpdesk/IT/configportal/SitePages/NewForm.aspx?pid=1&amp;Related_x0020_Ticket_x0020_ID=[[ID || ID]] Note: “Related_x0020_Ticket_x0020_ID” in above example URL is the internal field name of ticket lookup in Survey list Give the desired text in the ‘Text to display’ section. Configure Workflow on Tickets list This workflow will send the mail to requester with a link to survey list form Create a workflow on ‘Tickets’ list, on “an item modified” event Create a ‘Send Mail’ action with conditions as shown in below screenshots &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "18",
    "name": "18 - Modifying the ‘Request Status’ values for Service Request Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/18%20-%20Modifying%20the%20%E2%80%98Request%20Status%E2%80%99%20values%20for%20Service%20Request%20Tickets.html",
    "title": "Modifying The ‘Request Status’ Values For Service Request Tickets",
    "text": "Modifying the ‘Request Status’ values for Service Request Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Modifying the &#8216;Request Status&#8217; values for Service Request Tickets Modifying the &#8216;Request Status&#8217; values for Service Request Tickets 986 views Less than a minute 1 Applies to: SharePoint Online Description: Tickets list has a &#8216;Request Status&#8217; field that indicates the current status of the Ticket. By default there are three values for this status: Unassigned : Ticket is not yet assigned to technician Assigned : Ticket is assigned and is being worked upon by technician Closed : Ticket has been closed after resolution of the problem Crow Canyon Application uses these three status values and these can&#8217;t be changed as otherwise application state machine may not work correctly. Following two options can be used if more status values are required: More status values can be added to &#8216;Request Status&#8217; field (like you can add a &#8216;Resolved&#8217; status in addition to above three status values) Create another choice field in Tickets list and here you can have more status values for better classifying the resolution Notify Requester/Assigned Staff on change in the Ticket Status: In Crow Canyon Applications, Whenever a tickets gets created/assigned/closed, Crow Canyon Product workflows will send mail to Requester/Assigned Staff of the ticket. If we have added one more status called &#8220;Resolved&#8221; and we want to notify the users when the ticket status is changed to &#8220;Resolved&#8221;. This requirement can be achieve with Crow Canyon Workflow Manager. please refer this article for configuring workflow to notify Requester/Assigned Staff when ticket status is changed: https://www.crowcanyon.help/article/253/ &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "184",
    "name": "184 - Modifying the ‘Request Status’ values for Service Request Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/184%20-%20Modifying%20the%20%E2%80%98Request%20Status%E2%80%99%20values%20for%20Service%20Request%20Tickets.html",
    "title": "Modifying The ‘Request Status’ Values For Service Request Tickets",
    "text": "Modifying the ‘Request Status’ values for Service Request Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Modifying the &#8216;Request Status&#8217; values for Service Request Tickets Modifying the &#8216;Request Status&#8217; values for Service Request Tickets 986 views Less than a minute 1 Applies to: SharePoint Online Description: Tickets list has a &#8216;Request Status&#8217; field that indicates the current status of the Ticket. By default there are three values for this status: Unassigned : Ticket is not yet assigned to technician Assigned : Ticket is assigned and is being worked upon by technician Closed : Ticket has been closed after resolution of the problem Crow Canyon Application uses these three status values and these can&#8217;t be changed as otherwise application state machine may not work correctly. Following two options can be used if more status values are required: More status values can be added to &#8216;Request Status&#8217; field (like you can add a &#8216;Resolved&#8217; status in addition to above three status values) Create another choice field in Tickets list and here you can have more status values for better classifying the resolution Notify Requester/Assigned Staff on change in the Ticket Status: In Crow Canyon Applications, Whenever a tickets gets created/assigned/closed, Crow Canyon Product workflows will send mail to Requester/Assigned Staff of the ticket. If we have added one more status called &#8220;Resolved&#8221; and we want to notify the users when the ticket status is changed to &#8220;Resolved&#8221;. This requirement can be achieve with Crow Canyon Workflow Manager. please refer this article for configuring workflow to notify Requester/Assigned Staff when ticket status is changed: https://www.crowcanyon.help/article/253/ &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "186",
    "name": "186 - Configure Survey for every Nth Ticket in Crow Canyon Service Request Applications - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/186%20-%20Configure%20Survey%20for%20every%20Nth%20Ticket%20in%20Crow%20Canyon%20Service%20Request%20Applications%20-%20Crow%20Canyon%20Soft.html",
    "title": "Configure Survey For Every Nth Ticket In Crow Canyon Service Request Applications Crow Canyon Soft",
    "text": "Configure Survey for every Nth Ticket in Crow Canyon Service Request Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Survey for every Nth Ticket in Crow Canyon Service Request Applications Configure Survey for every Nth Ticket in Crow Canyon Service Request Applications 1470 views Less than a minute 0 Applies To SharePoint Online and SharePoint On-Premises Description This article assumes that you have already configured &#8216;Survey&#8217; functionality as specified in Survey On Portal Site article. Instead of sending Survey on every Ticket, if requirement is to send for every 5th or 7th Ticket etc., we can use SharePoint Calculated column to get the Nth Ticket and then configure Workflow conditions to send Survey notification only to a particular Ticket as needed. Please follow the below steps to configure this feature. Normal 0 false false false EN-US X-NONE X-NONE Create a Calculated column in Tickets list Go to Application Administration &#8211;&gt; configure lists &#8211;&gt; configure Tickets &#8211;&gt; create a Calculated column in Tickets list to get reminder of Ticket ID when divided by a particular number. In our example below, we have configured Survey link on every 7th Ticket (Ticket ID is a multiple of 7). Normal 0 false false false EN-US X-NONE X-NONE Formula used in above column settings: =MOD([Case Id],7) Update condition in the Workflow As per the survey configurations, Notification on Ticket closure is disabled in the notifications utility. So in this Survey notification workflow, we need to configure two send mail actions on Ticket closure with different mail templates as needed. Go to Crow Canyon Workflow Manager &#8211;&gt; configure the conditions in the send mail actions as shown below. Send Mail Action 1 This send mail action is to notify Requester/Staff when Ticket is closed irrespective of the Nth Ticket. Please refer the conditions to be used from below Send Mail Action 2 This send mail action is to notify only Requester with Survey link in the mail template that will be sent for every Nth Ticket. When a Ticket gets closed and its ID is multiple of 7 then Ticket Requester will receive a mail with Survey link About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "187",
    "name": "187 - Configure Survey Analysis and Advanced Reports on Survey Data in O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/187%20-%20Configure%20Survey%20Analysis%20and%20Advanced%20Reports%20on%20Survey%20Data%20in%20O365.html",
    "title": "Configure Survey Analysis And Advanced Reports On Survey Data In O365",
    "text": "Configure Survey Analysis and Advanced Reports on Survey Data in O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Survey Analysis and Advanced Reports on Survey Data in O365 Configure Survey Analysis and Advanced Reports on Survey Data in O365 1216 views 2 min , 26 sec read 0 &nbsp; This article assumes that you have alread y copied Survey data to Tickets list. If not please refer this article: CopySurveyDataBackToTicket Configure Advanced Survey Reports: There are 3 different configurations needed to implement the advanced Survey reports &nbsp; 1. List Schema Updates &nbsp; 2. Configure Workflows using Workflow Manager App &nbsp; 3. Create Reports using standard list views List Schema Updates Create a new Custom List with the field schema specified in the table below. In this example we are naming the Custom List as &#8216;Survey Report&#8217; Field Name Type of Field Default Value Notes TotalCount Number 0 &nbsp; Satisfied Number 0 &nbsp; UnSatisfied Number 0 &nbsp; AssignedStaff Person or Group None &nbsp; Satisfied Percentage (See image below) Calculated NA Formula: &#8216;=Satisfied/ABS(TotalCount)&#8217; Refer first screenshot below for other configuration &nbsp; UnSatisfied Percentage (See image below) Calculated NA Formula: &#8216;=Satisfied/ABS(TotalCount)&#8217; Refer first screenshot below for other configuration Screenshot 1: &nbsp; Screenshot 2: Configure Workflows using Workflow Manager App Create a workflow using Crow Canyon Workflow Manager app with 3 different actions as described below Workflow1: Configure workflow on &lsquo;Tickets&#8217; List This workflow updates the Survey Report list item (only if assigned staff record already exist in Survey report list) as per the feedback value (Satisfied or Not Satisfied) Workflow on Item Modified event &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Actions: Query List Action &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This action will find the Assigned Staff record (list item) in &ldquo;Survey Reports&rdquo; list so the further actions can update the data accordingly. If the Survey record not found, Workflow2 will handle the case.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name=&#8217;AssignedStaff&#8217; LookupId=&#8217;TRUE&#8217;/&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Lookup&#8217;&gt;%%$LookupId([Assigned Staff])%%&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Update item action &#8211; Not Satified feedback &nbsp; This action will update the Assigned Staff record in Survey Reports list with &ldquo;Total Count&rdquo; and &ldquo;Unsatisfied Count&rdquo; when Feedback is &quot;Not Satisfied&quot; Mappings:&nbsp; UnSatisfied &#8211; $add(checkAssignedStaff##UnSatisfied,1) TotalCount &#8211; $add(checkAssignedStaff##TotalCount,1) Update item action &#8211; Satisfied feedback This action will update the Assigned Staff record in Survey Reports list with &ldquo;Total Count&rdquo; and &ldquo;Satisfied Count&rdquo; when Feedback is &quot;Satisfied&quot; Mappings:&nbsp; Satisfied &#8211; $add(checkAssignedStaff##Satisfied,1) TotalCount &#8211; $add(checkAssignedStaff##TotalCount,1) Normal 0 false false false EN-US X-NONE X-NONE Workflow2: Configure workflow on &lsquo;Tickets&#8217; List This workflow updates the Survey Report list item (only if assigned staff record already exist in Survey report list) as per the feedback value (Satisfied or Not Satisfied) Workflow on Item Modified event Actions: Query Action &nbsp; This action will try to find the Assigned Staff record (list item) in &ldquo;Survey Reports&rdquo; list and ensures that the record doesn&#8217;t exist so the further actions create a record. Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name=&#8217;AssignedStaff&#8217; LookupId=&#8217;TRUE&#8217;/&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Value Type=&#8217;Lookup&#8217;&gt;%%$LookupId([Assigned Staff])%%&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; &nbsp; Create Item &#8211; Feedback is &#8216;Not Satisfied&#8217; This action will create the Assigned Staff record in Survey Reports list with &quot;Total Count&quot; and &quot;Satisfied Count&quot; when feedback is &quot;Satisfied&quot; Create Item &#8211; Feedback is &#8216;Satisfied&#8217; This action will create the Assigned Staff record in Survey Reports list with &quot;Total Count&quot; and &quot;UnSatisfied Count&quot; when feedback is &quot;Not Satisfied&quot; &nbsp; Sample Report on Survey Feedback This is a standard SharePoint list view report, go to Survey Report list, and create a view &ldquo;Analysis by Staff&rdquo; as show in below screenshots. This view will then show a row for each technician or Assigned Staff along with their feedback percentage. Sample Report Output: &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "188",
    "name": "188 - Survey configuration in O365 Crow Canyon Service Area.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/188%20-%20Survey%20configuration%20in%20O365%20Crow%20Canyon%20Service%20Area.html",
    "title": "Survey Configuration In O365 Crow Canyon Service Area",
    "text": "Survey configuration in O365 Crow Canyon Service Area - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Survey configuration in O365 Crow Canyon Service Area Survey configuration in O365 Crow Canyon Service Area 1130 views Less than a minute 0 Survey Functionality: Survey is to know &#8216;Requester&#8217; satisfaction/feedback on service provided after resolving their issue. In Crow Canyon Service Request, &#8216;Requester&#8217; will receive a link to fill &#8216;Survey&#8217; when a Ticket gets closed. Basic Survey Config from Portal Send Survey link to Requester after Ticket close BasicSurveyConfigurationFromPortal &nbsp; &nbsp; &nbsp; Conduct &#8216;Survey&#8217; only on every Nth Ticket closed Instead of sending/conducting Survey on every Ticket closed, if your requirement is to send for every 5th or 7th Ticket etc., then please follow the steps specified in this article &#8211; SurveyOnNthTicketClosed &nbsp; &nbsp; &nbsp; Copy &#8216;Survey&#8217; data back to Ticket If we want to maintain Survey data in the Ticket we need to copy data back to the Ticket once Requester responded on the Survey. To configure this please refer this article &#8211; CopySurveyDataBackToTicket &nbsp; &nbsp; &nbsp; Configure Survey Analysis and Advanced Reports on Survey data Based on the Survey data copied in to Ticket we can configure different Reports to analyse Survey. To know how to configure Reports please refer this article &#8211; AdvancedReportsonSurvey About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "189",
    "name": "189 - How to Copy Survey Data to Tickets in Survey functionality_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/189%20-%20How%20to%20Copy%20Survey%20Data%20to%20Tickets%20in%20Survey%20functionality_.html",
    "title": "How To Copy Survey Data To Tickets In Survey Functionality",
    "text": "How to Copy Survey Data to Tickets in Survey functionality? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Copy Survey Data to Tickets in Survey functionality? How to Copy Survey Data to Tickets in Survey functionality? 1260 views 1 min , 4 sec read 0 Note: Before copying Survey data to Tickets list make sure you have already configured Survey functionality in your site. If not please configure Survey functionality based on your requirement by referring this article: SurveyFunctioanlityinSPOnline Steps to copy Survey data back to Ticket: There are 2 different configurations needed to implement to copy Survey data to Tickets list 1.List Schema Updates 2.Configure Workflows using Workflow Manager App List Schema Updates To store the survey data we need to create few columns to existing lists as described below. Create Columns in Tickets List Column Name: SurveyOutput Type of Field: Choice Create New Columns in Survey list Column Name: Feedback Type of Field: Choice Workflow Manager Configurations Configure workflows on Service Satisfaction Survey list using CrowCanyon Workflow Manager App as described below. Workflow1: Configure workflow on &#8216;Service Satisfaction Survey&#8217; List This workflow updates the related ticket with the feedback provided by the user in the Survey form . It updates the ticket only if the Feedback is not already submitted . Create a workflow on Service Satisfaction Survey list on item creation (&ldquo;an item is created&rdquo; event) Create &ldquo;Query&rdquo; Action This action will ensure that the ticket update happens only if the Survey feedback is not already submitted on that ticket. Configure the query list action as shown in below screenshots Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;And&gt;&lt;Eq&gt;&lt;FieldRef Name=&#8217;ID&#8217;/&gt; &lt;Value Type=&#8217;Number&#8217;&gt;##Related_x0020_Ticket_x0020_ID##&lt;/Value&gt; &lt;/Eq&gt;&lt;IsNull&gt;&lt;FieldRef Name=&#8217;SurveyOutput&#8217;/&gt;&lt;/IsNull&gt;&lt;/And&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Create &ldquo;Update Item&rdquo; Action This action updates the ticket with Survey feedback. Configure this action as shown in below screenshots Note: To configure Reports based on the Survey data copied into Tickets list please refer this article &#8211; ConfigureReportsBasedOnSurveyData About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "19",
    "name": "19 - Configure Reports on Survey data in Tickets list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/19%20-%20Configure%20Reports%20on%20Survey%20data%20in%20Tickets%20list.html",
    "title": "Configure Reports On Survey Data In Tickets List",
    "text": "Configure Reports on Survey data in Tickets list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Reports on Survey data in Tickets list Configure Reports on Survey data in Tickets list 1228 views Less than a minute 0 Create Reports based on Survey data in Tickets List Note: Before Configuring Reports on Survey data make sure that you have already copied Survey data to Tickets list. If not please refer this article: CopySurveyDataBackToTicket Reports can be configured using standard SharePoint list views using Crow Canyon Report App. Sample Report1: Survey Feedback on Tickets lis t Report App takes the filtered view as input to show report on desired data, in this sample report, we are going to configure a report that shows the total number of &ldquo;Satisfied&rdquo; and &ldquo;Not Satisfied&rdquo; tickets in Column chart. First, create a standard view in &ldquo;Tickets&rdquo; list. In this example, we name it as &ldquo;Survey Feedback&rdquo; Go to List Settings &ndash; Create View &ndash; Select Standard View and configure filters to the view under Filter section as shown in the below picture. Go to &#8216;Crow Canyon Charts, Dashboard and Reports App&#8217;, configure Report as shown in below screenshot Sample Report2: Survey Feedback Count by Staff on Tickets list Generate/Configure Report based on &#8216;Assigned Staff&#8217; and &#8216;Survey Feedback&#8217; as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "190",
    "name": "190 - Configure Reports on Survey data in Tickets list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/190%20-%20Configure%20Reports%20on%20Survey%20data%20in%20Tickets%20list.html",
    "title": "Configure Reports On Survey Data In Tickets List",
    "text": "Configure Reports on Survey data in Tickets list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Reports on Survey data in Tickets list Configure Reports on Survey data in Tickets list 1228 views Less than a minute 0 Create Reports based on Survey data in Tickets List Note: Before Configuring Reports on Survey data make sure that you have already copied Survey data to Tickets list. If not please refer this article: CopySurveyDataBackToTicket Reports can be configured using standard SharePoint list views using Crow Canyon Report App. Sample Report1: Survey Feedback on Tickets lis t Report App takes the filtered view as input to show report on desired data, in this sample report, we are going to configure a report that shows the total number of &ldquo;Satisfied&rdquo; and &ldquo;Not Satisfied&rdquo; tickets in Column chart. First, create a standard view in &ldquo;Tickets&rdquo; list. In this example, we name it as &ldquo;Survey Feedback&rdquo; Go to List Settings &ndash; Create View &ndash; Select Standard View and configure filters to the view under Filter section as shown in the below picture. Go to &#8216;Crow Canyon Charts, Dashboard and Reports App&#8217;, configure Report as shown in below screenshot Sample Report2: Survey Feedback Count by Staff on Tickets list Generate/Configure Report based on &#8216;Assigned Staff&#8217; and &#8216;Survey Feedback&#8217; as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "192",
    "name": "192 - SharePoint Online_ Filter Assets based on the Requester of the Ticket.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/192%20-%20SharePoint%20Online_%20Filter%20Assets%20based%20on%20the%20Requester%20of%20the%20Ticket.html",
    "title": "SharePoint Online Filter Assets Based On The Requester Of The Ticket",
    "text": "SharePoint Online: Filter Assets based on the Requester of the Ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Filter Assets based on the Requester of the Ticket SharePoint Online: Filter Assets based on the Requester of the Ticket 989 views 1 min , 18 sec read 0 Introduction In Crow Canyon Service Request product there is an Assets list. In this list IT assets can be maintained and in Tickets list there is a lookup to the Assets list. Assets list has &#8216;Employee&#8217; field for the user to whom the asset is assigned. While creating the Ticket it is convenient to filter the Assets lookup column based on the requester of the Ticket as otherwise it will be difficult to select the right Asset in the Ticket if there are many assets in the system. Pre-requisites Tickets list should have lookup to the Assets list and the column name is &#8220;Related Asset&#8221; Assets list has a single user Person and Group field with column name &#8220;Employee&#8221; There should be an index on Employee column in Assets list. Without this index, loading will be slower in the Ticket form. To know more details about how to index a column in SharePoint please refer this article Configuration Steps Upload the script files 1. Download AssetsByRequesterEdit , AssetsByRequesterNew , and CurrentUserInfoFiller 2. Navigate to folder: Site Content -&gt; Site Assets -&gt; CrowCanyon -&gt; CurrentUserInfoFiller -&gt; Upload and replace &#8216;UserInfoFiller.js&#8217; file 3. Go to Site Assets library from Site Contents list and create a folder CCS if it doesn&#8217;t exists and upload &#8216;AssetsByRequesterNew.js&#8217; and &#8216; AssetsByRequesterEdit.js&#8217; files Enable filtering in Ticket New Form 4. Copy both file (&#8216;AssetsByRequesterNew.js&#8217; and &#8216;AssetsByRequesterEdit.js&#8217;) URLs for further use 5. Open Tickets list from Site Contents and open &#8216;Default New Form&#8217; under &#8216;List&#8217; ribbon (Open site in browser other than &#8216;Google Chrome&#8217;) 6. Add Content Editor Web part to &#8216;Default New form&#8217; 7. Edit Content Editor web part and add &#8216;FilterScript_RelatedAsset.js&#8217; file URL (copied in step 4) under &#8216;Content Link&#8217; and configure as shown &nbsp; Stop Page editing Enable filtering in Edit form 8. Open &#8216;Default Edit Form&#8217; under &#8216;List&#8217; ribbon (Same as in Step 5) 9. Add Content Editor Web part to &#8216;Default Edit form&#8217; (Same as in Step 6) 10. Edit Content Editor web part and add &#8216;FilterScript_RelatedAsset_EditForm.js&#8217; file URL (copied in step 4) under &#8216;Content Link&#8217; and configure as shown in Step 7 Verify the functionality 11.Clear browser cache and refresh site. 12. Now in Tickets list New Form and Edit Form you can see &#8216;Filter&#8217; button beside &#8216;Related Asset&#8217; field 13. If we click on &#8216;Filter&#8217; button &#8216;Assets&#8217; under &#8216;Related Assets&#8217; dropdown will get filter based on the Ticket Requester. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "193",
    "name": "193 - Configure Archival functionality in O365 Crow Canyon Helpdesk using Workflow Manager app - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/193%20-%20Configure%20Archival%20functionality%20in%20O365%20Crow%20Canyon%20Helpdesk%20using%20Workflow%20Manager%20app%20-%20Crow%20Cany.html",
    "title": "Configure Archival Functionality In O365 Crow Canyon Helpdesk Using Workflow Manager App Crow Cany",
    "text": "Configure Archival functionality in O365 Crow Canyon Helpdesk using Workflow Manager app - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Archival functionality in O365 Crow Canyon Helpdesk using Workflow Manager app Configure Archival functionality in O365 Crow Canyon Helpdesk using Workflow Manager app 2240 views 2 min , 34 sec read 0 Applies to: SharePoint Online Note: If you are using SharePoint On-premises then please refer this article http://www.crowcanyon.info/sharepoint-manuals-37/archiving_tickets.html for Archival functionality Please refer to the below article for latest steps to configure the archival functionality: https://www.crowcanyon.help/article/743/ Automatic Archival Process: Move tickets along with its associated items like tasks to different lists without breaking the relation. It can be configured using our Crow Canyon Workflow Manager App There are two different things to do to configure archival process. 1. Prepare the list schema to move old tickets along with its related items 2. Configure Workflows using Workflow Manager App 1. Prepare List Schema: &#8212; Take list templates of Tickets, Email Tickets,Associated Tasks and Time Tracking lists. Go to Site Contents &#8211;&gt;Tickets list &#8211;&gt;List Settings &#8211;&gt;Click on &#8216;Save list as Template&#8217; link &#8212; Give File name,Template Name and click on &#8220;Ok&#8221; &#8212; Create archival lists (Archived Tickets, Archived Email Tickets, Archived Associated Tasks,Archived Time Tracking lists) using these list templates. (The idea behind creating Archived Email Tickets,Arichived Time Tracking and Archived Associated Tasks lists is to move email history and related tasks along with tickets during the archival process). &#8212; Creating Archived tickets list: Go to Site Contents &#8211;&gt; Add an App &#8211;&gt; Select Tickets list Template &#8211;&gt; name it as Archived Tickets list. &#8212; Similarly create Archived Email Tickets,Archived Time Tracking and Archived Associated Tasks lists using their correspoinding list templates. &#8212; Once these Archival lists are created, make sure all the lookup fields in Archived Tickets list, Archived Email Tickets list, Archived Time Tracking list and Archived Associated Tasks list are correct. &#8212; Recreate lookup fields in these lists Archived Email Tickets, Archived Time Tracking list and Archived Associated Tasks list. Archived Email Tickets list: Internal name: RelatedTicketID Display name: Related Ticket ID Archived Time Tracking list: I nternal name: TicketID Display name: Related Ticket ID Archived Assoicated Tasks list: Normal 0 false false false EN-US X-NONE X-NONE Internal name: RelatedTicketID Display name: Related Ticket ID &#8212; Linked item columns need to be deleted manually from Archived Tickets list and create pointing to archived related lists using CrowCanyon Linked items App (Optional) Delete Time Tracking, Email History and Associated Tasks fields from Archived Tickets list. &#8212; Create these fields in Archived Tickets list using CrowCanyon Linked Items app go to Site Contents &#8211;&gt; CrowCanyon Linked Items app &#8211;&gt; Create fields like below Field Name: Time Tracking Field Name: Associated Tasks Field Name: Email History &#8212; Configure tabs in Archived Tickets list similar to the tabs present in Tickets list using CrowCanyon Forms Manager App (Optional) 2. Configure Workflows using Workflow Manager App: Configure Workflow using Workflow Manager App like below. Go to Application Administration&#8211;&gt; Crowcanyon Apps &#8211;&gt; Crowcanyon Workflow Manager App Configure a Scheduled Query workflow like shown below. Schedule Query: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Leq&gt; &lt;FieldRef Name ='ClosedDate' /&gt; &lt;Value Type='DateTime' &gt; &lt;Today OffsetDays='-365' /&gt; &lt;/Value&gt; &lt;/Leq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Move Item Action: Configure &#8220; Move Action &#8221; like below. Mappings: Archived Associated Tasks &#8211;Associated Tasks Archived Email Tickets &#8211;Email Tickets Archived Time Tracking &#8211;Time Tracking Manual Archival Workflow configuration: Above automatic archival process moves the items only based on the Closed Date rule i.e. exactly 1 year after Closed Date so tickets will be archived timely manner. If we would like to archive the tickets in bulk at a time, we can follow this manual archival process. There are again three different things to configure this: 1. Prepare the list schema to move old tickets along with its related items 2. Configure custom action using Crow Canyon Batch Operations 3. Configure workflows using Workflow Manager App 1. Prepare the list schema to move old tickets along with its related items Same as above automatic archival list schema. In addition, create a new field in tickets list. Create Yes/No field in Tickets list Internal Name: ArchiveTickets Display Name: Archive Tickets 2. Configure custom action using Crow Canyon Batch Operations: Create a batch action using CrowCanyon Common utilities app Go to Site Contents &#8211;&gt; CrowCanyon Common utilities app &#8211;&gt; Create a new batch action. 3. Configure workflows using Workflow Manager App: Configure Workflow using CrowCanyon Workflow Manager app Goto Site Contents &#8211;&gt; CrowCanyon Workflow Manager &#8211;&gt; Create new workflow like below Move Item Action: Configure &#8220; Move Item &#8221; action For Manual bulk tickets archival, go to Tickets List &#8211;&gt; &#8220;Closed Tickets&#8221; view &#8211;&gt;Select multiple tickets &#8211;&gt; Click &#8220;Archive Tickets&#8221; button in the ribbon About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "194",
    "name": "194 - Auto Populate Requester Properties dynamically when Requester is changed - Crow Canyon Software Supp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/194%20-%20Auto%20Populate%20Requester%20Properties%20dynamically%20when%20Requester%20is%20changed%20-%20Crow%20Canyon%20Software%20Supp.html",
    "title": "Auto Populate Requester Properties Dynamically When Requester Is Changed Crow Canyon Software Supp",
    "text": "Auto Populate Requester Properties dynamically when Requester is changed - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto Populate Requester Properties dynamically when Requester is changed Auto Populate Requester Properties dynamically when Requester is changed 1070 views 2 min , 48 sec read 0 To auto populate Requester properties dynamically follow below procedure 1. Add &quot;Crow Canyon Apps Common&quot; app into the Site Contents. Note: If you do not see the &quot;Crow Canyon Apps Common&quot; app please contact Crow Canyon. 2. Open &quot;Crow Canyon Apps Common&quot; app and click on Update button. It will add some scripts files in Site Assets. Go to Site Assets list &#8211;&gt; CCS &#8211;&gt; AD &#8211;&gt; download UserInformationContentLink 3. Change the url in UserInformationContentLink.txt file like below. Go to Site Contents &#8211;&gt; SiteAssets&#8211;&gt;CCS folder&#8211;&gt;AD &#8211;&gt; Copy the url of UserInformationFiller.js file and replace the url in UserinformationContentLink.txt file follow like below. 4. Open notepad and add below script and save the file with Tickets list Id (File type: xml) { &nbsp;&nbsp;&nbsp; &quot;BasedOnLoginUser&quot;: { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;FieldMappings&quot;: [{ &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterEmail&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;WorkEmail&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: true &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }, { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterDepartment&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;Department&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: false &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }, { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterPhone&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;WorkPhone&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: false &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ], &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;OverWrite&quot;: false, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;UserColumn&quot;: &quot;Requester&quot; &nbsp;&nbsp;&nbsp; }, &nbsp;&nbsp;&nbsp; &quot;UserInColumn&quot;: { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Requester&quot;: { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;FieldMappings&quot;: [{ &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterEmail&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;WorkEmail&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: true &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }, { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterDepartment&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;Department&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: false &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }, { &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;ColumnName&quot;: &quot;RequesterPhone&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;Property&quot;: &quot;WorkPhone&quot;, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;DisableEventFire&quot;: false &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ], &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;OverWrite&quot;: true, &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &quot;FormType&quot;: &quot;New|Edit&quot; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; } } You can add more field mapping settings like below. { &nbsp; &quot;ColumnName&quot;: &quot;Replace with field internal name&quot;, &nbsp;&nbsp; &quot;Property&quot;: &quot;User profile property name&quot;, &nbsp; &quot;DisableEventFire&quot;: true } Note : File name will be smaller case like &#8216;ccc029ea-0a65-4d6d-97dc-50bd1c620228.xml&#8217; 5. Upload UserinformationContentLink.txt file and Tickets list ID .xml file in Site Assets. Go to Site Contents &#8211;&gt;SiteAssets&#8211;&gt;CCS Folder&#8211;&gt;AD&#8211;&gt;Upload the two files here. 6.Copy the url of UserinformationContentLink.txt 7. Edit the default &#8216;New form&#8217; of Tickets list Go to Site Contents &#8211;&gt; Tickets list &#8211;&gt; List &#8211;&gt;Form Web Parts&#8211;&gt; Default New form &nbsp; Edit the &quot;Default New form&quot; Page &#8211;&gt;Edit &quot;CCSCurrentUserInfofiller&quot; content webpart &#8211;&gt; Enter the copied Url of UserInformationContentLink.txt in Content link and click Ok. If &quot;CCSCurrentUserInfofiller&quot; content editor does not present on the form, add a content editor web part, set the content URL, make it hidden and save. 8.Edit &#8216;Default Edit&#8217; form in Tickets list follow step 7. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "195",
    "name": "195 - Configure Survey from Portal in O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/195%20-%20Configure%20Survey%20from%20Portal%20in%20O365.html",
    "title": "Configure Survey From Portal In O365",
    "text": "Configure Survey from Portal in O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Survey from Portal in O365 Configure Survey from Portal in O365 3089 views 1 min , 50 sec read 4 Steps to configure Survey from Portal: Crow Canyon Service Request provides a functionality to take feedback from requester on the service provided when the ticket is closed. Our Application has a list in the backend site &#8220;Service Satisfaction Survey&#8221; that captures the requester feedback information. In this article we use Employee Portal to configure Survey form and use this portal form link in requester notifications. Workflow Manager App will be used to send ticket close notification with portal survey form link. Limitation: SharePoint Survey list has a built-in field type &#8220;Rating Scale&#8221; which is not supported in our empoyee portal forms, so as a replacement to this rating scale field type, we can create multiple choice or any other simple field types in &#8216;Service Satisfcation Survey&#8217; list in backend site and create forms in Portal using these fields. Note: If you want to configure Survey functionality with &#8220;Rating Scale&#8221; field type please refer this article &#8211; SurveyOnBackendSite Configure Forms in Portal: 1. As described above we can create multiple fields in &#8216;Service Satisfaction Survey&#8217; list with simple field types. Here we have created a simple choice field &#8216;Feedback&#8217; as an example &nbsp; 2. Create a New Form in Portal for &#8216;Survey&#8217; form by following these steps Open Portal Index/Home page and click on &#8216;Portal Settings&#8217; link as shown below &nbsp; &nbsp; Under Portal Forms section, Select Web, List and click &#8220;New List Form&#8221; button. It will create new Lists form for the Survey list and edit the settings to configure the NITRO forms for the Survey list. Configure the Portal form by drag and drop the columns and then publish the form. &nbsp; &#8220;Related Ticket ID&#8221; field in the Survey feedback form will be auto populated during the page load after clicking on the survey link, so make it a read-only field using column permissions in the portal. Select the Related Ticket ID column and configure the read only permission from Column Settings and click Publish the form like shown below &nbsp; Enable Survey Notifications: In our application on every Ticket completion Requester receives an auto notification which do not include Survey link. To include Survey link in mails on Ticket completion we need to configure mails using Workflow Manager app by disabling auto notifications to requester on Ticket completion. 1. Disable auto notifications to Requester on Ticket Close by following these instructions Open &#8216;Notification on Ticket Completion&#8217; list from Application Administration under &#8216;Notifications&#8217; section in backend site Uncheck &#8216;Notify Requester&#8217; checkbox in the list item with Title &#8216;Notification on Ticket Completion&#8217; 2. Configure Workflow Manager to send mail with Survey link to Requester on Ticket Close Open &#8216;Crow Canyon Workflow Manager&#8217; app from Application Administration under Crow Canyon NITRO Apps Configure Workflow with Send Mail action as shown below Send Mail action Mail Template configuration To configure &#8216;Survey Link&#8217; hyperlink, click on &#8216;Insert/Edit&#8217; link and configure as shown Example of URL &#8211; https://abc.sharepoint.com/sites/appl/itpro/Portal/SitePages/NewForm.aspx?lfid=4&amp;FormKey=Service Satisfaction Survey&amp;Related_x0020_Ticket_x0020_ID=[[ID || ID]] To copy portal &#8216;Survey Form&#8217; URL, Open &#8216;Portal Settings&#8217; &#8211;&gt; Portal Forms&#8211;&gt; Edit Service Satisfaction Survey list forms &#8211;&gt; Form Settings and copy the Survey form URL as shown below When a Ticket gets closed then Ticket Requester will receive a mail with Survey link. About supportTeam View all posts by supportTeam &rarr; 3 thoughts on &ldquo;Configure Survey from Portal in O365&rdquo; Jason says: August 30, 2018 at 11:00 am This article is out of date. Please update with the newest version of what your templates show. An example of an option that doesn&#8217;t show anymore would be in step 2, you say to select &#8220;New Form Page&#8221; as a form type, and this isn&#8217;t an option. Log in to Reply James Restivo says: August 30, 2018 at 1:12 pm Hi Jason, Thanks for your comment. We will update this FAQ as per your feedback. Thanks! Log in to Reply Crow Canyon Support says: September 22, 2018 at 2:30 pm This article is updated with steps and screenshots as per the latest Crow Canyon NITRO tools. Log in to Reply Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "196",
    "name": "196 - Auto Redirect page configuration in O365.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/196%20-%20Auto%20Redirect%20page%20configuration%20in%20O365.html",
    "title": "Auto Redirect Page Configuration In O365",
    "text": "Auto Redirect page configuration in O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto Redirect page configuration in O365 Auto Redirect page configuration in O365 1062 views Less than a minute 0 1.Add CrowCanyon Common Utilities app. Go to Site Contents &#8211;&gt;Add an app &#8211;&gt; CrowCanyon Common Utilities. 2.Open Crow Canyon Common Utilities &#8211;&gt; Activate Auto Redirect feature. 3.Download file from Workspaces List Id_Redirect page ID 4.From the downloaded file replace Urls of Manager and Staff workspace page urls. Go to Site contents&#8211;&gt;Workspaces &#8211;&gt;Copy the url of Manager Dashboard and Staff workspace page urls Replace the urls in file with Manager Dashboard and Staffworkspace page urls Rename the file with Workspaces List ID and Redirect page Id. Note: File name will be like: E477EC84-8E24-40DF-BEBF-43C99E6DA18C_20.xml For Redirect page Id: Go to &#8211;&gt;Site contents &#8211;&gt;Workspaces list &#8211;&gt; Tickets folder &#8211;&gt; find the ID of Redirect page Url 5. Edit the Redirect page &#8211;&gt;Add a webpart &#8211;&gt; add Content Editor webpart Edit Content Editor Webpart and give AutoRedirectScript.js file url in content lnk Go to Site Contents &#8211;&gt;Site Assets&#8211;&gt;CrowCayon &#8211;&gt; AutoRedirect &#8211;&gt; Copy the url of Auto RedirectScript.js file and fill it in Content editor link. 5.Upload the xml file into below path Go to Site contents &#8211;&gt; Site Assets &#8211;&gt; CrowCanyon &#8211;&gt; upload file in Auto Redirect folder. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "197",
    "name": "197 - Frequently asked questions on Configurable Portal.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/197%20-%20Frequently%20asked%20questions%20on%20Configurable%20Portal.html",
    "title": "Frequently Asked Questions On Configurable Portal",
    "text": "Frequently asked questions on Configurable Portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions on Configurable Portal Frequently asked questions on Configurable Portal 4810 views 4 min , 39 sec read 0 Normal 0 false false false EN-US X-NONE X-NONE Applies to: SharePoint Online and SharePoint On-Premises Frequently asked questions on Configurable Portal Normal 0 false false false EN-US X-NONE X-NONE 1. I was not able to get the copyright symbol into the footer. I tried using the html code, the html name code and copy and paste © . How do I add the copyright symbol? Ans: Follow these instructions to add copyright symbol Please go to Portal settings &#8211;&gt;Common UI Settings &#8211;&gt; Footer Section &#8211;&gt; configure Footer Text with copyright [C] symbol as specified below Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 2. How do I add new items under &#8221;Notifications&#8221; and &#8220;Other Links&#8221; section? Ans: Please go to Portal settings &#8211;&gt; Home Page Settings &#8211;&gt; click on &#8221; Notifications&#8221; and &#8221; Other Links&#8221; to configure notifications and other links respectively. Normal 0 false false false EN-US X-NONE X-NONE 3. How to configure Quick Links with default field values? Ans: Go to Portal settings &#8211;&gt; Home Page Settings &#8211;&gt; click on &#8220;Quick Links&#8221; to configure quick links respectively. Quick Links can be configured so that it auto fills Single Line Text field, Single Choice/Lookup type of controls in new form. URL format differs based on field type Single Line Text Field/Single Choice field &#8211; PortalFormURL&amp;FieldInternalName=&lt;&lt;Value&gt;&gt; Lookup field &#8211; PortalFormURL&amp;FieldInternalName=&lt;&lt;ID&gt;&gt; To see field internal name, go to backend site &#8211;&gt; Tickets list &#8211;&gt; List Settings &#8211;&gt; Edit the column and find internal name of the column at the end of the URL (see screenshot below) Note: Internal name should be case sensitive. Eg: i) Auto Fill &#8216;Priority&#8217; as &#8216;Normal&#8217; Click on &#8216;Manage Quick Links&#8217; link as shown above in Portal Settings and create/update an existing item as shown Output: When this Quick link is clicked, &#8216;Priority&#8217; value should get auto filled as &#8216;Normal&#8217; To copy portal form URL, select a portal form and click on edit icon and copy URL as shown below. ii) Auto fill &#8216;Category&#8217; and &#8216;Issue Type&#8217; fields with default values In a similar way as shown above, configure a quick link with Category as &#8216;Calendar&#8217; and Issue Type as &#8216;Remainders&#8217; by specifying their corresponding IDs Output: When this quick link is clicked, portal form gets opened with Category and Issue Type values as &#8216;Calendar&#8217; and &#8216;Reminder&#8217; 4. The Cancel button on the Submit New Ticket page navigates to View Submitted Tickets page. Is that the correct path? Ans: As per our application by default we configure it to &#8216;View Submitted Tickets&#8217; page when a Submit Ticket gets cancelled/saved. If you want to change it please go to Portal settings &#8211;&gt; Portal Forms &#8211;&gt; Edit &#8220;Tickets&#8221; form &#8212; &gt; Edit &#8220;Tickets&#8221; form &#8211;&gt; left side panel click on &#8220;Layouts and Theme&#8221; configure Save Button Redirect and Cancel Button Redirect Url. Normal 0 false false false EN-US X-NONE X-NONE 5. Configuration on &#8220;Other Links&#8221; is as shown When I click on an &#8220;Other Links&#8221; tile I am getting a blank page. Ans: As &#8220;PageDescription&#8221; in &#8220;Other Link&#8221; configurations is left blank (image 1). Please go to Portal settings &#8211;&gt; Home Page Settings &#8211;&gt; click on &#8220;Other Links&#8221; and edit link which is showing blank page and fill some description. Normal 0 false false false EN-US X-NONE X-NONE 6. &#8216;Contact Us&#8217; Link/Mailto link does not open Outlook it goes to the link specified below. What is the correct configuration? /Portal/SitePages/info@crowcanyon.com Ans: Configuration under &#8216;Contact Us&#8217; should be as mailto:emailaddress format. To check configuration please go to Portal settings &#8211;&gt; Common UI Settings &#8211;&gt; Footer Section &#8211;&gt; &#8216;Contact Us&#8217; Link/Mailto. If it is not as specified please update link under &#8216;Contact Us&#8217; and save settings. E.g., How to remove &#8220;Contact Us&#8221; from footer section? If we want to remove &#8220;Contact Us&#8221; from footer section set the value of contact us to a space (not blank, since that takes the default value) in Footer section of the portal settings. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 7. what are the image resolution sizes in portal? Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Logo: 150 x 150px Footer Logo: 230 x 50px Background Image: 1350 x 900px Page Icon: 135 x 125px Browser tab icon: 32 x 32px 8. How to configure security settings for end users in Portal? Please refer https://www.crowcanyon.help/article/248 to configure security settings for end users in portal 9. How to add fields into new/edit/display forms in Portal? Go to Portal site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Edit new/edit/display Form&#8211;&gt; Click on &#8220;Create column&#8221; and create column as per your requirement&#8211;&gt; Left side pane click on Form Controls and add that recently created column into the form. 10. How to configure Cascading functionality between three lookup columns in Portal? 1. We already have a Category and Issue Type cascading feature set up for the Tickets. Simply add another list in the Site, called &#8220;Issue&#8221;. 2. The Issue list needs to have a column for the Issue name (this can be the Title column renamed to &#8220;Issue&#8221;) and a standard SharePoint Lookup column for &#8220;Issue Type&#8221;. 3. Add an &#8220;Issue&#8221; column as a standard SharePoint Lookup column to the Tickets list. Go to Portal site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms&#8211;&gt; Edit Form&#8211;&gt; left side pane open Form Settings &#8211;&gt; click on Lookup Settings &#8211;&gt; Configure Cascading between Category, Issue Type and Issue like below. In an item in the Tickets, you will see three levels of cascading (assuming the three columns &#8212; Category, Issue Type, and Issue &#8212; have been added to the Ticket form). 11. How to configure Advanced lookup column settings in Portal? Go to Portal site &#8211;&gt; Portal Settings &#8211;&gt; Portal Pages &#8211;&gt; Edit Form &#8211;&gt; left side pane open Form Settings &#8211;&gt; click on Lookup Settings and configure the auto-fill lookup data like shown below The below configuration will auto populates the &#8220;Description&#8221; with &#8220;Template&#8221; field data (lookup list column). Note: If we don&#8217;t want to configure the cascaded lookup settings then leave the settings and configure the column mapping. 12. How to add/modify the banner image in the Portal? i. Add Banner image to the Portal site: Prepare the banner image (690&#215;120 px) and save it with the name as banner.png Step1 : Go to Portal site, say https://&#8230;./Portal/SitePages/Index.aspx be the URL of th Portal site Step2 : Edit the URL manually and go to Portal Site Contents, URL will be like: https://&#8230;./Portal/_layouts/15/viewlsts.aspx Step3 : Go to Site Assets Document Library &#8211;&gt; Portal Folder &#8211;&gt; upload the image in this folder with the name as banner.png The added image will be applied as the banner image in the Portal. ii. To modify the Banner image, plesae go to Step3 and upload the new banner.png file and replace on prompt. iii.If we want to remove the banner image from the portal, then delete the banner.png file from the Portal folder Portal Page before uploading the banner: Portal Page after uploading the banner: 13. How to change the default landing page in Crow Canyon configurable portal? Go to Portal settings &#8211;&gt; Home page settings &#8211;&gt; Select the required page in &#8220;Start Page&#8221; drop down and save the settings (Knowledge Base page is selected in the sample screenshot below). 14. How to modify the Email icon in the footer? It is directly not possible to modify the mail icon in footer section. Go to Portal site (URL: https://contoso.sharepoint.com/sites/demo/itpremium/portal/SiteAssets) -&gt; Site Assets -&gt; Portal folder -&gt; Images -&gt; rename the icon that you want to upload in place of mail icon to &#8220;contactus.png&#8221; and upload it in this folder. Icon resolution: 20 x 20 15. How to change the Portal logo? Go to Portal Settings &#8211;&gt; Common UI Settings &#8211;&gt; Header Section &#8211;&gt; Select the logo image (150 X 150 px). Click &#8216;Upload Image&#8217; and Save the settings as shown below: 16. How to modify the page &#8220;Title&#8221; and &#8220;Description&#8221; in portal forms? Go to Portal Settings &#8211;&gt; Portal Forms -&gt; Edit Tickets list forms. This will open the NITRO forms designer. Modify the “Page Title”, “Page Description” in “Layouts and Theme” section and then publish the NITRO forms. Note: If these settings are not visible in the forms designer, please upgrade the portal site using Crow Canyon Power Portal App and try again. To upgrade portal, go to Application Administration in back-end site &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Power Portal App. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "198",
    "name": "198 - Configuration of Click availability for CaseId.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/198%20-%20Configuration%20of%20Click%20availability%20for%20CaseId.html",
    "title": "Configuration Of Click Availability For CaseId",
    "text": "Configuration of Click availability for CaseId - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configuration of Click availability for CaseId Configuration of Click availability for CaseId 1549 views Less than a minute 0 1.Open SharePoint Designer &#8211;&gt; Open Site and give site url 2.Open Lists and Libraries and Open Tickets list 3.Go to Views section and click on &#8216;Default view&#8217; 4.Add&nbsp; linkToItem=&quot;TRUE&quot; &nbsp; property to CaseId 5. Go to Site and check click availability for CaseId &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "199",
    "name": "199 - Configurations on User Information List.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/199%20-%20Configurations%20on%20User%20Information%20List.html",
    "title": "Configurations On User Information List",
    "text": "Configurations on User Information List - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configurations on User Information List Configurations on User Information List 1384 views Less than a minute 0 Configure permissions on User Information list Configurations on User Information List: 1. Go to Site Collection/Root site settings and open &#8216;People and Group&#8217; under &#8216;Users and Permissions&#8217; sections as shown (logged in user should be Site Collection administrator) 2. Under &#8216;Settings&#8217; dropdown click on &#8216;List Settings&#8217; as shown Set Permissions on List: 1. Under &#8216;Permissions and Management&#8217; click on &#8216;Permissions for this list&#8217; 2. Click on &#8216;Grant Permissions&#8217; under &#8216;Permissions&#8217; tab in ribbon and provide &#8216;Read&#8217; permissions to &#8216;Everyone&#8217; as shown How to know field Internal Name? To know internal name of a field open field settings in Google Chrome browser and at the end of URL we can find field internal name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "2",
    "name": "2 - Default User Profile Properties.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/2%20-%20Default%20User%20Profile%20Properties.html",
    "title": "Default User Profile Properties",
    "text": "Default User Profile Properties - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Default User Profile Properties Default User Profile Properties 1494 views Less than a minute 0 Details of default user profile properties Table of Default Profile properties: Displayname Name Value Section: Basic Information Id UserProfile_GUID &nbsp; SID SID &nbsp; Active Directory Id ADGuid &nbsp; Account name AccountName &nbsp; First name FirstName &nbsp; Phonetic First Name SPS-PhoneticFirstName &nbsp; Last name LastName &nbsp; Phonetic Last Name SPS-PhoneticLastName &nbsp; Name PreferredName &nbsp; Phonetic Display Name SPS-PhoneticDisplayName &nbsp; Work phone WorkPhone &nbsp; Department Department &nbsp; Title Title &nbsp; Job Title SPS-JobTitle &nbsp; Manager Manager &nbsp; About me AboutMe &nbsp; Personal site PersonalSpace &nbsp; Picture PictureURL &nbsp; User name UserName &nbsp; Quick links QuickLinks &nbsp; Web site WebSite &nbsp; Public site redirect PublicSiteRedirect &nbsp; Data source SPS-DataSource &nbsp; MemberOf SPS-MemberOf &nbsp; Dotted-line Manager SPS-Dotted-line &nbsp; Peers SPS-Peers &nbsp; Ask Me About SPS-Responsibility &nbsp; SIP Address SPS-SipAddress &nbsp; My Site Upgrade SPS-MySiteUpgrade &nbsp; Don&rsquo;t Suggest List SPS-DontSuggestList &nbsp; Proxy addresses SPS-ProxyAddresses &nbsp; Hire date SPS-HireDate &nbsp; Display Order SPS-DisplayOrder &nbsp; Claim User Identifier SPS-ClaimID &nbsp; Claim Provider Identifier SPS-ClaimProviderID &nbsp; Claim Provider Type SPS-ClaimProviderType &nbsp; Last Colleague Added SPS-LastColleagueAdded &nbsp; Outlook Web Access URL SPS-OWAUrl &nbsp; Saved Account Name SPS-SavedAccountName &nbsp; Saved SID SPS-SavedSID &nbsp; Resource Forest SID SPS-ResourceSID &nbsp; Resource Forest Account Name SPS-ResourceAccountName &nbsp; Object Exists SPS-ObjectExists &nbsp; Master Account Name SPS-MasterAccountName &nbsp; Distinguished Name SPS-DistinguishedName &nbsp; Source Object Distinguished Name SPS-SourceObjectDN &nbsp; Last Keyword Added SPS-LastKeywordAdded &nbsp; Section: Contact Information Work e-mail WorkEmail &nbsp; Mobile phone CellPhone &nbsp; Fax Fax &nbsp; Home phone HomePhone &nbsp; Office Office &nbsp; Office Location SPS-Location &nbsp; Time Zone SPS-TimeZone &nbsp; Assistant Assistant &nbsp; Section: Details Past projects SPS-PastProjects &nbsp; Skills SPS-Skills &nbsp; Schools SPS-School &nbsp; Birthday SPS-Birthday &nbsp; Status Message SPS-StatusNotes &nbsp; Section: Delegation Section: Newsfeed Settings Interests SPS-Interests &nbsp; Email Notifications SPS-EmailOptin &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "20",
    "name": "20 - Default User Profile Properties.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/20%20-%20Default%20User%20Profile%20Properties.html",
    "title": "Default User Profile Properties",
    "text": "Default User Profile Properties - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Default User Profile Properties Default User Profile Properties 1494 views Less than a minute 0 Details of default user profile properties Table of Default Profile properties: Displayname Name Value Section: Basic Information Id UserProfile_GUID &nbsp; SID SID &nbsp; Active Directory Id ADGuid &nbsp; Account name AccountName &nbsp; First name FirstName &nbsp; Phonetic First Name SPS-PhoneticFirstName &nbsp; Last name LastName &nbsp; Phonetic Last Name SPS-PhoneticLastName &nbsp; Name PreferredName &nbsp; Phonetic Display Name SPS-PhoneticDisplayName &nbsp; Work phone WorkPhone &nbsp; Department Department &nbsp; Title Title &nbsp; Job Title SPS-JobTitle &nbsp; Manager Manager &nbsp; About me AboutMe &nbsp; Personal site PersonalSpace &nbsp; Picture PictureURL &nbsp; User name UserName &nbsp; Quick links QuickLinks &nbsp; Web site WebSite &nbsp; Public site redirect PublicSiteRedirect &nbsp; Data source SPS-DataSource &nbsp; MemberOf SPS-MemberOf &nbsp; Dotted-line Manager SPS-Dotted-line &nbsp; Peers SPS-Peers &nbsp; Ask Me About SPS-Responsibility &nbsp; SIP Address SPS-SipAddress &nbsp; My Site Upgrade SPS-MySiteUpgrade &nbsp; Don&rsquo;t Suggest List SPS-DontSuggestList &nbsp; Proxy addresses SPS-ProxyAddresses &nbsp; Hire date SPS-HireDate &nbsp; Display Order SPS-DisplayOrder &nbsp; Claim User Identifier SPS-ClaimID &nbsp; Claim Provider Identifier SPS-ClaimProviderID &nbsp; Claim Provider Type SPS-ClaimProviderType &nbsp; Last Colleague Added SPS-LastColleagueAdded &nbsp; Outlook Web Access URL SPS-OWAUrl &nbsp; Saved Account Name SPS-SavedAccountName &nbsp; Saved SID SPS-SavedSID &nbsp; Resource Forest SID SPS-ResourceSID &nbsp; Resource Forest Account Name SPS-ResourceAccountName &nbsp; Object Exists SPS-ObjectExists &nbsp; Master Account Name SPS-MasterAccountName &nbsp; Distinguished Name SPS-DistinguishedName &nbsp; Source Object Distinguished Name SPS-SourceObjectDN &nbsp; Last Keyword Added SPS-LastKeywordAdded &nbsp; Section: Contact Information Work e-mail WorkEmail &nbsp; Mobile phone CellPhone &nbsp; Fax Fax &nbsp; Home phone HomePhone &nbsp; Office Office &nbsp; Office Location SPS-Location &nbsp; Time Zone SPS-TimeZone &nbsp; Assistant Assistant &nbsp; Section: Details Past projects SPS-PastProjects &nbsp; Skills SPS-Skills &nbsp; Schools SPS-School &nbsp; Birthday SPS-Birthday &nbsp; Status Message SPS-StatusNotes &nbsp; Section: Delegation Section: Newsfeed Settings Interests SPS-Interests &nbsp; Email Notifications SPS-EmailOptin &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "200",
    "name": "200 - Default User Profile Properties.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/200%20-%20Default%20User%20Profile%20Properties.html",
    "title": "Default User Profile Properties",
    "text": "Default User Profile Properties - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Default User Profile Properties Default User Profile Properties 1494 views Less than a minute 0 Details of default user profile properties Table of Default Profile properties: Displayname Name Value Section: Basic Information Id UserProfile_GUID &nbsp; SID SID &nbsp; Active Directory Id ADGuid &nbsp; Account name AccountName &nbsp; First name FirstName &nbsp; Phonetic First Name SPS-PhoneticFirstName &nbsp; Last name LastName &nbsp; Phonetic Last Name SPS-PhoneticLastName &nbsp; Name PreferredName &nbsp; Phonetic Display Name SPS-PhoneticDisplayName &nbsp; Work phone WorkPhone &nbsp; Department Department &nbsp; Title Title &nbsp; Job Title SPS-JobTitle &nbsp; Manager Manager &nbsp; About me AboutMe &nbsp; Personal site PersonalSpace &nbsp; Picture PictureURL &nbsp; User name UserName &nbsp; Quick links QuickLinks &nbsp; Web site WebSite &nbsp; Public site redirect PublicSiteRedirect &nbsp; Data source SPS-DataSource &nbsp; MemberOf SPS-MemberOf &nbsp; Dotted-line Manager SPS-Dotted-line &nbsp; Peers SPS-Peers &nbsp; Ask Me About SPS-Responsibility &nbsp; SIP Address SPS-SipAddress &nbsp; My Site Upgrade SPS-MySiteUpgrade &nbsp; Don&rsquo;t Suggest List SPS-DontSuggestList &nbsp; Proxy addresses SPS-ProxyAddresses &nbsp; Hire date SPS-HireDate &nbsp; Display Order SPS-DisplayOrder &nbsp; Claim User Identifier SPS-ClaimID &nbsp; Claim Provider Identifier SPS-ClaimProviderID &nbsp; Claim Provider Type SPS-ClaimProviderType &nbsp; Last Colleague Added SPS-LastColleagueAdded &nbsp; Outlook Web Access URL SPS-OWAUrl &nbsp; Saved Account Name SPS-SavedAccountName &nbsp; Saved SID SPS-SavedSID &nbsp; Resource Forest SID SPS-ResourceSID &nbsp; Resource Forest Account Name SPS-ResourceAccountName &nbsp; Object Exists SPS-ObjectExists &nbsp; Master Account Name SPS-MasterAccountName &nbsp; Distinguished Name SPS-DistinguishedName &nbsp; Source Object Distinguished Name SPS-SourceObjectDN &nbsp; Last Keyword Added SPS-LastKeywordAdded &nbsp; Section: Contact Information Work e-mail WorkEmail &nbsp; Mobile phone CellPhone &nbsp; Fax Fax &nbsp; Home phone HomePhone &nbsp; Office Office &nbsp; Office Location SPS-Location &nbsp; Time Zone SPS-TimeZone &nbsp; Assistant Assistant &nbsp; Section: Details Past projects SPS-PastProjects &nbsp; Skills SPS-Skills &nbsp; Schools SPS-School &nbsp; Birthday SPS-Birthday &nbsp; Status Message SPS-StatusNotes &nbsp; Section: Delegation Section: Newsfeed Settings Interests SPS-Interests &nbsp; Email Notifications SPS-EmailOptin &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "201",
    "name": "201 - Crow Canyon license manager shows expired error message in Central Administration in SP 2010 _ SP 20.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/201%20-%20Crow%20Canyon%20license%20manager%20shows%20expired%20error%20message%20in%20Central%20Administration%20in%20SP%202010%20_%20SP%2020.html",
    "title": "Crow Canyon License Manager Shows Expired Error Message In Central Administration In SP 2010 SP 20",
    "text": "Crow Canyon license manager shows expired error message in Central Administration in SP 2010 / SP 2013 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon license manager shows expired error message in Central Administration in SP 2010 / SP 2013 Crow Canyon license manager shows expired error message in Central Administration in SP 2010 / SP 2013 951 views Less than a minute 0 False license expiry message in Crow Canyon License Manager Error shown is:&nbsp; &quot;Warning: Your product has expired and will stop working in 0 days&quot; 1. This is just a false message shown in Central Administration. Product is licensed correctly and will continue to work with full features. This issue is fixed in latest Crow Canyon License manager solution. 2. Please download the latest solution from Attachments and upgrade the solution in your environment 3. Below are the instructions to upgrade the solution using STSADM command. Open Command Prompt (Run as administration) Enter command like below: C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\14\\BIN\\stsadm.exe &ndash;o upgradesolution &ndash;name &ldquo;CrowCanyon.LicenseManager.wsp&rdquo; &ndash;filename &quot;&#8230;..Filepath&#8230;.\\CrowCanyon.LicenseManager.wsp&rdquo; &ndash;immediate -allowgacdeployment 4. Go to SharePoint Central Administration &#8211;&gt;System Settings &#8211;&gt; Manage form solutions &#8211;&gt; Wait until the CrowCanyon license manager solution is deployed. 5. Open CrowCanyon license manager (Central Administration&#8211;&gt;System Settings&#8211;&gt;CrowCanyon License Manager), you should see the status in active state. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "203",
    "name": "203 - User properties Update in SharePoint.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/203%20-%20User%20properties%20Update%20in%20SharePoint.html",
    "title": "User Properties Update In SharePoint",
    "text": "User properties Update in SharePoint - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / User properties Update in SharePoint User properties Update in SharePoint 1230 views Less than a minute 0 There are couple of ways to update the user properties manually in SharePoint 1. Go to any SharePoint list and click on the user from a Person/Group field. It will redirect to the SharePoint profile of the user. Edit the item and update the latest properties. 2. Remove the user from Site Collection and added back again, the user account will be added with new properties from AD to the Site Collection. If you follow this option, Make sure that the user account is added back into all the SharePoint groups he was part of. Follow below procedure &#8211; Go to Site Settings of root site and open &#8216;Site Permissions&#8217; under &#8216;Users and Permissions&#8221; &#8211; Click on &#8216;Check Permissions&#8217; and Enter name of the user whose account is going to delete from SharePoint &#8211; Note the groups containing this user. &#8211; Go to Site Settings of root site and select &#8216;People and Groups&#8217; under &#8216;Users and Permissions&#8217; &#8211; Select any group and in page URL change Membership group id to 0 E.g: http://ccssrv12sp13/sites/ARA/_layouts/15/start.aspx#/_layouts/15/people.aspx ?MembershipGroupId=0 &#8211; Select the User Click on Delete User from Site Collection &#8211; Check whether the user is deleted from the noted groups. &#8211; To Re-add user to the groups, open Site Settings in root site and &#8216;People and Groups&#8217; and select a group and add user as shown below. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "204",
    "name": "204 - Crow Canyon Excel-to-SharePoint Import tool.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/204%20-%20Crow%20Canyon%20Excel-to-SharePoint%20Import%20tool.html",
    "title": "Crow Canyon Excel To SharePoint Import Tool",
    "text": "Crow Canyon Excel-to-SharePoint Import tool - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Excel-to-SharePoint Import tool Crow Canyon Excel-to-SharePoint Import tool 4340 views 3 min , 40 sec read 33 Import Data from Excel to SharePoint List Items Applies to: SharePoint Online and On-premises Crow Canyon Excel-to-SharePoint import tool This tool provides a UI where you can select the source Excel file and the target SharePoint list and then map the Excel columns to SharePoint list fields. The tool will r ead information from the Excel file and create, update, or delete items in the selected SharePoint list as per the field mappings. Please refer to the Notes section at the end for guidelines on data for specific types of SharePoint columns. Key Capabilities: 1. Create items in SharePoint list based on Excel file data. Map Excel file columns to SharePoint list items fields. 2. Update existing list items in a SharePoint list based on key field mapping. Create new item if no match found per key field mapping 3. Delete SharePoint list items based on key field mappings. Instructions to CREATE items in SharePoint list using Excel-to-SharePoint Import tool 1. Download &#8220;Excel-to-SharePoint import tool&#8221; from ExcelToSharePoint Import tool 2. Prepare an Excel sheet with the data you want to move into&nbsp; SharePoint. The Import Tool can only read the first worksheet in the Excel file. The first row in the Excel sheet should have the column titles. 3. Unzip the download and copy the tool to one of the local drives of a computer where Excel is installed. Right click on the tool, open Properties and click on Unblock in the Security section towards the bottom. Click OK to close the Properties screen. 4. To run, right-click on &#8220;CrowCanyon.ExcelToSharePointTool.exe&#8221; and choose &#8220;Run as administrator&#8221;. 5. Fill the text boxes as shown in screenshot below. Source Excel: Browse to the Excel file that has the data to import Site URL: Enter the site URL that has the SharePoint list in to which the data will be imported List Name: Enter list name of where the data will be imported Domain: Enter domain name (leave blank if on Office 365) User Name: Enter user name Password: Enter password Use Network Credentials: Check this box for On-prem sites, but leave unchecked for Office 365 Attachments Location: If one of the Excel sheet columns has attachment locations, select that column from &#8220;Source Excel titles&#8221; list box and click &#8220;Include Attachments&#8221; button. Unique Key mapping: If the Excel file has data that was already imported and you want to update the data, select a column mapping from &#8220;Mapping Definitions&#8221; list box and click &#8220;Import Key Definition&#8221; button. Make sure that this column has unique identifier value in Excel. If this is configured, our tool will first verify if SharePoint list already has an item with that unique field value in Excel column, and will update the matching SharePoint list item. If no match is found, it will create a new item. 6. After making all the selections needed, click on &#8220;Load/Reload&#8221; button. It will load Excel column names and SharePoint list fields in to the corresponding list boxes 7. Map the fields as to how you want to import the data 8. After mapping, click on &#8220;Create/Update List Items&#8221; button Instructions to UPDATE items in SharePoint list using Excel-to-SharePoint Import tool 1. Run Crow Canyon Excel To SharePoint Tool (Run as Administrator). 2. Browse to find the Excel sheet that has data for SharePoint items to update. In Excel sheet, there should be a column with values to uniquely identify items in SharePoint. For example, a column with value of unique Id of each item in SharePoint. 3. Provide required details Site URL, List Name, User Name and Password and click &#8220;Reload&#8221;. 4. Select a Unique Key Mapping definition so that it will fetch the SharePoint list items based on Unique key. See below image, in this example CaseId is the Unique key mapping in Excel and SharePoint list to fetch the items. 5. Click &#8220;Create/Update List Items&#8221; which will update all the SharePoint list items matching from Excel sheet with given field mappings . Instructions to DELETE items from SharePoint list using Excel-to-SharePoint import tool 1. Run Crow Canyon Excel To SharePoint Tool (Run as Administrator). 2. Browse to find the Excel sheet that has data for SharePoint items to delete. In Excel sheet, there should be a column with values to uniquely identify items in SharePoint. For example, a column with value of unique Id of each item in SharePoint. 3. Provide required details Site URL, List Name, User Name and Password and click &#8220;Reload&#8221;. 4. Select a Unique Key Mapping definition so that it will fetch the SharePoint list items based on Unique key. See below image, in this example CaseId is the Unique key mapping in Excel and SharePoint list to fetch the items. 5. Click &#8220;Delete List Items&#8221; which will delete all the SharePoint list items matching from Excel sheet. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Usage notes and troubleshooting hints Excel-to-SharePoint tool needs an Excel file that has single sheet of the data First row contains the titles and data is from second row onwards There should be no blank rows/columns at the end of the excel sheet data There should be no duplicate column headers in the excel file content Data needs to be in the simple text format (Rich text/colors etc. may break the import functionality) If we are mapping any Excel file column to a SharePoint &#8220;Lookup&#8221; field, make sure that all possible options exist in the lookup list in SharePoint. Otherwise, tool cannot resolve lookup column value and that will leads to missing value for that column in SharePoint item Similarly, if the target field is choice field, make sure the choice field options in SharePoint has all possible values For any Excel column that is mapped to SharePoint person or group column type, tool supports two different types of values of the user. One, display name and second, login name(domain\\login). If the value in the Excel is the display name of the user in SharePoint, then it is case sensitive so make sure that value is proper. In either case, there should be no extra spaces before/after the value in Excel. If you have configured Multi-Factor Authentication for SharePoint or Office 365, it does not allow Office client applications to access SharePoint with regular password. Please refer this article to create app passwords and connect to the tool with new password. In case of using Modern Authentication for O365 SharePoint, above tool will not work, please refer this article to import list items from CSV using NITRO Workflows. SharePoint Default fields like &#8220;Created&#8221;, &#8220;Created By&#8221;, &#8220;Modified&#8221;, &#8220;Modified By&#8221; and &#8220;ID&#8221; are not supported in field mappings of this tool. These are special fields that are updated by SharePoint automatically when item is created/modified About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "205",
    "name": "205 - Ticket and Assignment Actions_ Not allowed to perform this action message appears when try to using.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/205%20-%20Ticket%20and%20Assignment%20Actions_%20Not%20allowed%20to%20perform%20this%20action%20message%20appears%20when%20try%20to%20using.html",
    "title": "Ticket And Assignment Actions Not Allowed To Perform This Action Message Appears When Try To Using",
    "text": "Ticket and Assignment Actions: Not allowed to perform this action message appears when try to using them - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Ticket and Assignment Actions: Not allowed to perform this action message appears when try to using them Ticket and Assignment Actions: Not allowed to perform this action message appears when try to using them 969 views Less than a minute 0 Applies to: SharePoint 2013/2016/SharePoint Server Subscription Edition Product Version: CrowCanyon Product V3.7 1. As per the default configurations, Actions can be executed only by Assigned Staff of the ticket. To change this permission, Go to Site contetns &#8211;&gt; Workspaces document library &#8211;&gt; Action Executor.aspx page Edit the Action Executor.aspx page and edit &#8220;CCSAction Executor&#8221; webpart. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Example to add multiple Group Names: Helpdesk Owners Helpdesk Members Example to add multiple Person Field Names: Assigned Staff Requester Above Screenshot has the settings i.e. actions can be executed only if the user is part of &#8220;Helpdesk Owners&#8221; SharePoint group or Assigned Staff of the current ticket. If you want to allow anyone to execute these actions, remove/clear &#8220;Group Names&#8221; and &#8220;Person Field Names&#8221; text boxes and save. 2. Similarly to modify permissions of Assignment Actions, go to &#8220;Assignment Actions Executor.aspx&#8221; page and follow above procedure. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "208",
    "name": "208 - Portal Form controls are not loading in I.E., how to resolve_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/208%20-%20Portal%20Form%20controls%20are%20not%20loading%20in%20I.E.%2C%20how%20to%20resolve_.html",
    "title": "Portal Form Controls Are Not Loading In I.E., How To Resolve",
    "text": "Portal Form controls are not loading in I.E., how to resolve? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Portal Form controls are not loading in I.E., how to resolve? Portal Form controls are not loading in I.E., how to resolve? 942 views Less than a minute 0 This issue may happen because of&nbsp; &quot;Default Document Mode&quot; in IE browser. Note: Please make sure that you have latest portal in your SharePoint site. If you are in old version then upgrade to latest portal, please contact Sharepointsupport AT crowcanyon.com for latest portal solution. If the issue is still persists then it can be fixed by changing the &quot;Default Document Mode&quot; of I.E. in Portal master page. Find the right document mode for your environment: Open I.E. deverloper tools (F12), go to Emulation tab, change the &quot;Document mode&quot; from one to other and find the appropriate value (IE10/11/Edge) that supports showing controls in your environment. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Resolution Steps: Go to Portal site &#8211;&gt; Site settings &#8211;&gt; Master Pages (under Web Designer Galleries) &#8211;&gt; download CCSPortal.master page and edit with notepad (Take a backup). Edit CCSPortal.master page with notepad and change the IE mode to right value (10/11/Edge) that is found earlier in F12 tool and save the file. After changing the master page, upload it in Master Page Galleries. Now you can able to see all the fields in Portal forms in IE browser. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "209",
    "name": "209 - How to configure ‘User Information_Requester Properties’ in portal pages_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/209%20-%20How%20to%20configure%20%E2%80%98User%20Information_Requester%20Properties%E2%80%99%20in%20portal%20pages_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Configure ‘User Information Requester Properties’ In Portal Pages Crow Canyon Software Sup",
    "text": "How to configure ‘User Information/Requester Properties’ in portal pages? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure &#8216;User Information/Requester Properties&#8217; in portal pages? How to configure &#8216;User Information/Requester Properties&#8217; in portal pages? 1228 views 1 min , 7 sec read 1 1. To configure &#8216;User Information&#8217; settings, open &#8216;Portal settings&#8217; page,&nbsp; select page type as &#8216;New Form Page&#8217; under &#8216;Portal Pages&#8217; section. Edit an existing page and configure User Information settings under &#8216;Auto-fill Form Columns&#8217; section as shown below. By using these three options we can configure auto-fill of &#8216;User Information&#8217; settings &nbsp;&nbsp;&nbsp;&nbsp; 1. User Information List &#8211; For On-Premises sites &nbsp;&nbsp;&nbsp;&nbsp; 2. User Profile &#8211; For Online and On-Premises Enterprise/Standard version &nbsp;&nbsp;&nbsp;&nbsp; 3. Custom User List User Information List: To configure user properties in On-Premises we have to select &#8216;User Information List&#8217; under &#8216;Get Information From&#8217; and click &#8216;New Mapping&#8217; to create field mappings as shown below To auto populate user information based on logged in user: To auto populate user information based on User column: User Information Column Mapping Select a column from the Form &nbsp; Select a user property from the &#8216;User Information&#8217; list Note: To know how to find Internal name of a field created in &#8216;User Information List&#8217; refer ConfigurationsonUserInformationList Select &#8216;Read Only&#8217; checkbox if the selected column neeed to be a readonly field in the form and save settings. In the similar way create different field mappings in the form. For example, we have configured &#8216;Requester&#8217; related fields with user information settings to auto-fill on&nbsp; as shown below Now when new form page is opened in portal all details related to logged in user will gets auto-populated in the &#8216;Requester&#8217; related fields as shown below. &nbsp; Note: All users must have read permissions on SharePoint User Information list for auto -fill. To know how to configure permissions on &#8216;User Information List&#8217; refer under &#8216;Set Permissions on List&#8217; section in ConfigurationsonUserInformationList User Profile: Configure auto fill user properties in a similar way as shown under &#8216;User Information List&#8217; section . To configure &#8216;Other Properties&#8217; specify values under &#8216;Name&#8217; column from the table DefaultUserProfileProperties . Note: In Configurable Portal we support field mappings of data from User Profile to simple fields like Single Line Text fields. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "21",
    "name": "21 - How to configure Portal Theme settings and how to upload own theme css file_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/21%20-%20How%20to%20configure%20Portal%20Theme%20settings%20and%20how%20to%20upload%20own%20theme%20css%20file_.html",
    "title": "How To Configure Portal Theme Settings And How To Upload Own Theme Css File",
    "text": "How to configure Portal Theme settings and how to upload own theme css file? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Power Portal / How to configure Portal Theme settings and how to upload own theme css file? How to configure Portal Theme settings and how to upload own theme css file? 3513 views 1 min , 2 sec read 2 Applies To: SharePoint On-Premises and SharePoint Online There are two ways of creating new portal themes. Copy the settings from existing theme Start creating a new theme from scratch To copy from existing theme, go to Portal Settings&#8211;&gt; Portal Theme section &#8211;&gt; Click on Copy button as shown below. Note: Providing spaces in the theme name is not supported. General Layout: The color changes in the above theme setting page will be applied in Portal Header Section. See sample screenshot below Home Page: The Home page colors configured in the portal theme are overridden by the Portal Home page settings (Portal Settings &#8211;&gt; Home Page Settings &#8211;&gt; Quick Links/Other Links). For more details, please click here . Form Page: The Form Page color settings will be applicable for the New/Edit/Display forms in the portal. See sample settings screenshot below See sample result below Note: If we configure the Theme in Portal Forms (Designer surface), Portal Forms theme settings takes precedence and above Form Page configurations will be overridden by Form settings. Other configurable areas: Please go to Portal Settings &#8211;&gt; Home Page Settings &#8211;&gt; select the Quick Links/Other Links/Notifications section and configure the desired colors for the header/text as needed. Quick Links: Result: Other Links: Result: To configure portal theme from scratch, click on &#8220;Create Theme&#8221; button in the Portal theme section and set the desired colors as needed. After configuring the colors in &#8220;Configure New Theme&#8221; panel generates a css file in Theme folder in Site Assets document library of the Portal site. (Url will be like : /Portal/SiteAssets/Theme) The css file in that folder will be used by the Portal pages. You can refer one of the css file in that folder and create your own css, but it would be easier if you use &#8220;Configure New Theme&#8221; panel. Branding Portal Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Building an Application Portal Using Web Parts NITRO Studio Workshop: Evolution of NITRO Portals Introduction to Power Portals in NITRO Studio Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "210",
    "name": "210 - How to configure Portal Theme settings and how to upload own theme css file_ - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/210%20-%20How%20to%20configure%20Portal%20Theme%20settings%20and%20how%20to%20upload%20own%20theme%20css%20file_%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Configure Portal Theme Settings And How To Upload Own Theme Css File Crow Canyon Software",
    "text": "How to configure Portal Theme settings and how to upload own theme css file? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Power Portal / How to configure Portal Theme settings and how to upload own theme css file? How to configure Portal Theme settings and how to upload own theme css file? 3513 views 1 min , 2 sec read 2 Applies To: SharePoint On-Premises and SharePoint Online There are two ways of creating new portal themes. Copy the settings from existing theme Start creating a new theme from scratch To copy from existing theme, go to Portal Settings&#8211;&gt; Portal Theme section &#8211;&gt; Click on Copy button as shown below. Note: Providing spaces in the theme name is not supported. General Layout: The color changes in the above theme setting page will be applied in Portal Header Section. See sample screenshot below Home Page: The Home page colors configured in the portal theme are overridden by the Portal Home page settings (Portal Settings &#8211;&gt; Home Page Settings &#8211;&gt; Quick Links/Other Links). For more details, please click here . Form Page: The Form Page color settings will be applicable for the New/Edit/Display forms in the portal. See sample settings screenshot below See sample result below Note: If we configure the Theme in Portal Forms (Designer surface), Portal Forms theme settings takes precedence and above Form Page configurations will be overridden by Form settings. Other configurable areas: Please go to Portal Settings &#8211;&gt; Home Page Settings &#8211;&gt; select the Quick Links/Other Links/Notifications section and configure the desired colors for the header/text as needed. Quick Links: Result: Other Links: Result: To configure portal theme from scratch, click on &#8220;Create Theme&#8221; button in the Portal theme section and set the desired colors as needed. After configuring the colors in &#8220;Configure New Theme&#8221; panel generates a css file in Theme folder in Site Assets document library of the Portal site. (Url will be like : /Portal/SiteAssets/Theme) The css file in that folder will be used by the Portal pages. You can refer one of the css file in that folder and create your own css, but it would be easier if you use &#8220;Configure New Theme&#8221; panel. Branding Portal Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Building an Application Portal Using Web Parts NITRO Studio Workshop: Evolution of NITRO Portals Introduction to Power Portals in NITRO Studio Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "211",
    "name": "211 - Frequently asked questions in Configurable Employee Portal.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/211%20-%20Frequently%20asked%20questions%20in%20Configurable%20Employee%20Portal.html",
    "title": "Frequently Asked Questions In Configurable Employee Portal",
    "text": "Frequently asked questions in Configurable Employee Portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions in Configurable Employee Portal Frequently asked questions in Configurable Employee Portal 1027 views 1 min , 10 sec read 0 Master FAQ of Portal settings Applies to: SharePoint Online and SharePoint On-Premises 1. How to configure &copy; copyright symbol in the Portal Please refer #1 from https://www.crowcanyon.help/article/197 2. How to add new items under &quot;Notifications&quot; and &quot;Other Links&quot; section? Please refer #2 from https://www.crowcanyon.help/article/197 3. How to configure Quick Links with default field values? Please refer #3 from https://www.crowcanyon.help/article/197 4. The Cancel button on the Submit New Ticket page navigates to View Submitted Tickets page. Is that the correct path? Please refer #4 from https://www.crowcanyon.help/article/197 5. Other Links not having any data? Please refer #5 from https://www.crowcanyon.help/article/197 6. &#8216;Contact us&#8217; Link/Mailto link does not open Outlook, it goes to other link. What is the correct configuration? Please refer #6 from https://www.crowcanyon.help/article/197 7. What are the image resolution sizes in Portal? Please refer #7 from https://www.crowcanyon.help/article/197 8. How to configure Security settings for end uses in the Portal? Please refer https://www.crowcanyon.help/article/248 9. How to add fields into new/edit/display forms in the Portal? Please refer #9 from https://www.crowcanyon.help/article/197 10. How to configure cascading funcitonality between three lokkup columns in Portal? Please refer #10 from https://www.crowcanyon.help/article/197 11. How to configure Advanced lookup column settings in Portal? Please refer #11 from https://www.crowcanyon.help/article/197 12. How to add/modify the banner image in the Portal? Please refer #12 from https://www.crowcanyon.help/article/197 13. How to configure &#8216;User Information/Requester Properties&#8217; in Portal pages? To configure requester details auto populate in ticket new form refer https://www.crowcanyon.help/article/209 14. How to configure Portal Theme settings and how to upload own theme css files? To configure Portal Theme settings refer: https://www.crowcanyon.help/article/210 15. Issue: Requester details are not populating in Configurable Portal To populate Requester details please refer: https://www.crowcanyon.help/article/212 16. Issue: How to configure Portal forms to open in dialog mode? To configure the list ticket forms, search KB forms to open in dialog mode in the Portal pages, please refer https://www.crowcanyon.help/article/352 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "212",
    "name": "212 - Requester Details are not populating in Configurable Portal.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/212%20-%20Requester%20Details%20are%20not%20populating%20in%20Configurable%20Portal.html",
    "title": "Requester Details Are Not Populating In Configurable Portal",
    "text": "Requester Details are not populating in Configurable Portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Requester Details are not populating in Configurable Portal Requester Details are not populating in Configurable Portal 1126 views Less than a minute 0 Issue: Requester details are not populating in configurable portal Cause: The logged in user may not have permissions on User Information List. Resolution: To auto populate Requester details, give read permissions for everyone on User Information List. Go to Site Settings in root site &#8211;&gt; People and groups (in Users and Permissions section) &#8211;&gt; Click on List settings under Setings (refer below image) It will take us to the User Information list, open &quot;Permissions for this list&quot; (under Permissions and Management) Grant read permissions for &quot;Everyone&quot; on this list (refer below image). &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "213",
    "name": "213 - How to auto set category when Tickets gets created via Email_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/213%20-%20How%20to%20auto%20set%20category%20when%20Tickets%20gets%20created%20via%20Email_.html",
    "title": "How To Auto Set Category When Tickets Gets Created Via Email",
    "text": "How to auto set category when Tickets gets created via Email? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to auto set category when Tickets gets created via Email? How to auto set category when Tickets gets created via Email? 1298 views Less than a minute 0 In our application, we support multiple email lists for a main &#8220;Tickets&#8221; list and there can be a reqiurement that based on the email list that recieves the email set default category in ticket. Note: To configure multiple Email Addresses in CrowCanyon Application please refer https://www.crowcanyon.help/article/215 If single Email Tickets list is being used, there can be a requirement to set category based on the sender email address. Category can be autoset based on the email tickets list name that recieves the incoming emails and/or sender email address. This can be configured in &#8220;Associated From Email Address Or Email Tickets List Name&#8221; column in &#8220;Category&#8221; list. Go to Application Administration, Categorization, eidt a category item and configure either Email Tickets list name that recieves incoming emails or the sender email address in &#8220;Associated From Email Address Or Email Requests List Name&#8221; column. From the above configuration, the tickets created for the email which arrives to Email Tickets list will have &#8220;Calendar&#8221; as category. You can also use sender email address as a configuration as well like [someone@domain.com] A combination can also be configured like [someone@domain.com][someoneelse@domain.com] About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "214",
    "name": "214 - Notify Assigned Staff for every Worklog update in Ticket.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/214%20-%20Notify%20Assigned%20Staff%20for%20every%20Worklog%20update%20in%20Ticket.html",
    "title": "Notify Assigned Staff For Every Worklog Update In Ticket",
    "text": "Notify Assigned Staff for every Worklog update in Ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Notify Assigned Staff for every Worklog update in Ticket Notify Assigned Staff for every Worklog update in Ticket 1924 views Less than a minute 0 Applies to : SharePoint Online Requirement: Notify Assigned Staff for every Worklog update in Ticket Description: Standard notifications in our product sends notifications when a ticket is created/assigned/re-assigned/closed. To send notifications for other scenarios, we can configrue workflow using Crow Canyon Workflow Manager app. Summary of Configurations: 1. Create a mail template on Tickets list with required content. 2. Create a workflow with send mail action on Tickets list item update event with required conditions such that notifications sent out only when work log column is updated. Detailed Steps: Note: if you are using Crow Canyon Nitro workflows (latest workflow Manager), please refer this article: https://www.crowcanyon.help/article/315 1. Create mail template: Go to Site Contents &#8211;&gt; CrowCanyon Workflow Manager App &#8211;&gt; Manage Mail Template &#8211;&gt; Create a Mail Template on Tickets list like below. Note that the below mail template is just a sample and it can be configuered as per the need. 2. Create workflow: Create a workflow with conditions and &quot;Send Mail&quot; action as per the sample screenshots shown below. Send Mail Action About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "215",
    "name": "215 - Configure Email to Ticket conversion feature for multiple incoming email addresses - Crow Canyon Sof.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/215%20-%20Configure%20Email%20to%20Ticket%20conversion%20feature%20for%20multiple%20incoming%20email%20addresses%20-%20Crow%20Canyon%20Sof.html",
    "title": "Configure Email To Ticket Conversion Feature For Multiple Incoming Email Addresses Crow Canyon Sof",
    "text": "Configure Email to Ticket conversion feature for multiple incoming email addresses - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Email to Ticket conversion feature for multiple incoming email addresses Configure Email to Ticket conversion feature for multiple incoming email addresses 1294 views 2 min , 5 sec read 0 Applies To SharePoint Online and On-Premises Description Crow Canyon Service Request product has built-in feature to convert incoming Emails to Tickets. This is a two step process: Incoming emails first come to the &#8216;Email Tickets&#8217; list: In SharePoint Online, this is configured using &#8216;Email Sync&#8217; App. More details are in this article In SharePoint On-premises this is done using standard SharePoint functionality. Please refer first section in this article Crow Canyon application then converts this new Email item to a Ticket or links it to an existing Ticket In some cases, there is a need to have more than one incoming Email address for creating Tickets. For example, there may be a separate Email address for different Teams/Departments so that Tickets come to a different list and can have specific assignment or other process flow. This article describes the steps to configure Email to Ticket conversion feature for multiple Email addresses. Summary of steps Create Email Tickets lists with Email Tickets list template Configure Email to Ticket conversion feature SharePoint On-Premises SharePoint Online 1. Create Email Tickets list with Email Tickets list template 1. Take the template of &#8220;Email Tickets&#8221; list Go to Site Contents &#8211;&gt; &#8216;Email Tickets&#8217; list &#8211;&gt; List Settings &#8211;&gt; click on &#8216;Save list as template&#8217; Give File name, Template name and click on &#8220;Ok&#8221;: After template is created, a success message will be displayed, click &#8220;Ok&#8221;. &nbsp; 2. Create a list with &#8216;Email Tickets&#8217; list template. Goto Site Contents &#8211;&gt; click on &#8216;Add an App&#8217; &#8211;&gt; click on &#8216;Email Tickets&#8217; list &#8211;&gt; give list name and click &#8220;Create&#8221;: You can give the required list name, in example below it is &#8216;Email Tickets 2&#8217;: &nbsp; 2. Configure Email to Ticket conversion feature SharePoint On-premises 1. After creating the new &#8216;Email Tickets 2&#8217; list, check whether Workflow instance is attached or not. If yes, remove and add the workflow instance afresh. Go to &#8216;Email Tickets 2&#8217; list &#8211;&gt; List Settings &#8211;&gt; Click &#8216;Workflow Settings&#8217; &#8211;&gt; click &#8216;Remove, Block or Restore a Workflow&#8217; &#8211;&gt; select &#8220;Remove&#8221; and click &#8220;OK&#8221;: 2. Now attach Workflow instance on &#8216;Email Tickets 2&#8217; list. Go to &#8216;Email Tickets 2&#8217; list &#8211;&gt; List Settings &#8211;&gt; Click &#8216;Workflow Settings&#8217; &#8211;&gt; click on &#8220;Add a workflow&#8221; &#8211;&gt; Select &#8220;CCSSREmailCapture&#8221; workflow and give workflow instance name and click &#8220;Ok&#8221;: 3. Configure Incoming Email Address in newly created &#8216;Email Tickets 2&#8217; list. Go to &#8216;Email Tickets 2&#8217; list &#8211;&gt; List settings &#8211;&gt; Incoming Email Settings (in communications) &#8211;&gt;specify required incoming Email address and click on &#8220;Ok&#8221;. The configured Email Address will be shown as below: Note: If you want to auto-set category for the Tickets created via email received on specific email address, then refer this article SharePoint Online 1. After creating the new Email Tickets list, configure Crow Canyon Email Sync service on this list. Please refer instructions from this article . Note In SharePoint online, we can have same &#8216;Email Tickets&#8217; list for multiple incoming email addresses. There will be a separate configuration for each email address in Email Sync service that will refer to common &#8216;Email Tickets&#8217; list. This can be done if we don&#8217;t want to have separate Email Tickets lists for each incoming email address. 2. Next, go to Application Administration -&gt; General Configurations -&gt; Switch to Email Handling tab and add newly created Email Tickets list name in new line in &#8220;Email Tickets Lists Names&#8221; column. 3. After adding the Email Tickets list, go to Crow Canyon NITRO Apps in Application Administration -&gt; Open Crow Canyon Product App -&gt; Deactivate the app feature and then activate again: Note To auto categorize Email Tickets based on either Sender/Email Tickets List, please refer additional configurations from https://www.crowcanyon.help/article/167/ About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "216",
    "name": "216 - How to resolve Person or group field wrong entries in forms_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/216%20-%20How%20to%20resolve%20Person%20or%20group%20field%20wrong%20entries%20in%20forms_.html",
    "title": "How To Resolve Person Or Group Field Wrong Entries In Forms",
    "text": "How to resolve Person or group field wrong entries in forms? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to resolve Person or group field wrong entries in forms? How to resolve Person or group field wrong entries in forms? 927 views Less than a minute 0 Issue: Person or group field is showing incorrect value after saving the item. Ex: from the below image while creating a ticket &quot;Assigned staff&quot; is selected as &quot;Prakash Arya&quot; and after saving the item it is saved as some other value.&nbsp; Cause: Cache problem with Person or group field. Resolution: give person Email address i.e. someone@domain.com and hit &quot;Control+k&quot; it will resolve the user and save the correct value. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "22",
    "name": "22 - Crow Canyon On-premisis solutions description.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/22%20-%20Crow%20Canyon%20On-premisis%20solutions%20description.html",
    "title": "Crow Canyon On Premisis Solutions Description",
    "text": "Crow Canyon On-premisis solutions description - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon On-premisis solutions description Crow Canyon On-premisis solutions description 983 views 3 min , 4 sec read 0 S.No &nbsp;Solution Name &nbsp;Deployment&nbsp; Scope&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Description Feature Scope 1 &nbsp;CrowCanyon.ColorKPI.wsp &nbsp;Global Color/Highlight SharePoint list items based on column values (complex conditions can be specified based on multiple column values) Show progress bar based on a column value &nbsp;Site 2 CrowCanyon.AdvancedAlerts.wsp &nbsp;Global Configure custom email notifications based on list item create/update events. Or based on a date column value e.g. send an email 4 hours before due date value. Mail templates with place holders for list column values and ability to highlight changed values are supported. Notifications can be sent based on conditions on column values &nbsp;Site Collection 3 &nbsp;CrowCanyon.CascadedLookup.wsp &nbsp;Global Filters child lookup column options based on the parent lookup column value selection. It supports the cross-site lookup and filtering on top of it. It also has the capability to auto populate lookup list item information in to the other fields on the current form (Column mappings are configurable using JSON). &nbsp;NA 4 &nbsp;CrowCanyon.ColorChoiceField.wsp &nbsp;Global Color/Highlight/show icons on SharePoint list items based on choice column values. Allows to apply color to the whole row or column based on choice column values. &nbsp;NA 5 &nbsp;CrowCanyon.CommonUtils.wsp &nbsp;Global It is a dependency solution with all the common functions code for some of the crow canyon solutions &nbsp;NA 6 &nbsp;CrowCanyon.Discussion.wsp &nbsp;Global Custom Field Type that provides ability to capture the comments/text that shows with signature and time stamp. SharePoint standard multiple lines of text field with &quot;Append Changes&quot; option provides the same functionality but versions needs to be enabled. In Discussion field, same feature is possible without enabling versions. Also, it has the ability to delete the old comments without deleting whole version. &nbsp;NA 7 &nbsp;CrowCanyon.LicenseManager.wsp &nbsp;Global License evaluator for crowcanyon applications. &nbsp;Site 8 &nbsp;CrowCanyon.TaskManager.wsp &nbsp;Global In SharePoint, relation between two lists can be maintained using lookup column. If we need to see all related items then we need to add view with web part connections. Task Manager custom field type simplifies this and renders related items as a column on the form. It supports adding new items in multiple different ways (new entry link, inline panel, inline edit) to add new entry that auto links to the parent item.&nbsp; &nbsp;NA 9 &nbsp;CCSSendmailwithattachments.wsp &nbsp;Global Dependent solution for some helpdesk program solutions &nbsp;NA 10 &nbsp;CCSSREventReceiver.wsp &nbsp;Global It is useful to dispose completed workflow instances on Tickets list and support Approver functionality. &nbsp;Site 11 &nbsp;CrowCanyon.AdvancedEmail.wsp &nbsp;Web Application Allows Email Settings on any list to send mails with attachments from list item itself.&nbsp; &nbsp;Site 12 &nbsp;CCSSRWorkflows.wsp &nbsp;Web Application Which supports auto notifications on ticket submission and SLA (On demand) &nbsp;Site Collection 13 &nbsp;CrowCanyon.AdvancedPrint.wsp &nbsp;Web Application Allows to print information from SharePoint lists and items. It allows users to define multiple print templates with list column values. &nbsp;Site Collection 14 &nbsp;CrowCanyon.BatchTicketEditor.wsp &nbsp;Web Application Allows to assign/self-assign/close multiple tickets as batch at once &nbsp;Site 15 &nbsp;CrowCanyon.CalculatedTable.wsp &nbsp;Web Application Allows to add tabular charts and graphs (Flash/HTML5) on any web part page. It has the report center where custom reports can be build We can print, email and schedule reports. Report has a custom ribbon that provides the dynamic date filter capabilities. &nbsp;Site Collection 16 &nbsp;CrowCanyon.FieldManager.wsp &nbsp;Web Application Allows to manage the fields visibility(show/hide) in different list forms &nbsp;Site 17 &nbsp;CrowCanyon.FormsManager.wsp &nbsp;Web Application Allows to create Tabs, Tab Permissions, Column Permissions, and Column Validations for default SharePoint list forms and list columns. &nbsp;Site Collection 18 &nbsp;CrowCanyon.Webparts.wsp &nbsp;Web Application Provides a set of web parts that supports CCS Applications. &nbsp;Site Collection 19 &nbsp;CrowCanyon.ListSearch.wsp &nbsp;Web Application Allows to search items from SharePoint lists with in the Site Collection. Provides a webpart for simple and advanced search within the lists &nbsp;Site Collection 20 &nbsp;CrowCanyon.MobileManager.wsp &nbsp;Web Application Allows to view data from a SharePoint list in mobile devices &nbsp;Site 21 &nbsp;EasyTabParts.wsp &nbsp;Web Application Allows to tab webparts in a page &nbsp;Site Collection 22 &nbsp;CrowCanyon.TimerJobs.wsp &nbsp;Web Application Provides timer jobs like SLA timer job, Recurrence timer job, Archival Timer job for CCS Application &nbsp;Site Collection 23 &nbsp;CrowCanyon.URLActions.wsp &nbsp;Web Application Allows to embed different pages as a link in the ribbon in SharePoint list forms &nbsp;Site Collection 24 &nbsp;CrowCanyon.WorkflowManager.wsp &nbsp;Web Application Custom business flow can be configured using the custom workflows based on list item create/update /delete events or based on a date column value (timer-based). Allows to perform actions like create/ update/delete/send mail actions based on conditions on column values. &nbsp;Site Collection 25 CrowCanyon.Branding.wsp Global Which allows user to customize look and feel of the SharePoint sites. By default Crow Canyon provides five different themes. Allows users to create custom themes and configure look and feel of quick launch. Site &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "220",
    "name": "220 - Crow Canyon On-premisis solutions description.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/220%20-%20Crow%20Canyon%20On-premisis%20solutions%20description.html",
    "title": "Crow Canyon On Premisis Solutions Description",
    "text": "Crow Canyon On-premisis solutions description - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon On-premisis solutions description Crow Canyon On-premisis solutions description 983 views 3 min , 4 sec read 0 S.No &nbsp;Solution Name &nbsp;Deployment&nbsp; Scope&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Description Feature Scope 1 &nbsp;CrowCanyon.ColorKPI.wsp &nbsp;Global Color/Highlight SharePoint list items based on column values (complex conditions can be specified based on multiple column values) Show progress bar based on a column value &nbsp;Site 2 CrowCanyon.AdvancedAlerts.wsp &nbsp;Global Configure custom email notifications based on list item create/update events. Or based on a date column value e.g. send an email 4 hours before due date value. Mail templates with place holders for list column values and ability to highlight changed values are supported. Notifications can be sent based on conditions on column values &nbsp;Site Collection 3 &nbsp;CrowCanyon.CascadedLookup.wsp &nbsp;Global Filters child lookup column options based on the parent lookup column value selection. It supports the cross-site lookup and filtering on top of it. It also has the capability to auto populate lookup list item information in to the other fields on the current form (Column mappings are configurable using JSON). &nbsp;NA 4 &nbsp;CrowCanyon.ColorChoiceField.wsp &nbsp;Global Color/Highlight/show icons on SharePoint list items based on choice column values. Allows to apply color to the whole row or column based on choice column values. &nbsp;NA 5 &nbsp;CrowCanyon.CommonUtils.wsp &nbsp;Global It is a dependency solution with all the common functions code for some of the crow canyon solutions &nbsp;NA 6 &nbsp;CrowCanyon.Discussion.wsp &nbsp;Global Custom Field Type that provides ability to capture the comments/text that shows with signature and time stamp. SharePoint standard multiple lines of text field with &quot;Append Changes&quot; option provides the same functionality but versions needs to be enabled. In Discussion field, same feature is possible without enabling versions. Also, it has the ability to delete the old comments without deleting whole version. &nbsp;NA 7 &nbsp;CrowCanyon.LicenseManager.wsp &nbsp;Global License evaluator for crowcanyon applications. &nbsp;Site 8 &nbsp;CrowCanyon.TaskManager.wsp &nbsp;Global In SharePoint, relation between two lists can be maintained using lookup column. If we need to see all related items then we need to add view with web part connections. Task Manager custom field type simplifies this and renders related items as a column on the form. It supports adding new items in multiple different ways (new entry link, inline panel, inline edit) to add new entry that auto links to the parent item.&nbsp; &nbsp;NA 9 &nbsp;CCSSendmailwithattachments.wsp &nbsp;Global Dependent solution for some helpdesk program solutions &nbsp;NA 10 &nbsp;CCSSREventReceiver.wsp &nbsp;Global It is useful to dispose completed workflow instances on Tickets list and support Approver functionality. &nbsp;Site 11 &nbsp;CrowCanyon.AdvancedEmail.wsp &nbsp;Web Application Allows Email Settings on any list to send mails with attachments from list item itself.&nbsp; &nbsp;Site 12 &nbsp;CCSSRWorkflows.wsp &nbsp;Web Application Which supports auto notifications on ticket submission and SLA (On demand) &nbsp;Site Collection 13 &nbsp;CrowCanyon.AdvancedPrint.wsp &nbsp;Web Application Allows to print information from SharePoint lists and items. It allows users to define multiple print templates with list column values. &nbsp;Site Collection 14 &nbsp;CrowCanyon.BatchTicketEditor.wsp &nbsp;Web Application Allows to assign/self-assign/close multiple tickets as batch at once &nbsp;Site 15 &nbsp;CrowCanyon.CalculatedTable.wsp &nbsp;Web Application Allows to add tabular charts and graphs (Flash/HTML5) on any web part page. It has the report center where custom reports can be build We can print, email and schedule reports. Report has a custom ribbon that provides the dynamic date filter capabilities. &nbsp;Site Collection 16 &nbsp;CrowCanyon.FieldManager.wsp &nbsp;Web Application Allows to manage the fields visibility(show/hide) in different list forms &nbsp;Site 17 &nbsp;CrowCanyon.FormsManager.wsp &nbsp;Web Application Allows to create Tabs, Tab Permissions, Column Permissions, and Column Validations for default SharePoint list forms and list columns. &nbsp;Site Collection 18 &nbsp;CrowCanyon.Webparts.wsp &nbsp;Web Application Provides a set of web parts that supports CCS Applications. &nbsp;Site Collection 19 &nbsp;CrowCanyon.ListSearch.wsp &nbsp;Web Application Allows to search items from SharePoint lists with in the Site Collection. Provides a webpart for simple and advanced search within the lists &nbsp;Site Collection 20 &nbsp;CrowCanyon.MobileManager.wsp &nbsp;Web Application Allows to view data from a SharePoint list in mobile devices &nbsp;Site 21 &nbsp;EasyTabParts.wsp &nbsp;Web Application Allows to tab webparts in a page &nbsp;Site Collection 22 &nbsp;CrowCanyon.TimerJobs.wsp &nbsp;Web Application Provides timer jobs like SLA timer job, Recurrence timer job, Archival Timer job for CCS Application &nbsp;Site Collection 23 &nbsp;CrowCanyon.URLActions.wsp &nbsp;Web Application Allows to embed different pages as a link in the ribbon in SharePoint list forms &nbsp;Site Collection 24 &nbsp;CrowCanyon.WorkflowManager.wsp &nbsp;Web Application Custom business flow can be configured using the custom workflows based on list item create/update /delete events or based on a date column value (timer-based). Allows to perform actions like create/ update/delete/send mail actions based on conditions on column values. &nbsp;Site Collection 25 CrowCanyon.Branding.wsp Global Which allows user to customize look and feel of the SharePoint sites. By default Crow Canyon provides five different themes. Allows users to create custom themes and configure look and feel of quick launch. Site &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "223",
    "name": "223 - Configure Workflow to delete old items from Send Mails list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/223%20-%20Configure%20Workflow%20to%20delete%20old%20items%20from%20Send%20Mails%20list.html",
    "title": "Configure Workflow To Delete Old Items From Send Mails List",
    "text": "Configure Workflow to delete old items from Send Mails list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Workflow to delete old items from Send Mails list Configure Workflow to delete old items from Send Mails list 1207 views Less than a minute 0 Send Mails list in Crow Canyon application is used to support outgoing emails. Crow Canyon Product App and Advanced Email Apps create items in &#8220;Send Mails&#8221; list with recipient, subject, body and attachments information, and Workflow Manager app sends email for them. Once the email sent then this Send Mails list items become depricated and no longer useful. This article will walk through the process to automatically delete the old Send Mails list items. Steps to configure workflow: Go to Application Administration in servivce area site &#8211;&gt; Crow Canyon Apps &#8211;&gt; Crow Canyon Workflow Manager App &#8211;&gt; Manage Workflow Settings &#8211;&gt; click on &#8220;Create workflow&#8221; and configure as shown in below screenshot. Create Delete Item Action as shown in below screenshot, save action and then workflow. This will cleanup the old send mails list items regularly. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "224",
    "name": "224 - How to configure report on current week items_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/224%20-%20How%20to%20configure%20report%20on%20current%20week%20items_.html",
    "title": "How To Configure Report On Current Week Items",
    "text": "How to configure report on current week items? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure report on current week items? How to configure report on current week items? 1007 views Less than a minute 0 To create report on items created on current week follow below steps 1. Create two calculated column fields to get Start and End dates of a Week Column Name: Week Start Formula = Created &#8211; WEEKDAY(Created,3) Column Name: Week End Formula =[Week Start]+6 2. Create a Current Week Items view with the following condition to filter items created in current week. 3. Create a Report by using &quot;Current Week Items&quot; view (see below screenshot) &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "225",
    "name": "225 - Workflows required for outgoing emails in NITRO applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/225%20-%20Workflows%20required%20for%20outgoing%20emails%20in%20NITRO%20applications.html",
    "title": "Workflows Required For Outgoing Emails In NITRO Applications",
    "text": "Workflows required for outgoing emails in NITRO applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Workflows required for outgoing emails in NITRO applications Workflows required for outgoing emails in NITRO applications 1275 views 1 min , 50 sec read 0 Applies To : SharePoint Online and On-premises Description Many NITRO Apps like Custom Actions, Reports, Print and Email Manager have feature to send a mail with required content like the report chart, mail template etc.. These apps put the email content in a list and then Workflow Manager App is used to actually send the mail to the recipients. Same mechanism is also used by NITRO Applications like Crow Canyon Helpdesk solution. Below table gives details of the lists used by various NITRO apps for outgoing emails. For sending these emails, workflows are required to be configured on these lists and these are described in next section. &nbsp; List Name Details Send Mails This list is used by NITRO Apps &#8216;Email Manager&#8217; and &#8216;Custom Actions&#8217;. It is also used by some Crow Canyon applications like Service Request. It is required to configure the workflows on this list for outgoing emails functionality. CrowCanyonAppsEmails This list is used by NITRO Apps &#8216;Print Manager&#8217; and &#8216;NITRO Reports&#8217;. If you are using outgoing emails in these apps then it is required to configure the workflows described below. CCSOutgoingMails This is a deprecated list and only used by NITRO &#8216;Custom Action&#8217; app in SharePoint on-premises. Please note that &#8216;Custom Actions&#8217; app in SharePoint Online uses &#8216;Send Mails&#8217; list. If you have &#8216;Send Mails&#8217; list in your site then you can safely delete this list. Otherwise, you can configure the workflows described below. &nbsp; Workflows NITRO Apps create an item in the lists described above whenever an email has to be sent. The workflows configured on these lists then send the actual mail. We will take the example of &#8216;Send Mails&#8217; list below, same configurations are required for other lists as well. Workflow 1 (Item Created Event &#8211; Send Mail Action): Used for emails without attachments Workflow 2 (Item Updated Event &#8211; Send Mail Action): Used for emails with attachments Workflow 3 (Timer based): This workflow processes any missing emails due to transient connectivity issues Workflow 4 (Timer based Delete Action): To delete old items from the list (after mails have been sent) Workflow 1 and Workflow 2 will be generally configured as part of Crow Canyon Application installation. In case they are not configured then you can refer and create as per configurations given below. Workflow 3 and Workflow 4 may not be configured by default. Create &#8216;Processed&#8217; column in &#8216;Send Mails&#8217; list Please create this column as per below details if it doesn&#8217;t exist already in the list. Column Name: Processed Workflow Configurations Go to Application Administration&#8211;&gt; Crow Canyon Nitro Apps&#8211;&gt; Crow Canyon Workflow Manager and create workflows as described below. Workflow 1: Send Mails/Item Created Create &#8220;Send Mail&#8221; Action : &nbsp; Configure Mail Template as shown below: Create Update Item action : &nbsp; Workflow 2: Send Mails/Item Updated workflow &nbsp; Create Send Mail Action : Same as Workflow1 send mail action. Create Update Item action : Same as Workflow1 Item Update action &nbsp; Workflow 3: Create a Timer based Workflow Some times email item gets created in the list but above workflows not getting triggered due to transient connectivity or server load issues. This workflow periodically checks for such missing emails. Create Send Mail action : Same as Workflow1 send mail action. Create Update Item action : Same as Workflow1 Item Update action Workflow 4: Workflow to delete old items from send mails list Please fefer: https://www.crowcanyon.help/article/223 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "226",
    "name": "226 - How to configure Service Catalog Page in Portal_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/226%20-%20How%20to%20configure%20Service%20Catalog%20Page%20in%20Portal_.html",
    "title": "How To Configure Service Catalog Page In Portal",
    "text": "How to configure Service Catalog Page in Portal? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Service Catalog Page in Portal? How to configure Service Catalog Page in Portal? 3537 views 1 min , 46 sec read 0 Applies To SharePoint On-Premises and Online Description The Service Catalog provides a way to list the services that a group or department, such as IT, provides. It includes descriptions of how to access the services, system requirements, availability, etc. This article describes the steps to configure Service Catalog in Portal site. Summary of steps Configure List Schema Configure Portal Service Catalog page Detailed Steps Configure List Schema 1. Create a custom list named &#8220;Catalog&#8221; in service area site. Create a single line of text field &#8220;Icon&#8221; in Catalog list. Sample Catalog list screenshot 2. Create a custom list named &#8220;Service Catalog&#8221; and create fields as per below table. S.No Field Internal Name Field Display Name Field Type 1. Banner Banner Single line of text 2. Catalog Catalog Lookup (See screnshot below) 3. Description Description Multiple lines of text (Enahnced Rich Text) 4. Included Included Multiple lines of text (Enahnced Rich Text) 5. OptionalFeatures Optional Features Multiple lines of text (Enahnced Rich Text) 6. Pricing Pricing Multiple lines of text (Enahnced Rich Text) 7. Billing Billing Multiple lines of text (Enahnced Rich )Text 8. SpecialConsiderations Special Considerations Multiple lines of text (Enahnced Rich )Text 9. Request Request Multiple lines of text (Enahnced Rich )Text 10. SLA SLA Multiple lines of text (Enahnced Rich )Text 11. ShowAlways ShowAlways Yes/No 12. Price Price Multiple lines of text (Enahnced Rich )Text Note: We can create more Multiple lines of text columns in this list if required and use them during the service catalog tab configurations in portal. Catalog lookup field settings: Example service catalog list screenshot: Configure Portal Service Catalog page SharePoint Online has two different versions of Portal sites, classic and modern. Follow below steps based on the site type (classic/modern). For SharePoint On-Premises, follow classic portal steps. Classic Portal Site Modern Portal Site Classic Portal Site After completion of List Schema, go to Portal Site Home page &#8211;&gt; Portal Settings &#8211;&gt; Portal Pages &#8211;&gt; Select Service Catalog Page and click on &#8220;New Page&#8221; (Configure service catalog page like below). &nbsp; After creating Service Catalog page, add Service Catalog link to Menu Section. To do this, go to Portal Settings &#8211;&gt; General Section &#8211;&gt; Menu Section &#8211;&gt; click on &#8220;New Menu&#8221; and configure Service Catalog link like below Service Catalog pages appearance in Portal pages: &nbsp; Modern Portal Site After completion of List Schema, go to Portal site &#8211;&gt; Site Pages &#8211;&gt; Create a new site page named &#8220;Service Catalog&#8221; and add &#8220;Crow Canyon Catalog&#8221; modern web part as shown below: Enter Page Title and click add web part Expand web parts menu Click &#8220;See all&#8221; Select &#8220;Catalog- Crow Canyon&#8221; web part and configure After the web part is added to the site page, edit the web part and configure the web part settings as shown below: Edit web part Configure General section Configure Tabs Data in the web part settings as shown below Save settings, publish the page and Service Catalog page will be shown like below. Service Catalog pages appearance in Portal pages: To add &#8220;Service Catalog&#8221; page in the menu bar link of Portal site, copy the Service Catalog page URL, go to &#8220;Crow Canyon Site Settings&#8221; and add a new menu link as shown below: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "227",
    "name": "227 - Basic permissions configurations in Crow Canyon Service Request Application - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/227%20-%20Basic%20permissions%20configurations%20in%20Crow%20Canyon%20Service%20Request%20Application%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "Basic Permissions Configurations In Crow Canyon Service Request Application Crow Canyon Software S",
    "text": "Basic permissions configurations in Crow Canyon Service Request Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Basic permissions configurations in Crow Canyon Service Request Application Basic permissions configurations in Crow Canyon Service Request Application 2927 views 2 min , 42 sec read 4 Permission configurations in Crow Canyon Service Request application Applies to: SharePoint On-premises and Online Description: Crow Canyon Service Request application has two areas for configuration. There is the &#8220;backend&#8221; where staff and administrators will configure the program and work on their Tickets, requests, or work orders. Then there is the portal, where users can submit Tickets, requests, or work orders. We often refer to this as the &#8220;front end&#8221; of the application. Crow Canyon Service Request application has 4 different roles (SharePoint Groups) for accessing the two areas. End Users Staff Managers Administrators 1. End Users: This group of users are allowed to create Tickets and they can view their own Tickets form the portal. People who are members to only this group are not allowed to access the backend of the program. 2. Staff: This group of users can access the backend of the program. These people generally work from the &#8220;Staff Workspace&#8221; which shows Tickets that are assigned to them and the Tickets that are not yet assigned to anyone. These people are allowed to see all other Tickets using other quick launch links and can view reports etc. 3. Managers: This group of users can access the backend of the program. These people generally work from the &#8220;Manager Dashboard&#8221; which shows Tickets that are overdue and Tickets that are not yet assigned to anyone. Also, this workspace has more reports that helps the manager to understand the state of the Ticketing system. This group of people generally has the Full Control permission on the site so they are allowed to perform most of the operations. 4. Administrators: This group of users are the ones who can configure the system. They can be defined in an Administrators SharePoint group with Full Control permissions, or they can be defined as Site Collection Administrators. These people can use &#8220;Application Administration&#8221; to configure the application and can grant permissions to others as needed. Permission Levels and Group Associations: End Users &#8211; Contribute without delete (custom permission level, more detailed are described below) Staff &#8211; Contribute Managers &#8211; Full Control Administrators &#8211; Site Collection Administrators We can apply the permissions to corresponding groups as listed above on root site and inherit permissions in service area site (sub site). Note: Do not use the site visitors group for end users. Create a new SharePoint group for end users and add &#8220;Everyone Except External&#8221; users security group to this group. For more details, refer this Article These are simple/basic configurations, more granular permissions can be configured as needed. Summary of Steps: 1. Create SharePoint group for each role. Please note that we can use default site groups (&#8220;Visitors&#8221; for End Users, &#8220;Members&#8221; for Staff and Managers, and &#8220;Owners&#8221; for Administrators) for different roles instead of creating new groups. 2. Create a custom permission level (Contribute without delete). 3. Configure permissions on root site as described above in permission levels and group associations. 4. Inherit permissions in service area site (sub site). By default sub site inherits permissions from root site so this step can be ignored if the sub site permissions are not changed. 5. Add desired users to corresponding groups. 6. Configure redirection in Portal security settings. Detailed Steps: 1. Create a SharePoint group for each role with read permissions on root site in the site collection. If we decide to use the existing site groups then we can skip those groups creation. Go to site settings of root site of the site collection &#8211;&gt; Site Permissions &#8211;&gt; Create Group &#8211;&gt; grant &#8220;Read&#8221; permissions. 2. Create custom permission level (Contribute without delete). Go to Site Settings&#8211;&gt; go to top level settings &#8211;&gt; Site Permissions &#8211;&gt; Permission levels Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 &#8211; Click on &#8220;Contribute&#8221; permissions Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 &#8211; Now click on &#8220;Copy Permissions Level&#8221; in Contribute permissions. Using this template, create a new permission level &#8220;Contribute without delete&#8221; by unchecking all the &#8220;delete&#8221; permission levels in it. 3. Configure permissions on root site as described above in permission levels and group associations. Go to root site, Site Settings, Site Permissions and grant the permissions as described in permission levels and group associations above. (Sample screenshot below) &#8211; Grant &#8220;Contribute without Delete&#8221; permissions. This will allow users to create and manage Tickets without able to delete them. 4. Inherit permissions in service area site (sub site). By default sub site inherits permissions from root site so this step can be ignored if the sub site permissions are not changed. 5. Add desired users to corresponding groups. 6. Configure redirection in Portal security settings. Configure security settings in Portal such that only staff, managers and administrators SharePoint groups has access to the backend site and end users are redirected back to portal upon accessing backend site. Go to Portal Settings -&gt; Security Settings -&gt; configure &#8220;Main site access group&#8221; and specify the staff, managers and administrator SharePoint group as shown in below image -&gt; click &#8220;Save Settings&#8221;. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "229",
    "name": "229 - How to generate diagnostic logs for Crow Canyon solutions for SharePoint On-premises_ - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/229%20-%20How%20to%20generate%20diagnostic%20logs%20for%20Crow%20Canyon%20solutions%20for%20SharePoint%20On-premises_%20-%20Crow%20Canyon.html",
    "title": "How To Generate Diagnostic Logs For Crow Canyon Solutions For SharePoint On Premises Crow Canyon",
    "text": "How to generate diagnostic logs for Crow Canyon solutions for SharePoint On-premises? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to generate diagnostic logs for Crow Canyon solutions for SharePoint On-premises? How to generate diagnostic logs for Crow Canyon solutions for SharePoint On-premises? 2851 views 1 min , 39 sec read 0 Procedure to enable/disable logs for Crow Canyon solutions for SharePoint On-premises Applies to: SharePoint On-premises (SP 2010, SP 2013, SP 2016, SharePoint Server Subscription Edition) Description: If any of the Crow Canyon features are not working as intended, our log files helps us to troubleshoot the issue. If there are multiple servers in the farm, enable the registry settings and configure folder permissions on all the servers. Procedure to enable logs for CrowCanyon solutions Log on to the SharePoint server Open regedit Open product specific registry key as listed below (e.g. for IT Help Desk: Local Machine\\Software\\CCSSR\\Help Desk\\Version (3.0)\\SharePoint) Enable TraceLog: true/false By default &#8220;Enable Tracelog&#8221; set to &#8220;true&#8221;. If you want to disable logs generation completely for CrowCanyon solutions change &#8220;Enable TraceLog&#8221; to &#8220;false&#8221;. TraceLog Folder: CrowCanyon logs will be generated in the specified location (E.g.C:\\CCSSRLogFiles). Note: This location can be changed. Also, enable permissions on this folder as described below TraceLog Level (Information/Error): By default &#8220;TraceLog Level (Iformation/Error)&#8221; set to &#8220;Error&#8221; and logs will be generated for only exception scenarios Set TraceLog Level (Information/Error) to &#8220;Information&#8221; if diagnositc logs are required for an issue. After generating the required log files, change the logging back to &#8220;Error&#8221; mode. Registry Path for Crow Canyon Solutions S.No Name Registry path Default TraceLog Folder File Name 1. Crow Canyon Product workflows logs Local Machine\\Software\\CCSSR\\Help Desk\\Version (3.0)\\SharePoint C:\\CCSSRLogFiles CCSSRCreationLog, CCSSRUpdationLog, CCSSRERLog, CCSSRECLog, CCSCRLog, CCSSRRootCauseLog, CCSSRApprovalLog, 2. Crow Canyon TimerJob logs Local Machine\\Software\\Crow Canyon Systems\\SharePoint\\TimerJobs\\ C:\\CCSSRLogFiles CCSSRSLALog, CCSArchivalJobLog, SLATimerJobLog, CCSAutoCloseJobLog, CCSAutoCloseFeatureLog, RecurrenceFeatureLog, RecurrenceJobLog, AssetMaintenanceFeatureLog 3. Crow Canyon Calculated Table Local Machine\\Software\\Crow Canyon Systems\\SharePoint\\Calculated Table C:\\CCSWebpartLogFiles CalculatedTableLog 4. Crow Canyon WebParts Local Machine\\Software\\Crow Canyon Systems\\SharePoint\\WebParts C:\\CCSSRLogFiles CCSElapsedTimeLog, CCSElapsedTimeWebMethod 5. Crow Canyon Advanced Alerts Local Machine\\Software\\Crow Canyon\\SharePoint\\AdvancedAlerts C:\\Crow Canyon Logs CCSAdvancedAlertLogs, 6. Crow Canyon Workflow Manager Local Machine\\Software\\Crow Canyon\\SharePoint\\WorkflowManager C:\\Crow Canyon Logs CCSWorkflowManagerLogs, CCSWorkflowManagerTimerLogs 7. Crow Canyon Common Utilities Local Machine\\Software\\Crow Canyon\\SharePoint\\CommonUtils C:\\Crow Canyon Logs CCSCommonUitlsLogs 8. LAN Sweeper Integration Local Machine\\Software\\Crow Canyon Systems\\SharePoint\\TimerJobs C:\\CCSSRLogFiles LSIntegrationJobLog, LSIntegrationWPLog 9. Purchasing Workflows Local Machine\\Software\\CCSSR\\Help Desk\\Version (3.0)\\SharePoint C:\\CCSSRLogFiles CCSPOApproverWorkflowLogs 10. Crow Canyon CSM Workflows Local Machine\\Software\\CCSCSM\\Help Desk\\Version (2.1)\\SharePoint C:\\CCSCSMLogFiles CCSCSMEmailCaptureLog 11. Crow Canyon Custom Fields Local Machine\\Software\\Crow Canyon\\SharePoint\\Custom Fields C:\\Crow Canyon Logs CCSCascadedLookupLogs, CCSDiscussionLogs, CCSTaskManagerLogs, CCSLicenseManagerLogs, CCSPurchaseAssetLinkFeatureEventRecieverLog, CCSITPurchaseLinkFeatureEventRecieverLog, CCSPurchaseToAssetLog, PurchaseRequestStabilizerRecieverLog 12. SCCM Integration Local Machine\\Software\\Crow Canyon\\SharePoint\\Custom Fields C:\\CCSSCCMAssetSyncLogs CCSSCCMAssetSyncLogs Note: 1. If there are multiple servers in the farm, enable the registry settings and configure folder permissions on all servers. Based on the server that handles the particular request, logs will be genrated in that server. 2. Give Read and Write permissions for &#8220;Everyone&#8221; on TraceLog Folder. E.g: C:\\CCSSRLogFiles Go to CCSSRLogFiles folder &#8211;&gt; Properties &#8211;&gt; Security &#8211;&gt; Edit Click &#8220;Add&#8221; to give permissions for Everyone Normal 0 false false false EN-IN X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "23",
    "name": "23 - How to get SharePoint logs based on a Correlation ID_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/23%20-%20How%20to%20get%20SharePoint%20logs%20based%20on%20a%20Correlation%20ID_.html",
    "title": "How To Get SharePoint Logs Based On A Correlation ID",
    "text": "How to get SharePoint logs based on a Correlation ID? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to get SharePoint logs based on a Correlation ID? How to get SharePoint logs based on a Correlation ID? 1515 views Less than a minute 0 Steps to getSharePoint hive logs based on a Correlation ID:- 1. Copy the Correlation ID. 2. Log into the SharePoint Server, open SharePoint Management Shell (Run as Administrator) , run below command by replacing the correlation-id to get the logs. get-splogevent | ?{$_.Correlation -eq &quot; d9bd029e-6ac7-f044-b404-a4148b719369 &quot;} | select Area, Category, Level, EventID, Message | Format-List &gt; C:\\errorlog.txt 3. Log files will be generated at &quot;C:\\errorlog.txt&quot; in the SharePoint server. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "231",
    "name": "231 - How to get SharePoint logs based on a Correlation ID_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/231%20-%20How%20to%20get%20SharePoint%20logs%20based%20on%20a%20Correlation%20ID_.html",
    "title": "How To Get SharePoint Logs Based On A Correlation ID",
    "text": "How to get SharePoint logs based on a Correlation ID? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to get SharePoint logs based on a Correlation ID? How to get SharePoint logs based on a Correlation ID? 1515 views Less than a minute 0 Steps to getSharePoint hive logs based on a Correlation ID:- 1. Copy the Correlation ID. 2. Log into the SharePoint Server, open SharePoint Management Shell (Run as Administrator) , run below command by replacing the correlation-id to get the logs. get-splogevent | ?{$_.Correlation -eq &quot; d9bd029e-6ac7-f044-b404-a4148b719369 &quot;} | select Area, Category, Level, EventID, Message | Format-List &gt; C:\\errorlog.txt 3. Log files will be generated at &quot;C:\\errorlog.txt&quot; in the SharePoint server. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "232",
    "name": "232 - How to configure a conditional column validation in SharePoint Online_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/232%20-%20How%20to%20configure%20a%20conditional%20column%20validation%20in%20SharePoint%20Online_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Configure A Conditional Column Validation In SharePoint Online Crow Canyon Software Suppor",
    "text": "How to configure a conditional column validation in SharePoint Online? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a conditional column validation in SharePoint Online? How to configure a conditional column validation in SharePoint Online? 1107 views Less than a minute 0 Conditional column validations Using Crow Canyon Forms Manager App, we can configure a conditional column validation in a SharePoint online site. Use Case: &quot;Resolution Notes&quot; field should be a required field while closing a ticket (Tickets list; Request Status = Closed). Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Forms Manager app &#8211;&gt; Select Tickets list &#8211;&gt; Go to Column Validations section &#8211;&gt;&nbsp; Select &quot;Resolution Notes&quot; column. Configure new validation with a condition like below. Note: This validation does not apply for the tickets which are being closed using a custom action like &quot;Close&quot; button in the ticket ribbon or&nbsp; in &quot;Quick Edit&quot; mode. This validation will be applied only in the standard SharePoint forms. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "234",
    "name": "234 - How to configure Recurrence Feature in SP online helpdesk using Workflow Manager App_ - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/234%20-%20How%20to%20configure%20Recurrence%20Feature%20in%20SP%20online%20helpdesk%20using%20Workflow%20Manager%20App_%20-%20Crow%20Canyon.html",
    "title": "How To Configure Recurrence Feature In SP Online Helpdesk Using Workflow Manager App Crow Canyon",
    "text": "How to configure Recurrence Feature in SP online helpdesk using Workflow Manager App? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Recurrence Feature in SP online helpdesk using Workflow Manager App? How to configure Recurrence Feature in SP online helpdesk using Workflow Manager App? 899 views Less than a minute 0 1. Create a new list &ldquo;Recurring Ticket Template&rdquo; in helpdesk site like below. Fields in this list: 2. Go to CrowCanyon Workflow Manager app. Configure Recurrence Schedule workflows in Workflow manager app for Yearly, Monthly, Weekly, Daily recurrences: a) Create Yearly Recurrence Schedule Workflow like below: create an action (Create New Ticket) like below: &nbsp; b) Create Monthly&nbsp; Recurrence Schedule Workflow like below: create an action (Create New Ticket) like below: c) Create Weekly Recurrence Schedule Workflow like below: &nbsp;&nbsp;&nbsp; create an action (Create New Ticket) like below: d) Create Daily Recurrence Schedule Workflow like below: &nbsp;&nbsp;&nbsp; &nbsp;create an action (Create New Ticket) like below: 3. Go to Recurring Ticket Template list and create/configure Recurring tickets : Example to create a Weekly Recurring Ticket: &nbsp;&nbsp;&nbsp;&nbsp; &#8212; Create a new item in Recurring Ticket Template like below and choose Recurrence Type as Weekly. &nbsp;&nbsp; Example to create a Recurring Ticket with a Specific Date. &nbsp;&nbsp;&nbsp;&nbsp; &#8212; Choose Recurrence Type as &lsquo;Specific Date&rsquo; and fill Specific Date like below if the recurring tickets has to follow some specific pattern other than above provided recurrence patterns. &nbsp;&nbsp;&nbsp;&nbsp; &nbsp; And then create a workflow in workflow manager app like below: &nbsp; &nbsp;&nbsp; create action Item: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "236",
    "name": "236 - How to setup Recurrence functionality in SharePoint online using Crow Canyon Workflow Manager App_ -.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/236%20-%20How%20to%20setup%20Recurrence%20functionality%20in%20SharePoint%20online%20using%20Crow%20Canyon%20Workflow%20Manager%20App_%20-.html",
    "title": "How To Setup Recurrence Functionality In SharePoint Online Using Crow Canyon Workflow Manager App",
    "text": "How to setup Recurrence functionality in SharePoint online using Crow Canyon Workflow Manager App? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to setup Recurrence functionality in SharePoint online using Crow Canyon Workflow Manager App? How to setup Recurrence functionality in SharePoint online using Crow Canyon Workflow Manager App? 1198 views 1 min , 1 sec read 0 1. Create a new custom list &quot;Recurring Ticket Template&quot; in helpdesk site. 2. Create below required fields in this list.&nbsp; &nbsp;S.No Field Internal Name Field Display Name Field Type &nbsp;1. &nbsp;Category &nbsp;Category &nbsp;Lookup to Category list &nbsp;2. &nbsp;IssueType &nbsp;Issue Type &nbsp;Lookup to IssueType list &nbsp;3. &nbsp;Description &nbsp;Description &nbsp;Multiline text &nbsp;4. &nbsp;Requester &nbsp;Requester &nbsp;Person or group &nbsp;5. &nbsp;RecurrenceType &nbsp;Recurrence Type &nbsp;Choice field Values: Daily, Weekly, Monthly, Yearly, Specific Date &nbsp;6. &nbsp;StartDate &nbsp;Start Date &nbsp;Date and Time &nbsp;7. &nbsp;SpecificDate &nbsp;Specific Date &nbsp;Date and Time Note: Additional fields can also be created and correspoinding mappings should be done in the workflows configuration. 3. Configure Recurrence Schedule workflows in Workflow manager app for Yearly, Monthly, Weekly, Daily recurrences. &nbsp;Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Workflow Manager App a) Create Yearly Recurrence Schedule Workflow like below: create an action (Create New Ticket) like below: &nbsp; b) Create Monthly&nbsp; Recurrence Schedule Workflow like below: create an action (Create New Ticket): Same as Yearly recurrence schedule workflow c) Create Weekly Recurrence Schedule Workflow like below: &nbsp;&nbsp;&nbsp; create an action (Create New Ticket): Same as Yearly recurrence schedule workflow d) Create Daily Recurrence Schedule Workflow like below: &nbsp;&nbsp;&nbsp; &nbsp;create an action (Create New Ticket): Same as Yearly recurrence schedule workflow e) Create Recurring Schedule workflow for Specific Dates: create a workflow in Workflow Manager app like below with the recurrence pattern in the Repeat interval section. Create action Item: Same as Yearly recurrence schedule workflow Please refer examples for configuring Recurrence Tickets from this article: https://www.crowcanyon.help/article/237 Note: For better performance, do not configure more repeat interval in these timer workflows. &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "237",
    "name": "237 - Examples for configuring Recurring Tickets (Weekly_Specific Date).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/237%20-%20Examples%20for%20configuring%20Recurring%20Tickets%20%28Weekly_Specific%20Date%29.html",
    "title": "Examples For Configuring Recurring Tickets (Weekly Specific Date)",
    "text": "Examples for configuring Recurring Tickets (Weekly/Specific Date) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Examples for configuring Recurring Tickets (Weekly/Specific Date) Examples for configuring Recurring Tickets (Weekly/Specific Date) 1138 views Less than a minute 0 Please make sure recurrence workflows are configured in the helpdesk application ( https://www.crowcanyon.help/article/236 ). Example for configuring a Weekly Recurring ticket :- Go to Recurring Ticket Template list and create a new item like below with Recurrence Type as Weekly and a Start Date. As per this configuration, a ticket will be created weekly starting from 05/02/2016. Example to configure a Recurring Ticket with a Specific Date :- Go to Recurring Ticket Template list and create a new item like below with Recurrence Type as &#8216;Specific Date&#8217; and fill the Specific Date. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "239",
    "name": "239 - How to build complex reports in Crow Canyon Reports using SharePoint calculated columns_ - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/239%20-%20How%20to%20build%20complex%20reports%20in%20Crow%20Canyon%20Reports%20using%20SharePoint%20calculated%20columns_%20-%20Crow%20Cany.html",
    "title": "How To Build Complex Reports In Crow Canyon Reports Using SharePoint Calculated Columns Crow Cany",
    "text": "How to build complex reports in Crow Canyon Reports using SharePoint calculated columns? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build complex reports in Crow Canyon Reports using SharePoint calculated columns? How to build complex reports in Crow Canyon Reports using SharePoint calculated columns? 1909 views Less than a minute 0 Configuration of complex reports in Crow Canyon Reports using SharePoint calculated columns: SharePoint Online: 1. Configure a report to see the average ticket assignment time in hours https://www.crowcanyon.help/article/269 2. Build a report to see the number of tickets created on Weekdays/Week ends https://www.crowcanyon.help/article/270 3. Build a report to see the average number of days tickets are open https://www.crowcanyon.help/article/268 SharePoint On-Premisis: 1. Build a report to roundup a column Elapsed hours into blocks of 5 https://www.crowcanyon.help/article/266 2. Build a report to show Open tickets vs Closed tickets by month https://www.crowcanyon.help/article/265 3. Build a report to show the count of tickets which are created in previous month but closed in current month https://www.crowcanyon.help/article/267 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "24",
    "name": "24 - How to notify certain users when a ticket is created using Crow Canyon Workflow Manager_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/24%20-%20How%20to%20notify%20certain%20users%20when%20a%20ticket%20is%20created%20using%20Crow%20Canyon%20Workflow%20Manager_.html",
    "title": "How To Notify Certain Users When A Ticket Is Created Using Crow Canyon Workflow Manager",
    "text": "How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? 2417 views Less than a minute 0 1. Go to Workflow Manager, create a workflow on Item creation event of tickets list like shown below. 2. a) Create a Send Mail action like below. b) Create a Mail Template like below: &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "241",
    "name": "241 - How to notify certain users when a ticket is created using Crow Canyon Workflow Manager_ - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/241%20-%20How%20to%20notify%20certain%20users%20when%20a%20ticket%20is%20created%20using%20Crow%20Canyon%20Workflow%20Manager_%20-%20Crow%20Cany.html",
    "title": "How To Notify Certain Users When A Ticket Is Created Using Crow Canyon Workflow Manager Crow Cany",
    "text": "How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? How to notify certain users when a ticket is created using Crow Canyon Workflow Manager? 2417 views Less than a minute 0 1. Go to Workflow Manager, create a workflow on Item creation event of tickets list like shown below. 2. a) Create a Send Mail action like below. b) Create a Mail Template like below: &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "242",
    "name": "242 - “Value does not fall with in the expected range” error in Crow Canyon Report Center app - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/242%20-%20%E2%80%9CValue%20does%20not%20fall%20with%20in%20the%20expected%20range%E2%80%9D%20error%20in%20Crow%20Canyon%20Report%20Center%20app%20-%20Crow%20Canyo.html",
    "title": "“Value Does Not Fall With In The Expected Range” Error In Crow Canyon Report Center App Crow Canyo",
    "text": "“Value does not fall with in the expected range” error in Crow Canyon Report Center app - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / &#8220;Value does not fall with in the expected range&#8221; error in Crow Canyon Report Center app &#8220;Value does not fall with in the expected range&#8221; error in Crow Canyon Report Center app 849 views Less than a minute 0 Issue: &quot;Value does not fall with in the expected range&quot; error message&nbsp; while creating a report. Cause: Lookup threshold limit in the list. In SharePoint online, the lookup threshold limit is 12. It allows us to create more lookup columns, however it doesn&#8217;t allow to read information beyond 12 lookups through program. This error will not happen while reading data from the first 12 lookup columns (lookup/Person or group columns) in the list. The work around to avoid this error message is to remove unused lookup and Person/group columns from the list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "243",
    "name": "243 - Improve performance of the tickets list forms in Crow Canyon Service desk application - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/243%20-%20Improve%20performance%20of%20the%20tickets%20list%20forms%20in%20Crow%20Canyon%20Service%20desk%20application%20-%20Crow%20Canyon.html",
    "title": "Improve Performance Of The Tickets List Forms In Crow Canyon Service Desk Application Crow Canyon",
    "text": "Improve performance of the tickets list forms in Crow Canyon Service desk application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Improve performance of the tickets list forms in Crow Canyon Service desk application Improve performance of the tickets list forms in Crow Canyon Service desk application 2082 views 1 min , 19 sec read 0 Applies To: SharePoint Online and On-Premises To improve performance of the tickets list forms in Crow Canyon Service desk application, we can try below configurations: 1. Hide all the unused columns (columns which are not present in the tabs) from content types. To verify unused columns, go to Site Contents &#8211;&gt; Tickets list &#8211;&gt; List Settings &#8211;&gt; Verify the columns which are not used in the tabs and hide all the columns from content type which are not being used in tabs. 2. Make sure the column order in Tabs and Content types are same. 3. Index Lookup columns in Associated lists so that the associated items can load faster Eg: Index &#8220;Related Ticket ID&#8221; field in Email Tickets list since Email History is an associated item in tickets list. 4. To improve performance of list views, i ndex the columns in the tickets list that are used in view filters so that the view could load faster. See below table for different columns that could be indexed in Crow Canyon helpdesk application. &nbsp; Field Name List Name Area Requester Tickets Reports Request Status Tickets Reports, Views Assigned Staff Tickets Reports, Views and Workspace Category Tickets Reports Priority Tickets Reports DueDate Tickets Views Related Problem Tickets Problems list Related Ticket ID Change Request Associated items Related Ticket ID Email Tickets Associated items, Product Maintenance Service Related Ticket Time Tracking Associated items Related Ticket Associated Tasks Associated items Related Problem Problem Tasks Associated items Related Change Request Change Request Tasks Associated items Case Id Tickets Product Maintenance Service (SharePoint online) Created Tickets Product Maintenance Service (SharePoint online) Modified Tickets Product Maintenance Service (SharePoint online) Parent Item Email Tickets Product Maintenance Service (SharePoint online) Created Email Tickets Product Maintenance Service (SharePoint online) 5. Verify the number of lookup (lookup + Person or group) columns in Tickets list, if the number of lookup columns exceeded the threshold limit, please delete the unused lookup columns or recreate them as choice fields or text columns. &nbsp; 6. Make sure there are no lookup columns pointing to the same list (Eg: Related Ticket lookup in Ticket list). 7. Configure Archival functionality in helpdesk application For SharePoint On-Premisis, please refer Archiving Settings section at http://www.crowcanyon.info/sharepoint-manuals-37/index.html Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 For SharePoint online, please refer https://www.crowcanyon.help/article/193 8. For more details in enhancing NITRO Form load times, please refer https://www.crowcanyon.help/article/426 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "244",
    "name": "244 - How to fix unexpected errors when clicking on SharePoint “Date and Time” field_ - Crow Canyon Softwa.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/244%20-%20How%20to%20fix%20unexpected%20errors%20when%20clicking%20on%20SharePoint%20%E2%80%9CDate%20and%20Time%E2%80%9D%20field_%20-%20Crow%20Canyon%20Softwa.html",
    "title": "How To Fix Unexpected Errors When Clicking On SharePoint “Date And Time” Field Crow Canyon Softwa",
    "text": "How to fix unexpected errors when clicking on SharePoint “Date and Time” field? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to fix unexpected errors when clicking on SharePoint &#8220;Date and Time&#8221; field? How to fix unexpected errors when clicking on SharePoint &#8220;Date and Time&#8221; field? 959 views Less than a minute 0 Applies to : Online and Onprem Symptom1: When we try opening the calendar control of&nbsp; &quot;Date and Time&quot; type column, it shows &quot;The Web Page cannot be displayed&quot; error instead of calendar control (Screenshot below). Cause : &#8211; Root site collection does not exist in the web application Resolution: Create root site collection for the web application if Cause 1 is the case. Symptom2: When we try opening the calendar control of&nbsp; &quot;Date and Time&quot; type column, it shows access denied/permissions related error instead of calendar control (Screenshot below). Cause: User does not have enough permissions on the root site (User need to have at least read permissions on the root site in the current site collection) Resolution: Grant &quot;Read&quot; Permission to users on the root site of the current site collection if Cause 2 is the case. Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "245",
    "name": "245 - How to auto assign a Ticket based on Sender email address_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/245%20-%20How%20to%20auto%20assign%20a%20Ticket%20based%20on%20Sender%20email%20address_.html",
    "title": "How To Auto Assign A Ticket Based On Sender Email Address",
    "text": "How to auto assign a Ticket based on Sender email address? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to auto assign a Ticket based on Sender email address? How to auto assign a Ticket based on Sender email address? 1936 views Less than a minute 0 Applies to: SharePoint Online and On-premesis Requirement: Auto assign tickets (created via email) based on the sender email address. &#8211; Create a timer workflow on tickets list like below. &nbsp; a) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a) Create an &ldquo;Update Item&rdquo; action like below: &nbsp; b) If sender&rsquo;s email address is an external email address, configure &ldquo;Additional Requester Email&rdquo; column in the conditions of &ldquo;Update Item&rdquo; action. &nbsp; &nbsp; Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "246",
    "name": "246 - Configure incoming email functionality for Problems and Change Requests Modules using Workflow Manag.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/246%20-%20Configure%20incoming%20email%20functionality%20for%20Problems%20and%20Change%20Requests%20Modules%20using%20Workflow%20Manag.html",
    "title": "Configure Incoming Email Functionality For Problems And Change Requests Modules Using Workflow Manag",
    "text": "Configure incoming email functionality for Problems and Change Requests Modules using Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure incoming email functionality for Problems and Change Requests Modules using Workflow Manager Configure incoming email functionality for Problems and Change Requests Modules using Workflow Manager 1012 views 1 min , 50 sec read 0 Applies to: SharePoint On-Premises Description: Configure incoming email functionality for Problems and Change Requests Modules using Workflow Manager. a. Creation of new Problems/CRs through email: When an email is sent to the configured e-mail address, a new Problem/CR should be created. b. Link emails to existing Problems/CRs: If the incoming emails contains CaseId syntax (e.g: [CaseId: 123]), it should link the email to existing Problem/CR. c. If the mail subject of an incoming email related to an existing Problem/CR contains $Resolved keyword, the Problem/CR should be resolved automatically. Pre- requisites: 1.&nbsp; Create &quot;Email Problems&quot; and &quot;Email Change Requests&quot; lists (using Announcements list template). 2.&nbsp; Configure Incoming Email address for these lists. 3.&nbsp; Create &quot;RelatedProblemID&quot; and &quot;RelateChangeRequestID&quot; lookup fields these Emails lists pointing to ID column of Problems and Change Requests lists in &quot;Email Problems&quot; and &quot;Email Change Requests&quot; lists respectively. 4.&nbsp; Create &quot;EmailID&quot; lookup field in Problem and CR lists pointing to &quot;Email Problems&quot; and &quot;Email Change Requests&quot; lists respectively. Summary of Steps: 1. Setup &quot;Email Problems&quot; and &quot;Email Change Requests&quot; lists as described in Pre-requisites. 2. Configure a workflow on Email Problems list item created event to create an item in Problems list whenever an item gets created in Emails list and update value of RelatedProblemID in the Emails item. 3. In the same workflow, create a WF Varaible action with $regextract function to check if there is a valid ticket CaseId in the mail subject. If it contains a valid CaseId, instead of creating a item, just update RelatedProblemID value. 4. Create another workflow to check if the mail subject of an incoming email related to an existing Problem/CR contains $Resolved keyword and update Request Status of the corresponding Problem/CR as Resolved. Detailed Steps: Go to Crow Canyon Workflow Manager and create workflows like below: Workflow1: This workflow will create an item in Problems list whenever Emails list receives an email and also updates the RelatedProblemID in Emails list. It will link this email to the existing Problem/CR if the incoming emails contains CaseId syntax Configure a workflow on Email Problems list like shown in below image when an item is created Cofigure below actions: Create Item action: This action will create an item in Problems list. 2. Query list action: This action will get the Related Problem item from Problems list. Query: &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name=&#8217;EmailID&#8217; /&gt; &lt;Value Type=&#8217;Text&#8217;&gt;##ID##&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; 3. Update Action: This action will update the Related Problem Id in Email Problems list. 4. WF Variable Action: If the incoming email contains CaseId then this action will extract the Related Problem ID from CaseId. Regex for CaseId: $regextract([Title|Title],@.*\\[CaseId: (.+)\\].*) 5. Query list Action: This action will get the Related Problem with CaseId from Problems list 6. Update Action: This action will link to the Related Problem/CR Workflow2: If the mail subject of an incoming email related to an existing Problem/CR and contains $Resolved keyword then this workflow will Resolve the Related Problem/CR automatically. Update Action: Note: Follow the above stepss to configure incoming email functionality for Change Requests module. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "247",
    "name": "247 - Work Log text is not getting saved in the ticket.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/247%20-%20Work%20Log%20text%20is%20not%20getting%20saved%20in%20the%20ticket.html",
    "title": "Work Log Text Is Not Getting Saved In The Ticket",
    "text": "Work Log text is not getting saved in the ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Work Log text is not getting saved in the ticket Work Log text is not getting saved in the ticket 920 views Less than a minute 0 Issue: Text entered in Worklog column (Crow Canyon Discussion column) is not getting saved in the ticket. Issue Symptoms: &#8211; This issue happens only in I.E browser when text is entered in the discussion columns and &#8220;Save&#8221; button in the ribbon is used without clicking anywhere on the form. &#8211; This issue won&#8217;t happen if with Save button at the bottom of the form is used. &#8211; If the Worklog (Discussion column) is of rich/enhanced rich text type and if rich text is entered in the column, this issue won&#8217;t happen. But if plain text is entered and in the column and save button in the ticket ribbon is used, this issue exists. Cause: A third party control is being used in the Discussion field. The user need to click somewhere on the form before clicking the save button (in the ribbon) in order to get the text saved in this control (in I.E). Resolution/Work around: Enforce the users to use save button at the bottom of the forms. Hide the &#8220;Save&#8221; button in ribbon which has this issue using a script like below. Go to Tickets list of the service area &#8211;&gt; open Default Edit Form &#8211;&gt; Add a Content Editor webpart to the Edit form. Click on &#8220;Edit Source&#8221;, add below script and save it. &lt;scripttype=&#8221;text/javascript&#8221;&gt;document.addEventListener(&#8216;DOMContentLoaded&#8217;, function(){ varua=window.navigator.userAgent;if(ua.indexOf(&#8216;MSIE&#8217;)&gt;0||ua.indexOf(&#8216;Trident/&#8217;)&gt;0||ua.indexOf(&#8216;Edge/&#8217;)&gt;0){ $(&#8220;a[id^=&#8217;Ribbon.ListForm.Edit.Commit.Publish-Large&#8217;]&#8221;).hide();varsaveButtonRibbon=document.getElementById(&#8216;Ribbon.ListForm.Edit.Commit.Publish-Large&#8217;);if(saveButtonRibbon&amp;&amp;saveButtonRibbon.style){ saveButtonRibbon.style.display=&#8221;none&#8221;; } } }); &lt;/script&gt; &nbsp; Edit this content editor webpart and make it hidden as needed. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "248",
    "name": "248 - Configure Portal Security settings for user redirection.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/248%20-%20Configure%20Portal%20Security%20settings%20for%20user%20redirection.html",
    "title": "Configure Portal Security Settings For User Redirection",
    "text": "Configure Portal Security settings for user redirection - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Portal Security settings for user redirection Configure Portal Security settings for user redirection 2375 views 1 min , 16 sec read 0 Applies To: Both SharePoint On-Premises and SharePoint Online Description: This article describes different possible security settings in Portal that redirects certain users automatically to home page of Portal. This article also describes steps to configure different page as the default redirection page instead of home page of the portal. Normal 0 false false false EN-US X-NONE X-NONE How to configure security settings for end users in Portal? Portal security settings will auto redirect the end users into Portal site. There are two ways to achieve this and any one of the below two options is sufficient to configure the Portal security settings. Go to Portal site home page &#8211;&gt; Portal Settings &#8211;&gt; Portal Security settings sections and configure the settings like below 1. Main Site Access group: Create a SharePoint group and add all your technicians into that group. Configure Security Settings like below. These settings will automatically redirect to Portal site for the users who are not members of this group. Select Site: select the back end site (Helpdesk site) from the drop down. SharePoint Group Name: It is a text field, please enter the SharePoint group name manually. Normal 0 false false false EN-US X-NONE X-NONE 2. Portal only access group: Create a SharePoint group and add all the end users into the group. Configure Security Settings like below. These settings will automatically redirect to Portal site for the users who are in this group. Note: Please make sure that everyone has permissions to view members of that group. Go to Site Settings &#8211;&gt;People and group &#8211;&gt; go to the newly created SharePoint group &#8211;&gt; Settings &#8211;&gt; configure the group settings as shown in below image How to redirect end users automatically to portal new ticket form page (with additional parameters) instead of home page? If the users should be redirected to a different page say Portal newform (with additional parameters) instead of Portal home page, please find instructions below. 1. After configuring security settings in Portal, a javascript file will be generated in the site assets document library of backend site (Site Assets/ConfigPortal/CCSPortalJSLink.js) 2. Download and replace URL value of &#8220;objSettings.RedirectURL&#8221; property in the js file. 3. Upload and replace the existing js file. Please Refer #3 of https://www.crowcanyon.help/article/197 to construct the URL of Quick Tickets so that the forms get loaded with the default set values. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "249",
    "name": "249 - How to upgrade Crow Canyon apps in O365_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/249%20-%20How%20to%20upgrade%20Crow%20Canyon%20apps%20in%20O365_.html",
    "title": "How To Upgrade Crow Canyon Apps In O365",
    "text": "How to upgrade Crow Canyon apps in O365? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to upgrade Crow Canyon apps in O365? How to upgrade Crow Canyon apps in O365? 1209 views Less than a minute 0 Instructions for adding an app into App Catalog: 1. Log on to Office 365 Account &nbsp;&nbsp; 2. Click on the App Launcher Icon , available on the Top Left Corner of the Site. Click on Admin Tile Highlighted above. Note: The Admin tile appears only to Office 365 administrators. Clicking on the Tile will open up the Office 365 Admin Center. In the lower-left navigation, expand Admin and open SharePoint. On Clicking SharePoint will open up a SharePoint Admin Center. Click on apps in the Left Navigation Pane. Click on App Catalog from the App menu Click on Apps for SharePoint from the Quick Launch Drag and drop the app files into this library or Click on New button, upload the app files and hit Save. Refer below image. After adding the app files into app catalog of the tenancy, go to site contents of the site, click add an app, add the required app. Instructions for Upgrading an Existing App: Drag and drop the latest version of app into the App Catalog or Click on New button, upload the app file, Click on &quot;Replace It&quot;. Go to the Site &#8211;&gt; Site Contents &#8211;&gt; App&#8211;&gt; Click on &quot;About&quot; Click on &quot;Get It&quot; &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "25",
    "name": "25 - How to configure Email functionality in Crow Canyon Print App (Share)_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/25%20-%20How%20to%20configure%20Email%20functionality%20in%20Crow%20Canyon%20Print%20App%20%28Share%29_.html",
    "title": "How To Configure Email Functionality In Crow Canyon Print App (Share)",
    "text": "How to configure Email functionality in Crow Canyon Print App (Share)? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Email functionality in Crow Canyon Print App (Share)? How to configure Email functionality in Crow Canyon Print App (Share)? 909 views Less than a minute 0 Instructions to configure Email functionality in Crow Canyon Print App:- 1. Please download the list template of CrowCanyonAppsEmails list from CrowCanyonAppsEmails 2. Add CrowCanyonAppsEmails.stp to the list template gallery of the site collection. (Go to Site Settings &#8211;&gt; go to top level settings &#8211;&gt; List templates (in Web Designer Galleries section) &#8211;&gt; upload CrowCanyonAppsEmail.stp file. Give a title for this template and click &#8220;Save&#8221;. 3. Go to Crow Canyon application and create a list using this list template (go to Site Contents &#8211;&gt; Add app&#8211;&gt; search with CrowCanyonAppsEmails and create a list using this template). 4. Go to Crow Canyon Workflow Manager app and configure a workflow on CrowCanyonAppsEmails list like shown below. a) Mail Template configuration: Go to CrowCanyon Workflow Manager app &#8211;&gt; Manage Mail Templates&#8211;&gt; Create a new mail template on CrowCanyonAppsEmails list like below. b) Workflow configuration: Go to CrowCanyon Workflow Manager app &#8211;&gt; Create new workflow on &#8220;Item Modified&#8221; event of CrowCanyonAppsEmails list like shown below. Send Mail Action: Note: This feature is added in v1.0.025 of Crow Canyon Print app. Refer this article for app upgrade instructions : https://www.crowcanyon.help/article/249 &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "250",
    "name": "250 - How to configure Email functionality in Crow Canyon Print App (Share)_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/250%20-%20How%20to%20configure%20Email%20functionality%20in%20Crow%20Canyon%20Print%20App%20%28Share%29_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Configure Email Functionality In Crow Canyon Print App (Share) Crow Canyon Software Suppor",
    "text": "How to configure Email functionality in Crow Canyon Print App (Share)? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Email functionality in Crow Canyon Print App (Share)? How to configure Email functionality in Crow Canyon Print App (Share)? 909 views Less than a minute 0 Instructions to configure Email functionality in Crow Canyon Print App:- 1. Please download the list template of CrowCanyonAppsEmails list from CrowCanyonAppsEmails 2. Add CrowCanyonAppsEmails.stp to the list template gallery of the site collection. (Go to Site Settings &#8211;&gt; go to top level settings &#8211;&gt; List templates (in Web Designer Galleries section) &#8211;&gt; upload CrowCanyonAppsEmail.stp file. Give a title for this template and click &#8220;Save&#8221;. 3. Go to Crow Canyon application and create a list using this list template (go to Site Contents &#8211;&gt; Add app&#8211;&gt; search with CrowCanyonAppsEmails and create a list using this template). 4. Go to Crow Canyon Workflow Manager app and configure a workflow on CrowCanyonAppsEmails list like shown below. a) Mail Template configuration: Go to CrowCanyon Workflow Manager app &#8211;&gt; Manage Mail Templates&#8211;&gt; Create a new mail template on CrowCanyonAppsEmails list like below. b) Workflow configuration: Go to CrowCanyon Workflow Manager app &#8211;&gt; Create new workflow on &#8220;Item Modified&#8221; event of CrowCanyonAppsEmails list like shown below. Send Mail Action: Note: This feature is added in v1.0.025 of Crow Canyon Print app. Refer this article for app upgrade instructions : https://www.crowcanyon.help/article/249 &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "251",
    "name": "251 - How to configure column Permissions using Crow Canyon Forms Manager_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/251%20-%20How%20to%20configure%20column%20Permissions%20using%20Crow%20Canyon%20Forms%20Manager_.html",
    "title": "How To Configure Column Permissions Using Crow Canyon Forms Manager",
    "text": "How to configure column Permissions using Crow Canyon Forms Manager? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure column Permissions using Crow Canyon Forms Manager? How to configure column Permissions using Crow Canyon Forms Manager? 1019 views Less than a minute 0 In this article we have configured a column permission using Crow Canyon Forms Manager.&nbsp; Use Case: In Tickets list, hide &quot;Closed Date&quot; column in list forms dynamically when the &quot;Request Status&quot; is not equal to Closed. Configuration: Go to Application Administration &#8211;&gt; Crow Canyon Apps &#8211;&gt; Crow Canyon Forms Manager &#8211;&gt; Select &quot;Tickets&quot; list &#8211;&gt;Column Permissions tab &#8211;&gt; Configure Column Permission on &quot;Closed date&quot; like below. Output: After configuring these settings, Closed Date column will be hide when the Request Status is not equal to Closed. &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "253",
    "name": "253 - Configure a workflow using Crow Canyon workflow manager to notify ticket requester on resolving a ti.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/253%20-%20Configure%20a%20workflow%20using%20Crow%20Canyon%20workflow%20manager%20to%20notify%20ticket%20requester%20on%20resolving%20a%20ti.html",
    "title": "Configure A Workflow Using Crow Canyon Workflow Manager To Notify Ticket Requester On Resolving A Ti",
    "text": "Configure a workflow using Crow Canyon workflow manager to notify ticket requester on resolving a ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a workflow using Crow Canyon workflow manager to notify ticket requester on resolving a ticket Configure a workflow using Crow Canyon workflow manager to notify ticket requester on resolving a ticket 2648 views Less than a minute 0 Applies to : SharePoint OnPremise Helpdesk v3.0 and SharePoint Online Description: Default status options in standard v3.0 Helpdesk application are &quot;Unassigned&quot;, &quot;Assigned&quot; and &quot;Closed&quot;. If another status &quot;Resolved&quot; is needed, it can be added to the &quot;Request Status&quot; column as another possible option. Now, we would like capture the date when the ticket is resolved also send an email to requester. To achieve this, we can configure workflows using Workflow Manager solution/App. Summary of Steps: 1. Add &quot;Resolved&quot; option to &quot;Request Status&quot; column in Tickets list. Also, add &quot;Resolved Date&quot; date and time column to Tickets list. 2. Create a workflow on tickets list item update event with a condition of Request Status after change equals to Resolved that could update Resolved Date and send mail to requester. Detailed Steps: 1. Go to Crow Canyon workflow manager, create a workflow on Tickets list item modified event with a condition like shown in below image. 2. Configure a send mail action like shown below to notify Requetser. Create/configure a mail template as needed. 3. Configure an Update Item action like shown below to capture &quot;Resolved Date&quot; upon resolving a ticket. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "254",
    "name": "254 - How to configure a workflow to auto close a ticket after 2 days from its ‘Resolved’ status - Crow Ca.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/254%20-%20How%20to%20configure%20a%20workflow%20to%20auto%20close%20a%20ticket%20after%202%20days%20from%20its%20%E2%80%98Resolved%E2%80%99%20status%20-%20Crow%20Ca.html",
    "title": "How To Configure A Workflow To Auto Close A Ticket After 2 Days From Its ‘Resolved’ Status Crow Ca",
    "text": "How to configure a workflow to auto close a ticket after 2 days from its ‘Resolved’ status - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a workflow to auto close a ticket after 2 days from its &#8216;Resolved&#8217; status How to configure a workflow to auto close a ticket after 2 days from its &#8216;Resolved&#8217; status 1268 views Less than a minute 0 To auto close ticket based on the &#8216;Resolved&#8217; status. Applies To: Sharepoint On-premises and Online Description: Once the ticket is resolved, someone have to close the ticket. If no one close the ticket after &quot;x&quot; number of days, we may want to close the ticket automatically. In this example, we configure a workflow to auto close the ticket 2 days after it is resolved. Design: Configure a Timer based workflow with update item action to auto close tikcet after 2days of its resolved status using Workflow Manager. Refer this article for configuring a workflow to update Resolved Date on resolving a ticket. &nbsp;&nbsp;&nbsp; Implementation: Step-1: Create a timer based workflow on Tickets list based on &quot;Resolved Date&quot; with conditions shown in below image. Step-2: Configure a update item action on Tickets list to update the ticket status. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "255",
    "name": "255 - How to add images in Print templates of Crow Canyon Print Manager app_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/255%20-%20How%20to%20add%20images%20in%20Print%20templates%20of%20Crow%20Canyon%20Print%20Manager%20app_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Add Images In Print Templates Of Crow Canyon Print Manager App Crow Canyon Software Suppor",
    "text": "How to add images in Print templates of Crow Canyon Print Manager app? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add images in Print templates of Crow Canyon Print Manager app? How to add images in Print templates of Crow Canyon Print Manager app? 1737 views Less than a minute 0 Applies to: SharePoint online Description Crow Canyon Print Manager provides rich text editor to configure print templates so we can insert images using html image tag, however, if we user &#8220;Send Email&#8221; function/button directly send the content with html image tag so image may not appears if user does not have permissions to read image from the source location. Another limitation is, &#8220;Export to PDF&#8221; function does not show the image. To address these two limitations we can insert the base 64 images in the print templates so it works in both Email and Print functions. This article describes the steps to insert base 64 images in Crow Canyon Print template. Please click here to convert Image into base64. Browse the image in your local machine and copy the image source (see below image). Now go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Advanced Print app &#8211;&gt; Edit the List/Item template and insert the Image source in html tags like shown in below image. Sample print template after inserting the base 64 image &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "256",
    "name": "256 - How to upgrade Crow Canyon Provider Hosted Apps (Email Sync, Nitro Workflows, Advanced Approvals) -.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/256%20-%20How%20to%20upgrade%20Crow%20Canyon%20Provider%20Hosted%20Apps%20%28Email%20Sync%2C%20Nitro%20Workflows%2C%20Advanced%20Approvals%29%20-.html",
    "title": "How To Upgrade Crow Canyon Provider Hosted Apps (Email Sync, Nitro Workflows, Advanced Approvals)",
    "text": "How to upgrade Crow Canyon Provider Hosted Apps (Email Sync, Nitro Workflows, Advanced Approvals) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to upgrade Crow Canyon Provider Hosted Apps (Email Sync, Nitro Workflows, Advanced Approvals) How to upgrade Crow Canyon Provider Hosted Apps (Email Sync, Nitro Workflows, Advanced Approvals) 1040 views 1 min , 40 sec read 2 Applies to : Sharepoint Online. Description : All Crow Canyon provider hosted apps(Workflow Manger, Advanced Approvals, Email Sync) now have Site Collection level permissions, these apps should be installed in the root site preferably and there is no need to install in sub-sites. Steps provided below will guide you to move the apps to root site and create a link in the sub-sites to the app. Step 1 : Download zip files from CrowCanyon.ApprovalWorkflow, CrowCanyon.EmailSync , and CrowCanyon.WorkflowManager , extract the apps and add to the app catalog. Step 2 : Remove the old app from the web (Sub-Site) Step 3 : Add the new app to the root web (root-site) Step 4 : Right click on the app and click &#8216;Copy Link address&#8217; (Google Chrome) or &#8216;Copy Shortcut&#8217; (Internet Explorer) or &#8216;Copy Link Location&#8217; (Mozilla Firefox) to copy the app link. An app link like &#8216; https://companyname.sharepoint.com/sites/nitro/_layouts/15/appredirect.aspx ? instance_id={25EBAB29-FF45-4E84-764F-A9C9E14252464} &#8216; will be copied. Step 5: Now append &#8220;&amp;redirect_uri=[[Your Sub-Site URL]]&amp;webId=[[Your Sub-Site Id]]&#8221; at the end of the link copied in the above step. The result link will be like &#8216; https://companyname.sharepoint.com/sites/nitro/_layouts/15/appredirect.aspx ? instance_id= {25EBAB29-FF45-4E84-764F-A9C9E14252464} &amp;redirect_uri=https://companyname.sharepoint.com/sites/nitro/itpremium&amp; webId= d205fdef-840a-4c11-919e-469114e84265&#8242; To get your subsite id use rest api call &#8220;[[Sub-Site Url]]+/_api/web/id&#8221; from your browser . Eg: &#8216;https://companyname.sharepoint.com/sites/nitro/itpremium/_api/web/id&#8217;. you will get your Sub-Site Id(web id) in the browser Repeat above steps for &#8220;Email Sync, Nitro Workflows, Advanced Approval&#8221; apps and construct URLs. Download &#8216;CCSProviderHosted.txt&#8217; file from CCSProviderHosted , edit the file and replace the text &#8220;##NitroWorkflowsLink##&#8221;, &#8220;##EmailSyncLink##&#8221;, &#8220;##AdvancedApprovalsLink##&#8217; with the respective App links that were constructed in the above steps. Upload &#8216;CCSProviderHosted.txt&#8217; file to CrowCanyon folder of Site Assets library in sub-site after updating the links as mentioned in the above step. Now go to your subsite and open &#8216;Tiles&#8217; list and switch to &#8216;All Promoted Links&#8217; view of the list. Find the items with title &#8216;Crow Canyon Workflow Manager App&#8217;, &#8216;Crow Canyon Approval Workflow App&#8217;, &#8216;Crow Canyon Email Sync App&#8217; and delete them. Now go to Application Administration, navigate to &#8216;Crow Canyon NITRO Apps&#8217; or &#8216;Crow Canyon Apps&#8217; page, edit the page and add a content editor web part to &#8216;Middle Column&#8217; zone. Edit the content editor web part, in the Content Link section give the link of the file (CCSProviderHosted.txt) that was added to the &#8216;Crow Canyon&#8217; folder in Site Assets library. In the Appearance section select Chrome Type as &#8216;None&#8217;, in the Layout section give Zone Index &#8216;5&#8217; and click on ok. &nbsp; OUTPUT : We will see three tiles under Crow Canyon Provider Hosted Apps section as shown in the below screenshot. &nbsp; Note : One who has manage web permissions on the sub site can only use and configure these apps. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "257",
    "name": "257 - How to address missing tickets creation for incoming emails due to list view threshold limit_ - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/257%20-%20How%20to%20address%20missing%20tickets%20creation%20for%20incoming%20emails%20due%20to%20list%20view%20threshold%20limit_%20-%20Crow.html",
    "title": "How To Address Missing Tickets Creation For Incoming Emails Due To List View Threshold Limit Crow",
    "text": "How to address missing tickets creation for incoming emails due to list view threshold limit? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to address missing tickets creation for incoming emails due to list view threshold limit? How to address missing tickets creation for incoming emails due to list view threshold limit? 1012 views Less than a minute 0 Indexing email tickets list columns where items treshold limit is exceeded Applies to: SharePoint Online Description : It is possible that sometimes email to ticket conversion fails as item create event might be missed. To address this our product maintenance service will periodically check and takes the necessary actions to get the tickets created. If the &quot;Email Tickets&quot; list is reached to list view threshold (5000 items), then our service cannot read the missing email information. To avoid this list view threshold conflicts, we need to configure indices for below columns in &quot;Email Tickets&quot; list. 1. Parent Item 2. Related Ticket ID 3. Created To create indexed columns, go to Email Tickets List settings, click on Indexed Columns. It shows all the existing indexed columns if any. Click &quot;Create new index&quot; link and create index for above columns as needed (Sample screenshots below). &nbsp; &nbsp; Note: We can create only up to 20 index columns per list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "258",
    "name": "258 - How to use Crow Canyon Product App to execute the functionality for the missing events on Email Tick.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/258%20-%20How%20to%20use%20Crow%20Canyon%20Product%20App%20to%20execute%20the%20functionality%20for%20the%20missing%20events%20on%20Email%20Tick.html",
    "title": "How To Use Crow Canyon Product App To Execute The Functionality For The Missing Events On Email Tick",
    "text": "How to use Crow Canyon Product App to execute the functionality for the missing events on Email Tickets and Tickets list? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to use Crow Canyon Product App to execute the functionality for the missing events on Email Tickets and Tickets list? How to use Crow Canyon Product App to execute the functionality for the missing events on Email Tickets and Tickets list? 1288 views Less than a minute 1 Process missed Email to Ticket conversion manually using Product app Applies to: SharePoint Online Description: All different features like email to ticket conversion, auto-notifications, auto-assignment, case-id generation etc. are handled by Crow Canyon Product App. This app captures different events (Item Created, Item Updated) on Email Tickets and Tickets lists. It is rare but possible that sometimes event fire might miss due to Azure outage or other intermittent issues, so functionality might not be executed as intended. This article will help executing the functionality for such rare cases on Email Tickets and Ticket list items. Steps to run Crow Canyon Product app manually: Go to Application Administration&#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon Product App (We can find this app from Site Contents also). Enter Ticket/Email Ticket list item Id and click &quot;Process&quot; button to process missing events. See comments in the below screen shot for more details. Note: In our application, there will be only on Tickets (Tickets/Requests/Work Orders) list but we can configure multiple emails lists. If there are multiple emails lists configured, then we need to choose the right emails list and enter item id to process the missing events on emails. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "259",
    "name": "259 - How to Create a Web Part Page page_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/259%20-%20How%20to%20Create%20a%20Web%20Part%20Page%20page_.html",
    "title": "How To Create A Web Part Page Page",
    "text": "How to Create a Web Part Page page? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Create a Web Part Page page? How to Create a Web Part Page page? 2113 views Less than a minute 1 Creation of workspace page Aplies to: SharePoint On-Premises and Online Process: Web Part page (Workspace) is intended to get cumulative information like list items, reports, assinged tasks, unassinged tasks at a single page. To create a web part page (Workspace), go to site contents &#8211;&gt; Site Pages library, click on files menu in ribbon, and add a web part page Specify the page name, choose the appropriate layout, and select the target document library (Workspaces library in our application in general) as shown below: Now an empty web part page (workspace) is created. As per the requirement the content can be added to this page like reports, list views, list search, home tiles, home arcs etc. using custom web parts as needed. Refer below article for more information on how to configure Workspace: https://www.crowcanyon.help/article/271 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "26",
    "name": "26 - How to configure a report in Workspace pages_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/26%20-%20How%20to%20configure%20a%20report%20in%20Workspace%20pages_.html",
    "title": "How To Configure A Report In Workspace Pages",
    "text": "How to configure a report in Workspace pages? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a report in Workspace pages? How to configure a report in Workspace pages? 1832 views Less than a minute 0 Report configuration in workspace page Applies to: SharePoint On-premisis Please refer this https://www.crowcanyon.help/article/271 article for more details on how to create and configure workspace page. &nbsp; Description: To show the charts representation of the data, we can add Calculated table webpart to a web part page. 1. Edit workspace page and add calculated table webpart to the page. 2. Edit calculated table webpart in the page and configure report. Detailed steps to configure a report in workspace page: 1. Add Crow Canyon Calculated Table webpart to the page. Edit the webpart page &#8211;&gt; Add a Webpart &#8211;&gt; Add Calculated webpart from &quot;CrowCanyon&quot; folder to the page. Note: If Calculated Table web part is not visible in Crow Canyon folder, activate CrowCanyon Calculated Table site collection feature (go to Site Settings &#8211;&gt; Go to top level site settings &#8211;&gt; Activate Crow Canyon Calculated Table feature). 2. Once Calculated table web part is added to the page, click edit button in the web part to configure a report as needed in workspace page. Please refer &quot;Reporting&quot; section for reports manual from http://www.crowcanyon.info/sharepoint-manuals-37/index.html For sample reports configuration please refer https://www.crowcanyon.help/article/239 &nbsp;&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "260",
    "name": "260 - How to configure a report in Workspace pages_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/260%20-%20How%20to%20configure%20a%20report%20in%20Workspace%20pages_.html",
    "title": "How To Configure A Report In Workspace Pages",
    "text": "How to configure a report in Workspace pages? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a report in Workspace pages? How to configure a report in Workspace pages? 1832 views Less than a minute 0 Report configuration in workspace page Applies to: SharePoint On-premisis Please refer this https://www.crowcanyon.help/article/271 article for more details on how to create and configure workspace page. &nbsp; Description: To show the charts representation of the data, we can add Calculated table webpart to a web part page. 1. Edit workspace page and add calculated table webpart to the page. 2. Edit calculated table webpart in the page and configure report. Detailed steps to configure a report in workspace page: 1. Add Crow Canyon Calculated Table webpart to the page. Edit the webpart page &#8211;&gt; Add a Webpart &#8211;&gt; Add Calculated webpart from &quot;CrowCanyon&quot; folder to the page. Note: If Calculated Table web part is not visible in Crow Canyon folder, activate CrowCanyon Calculated Table site collection feature (go to Site Settings &#8211;&gt; Go to top level site settings &#8211;&gt; Activate Crow Canyon Calculated Table feature). 2. Once Calculated table web part is added to the page, click edit button in the web part to configure a report as needed in workspace page. Please refer &quot;Reporting&quot; section for reports manual from http://www.crowcanyon.info/sharepoint-manuals-37/index.html For sample reports configuration please refer https://www.crowcanyon.help/article/239 &nbsp;&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "261",
    "name": "261 - How to add a report app in Workspace page_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/261%20-%20How%20to%20add%20a%20report%20app%20in%20Workspace%20page_.html",
    "title": "How To Add A Report App In Workspace Page",
    "text": "How to add a report app in Workspace page? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add a report app in Workspace page? How to add a report app in Workspace page? 1906 views Less than a minute 0 Add report to workspace page Applies to: SharePoint online Please refer this https://www.crowcanyon.help/article/271 article for more details on how to create and configure workspace page. Description: To show the charts representation of the data, we can add Crow Canyon reports app to a web part page. 1. Create a report using Crow Canyon Report app 2. Edit Page and add the required report to the page 3. Edit the report app and link the required reprot created in #1. Detailed instructions to add a report in workspace page: 1. Create a desired report, refer &quot;Charts, Dashboards and Reports&quot; section from this article https://www.crowcanyon.info/nitro/appmanual_v1/ 2. Add report by edit the webpart page &#8211;&gt; Add a webpart &#8211;&gt; Add CrowCanyon Report app from Apps folder as shown in below screenshot 3.&nbsp; Edit CrowCanyon Report app webpart and select the report from the dropdown that you want to add to the webpart page, enter title and other desired proprties in the tool part and save. See sample screenshots below. Specify the Report Title in web part tool pane and save the page settings. For sample reports, refer https://www.crowcanyon.help/article/239 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "263",
    "name": "263 - How to add Crow Canyon List search webpart to workspace page_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/263%20-%20How%20to%20add%20Crow%20Canyon%20List%20search%20webpart%20to%20workspace%20page_.html",
    "title": "How To Add Crow Canyon List Search Webpart To Workspace Page",
    "text": "How to add Crow Canyon List search webpart to workspace page? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add Crow Canyon List search webpart to workspace page? How to add Crow Canyon List search webpart to workspace page? 1878 views Less than a minute 0 Add list search web part Applies to: SharePoint On-premises Please refer this https://www.crowcanyon.help/article/271 article for more details on how to create and configure workspace page. &nbsp; Summary of steps: 1. Edit workspace page and add Crow Canyon List Search webpart to the page. 2. Edit list search webpart in the page and configure it. Detailed steps : 1. Add CrowCanyon List Search webpart to the page. &#8211; Edit the webpart page &#8211;&gt; Add a webpart &#8211;&gt; Add CrowCanyon List Search webpart from &#8220;CrowCanyon&#8221; folder to the page. Note: If the Crow Canyon List Search webpart in not available in the CrowCanyon folder, please activate the Crow Canyon List search feature from Site Collection features (Go to root Site settings -&gt; Site Collection Features and activate the Crow Canyon ) 2. Edit the CrowCanyon List search webpart in the page and configure it. &#8211; Select the lists on which list search should be configured along with default search mode (simple search/advanced search). For more details regarding List Search, please refer http://www.crowcanyon.info/sharepoint-manuals-37/index.html &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "264",
    "name": "264 - How to add a list view web part to a Workspace (Web Part page)_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/264%20-%20How%20to%20add%20a%20list%20view%20web%20part%20to%20a%20Workspace%20%28Web%20Part%20page%29_.html",
    "title": "How To Add A List View Web Part To A Workspace (Web Part Page)",
    "text": "How to add a list view web part to a Workspace (Web Part page)? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add a list view web part to a Workspace (Web Part page)? How to add a list view web part to a Workspace (Web Part page)? 2466 views Less than a minute 0 Add list view webapart to the page Applies to: SharePoint Online and On-premisis Description: To add any list view web part to a web part page, we have to open the page where we want to add web part, edit page, add the desired list to the page. Always default view of list will be added to the page so we can edit the list view web part and configrue current view to show desired columns with required sorting, filtering etc. In this article, we are adding &quot;Overdue Tickets&quot; list view web part to a workspace. Detailed Steps: 1. Open the web part page, edit web part page &#8211;&gt; click on &quot;Add a webpart&quot; in the zone that we want to add &#8211;&gt; Choose &quot;Tickets&quot; list view webpart under &quot;Apps&quot; categoty, add to the page. 2. After adding Tickets list view webpart to the page, edit list view webpart and configrue further as shown below to show Overdue Tickets. 3. Edit the current view to configure the filter as show in below screenshot. If a view is already present in the tickets list, we can directly select the view instead of editing the current view. filter settings: Refer below article for more information on how to configrue Workspace page https://www.crowcanyon.help/article/271 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "265",
    "name": "265 - How to build a report to show Open tickets vs Closed tickets by month_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/265%20-%20How%20to%20build%20a%20report%20to%20show%20Open%20tickets%20vs%20Closed%20tickets%20by%20month_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Build A Report To Show Open Tickets Vs Closed Tickets By Month Crow Canyon Software Suppor",
    "text": "How to build a report to show Open tickets vs Closed tickets by month? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build a report to show Open tickets vs Closed tickets by month? How to build a report to show Open tickets vs Closed tickets by month? 2603 views Less than a minute 0 Report on Open tickets vs Closed tickets Applies to: SharePoint On-premises Description: Build a report to show the number of Open ticket vs Closed tickets by month 1. Create a calculated column &quot;Open/Close&quot; with formula like below: =IF(OR([Request Status]=&quot;Resolved&quot;,[Request Status]=&quot;Closed&quot;),&quot;Closed&quot;,&quot;Still Open&quot;) 2. If we are intended to show the report on filtered view like only one year items etc., create a filtered view like shown below which shows the tickets created/closed for the 2017 year. If we would like to build report on all ticket, we can use &quot;All Items&quot; view. 3. Create a report like shown below using this filtered view Sample report preview: &nbsp;For more sample reports refer https://www.crowcanyon.help/article/239 &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "266",
    "name": "266 - How to Roundup a column “Elapsed hours” into blocks of 5_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/266%20-%20How%20to%20Roundup%20a%20column%20%E2%80%9CElapsed%20hours%E2%80%9D%20into%20blocks%20of%205_.html",
    "title": "How To Roundup A Column “Elapsed Hours” Into Blocks Of 5",
    "text": "How to Roundup a column “Elapsed hours” into blocks of 5? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Roundup a column &#8220;Elapsed hours&#8221; into blocks of 5? How to Roundup a column &#8220;Elapsed hours&#8221; into blocks of 5? 1741 views Less than a minute 0 Report on elapsed hours Applies to: SharePoint On-premisis Requirement: Round up a column &quot;Elapsed hours&quot; into blocks of 5 and build a report based on it (Eg: 177 to 180, 53 to 55). &#8211; Create a calculated column with formula: =CEILING([Elapsed Hours],5) to round up value of the column to 5 and use this column in the reports. &#8211; Create a report like shown below Sample report preview: &nbsp;For more sample reports refer https://www.crowcanyon.help/article/239 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "267",
    "name": "267 - How to build a report to show the tickets which are created in previous month but closed in current.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/267%20-%20How%20to%20build%20a%20report%20to%20show%20the%20tickets%20which%20are%20created%20in%20previous%20month%20but%20closed%20in%20current.html",
    "title": "How To Build A Report To Show The Tickets Which Are Created In Previous Month But Closed In Current",
    "text": "How to build a report to show the tickets which are created in previous month but closed in current month? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build a report to show the tickets which are created in previous month but closed in current month? How to build a report to show the tickets which are created in previous month but closed in current month? 1598 views Less than a minute 0 Report on Previous month tickets carry forwarded to current month Applies to: SharePoint On-premises and SharePoint Online. Requirement:&nbsp; To build a report to show the tickets which are created in previous month but closed in current month. Steps: 1. Create below calculated columns in the Tickets list. Title Formula Return type NextMonthFirstDay =DATE(YEAR(Created),MONTH(Created)+1,1) Date Only NextMonthLastDay =DATE(YEAR(Created),MONTH(Created)+2,0) Date Only ClosedButDelayed =IF([Closed Date]&gt;=[NextMonthFirstDay], &quot;Yes&quot;, &quot;No&quot;) Single line of text 2. Create a view with filter conditions like shown below. &#8211; This view can be either used in Crow Canyon Report Center or Tiles webpart to see the count of tickets which are created in previous month but closed in current month. Refer &quot;Calculated Table&quot; or &quot;Tiles&quot; section in this URL for more details: http://www.crowcanyon.info/manuals/webparts/index.html For more sample reports refer https://www.crowcanyon.help/article/239 &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "268",
    "name": "268 - How to build a report to see the average number of days tickets are open_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/268%20-%20How%20to%20build%20a%20report%20to%20see%20the%20average%20number%20of%20days%20tickets%20are%20open_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Build A Report To See The Average Number Of Days Tickets Are Open Crow Canyon Software Sup",
    "text": "How to build a report to see the average number of days tickets are open? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build a report to see the average number of days tickets are open? How to build a report to see the average number of days tickets are open? 1746 views Less than a minute 0 Report on average number of days tickets are open Requirement: Create a report to see the average number of days tickets are open. 1. Create a calculated column &#8220;Days Open&#8221; (number type) in Tickets list with formula: =IF(ISERROR(DATEDIF(Created,[Closed Date],&#8221;d&#8221;)),&#8221;0&#8243;,DATEDIF(Created,[Closed Date],&#8221;d&#8221;)) 2. Create a report like below using the average function on &#8220;Days Open&#8221; calculated column For more sample reports refer https://www.crowcanyon.help/article/239 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "269",
    "name": "269 - How to configure a report to see average ticket assignment time in hours_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/269%20-%20How%20to%20configure%20a%20report%20to%20see%20average%20ticket%20assignment%20time%20in%20hours_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Configure A Report To See Average Ticket Assignment Time In Hours Crow Canyon Software Sup",
    "text": "How to configure a report to see average ticket assignment time in hours? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a report to see average ticket assignment time in hours? How to configure a report to see average ticket assignment time in hours? 2014 views Less than a minute 0 Report on average ticket assignment time Applies to: SharePoint Online Requirement: Configure a report to see average ticket assignment time in hours. 1. Create a column &#8220;FirstAssignmentDate&#8221; (Date-Time type) in Tickets list to capture the first assignment time. 2. Configure a workflow like shown below to capture FirstAssignmentDate of the ticket. Go to Application Administration -&gt; Crow Canyon NITRO Workflows and configure workflow as shown below. Configure Update item Action like below in this workflow: 3. Create a calculated column &#8220;Hours Unassigned&#8221; in Tickets list with below formula: =IF(FirstAssignmentDate&gt;Created,ROUND((FirstAssignmentDate-Created)*24,0),&#8221;0&#8243;) 4. After creating &#8220;Hours Unassigned&#8221; column, create a report like below based on it. For more sample reports refer https://www.crowcanyon.help/article/239 &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "27",
    "name": "27 - How to build a report to see number of tickets created on week days_week ends_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/27%20-%20How%20to%20build%20a%20report%20to%20see%20number%20of%20tickets%20created%20on%20week%20days_week%20ends_.html",
    "title": "How To Build A Report To See Number Of Tickets Created On Week Days Week Ends",
    "text": "How to build a report to see number of tickets created on week days/week ends? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build a report to see number of tickets created on week days/week ends? How to build a report to see number of tickets created on week days/week ends? 1820 views Less than a minute 0 Report on weekdays Applies to: SharePoint Online Requirement: Build a report to see number of tickets created on Week days/Week ends. 1.&nbsp; Configure a report like shown below using &quot;Day of Week&quot; function on Date/Time columns: For more sample reports refer https://www.crowcanyon.help/article/239 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "270",
    "name": "270 - How to build a report to see number of tickets created on week days_week ends_ - Crow Canyon Softwar.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/270%20-%20How%20to%20build%20a%20report%20to%20see%20number%20of%20tickets%20created%20on%20week%20days_week%20ends_%20-%20Crow%20Canyon%20Softwar.html",
    "title": "How To Build A Report To See Number Of Tickets Created On Week Days Week Ends Crow Canyon Softwar",
    "text": "How to build a report to see number of tickets created on week days/week ends? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to build a report to see number of tickets created on week days/week ends? How to build a report to see number of tickets created on week days/week ends? 1820 views Less than a minute 0 Report on weekdays Applies to: SharePoint Online Requirement: Build a report to see number of tickets created on Week days/Week ends. 1.&nbsp; Configure a report like shown below using &quot;Day of Week&quot; function on Date/Time columns: For more sample reports refer https://www.crowcanyon.help/article/239 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "271",
    "name": "271 - How to create and configure a Workspace in Crow Canyon Application_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/271%20-%20How%20to%20create%20and%20configure%20a%20Workspace%20in%20Crow%20Canyon%20Application_.html",
    "title": "How To Create And Configure A Workspace In Crow Canyon Application",
    "text": "How to create and configure a Workspace in Crow Canyon Application? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create and configure a Workspace in Crow Canyon Application? How to create and configure a Workspace in Crow Canyon Application? 2255 views Less than a minute 0 Workspace page configuration Applies to: SharePoint On-premises and Online Procedure: Workspace: Workspace is an interactive access to libraries and lists. In crow canyon application there are different workspaces available like Staff workspace and Manager dashboard pages. For more details about Manager Workspace and Staff Workspace refer http://www.crowcanyon.info/sharepoint-manuals-37/index.html Overall process is to create a web part page, add required content like list view web parts, content editors with text as needed, charts/reports etc. Content varies based on the requirement. Below are the links to different FAQs that could help undestand the process of creating, and adding different types of content to the Workspace page. To create a Web Part Page (Workspace) in Sharepoint, refer: https://www.crowcanyon.help/article/259 To add list view webpart in workspace, refer: https://www.crowcanyon.help/article/264 To configure report in workspace, refer (for SharePoint On-premises): https://www.crowcanyon.help/article/260 refer (for SharePoint Online): https://www.crowcanyon.help/article/261 To configure CrowCanyon List Search webpart in workspace, refer (for SharePoint On-premises): https://www.crowcanyon.help/article/263 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "273",
    "name": "273 - Re-open a closed ticket in Crow Canyon Help Desk application from Employee portal - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/273%20-%20Re-open%20a%20closed%20ticket%20in%20Crow%20Canyon%20Help%20Desk%20application%20from%20Employee%20portal%20-%20Crow%20Canyon%20Soft.html",
    "title": "Re Open A Closed Ticket In Crow Canyon Help Desk Application From Employee Portal Crow Canyon Soft",
    "text": "Re-open a closed ticket in Crow Canyon Help Desk application from Employee portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Re-open a closed ticket in Crow Canyon Help Desk application from Employee portal Re-open a closed ticket in Crow Canyon Help Desk application from Employee portal 904 views Less than a minute 0 Applies to: SharePoint On-Premises Requirement: &#8211; Requester of the ticket should be able to reopen a resolved/closed ticket from Employee Portal. Summary of Steps: &#8211; 1. Create &#8220;Reopen Ticket&#8221; checkbox column in Tickets list 2. Add &#8220;Reopen Ticket&#8221; column to ticket form in portal 3. Configure column permissions so that &#8220;Reopen Ticket&#8221; column appears only in resolved/closed tickets. 4. Configure a workflow in workflow manager on item update event with required condition and update item action to reopen the ticket when &#8220;Reopen Ticket&#8221; column is checked and save. Detailed Steps:- 1. Go to Application Administation, Configure Lists, Configure Tickets, Create a new column &#8220;Reopen Ticket&#8221; (Yes/No type, Default value: No) in Tickets list. 2. Add the newly created field &#8220;Reopen Ticket&#8221; to Ticket edit form. Go to Portal site -&gt; Portal Settings -&gt; Portal Forms -&gt; Edit Ticket list forms -&gt; Switch to edit form and add &#8220;Reopen Ticket&#8221; column to the form. Configure column permissions on &#8220;Reopen Ticket&#8221; column in Portal to show it only for Resolved and Closed Tickets. Select the &#8220;Reopen Ticket&#8221; column and configure the column permissions as shown below. a) Hide &#8220;Reopen Ticket&#8221; column for everyone. b) Show &#8220;Reopen Ticket&#8221; column if &#8220;Request Status&#8221; is equal to Closed or Resolved. 4. Workflow Configuration: Configure a workflow on item modified event of tickets list to update &#8220;Request Status&#8221; value as &#8220;In Progress&#8221; with a condition &#8220;Reopen Ticket&#8221; afterchange equal Yes. This workflow will updates the ticket status to &#8220;In Progress&#8221; when the end user enables &#8220;Reopen Ticket&#8221; checkbox for closed tickets. a) Update Item Action: Configure an update item action like shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "274",
    "name": "274 - Column Placeholder values is empty in ticket auto notifications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/274%20-%20Column%20Placeholder%20values%20is%20empty%20in%20ticket%20auto%20notifications.html",
    "title": "Column Placeholder Values Is Empty In Ticket Auto Notifications",
    "text": "Column Placeholder values is empty in ticket auto notifications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Column Placeholder values is empty in ticket auto notifications Column Placeholder values is empty in ticket auto notifications 1037 views Less than a minute 0 Applies to: SharePoint On-premises and Online Issue : Column Placeholder value is empty in ticket auto notifications. Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE &#8211; Please make sure that the value is not empty in the tickets. &#8211; If the value is not empty in the ticket and it is showing empty in the auto notifications, there could be some possible hidden characters in the html source code of the mail template, remove the configured placeholder and type it manually to avoid this case. &#8211; To verify this, go to notification utilities, place cursor in the mail template, click &ldquo;Edit Source&rdquo; in the &ldquo;Format Text&rdquo; ribbon. Normal 0 false false false EN-US X-NONE X-NONE &#8211;&nbsp;There could be a chance of special/extra characters while pasting the text in multi-line rich text columns, always prefer to type them manually. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "277",
    "name": "277 - Troubleshoot Archival functionality issues.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/277%20-%20Troubleshoot%20Archival%20functionality%20issues.html",
    "title": "Troubleshoot Archival Functionality Issues",
    "text": "Troubleshoot Archival functionality issues - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshoot Archival functionality issues Troubleshoot Archival functionality issues 1301 views 2 min , 17 sec read 0 Applies To SharePoint On-premises Description Our archival feature is part of the &#8220;Crow Canyon Timer Jobs&#8221; solution and it verifies the Tickets that are closed &#8220;x&#8221; days before based on the &#8220;Archival Settings&#8221; utility and archive the Tickets along with associated items like Email History, Associated Tasks, etc. Pre-Requisites SharePoint Timer service should be in running state in all the SharePoint server(s) Crow Canyon Archival Timer job for the site collection should be active in SharePoint Central Administration. To validate this, go to the SharePoint Central Administration &#8211;&gt; Monitoring &#8211;&gt; Review Job Definitions &#8211;&gt; Timer Jobs &#8211;&gt; check for Crow Canyon Archival Timer job for http://contoso/sites/servicedesk exists and is running on daily interval. Issue Symptoms Archival does not happen as expected Items are created in &#8220;Archived Tickets&#8221; list but never gets deleted from original Tickets list Tickets are archived but not the related/associated items Duplicate notifications on archival Duplicate archived Tickets gets created in Archived Tickets list Troubleshoot Archival Functionality Issues Archival does not happen as expected 1. Make sure there are no spaces at the end of the configurations in the archival settings (Site Contents &#8211;&gt; Archival Settings list &#8211;&gt; edit item &#8211;&gt; make sure no spaces at the end and save it). Items are created in &#8220;Archived Tickets&#8221; list but never gets deleted from original Tickets list Check and remove if there are any event receivers present on Archived Tickets, Archived Email Tickets, Archived IT Support Tasks lists using SharePoint Manager or PowerShell. Refer below article to remove event receivers on a SharePoint list. https://www.crowcanyon.help/article/293 Tickets are archived but not the related/associated items Make sure the lookup columns are properly configured in the Archival lists (Archived Tickets, Archived Email Tickets, Archived IT Support Tasks etc). a) Check the settings of lookup fields and associated item columns in all the archival lists and make sure they are proper and there aren&#8217;t any invalid fields in the lists. b) Remove Workflow instances on the archival lists (if any). Instructions: Go to Email Tickets list &#8211;&gt; List Settings &#8211;&gt; Workflow Settings &#8211;&gt; Remove, Block or Restore a Workflow and remove the workflow instance see screenshots below. c) Check if the Source lists and corresponding Archival lists have same display names along with same data type or not. 4. If none of the above helped to resolve the issue, check if there are any errors in Archival Timer Job logs from the SharePoint server. If errors present, enable the information logs, get the issue reproduced and send to our support team. To enable information logs for Crow Canyon Timer Job logs, please refer article https://www.crowcanyon.help/article/229/ Other information that could help us troubleshooting the issue, Recognize and let us know if the issue has started recently or exists from starting. Go to Archived Tickets list and check the Archived Ticket and corresponding related items data, validate and let us know. Create an item manually in Archived Tickets list to make sure there is no issue while saving an item in this list. If this is the case, Archived Tickets list needs to be recreated. We can assist in recreating the Archived Tickets list. &nbsp; Duplicate archived tickets gets created in Archived Tickets list If there are multiple content databases associated with the web application that has Crow Canyon application then in Crow Canyon older timer job solution it creates multiple archived tickets. Number of duplicate archived tickets is equal to number of content databases associated with the web application. To verify the content databases, go to Central Administration -&gt; Application Management -&gt; Manage Content Databases -&gt; Select the web application in which our application site present and check the number of content databases present for this web application. If there are multiple content databases associated with the web application, our Crow Canyon Archival timer job executes the archival process multiple times, we have fixed this issue in latest Crow Canyon archival solution. Please contact Crow Canyon support to get the latest crow canyon archival solution. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "279",
    "name": "279 - How to configure Internal Staff Knowledge Base Articles_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/279%20-%20How%20to%20configure%20Internal%20Staff%20Knowledge%20Base%20Articles_.html",
    "title": "How To Configure Internal Staff Knowledge Base Articles",
    "text": "How to configure Internal Staff Knowledge Base Articles? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Internal Staff Knowledge Base Articles? How to configure Internal Staff Knowledge Base Articles? 1221 views 1 min , 36 sec read 0 Applies to On-Premises and Online Applies to: On-Premises and Online: Steps to create internal staff KB: &nbsp;1. Create staff KB list using the existing Knowledge base list template as base. &nbsp;a) Go to Site contents&nbsp; &#8211;&gt; Knowledge Base list &#8211;&gt; List Settings &#8211;&gt; Click &ldquo;Save list as template&rdquo;, enter File name, Template name and click &ldquo;Ok&rdquo; to take list template of existing Knowledge Base list. b) Now Go to Site Contents &#8212; &gt; Add an App &#8211;&gt; Search for the list template &ldquo;KnowledgeBaseTemplate&rdquo; &#8211;&gt; create a list using this template, name it as &ldquo;Internal Knowledge Base&rdquo; or &ldquo;Staff Knowledge Base&rdquo;. &nbsp; The existing &ldquo;Knowledge Base&rdquo; list can be used by end users as it is now and the newly created list can be used by staff. After creating the new &ldquo;Staff Knowledge Base&rdquo; list, add/remove/update columns as needed. For example, add owner etc. as per the requirement. &nbsp;Generally in the employee portal, &ldquo;Knowledge Base&rdquo; list will be available for users. Staff KB will not be available for users so no configurations are needed in portal. &nbsp; 2. Add Staff KB Search web part to backend &ldquo;Search KB&rdquo; page (applies to On-Premises only) Go to Workspaces library, open &ldquo;Search KB&rdquo; page under Ticket/Request/Work Order folder, edit page, add another instance of Crow Canyon List Search Web Part and configure as showin in below screenshot. Alternatively, Staff KB list can be added to existing list search instance as well based on the preference. Screenshots for new instance case: Upon editing the page, you will have options to &quot;Add Web Part&quot;. Click on add web part and you will have the options to add web part at the top of the page Select &quot;CrowCanyon&quot; in Categories and &quot;Crow Canyon List Search&quot; in Parts menu and add the web part. Edit web part, you will find a tool pane at the right side of the page to configure the search web part. &nbsp; &nbsp; Output: &nbsp; Screenshot for existing instance case: You can also add the Staff Knowledge Base search web part by editing the existing web part as shown below: Output: 3. Add Staff Knowledge Base link to quick launch as needed: Go to Site Contents &#8211;&gt; Right Click on &ldquo;Staff Knowledge Base&rdquo; List and Copy the Link Address. Now, go to Site Settings &#8211;&gt; Look and feel &#8211;&gt; Quick launch (Look and Feel &#8211;&gt; Navigation if publishing feature is activated in the site collection), add a link under &ldquo;Tickets&rdquo; header, adjust the order as the preference. Now specify the URL and select the Heading under which the link is to be shown in Quick Launch as shown below: Normal 0 false false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "28",
    "name": "28 - Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/28%20-%20Populate%20Requester%20and%20its%20metadata%20in%20Ticket%20in%20Service%20Request%20application%20in%20On-Premises%20environment.html",
    "title": "Populate Requester And Its Metadata In Ticket In Service Request Application In On Premises Environment",
    "text": "Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment 958 views Less than a minute 0 Requester Metadata Populatoin in Ticket new form &#8211; OnPremises Applies to: On-Premises Normal 0 false false false EN-US X-NONE X-NONE In our application, requester and its metadata like Requester Email, Requester Phone and Requester Department etc. (up to 5 text fields) can be auto populated in Ticket new form with the current logged in user Information from Active Directory/ SharePoint User Information list using Current user info filler webpart. If the requester is modified in the new form, then metadata will be updated accordingly using the mappings defined in the general configurations utility. 1.To configure current user info filler web part in Tickets new form, go to Tickets list, Default New Form, e dit Current User Info Filler Web Part and update the requester properties as shown in below sample screenshot. In this example, Active Directory properties are configured. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE &nbsp; Normal 0 false false false EN-US X-NONE X-NONE After configuring the webpart, click &quot;Ok&quot; and stop editing the page. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE 2.To configure general configurations utility for requester change scenario, go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; &nbsp; go to Requester information Tab, update the requester properties as shown in below sample screenshot. In this example, Active Directory properties are configured. &#8211; Refer the field description in the below screenshot for the difference between AD and User information list property names. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE To configure Requester User info Filler in Portal pages, please refer https://www.crowcanyon.help/article/209&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "280",
    "name": "280 - Populate Requester and its metadata in Ticket in Service Request application in On-Premises environm.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/280%20-%20Populate%20Requester%20and%20its%20metadata%20in%20Ticket%20in%20Service%20Request%20application%20in%20On-Premises%20environm.html",
    "title": "Populate Requester And Its Metadata In Ticket In Service Request Application In On Premises Environm",
    "text": "Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment Populate Requester and its metadata in Ticket in Service Request application in On-Premises environment 958 views Less than a minute 0 Requester Metadata Populatoin in Ticket new form &#8211; OnPremises Applies to: On-Premises Normal 0 false false false EN-US X-NONE X-NONE In our application, requester and its metadata like Requester Email, Requester Phone and Requester Department etc. (up to 5 text fields) can be auto populated in Ticket new form with the current logged in user Information from Active Directory/ SharePoint User Information list using Current user info filler webpart. If the requester is modified in the new form, then metadata will be updated accordingly using the mappings defined in the general configurations utility. 1.To configure current user info filler web part in Tickets new form, go to Tickets list, Default New Form, e dit Current User Info Filler Web Part and update the requester properties as shown in below sample screenshot. In this example, Active Directory properties are configured. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE &nbsp; Normal 0 false false false EN-US X-NONE X-NONE After configuring the webpart, click &quot;Ok&quot; and stop editing the page. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE 2.To configure general configurations utility for requester change scenario, go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; &nbsp; go to Requester information Tab, update the requester properties as shown in below sample screenshot. In this example, Active Directory properties are configured. &#8211; Refer the field description in the below screenshot for the difference between AD and User information list property names. &nbsp; Normal 0 false false false EN-US X-NONE X-NONE To configure Requester User info Filler in Portal pages, please refer https://www.crowcanyon.help/article/209&nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "281",
    "name": "281 - Incoming emails are not converted as tickets or not linked as they supposed to be - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/281%20-%20Incoming%20emails%20are%20not%20converted%20as%20tickets%20or%20not%20linked%20as%20they%20supposed%20to%20be%20-%20Crow%20Canyon%20Soft.html",
    "title": "Incoming Emails Are Not Converted As Tickets Or Not Linked As They Supposed To Be Crow Canyon Soft",
    "text": "Incoming emails are not converted as tickets or not linked as they supposed to be - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Incoming emails are not converted as tickets or not linked as they supposed to be Incoming emails are not converted as tickets or not linked as they supposed to be 934 views 1 min , 1 sec read 0 Process Email Tickets when threshold error occurs Applies to: Sharepoint Online Description : Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE For incoming email to ticket conversion feature, Crow Canyon Email Sync App is used to capture the emails from the configured mailbox and it creates an item in &quot;Email Tickets&quot; list in our application. On every item creation, event will be fired and another Crow Canyon app &quot;Crow Canyon Product App&quot; captures that event and creates a ticket for that incoming email. Sometimes it is possible that event fire might be missed so ticket creation may miss. To handle such situations, our Crow Canyon Product Maintenance service will periodically check and create them as tickets. Few things to consider: 1. We have &quot;Incoming Email Processing&quot; utility and it is possible to configure such that cerrtain email with subject/body contains certain keywords can be skipped from ticket creation. 2. There is another possible reason that the ticket created might got deleted by someone. The deleted tickets might be present in the Recycle bin. The ticket can be restored from there to populate in the Tickets list. If both the above things are not applicable, then our Product maintenance service supposed to initiate the ticket for such missing emails. If the ticket is still not created for missing emails, it could be Email Tickets list crosses the list view threshold limit of 5000 items and it cannot be increased in SharePoint Online, to address this, certain columns need to be indexed in Email Ticket list so our Product Maintenance App can process the missing emails. To configure indexed columns in Email Tickets list, please refer &quot;Common areas where we can use indexed columns&quot; section in this article: https://www.crowcanyon.help/article/243 To process email tickets to ticket conversion manually using Crow Canyon Product App, please refer https://www.crowcanyon.help/article/258 Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "282",
    "name": "282 - Auto set Due Date based on the ticket Issue Type.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/282%20-%20Auto%20set%20Due%20Date%20based%20on%20the%20ticket%20Issue%20Type.html",
    "title": "Auto Set Due Date Based On The Ticket Issue Type",
    "text": "Auto set Due Date based on the ticket Issue Type - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto set Due Date based on the ticket Issue Type Auto set Due Date based on the ticket Issue Type 1027 views Less than a minute 0 (Applies to: SharePoint Online) Pre-requesites: &#8211; Create a single line of text column &ldquo;Time Span&rdquo; in Issue Type list and configure it for the Issue Types in DD:HH:MM:SS format. For example, if&nbsp; Due Date should be auto set as &quot;4 Days 3 Hours 32 Minutes&quot; after ticket creation, configure &quot;Time Span&quot; in Issue type as 4:3:32:0 Workflow configurations: &#8211; Go to Crow Canyon Workflow Manager app and configure a workflow on tickets list item created event. (Optional) Delay Execution can be configured in the workflow to avoid conflict with Product app and other workflows present on tickets list. &#8211; Create an &quot;Update Item&quot; like shown below. Normal 0 false false false EN-US X-NONE X-NONE &nbsp;&nbsp; Field mapping of &quot;Due Date&quot; will be like: $calcbusinesstime([Created|Created],[Issue Type::Time Span|IssueType::Time_x0020_Span]) (Select &quot;Created&quot; and &quot;Issue Type::Time Span&quot; columns from the left list box and use &quot;Add Place holder to value&quot; during this configuration). This calculation will exclude the non-business days. &#8211; To include Saturday/Sunday as business days, go to Site Settings &#8211;&gt; Regional Settings and define the Work Week. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "283",
    "name": "283 - How to increase maxJsonLength property to its maximum value for a SharePoint Web application_ - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/283%20-%20How%20to%20increase%20maxJsonLength%20property%20to%20its%20maximum%20value%20for%20a%20SharePoint%20Web%20application_%20-%20Crow.html",
    "title": "How To Increase MaxJsonLength Property To Its Maximum Value For A SharePoint Web Application Crow",
    "text": "How to increase maxJsonLength property to its maximum value for a SharePoint Web application? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to increase maxJsonLength property to its maximum value for a SharePoint Web application? How to increase maxJsonLength property to its maximum value for a SharePoint Web application? 4235 views Less than a minute 1 Applies to: SharePoint On-Premises Question:- How to increase maxJsonLength property to its maximum value for a SharePoint Web application? Steps:- &#8211; Go to &quot;C:\\inetpub\\wwwroot\\wss\\VirtualDirectories&quot; folder in the SharePoint server. &#8211; Open corresponding folder of the web application for which this property should be modified. &#8211; Edit web.config file and update value of maxJsonLength property to &quot;2147483647&quot;. Add an extension like shown below and increase the value if the property isn&#8217;t available. &lt;system.web.extensions&gt; &nbsp;&nbsp;&nbsp; &lt;scripting&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;webServices&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jsonSerialization maxJsonLength=&quot;2147483647&quot; /&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/webServices&gt; &nbsp;&nbsp;&nbsp; &lt;/scripting&gt; &nbsp; &lt;/system.web.extensions&gt; Note: 1. Repeat this in all the SharePoint servers in case of a multi-server Farm. 2. Take a copy of original web.config file before making any changes as a safety backup. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "285",
    "name": "285 - How to Configure Recurrence feature functionality in Helpdesk using Workflow Manager App_ - Crow Can.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/285%20-%20How%20to%20Configure%20Recurrence%20feature%20functionality%20in%20Helpdesk%20using%20Workflow%20Manager%20App_%20-%20Crow%20Can.html",
    "title": "How To Configure Recurrence Feature Functionality In Helpdesk Using Workflow Manager App Crow Can",
    "text": "How to Configure Recurrence feature functionality in Helpdesk using Workflow Manager App? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Configure Recurrence feature functionality in Helpdesk using Workflow Manager App? How to Configure Recurrence feature functionality in Helpdesk using Workflow Manager App? 1002 views 1 min , 28 sec read 0 Create recurring list items with required schedule and data using Crow Canyon Workflow Manager Applies to : SharePoint Online and On-prem Description There are many business scenarios where SharePoint list items need to be created based on Daily, Weekly, Monthly, Yearly basis or based on specific dates. This is used for cases like recurring maintenance tasks for Assets, renewing Contracts etc. In some Crow Canyon applications like Assets in SharePoint On-prem (SP 2013 and 2016), there is built in support for this functionality. For SPOnline and other custom requirements in On-prem, this can be configured using Crow Canyon Workflow Manager. In this article, we have taken Tickets list as an example but this can be configured on any list using the Workflow Manager. We will create a recurring template list and then add timer based workflows to get the recurring items created in the Tickets list. Summary of Steps: 1. List Schema for Recurring functionality 2. Workflows configuration based on recurrence (Daily, Weekly, Monthly, Yearly or Specific Date) Configure a timer based workflow based on recurrence type Configure create item action that create items in target list Detailed Steps: &nbsp;1. List Schema for Recurrence: Create a list &ldquo;Recurring Ticket Template&rdquo; in IT Helpdesk with following fields. Based on the scheduled and data in this list, items will be created in Tickets list automatically as per the schedule and with corresponding data in the Ticket item fields: Field Internal Name Display Name Field Type Category Category Lookup to Category list IssueType Issue Type Lookup to IssueType list Description Description Multiline text Requester Requester Person or group RecurrenceType Recurrence Type Choice field (Values: Daily, Weekly, Monthly, Yearly, Specific Date) StartDate Start Date Date and Time SpecificDate Specific Date Date and Time You can also create additional fields and map them to Tickets list in workflow manager app 2. Workflows configuration for Recurrence Type There are 5 different types of Recurrence Types. We need to create workflows for each type of Recurrence Type Daily Weekly Monthly Yearly Specific Ex: Daily Recurrence Type: Create item in Recurring Ticket Template list and select Recurrence Type as &quot;Daily&quot; and select start date for recurrence &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Now after creating an item in Recurring Ticket Template List, open Crow Canyon Workflow Manager App and configure Daily Recurrence Type workflow as shown below. a) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if we want to create the Ticket daily for 5 days, we can configure as below: &nbsp; Add and configure a create item action to create an item in Tickets list as shown below: &nbsp;&nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "286",
    "name": "286 - SLA based on Priority of the Ticket to Update Due Date and configure alerts - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/286%20-%20SLA%20based%20on%20Priority%20of%20the%20Ticket%20to%20Update%20Due%20Date%20and%20configure%20alerts%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "SLA Based On Priority Of The Ticket To Update Due Date And Configure Alerts Crow Canyon Software S",
    "text": "SLA based on Priority of the Ticket to Update Due Date and configure alerts - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SLA based on Priority of the Ticket to Update Due Date and configure alerts SLA based on Priority of the Ticket to Update Due Date and configure alerts 2487 views 1 min , 7 sec read 6 Applies to : SharePoint Online Normal 0 false false false EN-US X-NONE X-NONE Description : Setup SLA in SharePoint Online Crow Canyon helpdesk application based on ticket Priority. Based on priority of the ticket, ticket needs to be responded, assigned and closed in certain period of time. Let us consider an example with response due time, assigned due time and Due Date that should be applied for the tickets based on ticket Priority like shown in below table. Normal 0 false false false EN-US X-NONE X-NONE Priority Assign Due First Response Due Due Date Critical 60 Minutes 2 Hour 4 Hours High 60 Minutes 2 Hours 24 Hours Normal 60 Minutes 4 Hours 3 Days Low 60 Minutes 6 Hours 1 Week To achieve this functionality, create below columns in the tickets list. S.No. Field Name Field Type 1 Assign Due Time Date and Time 2 First Response Due Time Date and Time 3 Work Started Yes/No (default to NO) 4 Overdue Single line of Text Normal 0 false false false EN-US X-NONE X-NONE &#8211; The ticket should be assigned before &#8220;Assign Due Time&#8221;. &#8211; The ticket should be responded before &#8220;First Response Due Time&#8221;. &#8211; Technician has to mark &#8220;Work Started&#8221; column value as Yes as an indication of First response. &#8211; Workflow has to auto set &#8220;Overdue&#8221; column with overdue or not over due values based on &#8220;Due Date&#8221; column. Summary of Steps: 1. Configure a workflow on ticket updation to update Response Due time, Assigned Due Time and Due Date of the tickets. &#8211; Refer workflow 1 from https://www.crowcanyon.help/article/287 for instructions. 2. Configure a workflow on ticket updation to update Due Date and Overdue status of the ticket if Priority or Due Date is modified. &#8211; Refer Workflow 2 from https://www.crowcanyon.help/article/287 for instructions. 3. Configure a timer workflow to notify users if ticket stays unassigned beyond Assigned due time. &#8211; Refer Workflow 1 from https://www.crowcanyon.help/article/288 for instructions. 4. Configure a timer workflow to notify users if ticket isn&#8217;t responded beyond Response due time. &#8211; Refer Workflow 2 from https://www.crowcanyon.help/article/288 for instructions. 5. Configure a timer workflow to notify users if ticket isn&#8217;t closed beyond the Due date. &#8211; Refer Workflow 3 from https://www.crowcanyon.help/article/288 for instructions. Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "287",
    "name": "287 - Apply SLA to update Ticket Due Date, Assign Due Time, Response Due Time when Ticket is created and m.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/287%20-%20Apply%20SLA%20to%20update%20Ticket%20Due%20Date%2C%20Assign%20Due%20Time%2C%20Response%20Due%20Time%20when%20Ticket%20is%20created%20and%20m.html",
    "title": "Apply SLA To Update Ticket Due Date, Assign Due Time, Response Due Time When Ticket Is Created And M",
    "text": "Apply SLA to update Ticket Due Date, Assign Due Time, Response Due Time when Ticket is created and modified - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Apply SLA to update Ticket Due Date, Assign Due Time, Response Due Time when Ticket is created and modified Apply SLA to update Ticket Due Date, Assign Due Time, Response Due Time when Ticket is created and modified 2925 views Less than a minute 1 Applies to: SharePoint Online Normal 0 false false false EN-US X-NONE X-NONE Pre-Requisites: Create Assign Due Time, First Response Due Time, Work Started, Overdue columns as described in https://www.crowcanyon.help/article/286 Workflow1 : Configure a workflow on ticket modified event to update Response Due time, Assigned Due Time and Due Date of the tickets. &#8211; Create a workflow on tickets list item modified event like shown in below image. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Now, configure “Update Item” action for each priority as shown below. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Specify the field mappings as shown below in the update item actions. (Syntax: $calcbusinesstime([FieldInternalName|DisplayName],days:hours:minuites:seconds)) Normal 0 false false false EN-US X-NONE X-NONE The above “Update Item” actions need to be repeated for each priority. The time in field mappings vary based on the requirement. Workflow 2: Configure a workflow on ticket modified event to update Due Date and Overdue status of the ticket if Priority or Due Date is modified. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Create an “Update Item” action to update Due Date and Overdue status column when Priority column is updated and the modified as &#8220;Critical&#8221;. This step should be repeated for other priorities as well. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Configure an Update Item action as shown below to update Overdue status column when Due Date column is updated. This action need to be repeated for each priority change. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "288",
    "name": "288 - SLA workflows to notify users for Overdue tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/288%20-%20SLA%20workflows%20to%20notify%20users%20for%20Overdue%20tickets.html",
    "title": "SLA Workflows To Notify Users For Overdue Tickets",
    "text": "SLA workflows to notify users for Overdue tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SLA workflows to notify users for Overdue tickets SLA workflows to notify users for Overdue tickets 2876 views Less than a minute 1 Applies to: SharePoint Online Pre-requisites : Create Assign Due Time, First Response Due Time, Work Started, Overdue columns as described in https://www.crowcanyon.help/article/286 Workflow1: Notify Manager when ticket is still unassigned after Assignment due time. &#8211; Configure a timer workflow based on &#8220;Assigned Due Time&#8221; like shown below. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Configure a send mail action like below to notify users. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Create the mail template as needed, refer below image. Workflow 2 : Notify users when ticket is still not responded after Response due time. &#8211; Configure a timer workflow based on &#8220;Response Due Time&#8221; like shown below. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Configure a send mail action in this workflow like shown below to notify users. Workflow 3: Notify users when ticket is still not closed after the due date/time. &#8211; Configure a timer workflow based on &#8220;Due Date&#8221; like shown below. &#8211; Configure an update Item action in this workflow to update Overdue status column as shown below. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Configure a send mail action in the workflow to send notifications to the users. Normal 0 false false false EN-US X-NONE X-NONE Report on Overdue tickets based on priority:- Go to Crow Canyon reports app and configure a report like shown below. NITRO Workflows SLA About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "289",
    "name": "289 - Update Solved Date automatically after modifying ticket status as Solved - Crow Canyon Software Supp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/289%20-%20Update%20Solved%20Date%20automatically%20after%20modifying%20ticket%20status%20as%20Solved%20-%20Crow%20Canyon%20Software%20Supp.html",
    "title": "Update Solved Date Automatically After Modifying Ticket Status As Solved Crow Canyon Software Supp",
    "text": "Update Solved Date automatically after modifying ticket status as Solved - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Update Solved Date automatically after modifying ticket status as Solved Update Solved Date automatically after modifying ticket status as Solved 902 views Less than a minute 0 (Applies to: SharePoint Online) Description: Update &quot;Solved Date&quot; date column in ticket automatically after modifying ticket status as Solved. Pre-requisites: Create a new date column &quot;Solved Date&quot; in the tickets list and add new status choice value &quot;Solved&quot; in &quot;Request Status&quot; column.&nbsp; Steps to configure workflow: 1. Configure a workflow on tickets list item modified event with a condition (Request Status afterchange equal Solved) like shown below. &nbsp; 2. Create an &quot;Update Item&quot; action in this workflow like shown below. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "29",
    "name": "29 - Auto Categorize tickets based on mail subject of the incoming email.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/29%20-%20Auto%20Categorize%20tickets%20based%20on%20mail%20subject%20of%20the%20incoming%20email.html",
    "title": "Auto Categorize Tickets Based On Mail Subject Of The Incoming Email",
    "text": "Auto Categorize tickets based on mail subject of the incoming email - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto Categorize tickets based on mail subject of the incoming email Auto Categorize tickets based on mail subject of the incoming email 1049 views Less than a minute 0 Applies to: SharePoint Online Requirement: Auto Categorize tickets which are created through emails based on their mail subject. Summary of Steps: 1. Configure a conditional workflow on ticket list item created event. 2. Configure WF Variable Action in the workflow to extract category from the ticket title. 3. Configure Update Item Action in the workflow to update category based on the extrcted category from WF variable. Detailed Steps : 1. Go to Crow Canyon NITRO Workflow Manager app and create a new workflow on tickets list item created event with conditions &#8220;Request Status&#8221; Not equal &#8220;Closed&#8221; AND &#8220;Ticket Source&#8221; equal &#8220;Email&#8221;. 2. In this workflow, create a WF Variable action to extract category from the title of the ticket using $regextract function. eg: $regextract([Title|Title],@.*\\b((?i)printing|email|calendar|telephone|network|software|internet|wan|hardware problem|hardware request|remote access)\\b.*) Note: Each category should be separated with &#8220;|&#8221; in the above expression. &nbsp; 3. Now Configure an Update Item Action to update Category with $parselookupvalue(CategoryMatch##Value) as shown in below image. &#8211; $parselookupvalue function is used since Category is a lookup column. &#8211; CategoryMatch##Value is the value obtained from workflow variable action. Whenever a new ticket gets created, this workflow will check all the words in ticket title and if any category specified in #2 matches, it will automatically set the matched category to the ticket. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "290",
    "name": "290 - Auto Categorize tickets based on mail subject of the incoming email.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/290%20-%20Auto%20Categorize%20tickets%20based%20on%20mail%20subject%20of%20the%20incoming%20email.html",
    "title": "Auto Categorize Tickets Based On Mail Subject Of The Incoming Email",
    "text": "Auto Categorize tickets based on mail subject of the incoming email - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto Categorize tickets based on mail subject of the incoming email Auto Categorize tickets based on mail subject of the incoming email 1049 views Less than a minute 0 Applies to: SharePoint Online Requirement: Auto Categorize tickets which are created through emails based on their mail subject. Summary of Steps: 1. Configure a conditional workflow on ticket list item created event. 2. Configure WF Variable Action in the workflow to extract category from the ticket title. 3. Configure Update Item Action in the workflow to update category based on the extrcted category from WF variable. Detailed Steps : 1. Go to Crow Canyon NITRO Workflow Manager app and create a new workflow on tickets list item created event with conditions &#8220;Request Status&#8221; Not equal &#8220;Closed&#8221; AND &#8220;Ticket Source&#8221; equal &#8220;Email&#8221;. 2. In this workflow, create a WF Variable action to extract category from the title of the ticket using $regextract function. eg: $regextract([Title|Title],@.*\\b((?i)printing|email|calendar|telephone|network|software|internet|wan|hardware problem|hardware request|remote access)\\b.*) Note: Each category should be separated with &#8220;|&#8221; in the above expression. &nbsp; 3. Now Configure an Update Item Action to update Category with $parselookupvalue(CategoryMatch##Value) as shown in below image. &#8211; $parselookupvalue function is used since Category is a lookup column. &#8211; CategoryMatch##Value is the value obtained from workflow variable action. Whenever a new ticket gets created, this workflow will check all the words in ticket title and if any category specified in #2 matches, it will automatically set the matched category to the ticket. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "293",
    "name": "293 - Remove event receivers in a SharePoint list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/293%20-%20Remove%20event%20receivers%20in%20a%20SharePoint%20list.html",
    "title": "Remove Event Receivers In A SharePoint List",
    "text": "Remove event receivers in a SharePoint list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Remove event receivers in a SharePoint list Remove event receivers in a SharePoint list 1974 views 1 min , 27 sec read 0 (Applies to: SharePoint On-Premises) How to remove event receivers in a SharePoint list? Event receiver instances on a SharePoint list can be removed by either of the methods mentioned below. #1. Using PowerShell :- &#8211; Below is the Powershell script to get the list of all event receivers present on a list. Add-PSSnapin Microsoft.SharePoint.PowerShell &ndash;erroraction SilentlyContinue $web = Get-SPWeb -Identity &lt;&lt;Site URL&gt;&gt; $list = $web.Lists[&ldquo;&lt;&lt;List Name&gt;&gt;&rdquo;] $list.EventReceivers ** replace &lt;&lt;Site URL&gt;&gt; , &lt;&lt;List Name&gt;&gt; place holders in the script as needed. This will get all the event receivers with their properties (Id, Name etc.) present on this list. &#8211; Identify the Id or Name of the event receiver which should be deleted. Run below PowerShell script to delete a event receiver using Id of an event receiver. Add-PSSnapin Microsoft.SharePoint.PowerShell &ndash;erroraction SilentlyContinue &nbsp; $web = Get-SPWeb -Identity &lt;&lt;Site URL&gt;&gt; $list = $web.Lists[&ldquo;&lt;&lt;List Name&gt;&gt;&rdquo;] &nbsp; $type = &quot;&lt;&lt;Event receiver type&gt;&gt;&quot; $receiverId =&nbsp; &quot;&lt;&lt;Event receiver Id&gt;&gt;&quot; # replace &lt;&lt;Event receiver type&gt;&gt; with event type. eg: ItemDeleting, ItemAdding, ItemUpdating etc. # replace &lt;&lt;Event receiver Id&gt;&gt; with the id of event receiver. &nbsp; $numberOfEventReceivers = $list.EventReceivers.Count &nbsp; if ($numberOfEventReceivers -gt 0) { &nbsp;&nbsp; for( $index = $numberOfEventReceivers -1; $index -gt -1; $index&ndash;-) &nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $receiver = $list.EventReceivers[$index] ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $name = $receiver.Name; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $id = $receiver.Id; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($id -eq $receiverId)&nbsp; #similary ($name -eq &quot;event receiver&#8217;s name&quot;) can be used. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $receiver.Delete() &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write-Host &quot;Event receiver &quot; $name &quot; is deleted&quot; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp; } } else { &nbsp;&nbsp; Write-Host &quot; There is no EventReceivers with Id &quot; $receiverId&quot; registered for this list &quot; } &nbsp; $web.Dispose() &nbsp; #2. Using SharePoint Manager tool :- SharePoint Manager is a SharePoint object model explorer. It enables you to browse every site on the local farm and view every property. It can be downloaded from below URL. https://spm.codeplex.com/ Run SharePoint Manager tool as administrator in the SharePoint server, browse to the target list, expand event receivers section, select the event receiver, right click on it and click delete button to remove the event receiver. Refer sample image below. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "295",
    "name": "295 - How to export items of a Survey list to excel along with Created, Modified Date columns_ - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/295%20-%20How%20to%20export%20items%20of%20a%20Survey%20list%20to%20excel%20along%20with%20Created%2C%20Modified%20Date%20columns_%20-%20Crow%20Cany.html",
    "title": "How To Export Items Of A Survey List To Excel Along With Created, Modified Date Columns Crow Cany",
    "text": "How to export items of a Survey list to excel along with Created, Modified Date columns? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to export items of a Survey list to excel along with Created, Modified Date columns? How to export items of a Survey list to excel along with Created, Modified Date columns? 2287 views 1 min , 12 sec read 0 Applies to: SharePoint On-Premises and SharePoint Online Description: In general, Export to Excel feature in SharePoint survey lists can export only the columns from &quot;Overview.aspx&quot; view. It can&#8217;t export columns like&quot;Created&quot;, &quot;Modified&quot; or other columns from this list. We need to do the following steps in order to export the required/ missing fields that are being uploaded to the Excel sheet. Summary of Steps: &#8211; Add Survey list view webpart in a page. &#8211; Edit this webpart and modify the view. &#8211; Go to this view settings and identify the View Id from page URL. &#8211; Replace this View Id in&nbsp; Export to Excel query. Detailed Steps: 1. Create a new page and add Survey list view web part to this page. (Go to &quot;Site Contents&quot; &#8211;&gt; &quot;Site Pages&quot; document library &#8211;&gt; click on new web part page as shown in below image to create new page) &nbsp; 2. Click on &quot;Add a web part&quot; and add the survey list web part to this page. &nbsp; 3. Edit Survey list view web part, select &quot;All Responses&quot; view and save the page. 4. Edit this web part again and click on &quot;Edit the current view&quot; in the web part tool pane. Add &quot;Created&quot;, &quot;Modified&quot; etc. columns to this view. Also, copy the view settings page URL. &nbsp; 5.&nbsp; The URL of View Id will be like &quot;http://Server:3000/sites/SR/IT/_layouts/15/viewedit.aspx?List=%7B183F77E3-BB3A-4049-8BBD-A6DBDF7837ED%7D&amp;View=%7B CC27492D-0D68-4603-94B6-79D8C6CEB4A0 %7D&amp;Source=http%3A%2F%2FServer%3A3000%2Fsites%2FSR%2FIT%2FSitePages%2FHome%2Easpx&quot; Identify and copy the View ID 6. Now, go to Overview of Survey list and click on export to excel which will download &quot;owssvr.iqy&quot; file. Edit this file in notepad and replace the View IDs with ID obtained in #4. Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 7. After modifying the View IDs, please save the file as &quot;owssvr.iqy&quot; and open it with Excel which will have the columns included in&nbsp; #3. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "296",
    "name": "296 - Configure a timer workflow to remind users after 2 hours of a high priority ticket creation if the t.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/296%20-%20Configure%20a%20timer%20workflow%20to%20remind%20users%20after%202%20hours%20of%20a%20high%20priority%20ticket%20creation%20if%20the%20t.html",
    "title": "Configure A Timer Workflow To Remind Users After 2 Hours Of A High Priority Ticket Creation If The T",
    "text": "Configure a timer workflow to remind users after 2 hours of a high priority ticket creation if the ticket is not closed - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a timer workflow to remind users after 2 hours of a high priority ticket creation if the ticket is not closed Configure a timer workflow to remind users after 2 hours of a high priority ticket creation if the ticket is not closed 1073 views Less than a minute 0 Applies to: SharePoint On-Premises Requirement:&nbsp; Configure a timer workflow to remind users after 2 hours of a high priority ticket creation if the ticket is not closed. Steps:- 1. Go to Crow Canyon Workflow Manager. &nbsp;2. Click on &quot;New Workflow&quot; and create a timer workflow based on Created Date with conditions (&quot;Request Status&quot; not equal &quot;Closed&quot; AND &quot;Priority&quot; equal &quot;High&quot;) as shown below &nbsp;3. Configure a send mail action in this workflow to notify users. &#8211; Choose &quot;Send Mail&quot; action and click on &quot;Add Action&quot; button. &nbsp;&#8211; Configure Send Mail action like shown in below image. &nbsp;&#8211; Configure a mail template with placeholders in the mail subject and body as needed. &#8211; Click Save. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "297",
    "name": "297 - Frequently asked questions for Crow Canyon Email Sync App.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/297%20-%20Frequently%20asked%20questions%20for%20Crow%20Canyon%20Email%20Sync%20App.html",
    "title": "Frequently Asked Questions For Crow Canyon Email Sync App",
    "text": "Frequently asked questions for Crow Canyon Email Sync App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Email / Frequently asked questions for Crow Canyon Email Sync App Frequently asked questions for Crow Canyon Email Sync App 5373 views 3 min , 42 sec read 3 Applies To SharePoint Online Crow Canyon Email Sync App Overview Crow Canyon Email sync app is an add-in for O365. SharePoint online doesn&#8217;t have built-in functionality similar to Announcements Lists in on-premises where emails sent to a particular address are automatically added to the list in SharePoint. This App plugs this functionality gap by monitoring a mailbox that is accessible via Exchange Web Services and creates the mails received as items in a SharePoint list. This App can be used as a stand-alone product. It is used in Crow Canyon Applications like IT Help Desk for incoming emails to Ticket functionality. When an email is sent to an email address configured in Crow Canyon Email Sync app then these emails get created as Incoming emails in Email Tickets list. Further, Crow Canyon Product App converts these Email Items to Tickets along with other functionality like notifications and auto-assignment etc. To know more about the Email Sync App, please refer: https://www.crowcanyon.info/nitro/appmanual_v2/email-sync.html To know more about configurations of this app, please refer link: https://www.crowcanyon.info/nitro/appmanual_v2/configuring-email-sync.html 1. What is Exchange Web Service URL in Crow Canyon Email Sync app? Exchange Web Service provides the functionality to enable client applications to communicate with the Exchange Server. It provides access to mailbox data stored in Exchange Online. If you are using Exchange Online (O365) then you can specify the standard Microsoft Web Services URL: https://outlook.office365.com/EWS/Exchange.asmx If you are using in-house or hosted Exchange then please get the web services URL from the concerned team. Please note that this is not same as the Outlook Web Access (OWA) URL . Note : If any settings are modified in Crow Canyon Email Sync settings changes take effect after about 15 minutes. 2. Multi-Factor Authentication is enabled for the users If Multi-Factor Authentication is enabled for the email address which is configured in Crow Canyon Email Sync settings then it does not allow office client application to access SharePoint with regular password. Please refer this article to create an app password. After creating app password, use this email address and password in Crow Canyon Email Sync settings. Note : App password does not work for auto discovery so we need to enter the Exchange Web Service URL manually. Please refer #1 above for more details on Exchange Web Service URL. 3. Can we directly configure Crow Canyon Email sync settings to Tickets? No, Email Items should not be created directly in the Tickets list. For Crow Canyon Applications there is a special App that converts the incoming email items to Tickets along with other business logic like auto-assignment, status handling, Categorization and notifications etc. So Email Sync App should be configured to create items in &#8216;Email Tickets&#8217; list only. Please note that you can configure multiple incoming email lists and also rename them. Refer this article for more details: https://www.crowcanyon.help/article/167 4. Emails coming to mailbox configured in the Email Sync Setting are not reaching Email Tickets list &#8211; This issue occurs if there is a password change for the mailbox that is used in our Email Sync setting, please update the Email Sync Setting with the latest password and specify the Exchange Web Service URL as mentioned in #1 of this article Note: Usually, it takes around 15 minutes for the new settings/changes in email sync settings to take effect. &#8211; Sync service creates an item in the Email Tickets list for every new email that comes to the mailbox configured in the Email Sync Setting. The email sync setting has a filter that can be configured which might be blocking creation of items. For example, we might block certain emails to convert as an Email Ticket if subject contains &#8220;Test&#8221; or &#8220;Out of Office&#8221; emails. See sample filter screenshot below. Please check the mails that didn&#8217;t reach Email Tickets list if verify if they match the conditions specified in the filter settings. 5. Connection Error while trying to configure mailbox settings in Email Sync configuration Crow Canyon Email Sync configuration page has a ‘Test Connection’ button. This can be clicked after specifying the mailbox address and password. If connection is successful, it will automatically fill the Exchange Web Service URL. Generally if you are using O365 Web Exchange, it will be: https://outlook.office365.com/EWS/Exchange.asmx Symptom 1: Test connection will fail with connection error &#8220;A valid SMTP address must be specified&#8221; as shown below: Please check with your Exchange Administrator for the Exchange Web Service URL in case you are not using O365 exchange. Specify the internal Exchange web services URL (not OWA URL) and click on test connection. Also, please make sure you are able to login to the exchange with the User Account specified in the email sync settings. Symptom 2: Test connection will fail with connection error &#8220;The Autodiscover service couldn&#8217;t be located at Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.InternalGetLegacyUserSettings&#8221; as shown below: This could happen if conditional access rule on Azure AD is enabled to block legacy authentication. Please check with your Exchange Administrator and exclude the mailbox account configured in Email Sync setting from this legacy authentication policy. 6. Email Sync is not working as mailbox contains huge number of items Though email sync will get configured successfully, it won’t sync the items in certain cases. This can be in cases where the Inbox folder in the mailbox contains very large number of items (50K+). In the first run after configuration we don’t sync any existing item, but we need to go through all existing items to determine the checkpoint from where to start syncing mails from next run onward. With very large number of items, this first sync times out and is unable to determine the required checkpoint. In this case, move the Inbox items to a different folder and see if sync begins to work. Please note email sync runs every few minutes so it may take some time before you start seeing the results. Also, only new emails after successful checkpoint are sync’d (after first sync). So you need to send a new mail after some time to see if service has started working. 7. Allow Send Grid in Exchange for outgoing Notifications All Outgoing notifications in NITRO sites will be processed through NITRO Workflows app. If mailbox settings are not configured for NITRO Workflows, then Send Grid method will process the email delivery. In most cases, Exchange may treat emails coming from Send Grid as spam/junk and they will get blocked/quarantined. To avoid this, Exchange Administrators can add an exception with below Send Grid SPF&#8217;s TXT DNS record. v=spf1 include:sendgrid.net ~all Autodiscover Email Sync Email About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: The NITRO Email Manager Introduction to Email Manager in NITRO Studio How to Setup Email Sync in NITRO Studio How to configure approve via email feature using NITRO Workflow Manager Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "299",
    "name": "299 - Configure Approver functionality using NITRO Workflow Manager.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/299%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager",
    "text": "Configure Approver functionality using NITRO Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Approver functionality using NITRO Workflow Manager Configure Approver functionality using NITRO Workflow Manager 2871 views 3 min , 9 sec read 0 Applies To: SharePoint Online and SharePoint On-premises Description: In this article, we are configuring the Change Request approval scenario using NITRO Workflow Manager. When a change request is created with a certain change type (lookup column), it sends to the corresponding approver based on the configuration in change type lookup item. A task will be created for the approver and notifies approver on task creation. Approver can make one of the possible decisions (Approve, Deny). Based on the approver decision, change request approval status will be updated. Requester can resubmit for approval for a denied change request. List Schema: To configure the approval feature, we need to create certain lists and fields as per the requirement, below are the schema that supports our current approval scenario. Change Request Types list: 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Title (Single line of text) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Used to show in lookup options in Change Request 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approver (Person or Group field) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Used to define approver for this type of change Change Requests list: 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Submit for Approval (Yes/No checkbox) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Default value: No b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Used to initiate approval process 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approval Status (choice &ndash; Options: Not required, Needs Approval, Pending Approval, Approved, Denied) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Default Value: Empty b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Indicates the current approval state of the change request 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Change Type (Lookup to Change Request Types list) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Defines the approver 4. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Work Log (Multiple lines of text) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: To maintain the approver comments Change Request Approver Tasks list: 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Comments (multiline plain text field) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: To capture the approver comments and will be copied to Change Request 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approval Decision (Choice field &ndash; Options: Approve, Reject) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Default Value: Empty b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: To capture the decision of approver 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Change Request (Lookup to Change Requests list) a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Purpose: Link/relate the approver task to change request Summary of Steps: We have to create workflows on Change Request create and modify events with required actions as described below using the Crow Canyon Workflow Manager. 1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a workflow on Change Requests list &ldquo;on item created&rdquo; event a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action1: Update the &ldquo;Change Request&rdquo; approval status when CR is created without submitting for approval b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action2: Create a Change Request Approver Task when CR is submitted for approval &nbsp; with a change type that has the approver defined c. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action3: Update the &ldquo;Change Request&rdquo; approval status when CR is submitted for approval &nbsp; with a change type that has the approver defined d. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action4: Update the Change Request Approval Status (&ldquo;Not Required&rdquo;) when the change type has no approver configured. e. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action5: Notify Requester on Change Request creation 2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a workflow on Change Requests list &ldquo;on item modified&rdquo; event a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action1: Create the Change Request Approver task when CR is submitted for approval (Submit for approval set to yes and save) with a change type that has the approver defined. b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action2: Update the &ldquo;Change Request&rdquo; approval status (&ldquo;Pending Approval&rdquo;) for the same scenario described above. c. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action3: Update the &ldquo;Change Request&rdquo; approval status (&ldquo;Not Required&rdquo;) when CR is submitted for approval with a change Type that has no approver defined. d. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action4: Notify requester when the CR is approved e. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action5: Notify the requester when CR is denied 3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a workflow on Change Request Approver Tasks list &ldquo;on item created&rdquo; event a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action1: Notify the approver about his/her new task 4. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a workflow on Change Request Approver Tasks list &ldquo;on item modified&rdquo; event a. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action1: Update the Change Request &ldquo;Approval Status&rdquo; when approver approve it. b. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action2: Update the Change Request &ldquo;Approval Status&rdquo; when approver reject it. c. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Action3: Complete the task (Set task status to &ldquo;Completed&rdquo;) when the approver make the decision (either approve or reject). Detailed Steps: Normal 0 false false false EN-US X-NONE X-NONE Workflow1 : Create a workflow on Change Requests list &ldquo;on item created&rdquo; event. Please refer https://www.crowcanyon.help/article/300 Workflow2: Create a workflow on Change Requests list &quot;on item modified&quot; event. Please refer https://www.crowcanyon.help/article/301 Workflow3: Create a workflow on Chnage Request Approver Tasks list &quot;on item created&quot; event. Please refer https://www.crowcanyon.help/article/302 Workflow4: Create a workflow on Change Request Approver Tasks list &quot;on item modified&quot; event. Please refer https://www.crowcanyon.help/article/302 &nbsp; Normal 0 false false false EN-US X-NONE X-NONE About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "3",
    "name": "3 - Configure Approver functionality using NITRO Workflow Manager – Workflow 1.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/3%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager%20%E2%80%93%20Workflow%201.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager – Workflow 1",
    "text": "Configure Approver functionality using NITRO Workflow Manager – Workflow 1 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 2257 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please make sure that the required list schema is created before start configuring this workflow, please refer https://www.crowcanyon.help/article/299 article for list schema details. Workflow1 : Create a workflow on Change Requests list “on item created” event. Configure workflow as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action1 : Update the “Change Request” approval status when CR is created without submitting for approval. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action2 : Create a Change Request Approver Task when CR is submitted for approval with a change type that has the approver defined. Configure “Create Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Specify the field mappings as needed. Action3: Update the “Change Request” approval status when CR is submitted for approval with a change type that has the approver defined. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action4: Update the Change Request Approval Status (“Not Required”) when the change type has no approver configured. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action5 : Notify Requester on Change Request creation. Configure “Send Mail” action as shown in below screenshot. Note: Please refer the app manual for creating the mail templates from here About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "30",
    "name": "30 - Configure Approver functionality using NITRO Workflow Manager – Workflow 1.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/30%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager%20%E2%80%93%20Workflow%201.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager – Workflow 1",
    "text": "Configure Approver functionality using NITRO Workflow Manager – Workflow 1 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 2257 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please make sure that the required list schema is created before start configuring this workflow, please refer https://www.crowcanyon.help/article/299 article for list schema details. Workflow1 : Create a workflow on Change Requests list “on item created” event. Configure workflow as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action1 : Update the “Change Request” approval status when CR is created without submitting for approval. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action2 : Create a Change Request Approver Task when CR is submitted for approval with a change type that has the approver defined. Configure “Create Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Specify the field mappings as needed. Action3: Update the “Change Request” approval status when CR is submitted for approval with a change type that has the approver defined. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action4: Update the Change Request Approval Status (“Not Required”) when the change type has no approver configured. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action5 : Notify Requester on Change Request creation. Configure “Send Mail” action as shown in below screenshot. Note: Please refer the app manual for creating the mail templates from here About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "300",
    "name": "300 - Configure Approver functionality using NITRO Workflow Manager – Workflow 1 - Crow Canyon Software Su.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/300%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager%20%E2%80%93%20Workflow%201%20-%20Crow%20Canyon%20Software%20Su.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager – Workflow 1 Crow Canyon Software Su",
    "text": "Configure Approver functionality using NITRO Workflow Manager – Workflow 1 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 1 2257 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please make sure that the required list schema is created before start configuring this workflow, please refer https://www.crowcanyon.help/article/299 article for list schema details. Workflow1 : Create a workflow on Change Requests list “on item created” event. Configure workflow as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action1 : Update the “Change Request” approval status when CR is created without submitting for approval. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action2 : Create a Change Request Approver Task when CR is submitted for approval with a change type that has the approver defined. Configure “Create Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Specify the field mappings as needed. Action3: Update the “Change Request” approval status when CR is submitted for approval with a change type that has the approver defined. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action4: Update the Change Request Approval Status (“Not Required”) when the change type has no approver configured. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action5 : Notify Requester on Change Request creation. Configure “Send Mail” action as shown in below screenshot. Note: Please refer the app manual for creating the mail templates from here About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "301",
    "name": "301 - Configure Approver functionality using NITRO Workflow Manager – Workflow 2 - Crow Canyon Software Su.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/301%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager%20%E2%80%93%20Workflow%202%20-%20Crow%20Canyon%20Software%20Su.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager – Workflow 2 Crow Canyon Software Su",
    "text": "Configure Approver functionality using NITRO Workflow Manager – Workflow 2 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Workflows / Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 2 Configure Approver functionality using NITRO Workflow Manager &#8211; Workflow 2 2538 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please make sure that the required list schema is created before start configuring this workflow, please refer https://www.crowcanyon.help/article/299 article for list schema details. Normal 0 false false false EN-US X-NONE X-NONE Workflow 2: Create a workflow on Change Requests list “on item modified” event. Configure workflow as shown below Normal 0 false false false EN-US X-NONE X-NONE Action1 : Create the Change Request Approver task when CR is submitted for approval (Submit for approval set to yes and save) with a change type that has the approver defined. Configure “Create Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Specify the field mappings as needed Normal 0 false false false EN-US X-NONE X-NONE Action2 : Update the “Change Request” approval status (“Pending Approval”) for the same scenario described above. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action3 : Update the “Change Request” approval status (“Not Required”) when CR is submitted for approval with a change Type that has no approver defined. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action4 : Notify requester when the CR is approved. Configure “Send Mail” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Note: Please refer the app manual for creating mail templates from here . Action5 : Notify the requester when CR is denied. Configure “Send Mail” action as shown in below screenshot. Note: Please refer the app manual for creating mail templates from here . Normal 0 false false false EN-US X-NONE X-NONE Crow Canyon Applications How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "302",
    "name": "302 - Configure Approver functionality using NITRO Workflow Manager – Workflows 3 and 4 - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/302%20-%20Configure%20Approver%20functionality%20using%20NITRO%20Workflow%20Manager%20%E2%80%93%20Workflows%203%20and%204%20-%20Crow%20Canyon%20Soft.html",
    "title": "Configure Approver Functionality Using NITRO Workflow Manager – Workflows 3 And 4 Crow Canyon Soft",
    "text": "Configure Approver functionality using NITRO Workflow Manager – Workflows 3 and 4 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Workflows / Configure Approver functionality using NITRO Workflow Manager &#8211; Workflows 3 and 4 Configure Approver functionality using NITRO Workflow Manager &#8211; Workflows 3 and 4 2512 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please make sure that the required list schema is created before start configuring this workflow, please refer https://www.crowcanyon.help/article/299 article for list schema details. Normal 0 false false false EN-US X-NONE X-NONE Workflow3 : Create a workflow on Change Request Approver Tasks list “on item created” event. Configure workflow as shown below. Normal 0 false false false EN-US X-NONE X-NONE Action 1: Notify the approver about his/her new task. Configure “Send Mail” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Note: Please refer the app manual for creating mail templates from here . Workflow4: Create a workflow on Change Request Approver Tasks list “on item modified” event. Configure workflow as shown below. Normal 0 false false false EN-US X-NONE X-NONE Action1: Update the Change Request “Approval Status” when approver approve it. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action2 : Update the Change Request “Approval Status” when approver reject it. Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action3: Complete the task (Set task status to “Completed”) when the approver make the decision (either approve or reject). Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Crow Canyon Applications How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "303",
    "name": "303 - Crow Canyon O365 apps and feature description.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/303%20-%20Crow%20Canyon%20O365%20apps%20and%20feature%20description.html",
    "title": "Crow Canyon O365 Apps And Feature Description",
    "text": "Crow Canyon O365 apps and feature description - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio / Crow Canyon O365 apps and feature description Crow Canyon O365 apps and feature description 2566 views 2 min , 4 sec read 0 Overview of Crow Canyon Apps for SharePoint Online Applies to: SharePoint Online Please refer manuals for more details on each app. Here we have only given an overview of the functionality. NITRO 2.0 Apps: http://www.crowcanyon.info/nitro/appmanual_v2/ NITRO 1.0 Apps: https://www.crowcanyon.info/nitro/appmanual_v1/ S.No App Name Feature Description 1. Crow Canyon Common Utilities This is a common app that provides multiple functionality like Batch Actions, Assets Check-in/Check-Out, Page Navigation, etc. features that supports our application. 2. Crow Canyon Forms Manager The Forms Manager App allows modifications of default SharePoint List Forms without writing any code. It adds a Tabbed interface to forms and allows configuring permission on list columns. Forms Manager helps in defining the business processes along with other Crow Canyon Apps like Cascaded Lookup, Workflow Manager, Advanced Approvals, and Linked Items. 3. Crow Canyon Reports app Allows users to generate custom reports using data from the SharePoint Lists. Reports displays progress of list data graphically based on fields configured. The App consists of the Report Manager, where the reports are configured, and the Report Center, which is a page in the SharePoint application that shows the reports that were configured in the Report Manager. 4. Crow Canyon Advanced Print Provides ability to print information from SharePoint lists and items. It allows users to define multiple print templates with different styles and data and use them conveniently. 5. Crow Canyon Approval Workflow Provides ability to configure multiple and/or multi-level approval business flows 6. Crow Canyon Workflow Manager Allows users to configure custom business flow based on list item create/update/delete events or based on a date column value (timer based). 7. Crow Canyon Email Sync The Crow Canyon Email Sync service will sync the mail box configured for email address in the Email Sync settings. When an email is sent to email address configured in email sync settings, our crow canyon email sync app will create items in SharePoint lists as per the email sync settings. 8. Crow Canyon Configurable Portal Give users ways to engage effectively with our applications, thereby driving user adoption and accelerating usage of SharePoint and Office 365. 9. Crow Canyon Branding Allows administrators to customize look and feel of the SharePoint sites. By default Crow Canyon provides five different themes. Also allows users to create custom themes along with different quick launch styles. 10. Crow Canyon Advanced Lookup It allows users to search the lookup list items and easily select the item from the search results rather than going through the items in the drop down. It also allows to copy over data from the lookup list item to the main list item based on the column mapping configured for this purpose. 11. Crow Canyon Advanced Email Crow Canyon&#8217;s Advanced Email App is an add-in for Office 365 that allows user to send outgoing emails from SharePoint lists and performs updates on item. 12. Crow Canyon CascadedLookup Provides ability to filter child lookup column options based on the parent lookup column value selection. It supports the cross-site lookup and filtering on top of it. 13. Crow Canyon Linked Items Allows to display a list of related items directly on a parent item’s forms and view. 14. Crow Canyon Product app It provides different features like email to ticket conversion, auto –assignment. Auto-notifications, case-Id generation etc. 15. Crow Canyon ColorKPI The Crow Canyon Conditional Formatting App is an add-on for Office 365 that allows users to format columns and rows in a list view based on conditions in the data. 16. Crow Canyon Tiles and Arc The Tiles &amp; Dials App allows visualizing counts of list items as Tiles using ‘Crow Canyon Tiles’ and as Arcs using ‘Crow Canyon Dials’. 17. Crow Canyon Product Setup app Automated installer that creates and configure Crow Canyon applications. NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "304",
    "name": "304 - How to customize SharePoint list view filter conditions using SharePoint Designer_ - Crow Canyon Sof.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/304%20-%20How%20to%20customize%20SharePoint%20list%20view%20filter%20conditions%20using%20SharePoint%20Designer_%20-%20Crow%20Canyon%20Sof.html",
    "title": "How To Customize SharePoint List View Filter Conditions Using SharePoint Designer Crow Canyon Sof",
    "text": "How to customize SharePoint list view filter conditions using SharePoint Designer? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / General SharePoint Question , How-To / How to customize SharePoint list view filter conditions using SharePoint Designer? How to customize SharePoint list view filter conditions using SharePoint Designer? 11223 views 1 min , 3 sec read 2 Design view filter using SharePoint Designer Applies to: SharePoint Online and On-Premises Description: It is difficult to configure grouping (Multiple AND &amp; OR) in SharePoint list view filter conditions using SharePoint view settings UI. Also, SharePoint supports maximum of 10 columns to filter in the view. In order to overcome this limitation, the view filter query (CAML Query) can be modified using the SharePoint Designer as per the requirement. In this example, we are replacing the CAML query such that &#8220;Tasks&#8221; list view shows the items where &#8220;Assigned To&#8221; is either logged in user or the groups where the logged in user is a member. Detailed Steps: &#8211; Run SharePoint designer as Administrator, Open the site. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Provide Site URL in the &#8220;Site Name&#8221; text box (highlighted area in below screenshot) and open &#8211; Click Lists and Libraries in the navigation pane Normal 0 false false false EN-US X-NONE X-NONE &#8211; Click on the desired list under &#8220;Lists&#8221; and it will pull all the list information Normal 0 false false false EN-US X-NONE X-NONE &#8211; Click on the desired view from available views. If designer does not allow to modify the content, click on advanced mode as shown below. Normal 0 false false false EN-US X-NONE X-NONE &#8211; Open Source view mode by selecting Code as shown below Normal 0 false false false EN-US X-NONE X-NONE &#8211; Now Add/replace existing Where clause in CAML Query part of the view with the desired CAML query. Normal 0 false false false EN-US X-NONE X-NONE CAML Query for our example case: &lt;Where&gt; &lt;Or&gt; &lt;Eq&gt; &lt;FieldRef ID=\"AssignedTo\" /&gt; &lt;Value Type=\"Integer\"&gt; &lt;UserID/&gt; &lt;/Value&gt; &lt;/Eq&gt; &lt;Membership Type=\"CurrentUserGroups\"&gt; &lt;FieldRef Name=\"AssignedTo\" /&gt; &lt;/Membership&gt; &lt;/Or&gt; &lt;/Where&gt; The above query is to show the list items where logged in user is in Assigned To column or logged in user is a member of the group entered in the Assigned To column. For more information about CAML queries and CAML Query Builder tool, refer: https://msdn.microsoft.com/en-us/library/ff647340.aspx General SharePoint Question How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "306",
    "name": "306 - How to configure mail template in Workflow Manager with Case Id syntax [CaseId_ value]_ - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/306%20-%20How%20to%20configure%20mail%20template%20in%20Workflow%20Manager%20with%20Case%20Id%20syntax%20%5BCaseId_%20value%5D_%20-%20Crow%20Canyo.html",
    "title": "How To Configure Mail Template In Workflow Manager With Case Id Syntax [CaseId Value] Crow Canyo",
    "text": "How to configure mail template in Workflow Manager with Case Id syntax [CaseId: value]? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Workflows / How to configure mail template in Workflow Manager with Case Id syntax [CaseId: value]? How to configure mail template in Workflow Manager with Case Id syntax [CaseId: value]? 2323 views 1 min , 5 sec read 0 Applies to : SharePoint Online and SharePoint On-Premises Normal 0 false false false EN-US X-NONE X-NONE Description : If the Case Id syntax “[CaseId: value]” present in the mail subject, our application links that email to ticket instead of creating new duplicate ticket. In standard notification utilities we can directly include this syntax, but in Workflow Manager “[“and “]” characters are reserved ones so we cannot directly use them mail template. This article describes the alternative solution. Summary of steps: 1. Create two single line of text fields (left, right) in Tickets list 2. Configure Mail template with left and right place holders instead of direct brackets 3. Update existing tickets using datasheet view (Optional ) Normal 0 false false false EN-US X-NONE X-NONE Detailed Steps: 1. Create two single line of text fields in Tickets list a. Create one field, “left” with default value “[“and another field, “right” with default value “]”. To create new fields, please go to Application Administration &#8211;&gt; Configure lists &#8211;&gt; Configure Tickets and create new column as shown below Normal 0 false false false EN-US X-NONE X-NONE Similarly, create another column with name “right” with text as “]”. Normal 0 false false false EN-US X-NONE X-NONE 2.Configure Mail Template with Case Id syntax -Edit the desired mail template and use left and right column place holders instead of direct bracket characters. i.Online: Go to Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon NITRO Workflow Manager App &#8211;&gt; edit the desired workflow, desired send mail action, edit desired mail template and update as shown in below screenshot. ii.On-Premises: Click on Site Settings gear icon , Crow Canyon Workflow Manger, edit the desired workflow, desired send mail action, edit desired mail template and update as shown in below screenshot. Mail Template Subject: Auto Assignment notification for ticket &#8212; [[left||left]]CaseId: [[ID||ID]][[right||right]] 3.Update Existing Tickets Normal 0 false false false EN-US X-NONE X-NONE a. With the above configurations, Case Id syntax works for newly created tickets that are created after these configurations. For the existing tickets, left and right columns values are still blank so we need to update them. We can use Datasheet view/Quick Edit mode to update tickets in bulk. Crow Canyon Applications How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "307",
    "name": "307 - Request Status usage in SharePoint On-Premises V3.7.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/307%20-%20Request%20Status%20usage%20in%20SharePoint%20On-Premises%20V3.7.html",
    "title": "Request Status Usage In SharePoint On Premises V3.7",
    "text": "Request Status usage in SharePoint On-Premises V3.7 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customer Service , Help Desk , Request Manager , Work Orders / Request Status usage in SharePoint On-Premises V3.7 Request Status usage in SharePoint On-Premises V3.7 3166 views Less than a minute 3 Applies to: SharePoint On-Premises V3.7 Description: Tickets list has a “Request Status” field that indicates the current status of the ticket. By default, there are four values for this status: -Not Started Ticket is created but not assigned to any technician/assigned staff In Progress When the ticket is assigned a technician/assigned staff, product workflow updates the status with “In Progress” value automatically. If the assigned staff is emptied when the status is “In Progress”, product workflow sets the status back to “Not Started” Notifications work as per the “Notification on Ticket Assignment” utility Resolved Assigned Staff/technician to set the status to “Resolved” manually and notifications work as per the “Notification on Ticket Resolve” utility. Closed Assigned Staff/technician to set the ticket status to “Closed” manually and notifications work as per the “Notification on Ticket Close” utility. Number of days to auto close the resolved tickets can be configured from “Application Administration, General Configurations, edit the Status Handing tab, and set the “Number of days to auto close resolved tickets” column value to desired number of days. Crow Canyon Application uses these status values and these can’t be changed as otherwise application state machine may not work correctly. Additional Request status values can be added to the “Request Status” field and these can be used as needed (For example, differed). If we would like to send notifications or perform some action when the ticket status changes to the newly added option, we can use Crow Canyon Workflow Manager solution. Refer https://www.crowcanyon.help/article/253 for sample send mail workflow using Crow Canyon Workflow Manager solution for SharePoint On-premises. Normal 0 false false false EN-US X-NONE X-NONE Customer Service Help Desk Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs Import Tickets using NITRO Custom Actions How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket How to include all Work Log Comments in Notification on Ticket close mails? Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "308",
    "name": "308 - How to configure external email address as “From Address” in the Notifications Utilities_ - Crow Can.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/308%20-%20How%20to%20configure%20external%20email%20address%20as%20%E2%80%9CFrom%20Address%E2%80%9D%20in%20the%20Notifications%20Utilities_%20-%20Crow%20Can.html",
    "title": "How To Configure External Email Address As “From Address” In The Notifications Utilities Crow Can",
    "text": "How to configure external email address as “From Address” in the Notifications Utilities? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , How-To / How to configure external email address as “From Address” in the Notifications Utilities? How to configure external email address as “From Address” in the Notifications Utilities? 4779 views 1 min , 15 sec read 0 Applies to: SharePoint On-Premises and SharePoint Online Description: Crow Canyon service request application standard auto notifications takes the from address from standard notifications utilities and will send mails to recipients. As part of the standard installation configurations, from address in different environments are configured as described below: On-premises: The notifications utilities takes the “from address” from the SharePoint Central Administration, Outgoing Email settings if the “From Address” columns left blank in notification utilities. Online: “From Address” is mandatory to configure in Notification utilities. In general it is &#8220;noreply@sharepointonline.com&#8221; There is a feature &#8220;Email To Ticket conversion and Email Capture&#8221; in both environments. For enabling this feature, in On-Premises environment, incoming email settings need to be configured for the &#8220;Email Tickets&#8221; list and for online version, Email Sync app setting need to be configured for the desired mailbox. If we use this incoming email address as from address for outgoing notifications then whenever the user reply back to the auto notification and/or technician mail, it goes back to SharePoint application and will be captured as part of the &#8220;Email History&#8221;. To achieve this, we will need to configure &#8220;From Address&#8221; as incoming email address which may not have the associated user account. By design “From Address” column is a person or group field so it could resolve only valid user account. To configure custom from address recreate the “From Address” as “Single line of Text” field in all notification utilities. Steps to recreate the “From Address” Field: Normal 0 false false false EN-US X-NONE X-NONE &#8211; Delete the “From Address” field and recreate a new single line of text column with the field name as “FromAddress”, (please make sure that there is no space between two words). Later the display name can be set as “From Address”. The above step needs to be done in all the notification utility lists mentioned below: &#8211; Notification on Ticket Creation (Online and On-Premises) &#8211; Notification on Ticket Assignment (Online and On-Premises) &#8211; Notification on Ticket completion (Online and On-Premises) &#8211; Notification on Incoming Email (Online and On-Premises) &#8211; Notification on Ticket Resolution (On-Premises only) &#8211; Notification on Ticket Reactivation (On-Premises only) &#8211; Auto Status Utility (On-Premises only) &#8211; SLA Definition (On-Premises only) Edit all the above utility items, enter the desired from address and save. Crow Canyon Applications Email How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "309",
    "name": "309 - How to configure Assets Preventive Maintenance using Crow Canyon NITRO Workflow Manager for O365 - C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/309%20-%20How%20to%20configure%20Assets%20Preventive%20Maintenance%20using%20Crow%20Canyon%20NITRO%20Workflow%20Manager%20for%20O365%20-%20C.html",
    "title": "How To Configure Assets Preventive Maintenance Using Crow Canyon NITRO Workflow Manager For O365 C",
    "text": "How to configure Assets Preventive Maintenance using Crow Canyon NITRO Workflow Manager for O365 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Equipment Management , How-To , NITRO Studio- Workflows / How to configure Assets Preventive Maintenance using Crow Canyon NITRO Workflow Manager for O365 How to configure Assets Preventive Maintenance using Crow Canyon NITRO Workflow Manager for O365 4677 views 1 min , 42 sec read 0 Applies to: SharePoint Online (O365) Description: Recurring maintenance tasks and schedules can be set up to track repairs and routine service. Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE Schema: &#8220; Asset Catalog&#8221; list that has &#8220;Maintenance Schedule&#8221; and &#8220;Template&#8221; lookup fields. By design, Assets list is linked to Asset Catalog and it has a column “Enable Maintenance”. If an Asset is maintenance enabled and it is linked to an Asset type (Catalog list item) that has maintenance configured, it creates the Tasks based on the maintenance schedule and the template information configured in the corresponding Asset type This article deals with the standalone assets site, if we configure IT Helpdesk site with assets, tickets will be created instead of tasks. Normal 0 false false false EN-US X-NONE X-NONE Configurations: Normal 0 false false false EN-US X-NONE X-NONE Ø To configure the “Asset Preventive Maintenance” , Go to Application Administration &#8211;&gt; Maintenance Schedule &#8211;&gt; Edit Asset Catalog item &#8211;&gt; and configure Maintenance Schedule and Maintenance Tasks Maintenance Schedule Tab: In this tab, we can configure the duration span for the asset maintenance. Schedule Type: Select the desired schedule type, like “Days, Weeks, Months or Years” as required . Schedule Interval : Specify interval in number, solution uses this setting along with schedule type to decide the recurring period. For example, if we configure “Schedule Interval” as 4 and “Schedule Type” as Weeks, then a task will be created once for every 4 weeks. Maintenance Tasks Tab: In this tab, we can configure the fields that will be mapping to tasks list fields. Some sample fields are shown in sample screenshot below, more fields can be created as needed &nbsp; &#8211; In order to apply the schedule, make sure that the “Enable Maintenance” is checked in assets list item. Normal 0 false false false EN-US X-NONE X-NONE Implementation: We use Workflow Manager App to configure the Preventive Maintenance feature. Summary of steps: Normal 0 false false false EN-US X-NONE X-NONE 1. Create timer based workflow to create maintenance task based on the configured schedule Action1: Configure “Query List” action to read linked “Asset Catalog” list item. Action2: Configure “Create Item” action to create the task on “Next Maintenance Schedule Date” Action3: Configure “Update Item” action to update the “Next Maintenance schedule” 2. Create a workflow on “Item Modified” event on “Assets” list to update “Next Maintenance Date” when maintenance is enabled for an existing asset. Action1: Configure “Query List” action to read linked “Asset Catalog” list item Action2: Configure “Update Item” action to update the “Next Maintenance schedule” Normal 0 false false false EN-US X-NONE X-NONE Detailed Steps: Normal 0 false false false EN-US X-NONE X-NONE Workflow1: Create timer based workflow to create maintenance task based on the configured schedule as shown in below screenshot Normal 0 false false false EN-US X-NONE X-NONE Action1: Configure “Query List” action as shown in below screenshot Normal 0 false false false EN-US X-NONE X-NONE Action2: Configure “Create Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Note: We can add more fields in Asset Type and map them to target task list as needed. Action3: Configure “Update Item” action as shown in below screenshot Normal 0 false false false EN-US X-NONE X-NONE The formula used for this next maintenance schedule: = $calcdate([Next Scheduled Maintenance|NextScheduledMaintenance],AssetType##Schedule Interval,AssetType##Schedule Type) Workflow2: Create workflow on “Assets” list on Item modified event as shown in below screenshots Action1: Configure “Query List” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Action2: Configure “Update Item” action as shown in below screenshot. Normal 0 false false false EN-US X-NONE X-NONE Function: $calcdate({Today},AssetType##Schedule Interval,AssetType##Schedule Type) Asset Management Equipment Management How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "31",
    "name": "31 - How to retract and remove Crow Canyon farm solutions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/31%20-%20How%20to%20retract%20and%20remove%20Crow%20Canyon%20farm%20solutions.html",
    "title": "How To Retract And Remove Crow Canyon Farm Solutions",
    "text": "How to retract and remove Crow Canyon farm solutions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to retract and remove Crow Canyon farm solutions How to retract and remove Crow Canyon farm solutions 2925 views 1 min , 15 sec read 1 Retract and Remove Crow Canyon Farm solutions Applies to: SharePoint On-Premises Description: This article describes how to retract and remove Crow Canyon Farm solution. For sample scenario we have taken CCSSRWorkflows.wsp solution. Instructions: Go to Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Farm solutions &#8211;&gt; Open &#8220;CCSSRWorkflows.wsp&#8221; and retract the solution. Wait until the solution status changes to &#8220;Not Deployed&#8221; and then open the solution again and remove the solution. Troubleshooting steps if above process doesn&#8217;t work: If the solution got stuck at Retracting, we can run the command to execute pending jobs that will perform all the pending jobs in the server using the steps given below: 1. Stop the SharePoint timer and administration services in SharePoint server. Go to Start &#8211;&gt; Type Services.msc &#8211;&gt; Right click on it and Run it as Administrator &#8211;&gt; stop the “Sharepoint Administration” service and “Sharepoint Timer” services. 2. Run Command Prompt as Administrator and set the path to “C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\Bin” . 3. Run command as “STSADM.EXE -o execadmsvcjobs” . 4. Start SharePoint administration and Timer services. Note: 1 . In case of Multiple Servers, repeat these steps in all of the SharePoint servers that have the “Microsoft SharePoint Foundation Web Application” Service running in it. To know the service running in the Server, please go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Servers in the Farm. Here we can see the services running under each Server. 2. If we are removing the Crow Canyon Forms Manager solution, we need to remove the safe control instance from web.config file from path: C:\\inetpub\\wwwroot\\wss\\VirtualDirectories\\WebApplication Port Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Take the backup of Web.config file, edit the web.config file and remove the below line and save the file. &#8220;&lt;SafeControl Assembly=&#8221;CrowCanyon.FormsManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=6712f91b73fef060&#8243; Namespace=&#8221;CrowCanyon.FormsManager.ListManagerElements&#8221; TypeName=&#8221;*&#8221; Safe=&#8221;True&#8221; /&gt;&#8221; Screenshot: Note: If we do not find the &#8220;SafeControl&#8221; entry in web.config file, it is possible that the default location of virtual directory could be changed. Open IIS, expand Sites, right click on the web application name, and click &#8220;Explore&#8221;. This will open the correct virtual directory location so we can remove the Forms Manager&#8217;s SafeControl entry. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "310",
    "name": "310 - How to retract and remove Crow Canyon farm solutions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/310%20-%20How%20to%20retract%20and%20remove%20Crow%20Canyon%20farm%20solutions.html",
    "title": "How To Retract And Remove Crow Canyon Farm Solutions",
    "text": "How to retract and remove Crow Canyon farm solutions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to retract and remove Crow Canyon farm solutions How to retract and remove Crow Canyon farm solutions 2925 views 1 min , 15 sec read 1 Retract and Remove Crow Canyon Farm solutions Applies to: SharePoint On-Premises Description: This article describes how to retract and remove Crow Canyon Farm solution. For sample scenario we have taken CCSSRWorkflows.wsp solution. Instructions: Go to Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Farm solutions &#8211;&gt; Open &#8220;CCSSRWorkflows.wsp&#8221; and retract the solution. Wait until the solution status changes to &#8220;Not Deployed&#8221; and then open the solution again and remove the solution. Troubleshooting steps if above process doesn&#8217;t work: If the solution got stuck at Retracting, we can run the command to execute pending jobs that will perform all the pending jobs in the server using the steps given below: 1. Stop the SharePoint timer and administration services in SharePoint server. Go to Start &#8211;&gt; Type Services.msc &#8211;&gt; Right click on it and Run it as Administrator &#8211;&gt; stop the “Sharepoint Administration” service and “Sharepoint Timer” services. 2. Run Command Prompt as Administrator and set the path to “C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\Bin” . 3. Run command as “STSADM.EXE -o execadmsvcjobs” . 4. Start SharePoint administration and Timer services. Note: 1 . In case of Multiple Servers, repeat these steps in all of the SharePoint servers that have the “Microsoft SharePoint Foundation Web Application” Service running in it. To know the service running in the Server, please go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Servers in the Farm. Here we can see the services running under each Server. 2. If we are removing the Crow Canyon Forms Manager solution, we need to remove the safe control instance from web.config file from path: C:\\inetpub\\wwwroot\\wss\\VirtualDirectories\\WebApplication Port Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Take the backup of Web.config file, edit the web.config file and remove the below line and save the file. &#8220;&lt;SafeControl Assembly=&#8221;CrowCanyon.FormsManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=6712f91b73fef060&#8243; Namespace=&#8221;CrowCanyon.FormsManager.ListManagerElements&#8221; TypeName=&#8221;*&#8221; Safe=&#8221;True&#8221; /&gt;&#8221; Screenshot: Note: If we do not find the &#8220;SafeControl&#8221; entry in web.config file, it is possible that the default location of virtual directory could be changed. Open IIS, expand Sites, right click on the web application name, and click &#8220;Explore&#8221;. This will open the correct virtual directory location so we can remove the Forms Manager&#8217;s SafeControl entry. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "311",
    "name": "311 - Instructions to add and deploy Crow Canyon Farm solution.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/311%20-%20Instructions%20to%20add%20and%20deploy%20Crow%20Canyon%20Farm%20solution.html",
    "title": "Instructions To Add And Deploy Crow Canyon Farm Solution",
    "text": "Instructions to add and deploy Crow Canyon Farm solution - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Instructions to add and deploy Crow Canyon Farm solution Instructions to add and deploy Crow Canyon Farm solution 3868 views 1 min , 56 sec read 0 Add and deploy Crow Canyon Farm solutions Applies to: SharePoint On-Premises Description: This article describes how to add and deploy Crow Canyon farm solutions in SharePoint server (2013 and 2016) Pre requisites: Need access to SharePoint server Logged-in user account should be domain user, local administrator on SharePoint server and should be a SharePoint farm administrator The Account should have Owner rights on SharePoint configuration database, Central Administration content database and Web Application content database SharePoint Admin service and Timer services need to be in running state in all servers in the farm (services.msc) Instructions: We have taken CCSSRWorkflows.wsp solution as an example. Add solution : Open SharePoint Management Shell (Run as Administrator) and run below commands Run below command to add the solution: Add-SPSolution -LiteralPath \"&lt;filename with file path&gt;\" Deploy Solution (using SharePoint Management Shell): Run below command to deploy the solution: Install-SPSolution -Identity \"WSP Solution Name\" -WebApplication \"*Web Application URL*\" -GACDeployment Go to SharePoint Central Administration -&gt; System Settings -&gt; Manage Farm Solutions and wait until the solution status changes to deployed. Deploy Solution (Using Central Administration): Go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Farm Solutions &#8211;&gt; click on &#8220;CCSSRWorkflows.wsp&#8221; and deploy it to the right web application (One particular web application where our application is installed). Click Deploy solution Troubleshooting steps in case above process does not work: If the solution got stuck at Deploying, we can run the execute pending jobs command that will perform all the pending jobs in the server. Please follow below steps: 1. Stop the SharePoint timer and administration services in SharePoint server. Go to Start &#8211;&gt; Type Services.msc &#8211;&gt; Right click on it and Run it as Administrator &#8211;&gt; stop the “SharePoint Administration” service and “SharePoint Timer” services. 2. Run Command Prompt as Administrator and set the path to “C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\Bin”. 3. Run command as “STSADM.EXE -o execadmsvcjobs”. 4. Start SharePoint administration and Timer services. Note: In case of Multiple Servers, repeat these steps in all of the SharePoint servers that has the “Microsoft SharePoint Foundation Web Application” Service running in it. To know the service running in the Server, please go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Servers in the Farm. Here we can see the services running under each Server. 5. If still the solution is stuck at Deploying state, cancel the deployment from Central Administration. Note: Run SharePoint Central Administration as run as administrator -&gt; Try redeploy the solution from SharePoint Central Administration Go to SharePoint Central Administration -&gt; System Settings -&gt; Manage Farm Solution -&gt; Edit the solution and deploy the solution to target web application. we will receive the below error message then follow the below steps to deploy the solution. -&gt; Copy the Feature folder from any existing server and paste it in the hive location feature folder of the server where solution got stuck (C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\TEMPLATE\\FEATURES/). -&gt; Uninstall the feature from the server using STSADM command Command: stsadm.exe -o uninstallsolution -name &#8220;FeatureFolderName&#8221; -&gt; After uninstalling the feature, delete the feature folder which we pasted in the server. -&gt; Now deploy the solution from SharePoint central administration Go to SharePoint Central Administration -&gt; System Settings -&gt; Manage Farm Solution -&gt; Edit the solution and deploy the solution to target web application. Installation About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "312",
    "name": "312 - Installation steps for clean install of SharePoint solutions for Crow Canyon HelpDesk Application -.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/312%20-%20Installation%20steps%20for%20clean%20install%20of%20SharePoint%20solutions%20for%20Crow%20Canyon%20HelpDesk%20Application%20-.html",
    "title": "Installation Steps For Clean Install Of SharePoint Solutions For Crow Canyon HelpDesk Application",
    "text": "Installation steps for clean install of SharePoint solutions for Crow Canyon HelpDesk Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Installation steps for clean install of SharePoint solutions for Crow Canyon HelpDesk Application Installation steps for clean install of SharePoint solutions for Crow Canyon HelpDesk Application 2221 views 1 min , 32 sec read 0 Clean installation steps for CCSSR Workflows solution Applies to: SharePoint On-Premises Description: This article describes steps to do clean install CCS SR Workflows solution. Summary (detailed steps are given below this summary): 1. Remove Workflows instances from below lists: Tickets list Email Tickets list Approver Tasks list Change Requests (Applicable only for IT Premium) Change Request Approver Tasks (Applicable only for IT Premium) Problems (Applicable only for IT Premium) 2. Deactivate &quot;CCSSRWorkflows&quot; feature from Site Collection Features 3. Retract and remove &quot;CCSSRWorkflows.wsp&quot; solution from Central Administration 4. Add and deploy latest &quot;CCSSRWorkflows.wsp&quot; solution and activate the &quot;CCSSRWorkflows&quot; feature from Site Collection Features 5. After activating workflows feature, add workflows instances on the lists for which we have removed the workfows in Step #1 &nbsp; Detailed Steps 1. Remove Workflow instances from &quot;Tickets&quot;, &quot;Email Tickets&quot;, &quot;Approver Tasks&quot; lists etc. Tickets List: Go to List Settings &#8211;&gt; Workflow Settings, click &quot;Remove, Block or Restore a workflow&quot; and select remove and save (see screenshot below). Email Tickets List: Go to List Settings &#8211;&gt; Workflow Settings,&nbsp; click &ldquo;Remove, Block, or Restore a workflow&rdquo; and select remove and save (see screenshots below). Approver Tasks List: Go to List Settings &#8211;&gt;Workflow Settings,&nbsp; click &ldquo;Remove, Block, or Restore a workflow&rdquo; and select remove and save (see screenshots below) Change Requests List (Applicable only for IT Premium): Go to List Settings &#8211;&gt;Workflow Settings,&nbsp; click &ldquo;Remove, Block, or Restore a workflow&rdquo; and select remove and save (see screenshots below) &nbsp; Change Request Approver Tasks (Applicable only for IT Premium): Go to List Settings &#8211;&gt;Workflow Settings,&nbsp; click &ldquo;Remove, Block, or Restore a workflow&rdquo; and select remove and save (see screenshots below) Problems (Applicable only for IT Premium): Go to List Settings &#8211;&gt;Workflow Settings,&nbsp; click &ldquo;Remove, Block, or Restore a workflow&rdquo; and select remove and save (see screenshots below) &nbsp; 2. Deactivate CCS SR workflow Site Collection Feature Go to Site Collection Features (Site Settings &#8211;&gt; Go to top level site settings &#8211;&gt; Site collection features) &amp; Deactivate CCS SR Workflows feature. 3. Remove and retract CCSSRWorkfows.wsp solution as per steps given in: https://www.crowcanyon.help/article/310 4. Add and deploy CCSSRWorkflows.wsp solution as per steps given in: https://www.crowcanyon.help/article/311 5. Activate CCSSRWorkflows in&nbsp; Site Collection Features Add Workflow Instances to the Tickets, Email Tickets and Approver Tasks lists as described below. Tickets List: Go to Tickets List Settings &#8211;&gt; Workflow Settings &#8211;&gt; Add two Workflow as shown in below screenshots. &nbsp; Email Tickets List: Approval Tasks List: Change Requests : Change Request Approver Tasks: Problems: &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "313",
    "name": "313 - Troubleshooting steps for Email to Ticket conversion functionality.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/313%20-%20Troubleshooting%20steps%20for%20Email%20to%20Ticket%20conversion%20functionality.html",
    "title": "Troubleshooting Steps For Email To Ticket Conversion Functionality",
    "text": "Troubleshooting steps for Email to Ticket conversion functionality - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Email to Ticket conversion functionality Troubleshooting steps for Email to Ticket conversion functionality 1117 views 2 min , 47 sec read 0 Troubleshooting steps for Incoming and Outgoing email features in Crow Canyon HelpDesk application Applies to: SharePoint On-Premises 2013/2016/SharePoint Server Subscription Edition Troubleshooting steps for Incoming Emails Please refer this article to ensure that standard SharePoint email functionality is working in your environment: https://www.crowcanyon.help/article/322 Below steps are useful only if standard incoming and outgoing email functionality is working. Case 1: Email comes to Email Tickets list but Ticket is not created in tickets list If the item is created in Email Tickets list for an email but Ticket doesn&#8217;t gets created in Tickets list then check whether the Email Capture workflow instance is in allowed state or not in Email Tickets list. Go To Email Tickets list &#8211;&gt; List Settings &#8211;&gt; Workflow Settings &#8211;&gt; click on &#8216;Remove, Block or Restore a Workflow&#8217; and check if the workflow instance is set to &#8216;Allow&#8217;. If not, then set it to &#8216;Allow&#8217; and click Ok. Please note that workflow will not run automatically for existing items, you can run it manually as described further: If the Email Capture workflow instance is in allowed state, verify if the workflow instance was invoked for the email ticket item for which Ticket is not created. To verify this, click &#8220;Workflows&#8221; from the edit control block of the email ticket item and see if there is an instance already present (refer image below) If the workflow instance is invoked, click on the workflow instance &#8220;Completed&#8221; link and send us the screenshot to troubleshoot further Workflows link in Edit Control of the email tickets list item: Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Workflow Instance page: If workflow is invoked and still ticket is not created, requested logs will help us investigating this issue (refer &#8216;Further Steps&#8217; below) If workflow is not invoked, then run workflow instance manually as per instructions given below Instructions to run Email Capture workflow instance manually: Go to Email Tickets &#8211;&gt; List Settings &#8211;&gt; Workflow Settings &#8211;&gt; Edit Email Capture Workflow &#8211;&gt; Enable &#8220;Allow this workflow to be manually started by an authenticated User&#8221;. Once the workflow instance is allowed to run manually, select the Email Ticket and click on Workflows from ECB and click Email Capture to run workflow. Further steps: Verify if there are any configurations in Email Handling Utility that could stop processing Email Tickets (Spam tickets elimination if subject/body contains certain keywords, Exclude Cc/Bcc etc). Go to Application Administration &#8211;&gt; Email Configurations &#8211;&gt; Incoming Email Processing &#8211;&gt; Email Handling Utility. Please refer this article for more details regarding Email Handling Utiltiy: http://www.crowcanyon.info/sharepoint-manuals-37/email_configurations.html Please enable logs for Crow Canyon Product Workflows and reproduce the issue and send us the &#8220;CCSSRECLog.txt&#8221; file. Please refer instructions to enable logs for Crow Canyon product Workflows from: https://www.crowcanyon.help/article/229 Case 2: Duplicate tickets are being created in Tickets list for the incoming emails 1. Possible reason could be if you have mutliple SharePoint servers in the farm. If Incoming email and SMTP service are enabled in every server, it leads to duplicate mails in the Email Tickets list and then these are converted to Tickets. To avoid this, have Incoming Email and SMTP service enabled on only one server and disable for all other servers 2. If the incoming email does not contains Case ID in the email subject then new ticket would be created for those incoming email. Please refer this http://crowcanyon.info/absolutefm/afmviewfaq.aspx?faqid=306 article to configure CaseId in the workflow manager mail templates. 3. If auto reply (Out of office) rules are configured in the mailbox settings then those auto replies comes back to our SharePoint list (Email Tickets list) if the user has configured from address as Email Tickets list address. To avoid this, we can configure &#8220;Out of Office&#8221; in the subject line in &#8220;Email Handling Utility&#8221; so that it exclude such type of emails from ticket creation. Please refer this article http://www.crowcanyon.info/sharepoint-manuals-37/email_configurations.html for more details regarding Email Handling Utility Case 3: Attachments missing in Tickets Issue: Attachments are present in Email Ticket but those attachements are not being added to the ticket while converting them as tickets Cause: This issue could happen due to the save conflicts while adding attachments to tickets. To confirm this, verify if there are any save conflict errors present in the Email Capture log file (File name: CCSSRECLog.txt) from path &#8220;C:\\CCSSRLogFiles&#8221; folder. If there are no errors or if logs are not generated, enable the logs for Crow Canyon Product Workflows, reproduce the issue and send us the log file CCSSRECLog.txt so that we will investigate this issue further . Please refer this article http://crowcanyon.info/absolutefm/afmviewfaq.aspx?faqid=229 to enable the product workflow logs Fix for save conflicts: This is handled in latest Crow Canyon workflows solution. Please contact Crow Canyon support to get latest workflows solution with installation instructions as per the current version of your Crow Canyon application. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "314",
    "name": "314 - How to configure email notification on status change using Crow Canyon Workflow Manager - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/314%20-%20How%20to%20configure%20email%20notification%20on%20status%20change%20using%20Crow%20Canyon%20Workflow%20Manager%20-%20Crow%20Canyo.html",
    "title": "How To Configure Email Notification On Status Change Using Crow Canyon Workflow Manager Crow Canyo",
    "text": "How to configure email notification on status change using Crow Canyon Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure email notification on status change using Crow Canyon Workflow Manager How to configure email notification on status change using Crow Canyon Workflow Manager 1099 views 1 min , 4 sec read 0 Email notification using Workflow Manager based on change in a column value Applies to: SharePoint On-Premises and O365 Description This article describes how to configure a workflow using Crow Canyon Workflow Manager to notify users whenever a field value is changed for a SharePoint list item. Images used are from Workflow Manager On-prem solution, but can be used for online app as well with very similar steps. In this case we are taking the example of status value change for an item in Tickets list. When a Ticket item is &#8216;assigned&#8217; to a staff, we want to notify the requester, assigned staff and additional contact users specified on the Ticket. Also, we want to send a mail to a fixed user (not in one of the fields in the Ticket item). Crow Canyon product has a standard feature for this functionality. However, for custom requirements like sending portal based Ticket link to staff users, this kind of workflow can be configured and standard functionality disabled. Please refer below link for standard functionality: Notification on New Ticket Creation: http://www.crowcanyon.info/sharepoint-manuals-37/notification_on_new.html Summary of Workflow Configuration Configure a workflow on item modified event with conditions to check for the required status value as the value after item update Configure a mail template with required information and links Configure a send mail action using the template from step 2 Workflow Configuration 1. Configure a workflow on Tickets list on item modified event: Condition: \"Request Status\" equal \"afterchange:Assigned\" &nbsp; 2. Configure Mail Template Note: Please refer this article https://www.crowcanyon.help/article/306/ for CaseId configuration in mail templates. Mail Template Subject: Auto Assignment notification for ticket &#8212; [[left||left]]CaseId:[[ID||ID]][[right||right]] Insert Portal URL in mail template: URL will be like http://*Site URL*/portal/SitePages/DisplayForm.aspx?pid=1&amp;ItemID=[[ID||ID]] 3. Send Mail Action Please select the required recipients and the mail template &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "315",
    "name": "315 - Notify Requester_Staff whenever there is an update to the ticket Work Log - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/315%20-%20Notify%20Requester_Staff%20whenever%20there%20is%20an%20update%20to%20the%20ticket%20Work%20Log%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Notify Requester Staff Whenever There Is An Update To The Ticket Work Log Crow Canyon Software Sup",
    "text": "Notify Requester/Staff whenever there is an update to the ticket Work Log - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio- Workflows / Notify Requester/Staff whenever there is an update to the ticket Work Log Notify Requester/Staff whenever there is an update to the ticket Work Log 3235 views 1 min , 12 sec read 9 Applies to: SharePoint online and SharePoint On-premises Description: To notify requester/staff whenever there is an update to the ticket &#8220;Work Log&#8221;. Detailed steps Disable Notify Assigned Staff on Incoming Email: When Requester sends an email to the existing ticket, staff will receive notification and &#8220;Work Log&#8221; of the ticket will be updated with truncated mail body. In this article we will send notification to Assigned Staff when the &#8220;Work Log&#8221; is modified using Crow Canyon Workflow Manager so we can disable the &#8220;Notify Staff&#8221; on Incoming Email. To disable this feature, go to Site Contents &#8211;&gt; &#8216;Notification on Incoming Email&#8217; list -&gt; Edit the item and disable &#8220;Notify Staff&#8221; (see screenshot below) Notify Requester/Assigned Staff on Work log update: We can notify Ticket Requester when there is an update to the ticket Work Log by technician and vice versa. We can configure a workflow using Crow Canyon Workflow Manager for this. Workflow Configuration: Note: For SharePoint online, if you are still using Crow Canyon Workflow Manager old app, please refer this article for workflow configuration:&nbsp; https://www.crowcanyon.help/article/214/ Create a workflow on Tickets list for Item Modified event as shown below: S. No. Tickets List Column Name Operator Condition Value 1 Work Log Equal afterchange:[[Any]] 2 Work Log Is not empty &nbsp; 3 Request Status &nbsp;Equal afterchange:[[None]] Note: For SharePoint online, please enable the &#8220;Process this workflow for items create, modified or deleted by automated processes&#8221; in the workflow. Add a Send Mail Action to the Workflow with Mail template configuration as shown below: Note : Please refer Crow Canyon Workflow Manager manual from https://www.crowcanyon.info/nitro/appmanual_v2/ Send Mail action configurations: 1. Send mail to Assigned Staff when Requester modifies the &#8220;Work Log&#8221; manually or Requester sends an email to the existing ticket. S. No. Tickets List Column Name Operator Condition Value 1 Modified By Equal [Requester|Requester] 1 Modified By Equal $parseuservalue(System Account) 2 Modified By Equal SharePoint App 2. Send mail to Requester when assigned staff modifies the &#8220;Work Log&#8221; Note: Please note that this notification only contains the latest comments entered in the work log for the current version. If you would like to include all &#8220;Work Log&#8221; comments, then please refer: https://www.crowcanyon.help/article/423/ Help Desk NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "316",
    "name": "316 - SharePoint On-Premises_ How to create new set of Lists for Archival.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/316%20-%20SharePoint%20On-Premises_%20How%20to%20create%20new%20set%20of%20Lists%20for%20Archival.html",
    "title": "SharePoint On Premises How To Create New Set Of Lists For Archival",
    "text": "SharePoint On-Premises: How to create new set of Lists for Archival - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint On-Premises: How to create new set of Lists for Archival SharePoint On-Premises: How to create new set of Lists for Archival 950 views 1 min , 52 sec read 0 Creating List Schema for archival feature Applies To : SharePoint On-Premises 2013/2016 /SharePoint Server Subscription Edition (For SPOnline case, please refer: https://www.crowcanyon.help/article/193 ) Please follow below steps to prepare the Lists for archival. Please note that Archive related lists should not have any workflow instances or event receivers attached to them. After creating the lists as described in this article, refer #2 and #3 from this article: https://www.crowcanyon.help/article/277 1. Take list templates for Tickets, Email Tickets, Associated Tasks, Calendar and Time Tracking lists Go to Site Contents &#8211;&gt;Tickets list &#8211;&gt;List Settings &#8211;&gt;Click on &#8216;Save list as Template&#8217; link: &#8212; Give File name,Template Name and click on &#8220;Ok&#8221; Similarly, take list templates for other lists. 2. Create Archive Lists &#8212; Create archival lists (Archived Tickets, Archived Email Tickets, Archived Associated Tasks, Archived Calendar, Archived Time Tracking lists) using these list templates created in step 1 (The idea behind creating Archived Email Tickets, Arichived Time Tracking, Archived Calendar and Archived Associated Tasks lists is to move email history and related tasks along with tickets during the archival process). &#8212; Creating Archived tickets list: Go to Site Contents &#8211;&gt; Add an App &#8211;&gt; Select Tickets list Template &#8211;&gt; name it as Archived Tickets list &#8212; Similarly create Archived Email Tickets, Archived Time Tracking,Archived Calendar and Archived Associated Tasks lists using their correspoinding list templates 3. Verify Lookup and Associated Items Fields Once archive lists are created, we need to verify the lookup fields. Also, some lookup fields have to be recreated so that they refer archive lists instead of the original lists. &#8212; For some lookup fields like Category and Issue Type, they will continue to refer the same lists as the original Tickets list. We need to navigate to the field settings of these lookups and just verify that they are having the correct settings &#8212; For other lookups, such as &#8216;Related Ticket Id&#8217; in Email Tickets list, we need to recreate this lookup so that it refers to Archive Tickets list instead of the original Tickets list. Correspondingly, we need to recreate the Associated Items fields that are referring these recreated lookup fields. Please refer the details given below to verify and recreate these fields Fields in Archived Email Tickets list: Internal name: RelatedTicketID Display name: Related Ticket ID Fields in Archived Time Tracking list: I nternal name: TicketID Display name: Related Ticket ID Fields in Archived Assoicated Tasks list: Internal name: RelatedTicketID Display name: Related Ticket ID Fields in Archived Calendar list: 4. Reconfigure Associated Items columns &#8212; Delete all &#8216;Crow Canyon Associated Items&#8217; columns from Archived Tickets list and re-create using the newly created lookup fields so that they they show items from corresponding archive lists Delete Time Tracking, Email History, Appointments, and Associated Tasks fields from Archived Ticekts list. &#8212; Create below fields in Archived Tickets list Go to Site Contents &#8211;&gt; Archived Tickets list &#8211;&gt; List Settings &#8211;&gt; Create associated columns like shown below. Internal Name : TimeTracking Display name: Time Tracking Internal Name: IT Associated Task Display Name: IT Associated Task Internal Name: Email History Display Name: Email History Internal Name: Appointments Display Name: Appointments After creating the list schema, please configure Archival settings with newly created list like shown below Please refer this article http://www.crowcanyon.info/sharepoint-manuals-37/archiving_tickets.html for more details regarding Archival functionality. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "317",
    "name": "317 - How to reopen a ticket if email comes for an existing closed ticket_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/317%20-%20How%20to%20reopen%20a%20ticket%20if%20email%20comes%20for%20an%20existing%20closed%20ticket_.html",
    "title": "How To Reopen A Ticket If Email Comes For An Existing Closed Ticket",
    "text": "How to reopen a ticket if email comes for an existing closed ticket? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to reopen a ticket if email comes for an existing closed ticket? How to reopen a ticket if email comes for an existing closed ticket? 993 views Less than a minute 0 Reopen closed ticket on incoming email Applies to: SharePoint Online and On-premises Description: Configure workflow using Crow Canyon Workflow Manager to reopen the ticket whenever an email comes for an existing closed ticket. Email subject needs to have the CaseId syntax to get this functionality to work. CaseId syntax: [CaseId: ID] Summary of Configurations: Configure a workflow on Item modified event of Email Tickets list with update item actions. Detailed Instructions: Configure a workflow on Email Tickets list on item modified event as shown in below screenshot Update Item Action: &nbsp; Note: If Ticket is to be reopened only if the ticket has been closed in last 5 days then add additional condition to the workflow as shown below: Value expression for closed date: $subtract({Today},5:0:0:0) About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "318",
    "name": "318 - How to configure a report to see the Average Elapsed Hours by Priority_ - Crow Canyon Software Suppo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/318%20-%20How%20to%20configure%20a%20report%20to%20see%20the%20Average%20Elapsed%20Hours%20by%20Priority_%20-%20Crow%20Canyon%20Software%20Suppo.html",
    "title": "How To Configure A Report To See The Average Elapsed Hours By Priority Crow Canyon Software Suppo",
    "text": "How to configure a report to see the Average Elapsed Hours by Priority? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure a report to see the Average Elapsed Hours by Priority? How to configure a report to see the Average Elapsed Hours by Priority? 922 views Less than a minute 0 Report Average Elapsed hours by Priority Applies to: SharePoint On-Premesis Requirement: Configure a report to see the Average Elapsed Hours by Priority. 1. Configure a report like shown below Sample report preview: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "319",
    "name": "319 - How to troubleshoot Report Center issues_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/319%20-%20How%20to%20troubleshoot%20Report%20Center%20issues_.html",
    "title": "How To Troubleshoot Report Center Issues",
    "text": "How to troubleshoot Report Center issues? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Troubleshooting / How to troubleshoot Report Center issues? How to troubleshoot Report Center issues? 2604 views 2 min , 22 sec read 1 Troubleshooting steps for Report Center issue Applies to: SharePoint 2013, 2016 I) Symptom: After configuring the report, when we click “Create Report” button, it shows list doesn’t exist error and and report is not created. &#8220;The page you selected might contains a list that doesn’t exist. It may have been deleted by another user” (see screenshot for sample error) Cause: Report is not configured with target library Resolution: This issue can happen if Report Center document library is not configured in Report Center page. To fix this please go to &#8220;Report Center&#8221; page from top link bar, New Report&#8211;&gt; Edit the page&#8211;&gt; Edit the New Report web part and select the Report Center document library as shown like below. Normal 0 false false false EN-US X-NONE X-NONE Screenshot: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE II) Symptom: Error when creating the chart using flash chart rendering engine. (Note: Flash chart rendering engine is required for charts only and not required for tables) Cause: Adobe flash player 6 is not installed. Resolution: Please download and install adobe flash player 6 or above and try again. Alternatively you can use HTML5 reports that doesn&#8217;t depend on Flash and provide better functionality Screenshot: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE III) Symptom: After configuring the report, when we click “Create Report” button, the report will be generated but when you open the report, it doesn&#8217;t get loaded (keeps showing loading&#8230;) Cause: Could be due to List view/Lookup view threshold exceeded Resolution: If the selected list has more than the lookup threshold or list view threshold, please fix it in central admin as shown below. Go to central administration &#8211;&gt; application management &#8211;&gt; manage web applications &#8211;&gt; click on the web application you working on &#8211;&gt; click on general settings in web applications ribbon &#8211;&gt; click on Resource Throttling and increase the lookup count as shown below. Alternatively, you can remove unnecessary lookup/person and group columns from the list. For list view threshold, you can modify the view filters to return less than the threshold items &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Screenshot: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE IV) Symptom: A blank page appears in report center page and edit report page. (See screenshot). Cause: The selected list may have one or more duplicate columns. Generally SharePoint does not allow creating duplicate columns, however, sometime if we add a content type then it is possible to get duplicate columns with same name. For example, I have a list with Priority column and later I have added the Task Content type to this list and removed the content type again, in this case it is possible that the list ends up with two priority columns. This issue occur very rarely as it involves two content types with both having field with same name. Please check the list settings page and ensure that the list does not have any duplicate columns. Resolution: If the selected list has duplicate columns, please remove the column(s) that are not in use. Or rename one of the duplicate columns Screenshot: &nbsp; V) Symptom: &#8220; Manage Templates&#8221; or &#8220;New Report&#8221; links in Report Center page is redirect to wrong URL. Cause: Report links web part is not configured in Report Center page Resolution: We need to configure the report links web part in all the pages that are present in the Report Center document library. Detailed Instructions: Please go to Site Contents &#8211;&gt; Report Center document library&#8211;&gt; Copy the URLs of &#8220;Report and Manage Templates&#8221; pages and separate them with semicolon (;) and copy the new URL. Ex: http://focusonsharepoint.biz/demo/itpremium/IT/Report%20Center/Reports.aspx;http://focusonsharepoint.biz/demo/itpremium/IT/Report%20Center/Manage%20Templates.aspx Next go to Report Center document library &#8211;&gt; Open &#8220;CCSReportsPageBaseTemplate&#8221; page &#8211;&gt; Edit the page &#8211;&gt; Edit Report Links web part &#8211;&gt; Update the URL in &#8220;New Report Page URL&#8221; text box with the copied URL (see screenshot below). Repeat the above step for all the pages that are present in the Report Center document library. VI) Symptom: Access Denied error appears for the users when trying to access &#8220;Report Center&#8221; pages even though they have edit permissions on the site. Cause: This happens if the user is not having at least read permissions on the root site. Resolution: Grant read permissions on the root site for the users that need report center access. Report Center Reports Crow Canyon Applications Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "32",
    "name": "32 - Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/32%20-%20Item%20attachments%20handling%20for%20Crow%20Canyon%20NITRO%20Forms%20and%20Portal%20%28SharePoint%20Online%29.html",
    "title": "Item Attachments Handling For Crow Canyon NITRO Forms And Portal (SharePoint Online)",
    "text": "Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) 1412 views 3 min , 13 sec read 0 Specifics of how attachments are handled in Portal Forms and NITRO Forms for SharePoint Online Normal 0 false false false EN-US X-NONE X-NONE Applies to: SharePoint Online Please refer this article if you are using SharePoint On-premises (2013 / 2016/SharePoint Server Subscription Edition): https://www.crowcanyon.help/article/328 Attachment Handling Details Crow Canyon NITRO Forms and Portal create/update the SharePoint item using SharePoint APIs like REST and JSOM. Similarly, attachments are added to new item and added/removed from existing item using the APIs. For each attachment a separate operation has to be performed and with standard API, this increments the version of the item. This implies that if an item is created with 4 attachments, it will have 5 versions after the save. One version will be for normal save of the item and one version each for the attachments added to the item. Any downstream products like Workflows that are triggered on item update, will be triggered 5 times in quick succession and this can result in some issues like &#8216;save conflicts&#8217; or inability to detect change in the item field values that workflows depend on. This issue is handled in Crow Canyon Product in following ways: Forms code doesn&#8217;t use standard API to add/remove attachments from the item. Instead it directly works with folders to avoid creating versions and doesn&#8217;t fire the item update event while handling attachments Because of above, SharePoint standard forms and views don&#8217;t show the item attachments. So additional code is added in these forms to update the item properties to show the attachments If you notice any issue in attachment handling then please refer below cases to idenfiy and configure the solutions to fix the issue. SharePoint Online based Products: 1) Item Attachments not showing in Default SharePoint Forms (classic view) when attachments are added using Portal or NITRO Forms A. Go to NITRO Apps page for the site and update the NITRO package by clicking &#8216;Update this Site&#8217; link (if item is created using NITRO Forms), Upgrade the portal site from Crow Canyon Power Portal App by clicking the &#8216;Update&#8217; button (if item is created using Portal). B. Add Content Editor Web part to the SharePoint Display and Edit form. (Shown at end of this FAQ &#8211; Adding Content Editor ). 2) Item Attachments not showing in CrowCanyon Forms Manager/Enhanced List Forms when attachments are added using Portal or Advanced Forms &#8211; Upgrade to latest CrowCanyon Forms Manger App (if using CrowCanyon Forms Manager). &#8211; Go to NITRO Apps page for the site and update the NITRO package by clicking &#8216;Update this Site&#8217; link (if using Enhanced List forms or NITRO Forms) &#8211; Upgrade the portal site from Crow Canyon Power Portal App by clicking the &#8216;Update&#8217; button (if using Portal), upgrade to latest version of NITRO forms (if using NITRO forms) 3) Attachment Icon not showing in SharePoint List View when attachments are added using Portal or Nitro Forms &#8211; Follow Steps A and B. Note: The attachment Icon in SharePoint list view for items created using portal or NITRO forms will be shown only after the items are edited or viewed at least once. This doesn&#8217;t affect the functionality of forms in any way 4) Multiple Item Versions created and item create/update event fired multiple times upon item creation/update (for items created with attachments) &#8211; This behavior is expected when an item is created with attachment(s) from Portal or NITRO forms by a user with out &#8216;Manage List&#8217; and &#8216;Delete Item&#8217; Permissions &#8211; Give the users creating or editing items from portal &#8216;Manage List&#8217;, &#8216;Delete Item&#8217; level permissions on the list used in the portal forms and make sure steps A and B (if using Default SharePoint Forms) are followed to fix this issue.View this link to know more about configuring custom level (Manage List) permissions. Click here to know about managing user permisssions. Note : If your users are using portal, giving users &#8216;Manage List&#8217; permissions to the list used in Portal doesn’t give the user access to site of the list as the user is redirected to the portal when tries to access the backend site. View this link to know more information on Portal Redirect settings. Portal site shows Forms for lists in other sites and redirect functionality limits the users access to backend site as they can only work via the limited options that portal interface provides. If however, your users are using NITRO forms, then &#8216;Manage List&#8217; permissions will allow them to go to list settings page as they are using same site where list is located. In this case, if &#8216;Manage List&#8217; permissions can&#8217;t be granted then attachments behavior reverts to creating multiple versions. This is not a concern in most of the cases unless you have multiple workflows configured on item/create update event. Adding Content Editor Please note that this is only necessary in rare case where you are not using Crow Canyon NITRO Forms or Crow Canyon Forms Manager solution for the list forms. Only if you are using standard SharePoint forms then these steps are required. &#8211; Go to the list ribbon &#8211; expand Form Web Parts &#8211; select Default Display Form/Default Edit Form &#8211; Edit Page and click on Add a Web Part, add content editor webpart &#8211; Add Content Editor Web part &#8211; Give Script Link to the content editor &#8211; Give the script link &#8220; &lt;script type=\"text/javascript\"&gt; if (typeof jQuery == 'undefined') { document.write(unescape('%3Cscript src=\"https://kendo.cdn.telerik.com/2017.3.1026/js/jquery.min.js\"%3E%3C/script%3E')); } &lt;/script&gt; &lt;script src=\"https://crowcanyon.azureedge.net/Common/CCS_RefreshAttachments.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &#8221; and click on Ok. &#8211; Edit the content editor webpart properties and hide the webpart so that it doesn&#8217;t appear on forms. &#8211; Stop Editing the Page. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "320",
    "name": "320 - Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) - Crow Canyon S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/320%20-%20Item%20attachments%20handling%20for%20Crow%20Canyon%20NITRO%20Forms%20and%20Portal%20%28SharePoint%20Online%29%20-%20Crow%20Canyon%20S.html",
    "title": "Item Attachments Handling For Crow Canyon NITRO Forms And Portal (SharePoint Online) Crow Canyon S",
    "text": "Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) Item attachments handling for Crow Canyon NITRO Forms and Portal (SharePoint Online) 1412 views 3 min , 13 sec read 0 Specifics of how attachments are handled in Portal Forms and NITRO Forms for SharePoint Online Normal 0 false false false EN-US X-NONE X-NONE Applies to: SharePoint Online Please refer this article if you are using SharePoint On-premises (2013 / 2016/SharePoint Server Subscription Edition): https://www.crowcanyon.help/article/328 Attachment Handling Details Crow Canyon NITRO Forms and Portal create/update the SharePoint item using SharePoint APIs like REST and JSOM. Similarly, attachments are added to new item and added/removed from existing item using the APIs. For each attachment a separate operation has to be performed and with standard API, this increments the version of the item. This implies that if an item is created with 4 attachments, it will have 5 versions after the save. One version will be for normal save of the item and one version each for the attachments added to the item. Any downstream products like Workflows that are triggered on item update, will be triggered 5 times in quick succession and this can result in some issues like &#8216;save conflicts&#8217; or inability to detect change in the item field values that workflows depend on. This issue is handled in Crow Canyon Product in following ways: Forms code doesn&#8217;t use standard API to add/remove attachments from the item. Instead it directly works with folders to avoid creating versions and doesn&#8217;t fire the item update event while handling attachments Because of above, SharePoint standard forms and views don&#8217;t show the item attachments. So additional code is added in these forms to update the item properties to show the attachments If you notice any issue in attachment handling then please refer below cases to idenfiy and configure the solutions to fix the issue. SharePoint Online based Products: 1) Item Attachments not showing in Default SharePoint Forms (classic view) when attachments are added using Portal or NITRO Forms A. Go to NITRO Apps page for the site and update the NITRO package by clicking &#8216;Update this Site&#8217; link (if item is created using NITRO Forms), Upgrade the portal site from Crow Canyon Power Portal App by clicking the &#8216;Update&#8217; button (if item is created using Portal). B. Add Content Editor Web part to the SharePoint Display and Edit form. (Shown at end of this FAQ &#8211; Adding Content Editor ). 2) Item Attachments not showing in CrowCanyon Forms Manager/Enhanced List Forms when attachments are added using Portal or Advanced Forms &#8211; Upgrade to latest CrowCanyon Forms Manger App (if using CrowCanyon Forms Manager). &#8211; Go to NITRO Apps page for the site and update the NITRO package by clicking &#8216;Update this Site&#8217; link (if using Enhanced List forms or NITRO Forms) &#8211; Upgrade the portal site from Crow Canyon Power Portal App by clicking the &#8216;Update&#8217; button (if using Portal), upgrade to latest version of NITRO forms (if using NITRO forms) 3) Attachment Icon not showing in SharePoint List View when attachments are added using Portal or Nitro Forms &#8211; Follow Steps A and B. Note: The attachment Icon in SharePoint list view for items created using portal or NITRO forms will be shown only after the items are edited or viewed at least once. This doesn&#8217;t affect the functionality of forms in any way 4) Multiple Item Versions created and item create/update event fired multiple times upon item creation/update (for items created with attachments) &#8211; This behavior is expected when an item is created with attachment(s) from Portal or NITRO forms by a user with out &#8216;Manage List&#8217; and &#8216;Delete Item&#8217; Permissions &#8211; Give the users creating or editing items from portal &#8216;Manage List&#8217;, &#8216;Delete Item&#8217; level permissions on the list used in the portal forms and make sure steps A and B (if using Default SharePoint Forms) are followed to fix this issue.View this link to know more about configuring custom level (Manage List) permissions. Click here to know about managing user permisssions. Note : If your users are using portal, giving users &#8216;Manage List&#8217; permissions to the list used in Portal doesn’t give the user access to site of the list as the user is redirected to the portal when tries to access the backend site. View this link to know more information on Portal Redirect settings. Portal site shows Forms for lists in other sites and redirect functionality limits the users access to backend site as they can only work via the limited options that portal interface provides. If however, your users are using NITRO forms, then &#8216;Manage List&#8217; permissions will allow them to go to list settings page as they are using same site where list is located. In this case, if &#8216;Manage List&#8217; permissions can&#8217;t be granted then attachments behavior reverts to creating multiple versions. This is not a concern in most of the cases unless you have multiple workflows configured on item/create update event. Adding Content Editor Please note that this is only necessary in rare case where you are not using Crow Canyon NITRO Forms or Crow Canyon Forms Manager solution for the list forms. Only if you are using standard SharePoint forms then these steps are required. &#8211; Go to the list ribbon &#8211; expand Form Web Parts &#8211; select Default Display Form/Default Edit Form &#8211; Edit Page and click on Add a Web Part, add content editor webpart &#8211; Add Content Editor Web part &#8211; Give Script Link to the content editor &#8211; Give the script link &#8220; &lt;script type=\"text/javascript\"&gt; if (typeof jQuery == 'undefined') { document.write(unescape('%3Cscript src=\"https://kendo.cdn.telerik.com/2017.3.1026/js/jquery.min.js\"%3E%3C/script%3E')); } &lt;/script&gt; &lt;script src=\"https://crowcanyon.azureedge.net/Common/CCS_RefreshAttachments.js\" type=\"text/javascript\"&gt;&lt;/script&gt; &#8221; and click on Ok. &#8211; Edit the content editor webpart properties and hide the webpart so that it doesn&#8217;t appear on forms. &#8211; Stop Editing the Page. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "321",
    "name": "321 - Problems functionality in Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/321%20-%20Problems%20functionality%20in%20Crow%20Canyon%20Application.html",
    "title": "Problems Functionality In Crow Canyon Application",
    "text": "Problems functionality in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Problems functionality in Crow Canyon Application Problems functionality in Crow Canyon Application 959 views 1 min , 3 sec read 0 Problems functionality and linking Problems and Tickets Applies to: SharePoint On-premises Product Version: Crow Canyon Service Request V3.7 &#8211; IT Premium. Please note that this feature is not available in Professional version of the Product. Description: This article describes about the&nbsp; Problems functionality in Crow Canyon Application. Problems can be created from existing Tickets. Problems allow for a deeper investigation into an issue that is reported consistently, and will take longer than the standard SLAs for a given Ticket. Problems may become Change Requests. We can create a problem for an existing ticket or create an independent problem We can link ticket to an existing problem We have the ability to auto close all related/linked tickets when the problem is solved Detailed instructions 1. How to create a Problem for an existing ticket? Please go to Tickets list &#8211;&gt; Open display form of the ticket item and click &quot;Create Problem&quot; action button from the ribbon. The Ticket from which Problem is created will get linked to the new Problem automatically and since the Ticket is linked, it will get closed automatically when the Problem is closed. How to create an independent Problem? Go to Site Contents &#8211;&gt; Problems list &#8211;&gt; Create new problem 2. How to link Ticket to an existing Problem? Please go to Tickets list &#8211;&gt; Edit the ticket item &#8211;&gt;Related Items tab &#8211;&gt; Update the &quot;Related Problem&quot; for the ticket. 3. How to configure &quot;Auto close related ticket on problem resolve&quot;? Please go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; Go to &quot;Problems&quot; tab and enable &quot;Close child Tickets on Problems resolve&quot; Addtional reference for Problems &#8211; Refer Problems configurations in General Configuration section from this manual: http://www.crowcanyon.info/sharepoint-manuals-37/problem.html &#8211; Refer Problems workspaces from http://www.crowcanyon.info/sharepoint-manuals-37/index.html &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "322",
    "name": "322 - Incoming and Outgoing emails configuration in Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/322%20-%20Incoming%20and%20Outgoing%20emails%20configuration%20in%20Crow%20Canyon%20Application.html",
    "title": "Incoming And Outgoing Emails Configuration In Crow Canyon Application",
    "text": "Incoming and Outgoing emails configuration in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Incoming and Outgoing emails configuration in Crow Canyon Application Incoming and Outgoing emails configuration in Crow Canyon Application 4189 views 2 min , 55 sec read 3 Incoming and Outgoing Emails Prerequisites and Troubleshooting steps Applies to: SharePoint On-Premises Description: This article describes functionality of Incoming and Outgoing emails in our Crow Canyon Application. &nbsp; 1. Incoming Emails When user sends an email to the helpdesk email address which is configured in Email Tickets list, our product workflows will create an item in tickets list for those incoming emails. Email to Ticket conversion flow: User sends an email to the email address which is configured in Email Tickets list Exchange forwards the email to SharePoint SMTP service SMTP service puts the mail in drop folder on SharePoint server (check settings in IIS 6.0 Manager like configure domains etc.) If the mail is not reaching the Drop folder (C:\\intepub\\mailroot\\Drop), you can check further by enabling the SMTP Service logs. To enable the logs, please go to IIS 6.0 Manager &#8211;&gt; Right click on SMTP Service &#8211;&gt; Properties and enable the logging as shown below &nbsp; After enabling the log, restart the SMTP Service (both in services.msc and in IIS 6.0 Manager), send a test email to &#8220;Email Tickets&#8221; address and check if logs are generated. If logs are not generated then most likely something is not configured correctly and exchange is not even invoking this service to deliver the email. If log is generated then check if there are any errors and also see if the email is reaching the SharePoint Server (Drop Folder) SharePoint Timer service picks the item from drop folder and creates the item in Email Tickets list (based on address configured in list). Please ensure that this service is running (services.msc) Refer articles like these if mail is coming to Drop folder but not coming to the configured list: https://sharepoint.stackexchange.com/questions/13253/incoming-mail-just-sits-in-the-drop-folder &nbsp; After this, Crow Canyon workflows picks up new items from Email Tickets list and creates the Ticket. Please note that Crow Canyon application comes into picture only after the SharePoint infrastructure has delivered the mail to the configured list (Announcement Type list having the configured email address). &nbsp; Pre-requisites for Email to Ticket conversion: SMTP service should be running in the SharePoint server (Services.msc). Microsoft SharePoint Foundation incmonig E-mail service should be running in the SharePoint server where the SMTP service is installed (Central Administartion&#8211;&gt;Manage servers in this farm) Note: Microsoft SharePoint Foundation incoming E-mail service is cannot be provisioned in &#8220;Web Front-end&#8221; role, it should be either in application server role or custom role. Please refer more details from: https://technet.microsoft.com/en-us/library/mt667910(v=office.16).aspx Incoming email settings should be configured in Central Administration. To configure, please go to Central Administration &#8211;&gt; System Settings &#8211;&gt; Configuring incoming e-mail settings. For more details about Incoming Email Settings refer this article https://technet.microsoft.com/en-us/library/cc262947.aspx Incoming Email settings should be enabled in Email Tickets list in Crow Canyon helpdesk application. For more details regarding Incoming Email settings configuration in Crow Canyon helpdesk application, please refer Email Settings from http://www.crowcanyon.info/sharepoint-manuals-37/index.html If we would like to use an already existing mailbox like support@company.com, then required forward rules needs to be configured in Exchange so if any email arrives to support@company.com will be forwarded to “email@FQDN of server” Note: Our Product workflows will process the emails once the email is arrived to &#8220;Email Ticket&#8221; list. If the email item is not created in Email Tickets list please note that it is outside the scope of our application support. 2. Outgoing Emails In our application, outgoing emails will notify the requester or staff on every stage of ticket life cycle. Areas where mails go out from Crow Canyon application: 1. Auto Notifications (Ticket Creation, Assignment, Resolution, Completion, Reactivation etc) 2. Crow Canyon Advanced Email 3. Crow Canyon Workflow Manager Pre-requisites for out going emails: 1. Outgoing e-mail settings should be configured in Central Administration (go to Central Administration &#8211;&gt; System Settings &#8211;&gt;Configuring outgoing e-mail settings) For more details about Outgoing Email Settings refer this article https://technet.microsoft.com/en-us/library/cc263462.aspx 2.Configure Crow Canyon Advanced Email settings in Tickets list, in order to send mails from helpdesk application. Please refer Crow Canyon Advanced Email Settings (see screenshot below) from http://www.crowcanyon.info/sharepoint-manuals-37/index.html &nbsp; -&gt; We can also send email to external email address using Crow Canyon Adanced Email feature. Our Email feature initiates the mail to recipients using the SMTP settings configured in SharePoint Central Administration, Outgoing Email Settings. If the SharePoint server configurations allows to send mails to external users then our Email feature should also send emails to external email addresses. Note: Verify if the standard SharePoint alerts are working or not in the SharePoint server. To verify the standard SharePoint alerts, please go to site collection root site &#8211;&gt; Site Settings &#8211;&gt; People and Groups &#8211;&gt; add a user to any SharePoint group and if that user receives the email then we can conclude that standard outgoing emails are working. If the standard notifications are not working in SharePoint server, please check with your SharePoint and Exchange Administrators team and note that it is outside the scope of our application support. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "324",
    "name": "324 - How to show SharePoint generated unique Id of list item in the display and edit form of the item - C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/324%20-%20How%20to%20show%20SharePoint%20generated%20unique%20Id%20of%20list%20item%20in%20the%20display%20and%20edit%20form%20of%20the%20item%20-%20C.html",
    "title": "How To Show SharePoint Generated Unique Id Of List Item In The Display And Edit Form Of The Item C",
    "text": "How to show SharePoint generated unique Id of list item in the display and edit form of the item - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to show SharePoint generated unique Id of list item in the display and edit form of the item How to show SharePoint generated unique Id of list item in the display and edit form of the item 1394 views 1 min , 49 sec read 0 Show SharePoint generated unique ID in the item forms Title: To show SharePoint generated unique Id of list item in the display and edit form of the item Applies to: SharePoint On Premises 2013, 2016, SharePoint Server Subscription Edition and Online. Description: SharePoint item forms don’t show the ID column value for the items. In order to show this value, a single line of text column can be created and populated with the SharePoint generated ID value using Crow Canyon Workflow Manager App. This column can then be permissioned using Crow Canyon Forms to show as a read-only column in Edit form and the Display form of the item Implementation: Let’s assume we want to call this new column as Case Id Normal 0 false false false EN-US X-NONE X-NONE Go to the list in which the Case Id need to be created to show the ID value of the item Create a single line of text column (‘Case ID’) in the list. Normal 0 false false false EN-US X-NONE X-NONE Add the column to tabs using the forms manager “Tabs and Tab Settings” option available in the list settings. Normal 0 false false false EN-US X-NONE X-NONE Please refer http://www.crowcanyon.info/manuals/webparts/setting_up_tabs.htm for instructions to add columns to the tabs in the forms for On Premises Please refer https://www.crowcanyon.info/nitro/appmanual_v1/forms-manager.html for instructions to add columns to the tabs for SharePoint Online using Crow Canyon Forms Manager App Please refer https://www.crowcanyon.info/nitro/appmanual_v2/creating-nitro-forms.html for instructions to add columns to the tabs that uses Crow Canyon NITRO Forms. Now Go to Site actions &#8211;&gt; Crow Canyon Workflow Manager. Normal 0 false false false EN-US X-NONE X-NONE Create a workflow using our Crow Canyon workflow manager on item created event as shown below. For SharePoint Online &#8211;&gt; open Crow Canyon NITRO Workflows App and create a workflow as shown below Note: If a workflow already exists on Item creation event for the list that has update item action in it for the same item, we should add this column mapping to the existing column mappings for the Update Item action in the workflow instead of creating a new workflow. This is recommended to avoid multiple updates on the same item that can lead to item save conflicts Normal 0 false false false EN-US X-NONE X-NONE Choose action type as “Update Item” and hit +Add Action button and configure as below Normal 0 false false false EN-US X-NONE X-NONE Normal 0 false false false EN-US X-NONE X-NONE Once these configurations are done, we need to hide this ‘Case ID’ column in new and edit Forms and show as Read only in display form. We can configure column permissions to achieve this as shown below for On premises that use Crow Canyon column permissions Normal 0 false false false EN-US X-NONE X-NONE Please refer http://www.crowcanyon.info/manuals/webparts/tab_permissions.htm and http://www.crowcanyon.info/manuals/webparts/column-permissions.htm to know more about configuring the column permissions. Please refer sample configuration from below screenshots Normal 0 false false false EN-US X-NONE X-NONE For SharePoint Online, please refer https://www.crowcanyon.info/nitro/appmanual_v1/forms-manager.html if the forms manager is used in configuring the forms for our application Normal 0 false false false EN-US X-NONE X-NONE Please refer https://www.crowcanyon.info/nitro/appmanual_v2/using-enhanced-list-forms.html if the NITRO forms are used in our application. Normal 0 false false false EN-US X-NONE X-NONE Please note that the above steps will populate &#8220;Case Id&#8221; for new items only. If there are some existing items, we have to manually update the value of the Item &#8220;ID&#8221; to &#8220;Case Id&#8221; column using datasheet/quick edit mode About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "325",
    "name": "325 - How to add Change Request description to the Approval Task_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/325%20-%20How%20to%20add%20Change%20Request%20description%20to%20the%20Approval%20Task_.html",
    "title": "How To Add Change Request Description To The Approval Task",
    "text": "How to add Change Request description to the Approval Task? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add Change Request description to the Approval Task? How to add Change Request description to the Approval Task? 968 views Less than a minute 0 Add Change Request description details to the Approval Task Applies to: SharePoint Online and On-Premises 2013 &amp; 2016 &amp; SharePoint Server Subscription Edition Product Version: Crow Canyon Helpdesk Application V3.7 (IT Premium) Description This requirement is possible with Crow Canyon Workflow Manager. We can configure a workflow to update the CR Approver Tasks description with related Change Request description value. Summary of Workflow Configuration 1. Configure a workflow on item created event for the CR Approver Tasks list 2. Configure an update item action that updates the description of CR Approver Tasks with description of related Change Request Workflow Configuration 1. Configure a workflow on CR Approver Tasks list on Item created event: 2. Update Item Action: Please note that &#8216;Disable Event Fire&#8217; option shown above is not available in SharePoint Online solution. Column Mapping Value: Description: [Related Change Request::Description|RelatedCR::Change_x0025_5Fx0020_x0025_5FDes] Note: We can also update other columns with the related Change Requests columns by adding Column Mappings in the update item action About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "326",
    "name": "326 - In HelpDesk product email notifications to requester, how to send Ticket links with Portal URL - Cro.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/326%20-%20In%20HelpDesk%20product%20email%20notifications%20to%20requester%2C%20how%20to%20send%20Ticket%20links%20with%20Portal%20URL%20-%20Cro.html",
    "title": "In HelpDesk Product Email Notifications To Requester, How To Send Ticket Links With Portal URL Cro",
    "text": "In HelpDesk product email notifications to requester, how to send Ticket links with Portal URL - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications / In HelpDesk product email notifications to requester, how to send Ticket links with Portal URL In HelpDesk product email notifications to requester, how to send Ticket links with Portal URL 2038 views Less than a minute 0 Configure Portal link in General Configurations for requester email notifications Applies To: SharePoint Online and On-premises 2013 &amp; 2016 &amp; SharePoint Server Subscription Edition Description This article describes about how to configure portal links in General Configurations (for SharePoint On-premesis) and auto notifications (for SharePoint Online). After configuring the Portal link, Requester will receive the email notifications with Portal site URL for Ticket item links. Staff will receive the back end site URL for these links Instructions Go to Portal Site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Edit Tickets list Portal forms &#8211;&gt; Form Settings and copy the URL &#8211;&gt; Modify the &#8220;NewForm.aspx&#8221; with &#8220;DisplayForm.aspx&#8221; in the copied URL. Ex: http://##SiteURL##/Portal/SitePages/ DisplayForm.aspx ?lfid=1&amp;FormKey=Tickets After Modifying the URL, append &#8220; &amp;ItemID=&lt;&lt;ID&gt;&gt; &#8221; at the end of the URL (see screenshot below) URL will be like: http://##SiteURL##/Portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets&amp;ItemID=&lt;&lt;ID&gt;&gt; SharePoint On-premises: Next, go to Application Administration in backend site &#8211;&gt; General Configurations &#8211;&gt; Configure &#8220;Portal Ticket URL&#8221; like shown below and save the settings SharePoint Online: Go to Application Administration in backend site &#8211;&gt; Notifications &#8211;&gt; edit auto notification utilities (Notification on Ticket Creation/Assignment/Completion), update the Portal Ticket Link URL like shown below and save the settings Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Please refer this article https://www.crowcanyon.help/article/197 for frequently asked questions in Portal Crow Canyon Applications About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "327",
    "name": "327 - Troubleshooting steps for Outgoing emails in Crow Canyon application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/327%20-%20Troubleshooting%20steps%20for%20Outgoing%20emails%20in%20Crow%20Canyon%20application.html",
    "title": "Troubleshooting Steps For Outgoing Emails In Crow Canyon Application",
    "text": "Troubleshooting steps for Outgoing emails in Crow Canyon application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , Troubleshooting / Troubleshooting steps for Outgoing emails in Crow Canyon application Troubleshooting steps for Outgoing emails in Crow Canyon application 4525 views 2 min , 44 sec read 0 Troubleshooting steps for Outgoing emails Applies to: SharePoint On-Premises 2013/2016/SharePoint Server Subscription Edition Troubleshooting steps for Outgoing Emails Please refer this article to ensure that standard SharePoint email functionality is working in your environment: https://www.crowcanyon.help/article/322/ Below steps are useful only if standard incoming and outgoing email functionality is working. Case 1: If auto notifications are not working 1. If users are not receiving any auto notifications on Ticket Creation, Assignment, Resolution, Completion and Reactivation then verify the users (Requester, Assigned Staff, Notify Staff, Assigned Team etc.) in Auto Notification utilities in Crow Canyon Application (go to Crow Canyon help desk site &#8211;&gt;Application Administration &#8211;&gt; Notifications&#8211;&gt; Notification on Ticket Creation/Assignment/Resolution/Completion/Reactivation). Ex: If Assigned Staff not getting notification when a ticket gets assigned to him. We need to verify the settings in auto notifications i.e. Notification on Ticket Assignment. Go to Application Administration &#8211;&gt; Notifications &#8211;&gt; Notification on Ticket Assignment and verify the &#8220;Assigned Staff&#8221; notification setting is enabled or not (see screenshot below). 2. Verify the Workflow instances in Tickets list. (Go to Tickets list &#8211;&gt; List Settings &#8211;&gt; Workflow Settings &#8211;&gt; click on Remove,Block or Restore a Workflow and check if the workflow instances are in allowed or not.) 3. Verify if the user account (who is not receiving the emails) is having the email address or not. To check the email address, open display form of any item which is having the user account (who are not receiving the emails) in any person or group column and click on the name of the person and verify the email address (see screenshots below). 4. Verify if the SMTP server port number is using the default port number (i.e. 25) or not in the SharePoint Central Administration. To verify the SMTP port number, go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Outgoing E-mail Settings and check the SMTP port number. If you are not using the default SMTP port number, please contact Crow Canyon support (Mail: crowcanyonsupport@crowcanyon.com ) to get the latest Crow Canyon solutions to support custom SMTP port number in Central Administration. Case 2: If emails are sent using Crow Canyon Advanced Email Verify the Crow Canyon Advanced Email settings configuration in Tickets list. Go to Tickets list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Advanced Email Settings &#8211;&gt; Click on Advanced Email Options and refresh the Outbound SMTP server and click save. If you are using custom SMTP port number in Outgoing Emails configuration in Central Administration, please specify the Port number and click save. Case 3: Notification on Ticket creation is not delivered only for the tickets created from email. Please enable the diagnostic logs for the Crow Canyon Product Workflows referring to #1 from https://www.crowcanyon.help/article/229/ . If the log file contains an error regarding the SMTP Client authentication, make sure the Service account of the SharePoint Timer Service has permissions on Receiver Connector in the Exchange. When the ticket is created manually, application pool identity is being used to send outgoing emails. Whereas, the timer service account identity is being used for the tickets created via incoming emails. Probably timer service account does not have permissions on the &#8220;Receiver connector&#8221; in the Exchange. Please check with your Exchange Administrator and grant the desired permissions to timer service account on Exchange receiver connector and check the result again Sample Error message below: The SMTP server requires a secure connection or the client was not authenticated. The server response was: 5.7.1 Client was not authenticated Case 4: Notification on Ticket assignment is sent on Ticket creation even though Assigned Staff is not set for the Ticket Existing Behavior When a new Ticket is created with particular category and issue type, our auto assignment takes place. Category Owner, Assigned Team present in the selected category gets notified that there is a ticket assigned for them and “Assigned Team” value is set in the Ticket. “Assigned Staff” will be set if configured for the Issue Type selected in the Ticket and the Assigned Staff gets notified as well on Ticket assignment Cause In some cases, where Assigned Team/Category Owner is set for the category but “Assigned Staff” is empty for the issue type selected, notification on ticket assignment will be sent to the recipients but Assigned staff value is empty in the notification and the Ticket which may confuse the user/recipient. Resolution In order to eliminate this confusion, we can insert the “Assigned Team” placeholder in the notification on assignment utility so if Assigned Staff/Assigned Team is set on the Ticket either by our workflows/manual input, the notification conveys whether Assigned Staff/Assigned Team is set on the ticket. Please go to Application Administration &#8211;&gt; Notifications &#8211;&gt; Notification on Ticket Assignment &#8211;&gt; Insert Assigned Team placeholder in the mail template as shown below and save the settings. Email Outgoing Troubleshooting Crow Canyon Applications Email Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "328",
    "name": "328 - Item attachments handling in Crow Canyon NITRO Forms and Power Portal (SharePoint On-premises 2013 a.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/328%20-%20Item%20attachments%20handling%20in%20Crow%20Canyon%20NITRO%20Forms%20and%20Power%20Portal%20%28SharePoint%20On-premises%202013%20a.html",
    "title": "Item Attachments Handling In Crow Canyon NITRO Forms And Power Portal (SharePoint On Premises 2013 A",
    "text": "Item attachments handling in Crow Canyon NITRO Forms and Power Portal (SharePoint On-premises 2013 and 2016) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Item attachments handling in Crow Canyon NITRO Forms and Power Portal (SharePoint On-premises 2013 and 2016) Item attachments handling in Crow Canyon NITRO Forms and Power Portal (SharePoint On-premises 2013 and 2016) 1214 views Less than a minute 0 Attachments feature details for Crow Canyon NITRO Forms and Power Portal for SharePoint On-premises Introduction Crow Canyon NITRO Forms and Power Portal provide attachment functionality for list items similar to standard SharePoint forms. Please note below details regarding item versions and item create/update event firing with regard to adding attachments at the time of creating/updating list item. Please refer this article if you are using SharePoint Online: https://www.crowcanyon.help/article/320 &nbsp; Item Versions Issue: Multiple Item Versions are created when a list item is created/updated with attachments via Crow Canyon NITRO Forms or Portal If you are facing this issue then please follow below steps: &#8211; Upgrade to latest Portal solution (if items are created from Portal), Upgrade to latest NITRO forms solution (if items are being added using NITRO forms). Please contact Crow Canyon support for latest solutions and upgrade instructions &#8211; Upgrade to latest version of &#8216;Crow Canyon CommonUtils&#8217; solution Crow Canyon CommonUtils solution installs a feature &#8216;Crow Canyon Forms Attachments&#8217; in the site: &#8211; Activate this feature in all sites where you are using &#8216;NITRO Forms&#8217; and all the sites used in portal (not required on the actual portal site). &nbsp; Troubleshooting steps &#8211; Go to &#8216;Site Assets&#8217; of the site and make sure group &#8216;Everyone&#8217; has &#8216;Edit&#8217; level permissions on the folder &#8216;CCSItemAttachments&#8217; in &#8216;Site Assets&#8217;. &#8211; If you could not find the folder &#8216;CCSItemAttachments&#8217; in &#8216;Site Assets&#8217;, try deactivate and activate the feature &#8216;Crow Canyon Forms Attachments&#8217;. You can also create this folder manually and apply permissions &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "329",
    "name": "329 - Troubleshooting steps for Crow Canyon Employee Portal.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/329%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20Employee%20Portal.html",
    "title": "Troubleshooting Steps For Crow Canyon Employee Portal",
    "text": "Troubleshooting steps for Crow Canyon Employee Portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Crow Canyon Employee Portal Troubleshooting steps for Crow Canyon Employee Portal 1046 views 2 min , 14 sec read 0 Description This article describes troubleshooting steps for possible issues in Employee Portal. You can also refer this article for frequently asked questions about the Portal: https://www.crowcanyon.help/article/197 Case 1: Item Creation Failed Applies to: SharePoint Online and On-premises (2013, 2016, 2019) Employee Portal Version: &nbsp;Portal site created through ‘Power Portal App’ Issue: &nbsp;Error shown while creating Ticket from Portal – “Field or Property does not exist”: Cause: &nbsp;The cause of the issue is that number of lookup (lookups + person or group) columns in the tickets list exceeds the lookup threshold limit in Central Administration (fixed as 12 lookups in SP Online). Fix: &nbsp;To avoid this, we can increase the lookup threshold limit in SharePoint Central Administration for the required web application for On-premises as described below. SharePoint Online: For SharePoint Online case or if you cannot increase the threshold then delete any unused lookup / person or group columns from the list.&nbsp;You can also convert lookups to NITRO Lookups fields to get around this threshold. See our manual for more information:&nbsp; https://www.crowcanyon.info/nitro/appmanual_v2/lookup-settings.html SharePoint On-premises: To increase lookup threshold in, follow below steps: Go to SharePoint Central Administration –> Application Management –> Manage Web application –> Select the web application and click “Resource Throttling” from General Settings and increase the lookup threshold limit see screenshot below: Case 2: “Portal Settings” button is not visible for users who are members of ‘Site Owners’ group Applies to: SharePoint Online and On-premises (2013, 2016, 2019) Employee Portal Version: Portal site created through ‘Power Portal App’ Portal settings button is shown to users having manage-web permissions on portal site. Generally, ‘Site Owners’ group has this permission, and this button is visible for users who are members of this group. Issue: &nbsp;“Portal Settings” button is not visible even though user has Manage Web Site permissions (via Site Owners group). Cause:&nbsp; This is an environment specific issue, and it is not clear why permission check is not giving the correct result for logged-in user. Resolution: Configure new menu link for portal settings page with permissions to show only for owner’s group. This provides similar functionality as the standard portal settings button. Instructions Go to “Configure Portal Settings” page by navigating to below URL: URL: ##Portal Site URL##/SitePages/AddEditSettings.aspx Example: https://contoso.sharepoint.com/sites/Helpdesk/IT/Portal/SitePages/AddEditSettings.aspx Navigate to “Menu Section” tab under ‘Common UI Settings’ section and click “New Menu Item” as shown below: Configure new menu item link and save the settings. URL to be used is same as in step #1 above. Sample Output Case 3: User gets a prompt for credentials on clicking ‘Service Catalog’ link in the Portal Applies to : SharePoint On-premises (2013, 2016, 2019) Employee Portal Version : Portal site created through ‘Power Portal App’ Issue: User gets a prompt for credentials on clicking ‘Service Catalog’ link in the Portal. Cause: This issue can happen if user does not have ‘Browse Directories’ permission on root site of the site collection. Resolution: Grant ‘Browse Directories’ permission on root site of the site collection for end users group. Instructions Standard “Read” permission level does not contain this permission. So, we need to create a custom permission level and then grant this permission to end users group. Create a custom permission level. Grant newly created custom permission level to end users group. Detailed steps Navigate to root site of the site collection (in which portal site exists) -> Site Settings -> ‘Site permissions’ under ‘Users and Permissions’ section -> Permission Levels -> click ‘Read’ permission level -> click ‘Copy Permission Level’ and create a new permission level as shown below: Name the new permission level as ‘Read with Browse Directory’ and select the ‘Browse Directories’ permission. After creating the new permission level, assign it to end users group. In this example, we have assigned custom permission level to ‘End Users’ group. Go to ‘Site permissions’ page -> select the end users group and click ‘Edit User Permissions’ from the ribbon. Select the new permission level ‘Read with Browse Directory’ and save settings. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "33",
    "name": "33 - A list column is not visible in the forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/33%20-%20A%20list%20column%20is%20not%20visible%20in%20the%20forms.html",
    "title": "A List Column Is Not Visible In The Forms",
    "text": "A list column is not visible in the forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / A list column is not visible in the forms A list column is not visible in the forms 933 views 1 min , 44 sec read 0 SharePoint column is not visible in forms Applies to: SharePoint Online and On-Premises Issue: SharePoint list column is not visible in the forms. Crow Canyon has several solutions that enhance the experience of SharePoint list forms. This issue could be in any of these products: 1. Default SharePoint forms (Case 2.2 below) 2. Crow Canyon Forms Manager for SP On-premises / Online 3. NITRO Forms, Portal or Enhanced List Forms for SPOnline 4. NITRO Forms and Portal for SP On-premises &nbsp; Case 1: If the column is not added to the tabs/sections 1. Column needs to be added to the tabs/sections from the settings of the respective Forms solution. To add column into the tabs follow below steps: SharePoint On-premises: To add column to the tabs, go to the list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Tabs and Tab settings &#8211;&gt; Edit any tab and add the column to the tab. SharePoint Online: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Forms Manager&nbsp; &#8211;&gt; Edit the tab and add the column into the tab. NITRO and Portal: Go to form settings and then add the column to tab/section (check NITRO Forms or Enhanced List Forms App as per what is used for the list) &nbsp; Case 2: Column is added to the tabs but still not visible in the form 1. Verify if any column permissions are configured for that column. Depending on permission configurations and data in the item form, column could be hidden. To verify the column permissions follow the below steps: SharePoint On-premises: Go to the List &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Column Permisison Settings and verify the column permissions SharePoint Online: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Forms Manager &#8211;&gt; Column permisisons section&#8211;&gt; select the column and check if there are any column permisisons are configured for the column. NITRO and Portal: Go to form settings and then check the column permissions (check NITRO Forms or Enhanced List Forms App as per what is used for the list) &nbsp; &nbsp; 2. Verify if the column is hidden from the Content type SharePoint Online and On-premises: Go to the SharePoint List &#8211;&gt; List Settings &#8211;&gt; Edit the Content Type and verify if the column is hidden from the content type or not (see screenshot below). If the column is hidden then make the column as &#8216;Optional&#8217; . Note: If the &#8216;Content Types&#8217; is not available in the list settings, click on Advanced Settings in the list settings and enable the &quot;Allow management of content types&quot; &nbsp; 3. Verify if column is present in multiple tabs/sections. In this case if any Tab has a permission that hides the tab, then columns configured for that tab will be hidden from the Form. To fix this, check the Tabs where column is added and then check the corresponding tab permissions. You may want to modify the tab permissions or remove the column from the tab that is getting hidden due to permissions. Refer Case 1 above to navigate to tab settings&nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "330",
    "name": "330 - A list column is not visible in the forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/330%20-%20A%20list%20column%20is%20not%20visible%20in%20the%20forms.html",
    "title": "A List Column Is Not Visible In The Forms",
    "text": "A list column is not visible in the forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / A list column is not visible in the forms A list column is not visible in the forms 933 views 1 min , 44 sec read 0 SharePoint column is not visible in forms Applies to: SharePoint Online and On-Premises Issue: SharePoint list column is not visible in the forms. Crow Canyon has several solutions that enhance the experience of SharePoint list forms. This issue could be in any of these products: 1. Default SharePoint forms (Case 2.2 below) 2. Crow Canyon Forms Manager for SP On-premises / Online 3. NITRO Forms, Portal or Enhanced List Forms for SPOnline 4. NITRO Forms and Portal for SP On-premises &nbsp; Case 1: If the column is not added to the tabs/sections 1. Column needs to be added to the tabs/sections from the settings of the respective Forms solution. To add column into the tabs follow below steps: SharePoint On-premises: To add column to the tabs, go to the list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Tabs and Tab settings &#8211;&gt; Edit any tab and add the column to the tab. SharePoint Online: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Forms Manager&nbsp; &#8211;&gt; Edit the tab and add the column into the tab. NITRO and Portal: Go to form settings and then add the column to tab/section (check NITRO Forms or Enhanced List Forms App as per what is used for the list) &nbsp; Case 2: Column is added to the tabs but still not visible in the form 1. Verify if any column permissions are configured for that column. Depending on permission configurations and data in the item form, column could be hidden. To verify the column permissions follow the below steps: SharePoint On-premises: Go to the List &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Column Permisison Settings and verify the column permissions SharePoint Online: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Forms Manager &#8211;&gt; Column permisisons section&#8211;&gt; select the column and check if there are any column permisisons are configured for the column. NITRO and Portal: Go to form settings and then check the column permissions (check NITRO Forms or Enhanced List Forms App as per what is used for the list) &nbsp; &nbsp; 2. Verify if the column is hidden from the Content type SharePoint Online and On-premises: Go to the SharePoint List &#8211;&gt; List Settings &#8211;&gt; Edit the Content Type and verify if the column is hidden from the content type or not (see screenshot below). If the column is hidden then make the column as &#8216;Optional&#8217; . Note: If the &#8216;Content Types&#8217; is not available in the list settings, click on Advanced Settings in the list settings and enable the &quot;Allow management of content types&quot; &nbsp; 3. Verify if column is present in multiple tabs/sections. In this case if any Tab has a permission that hides the tab, then columns configured for that tab will be hidden from the Form. To fix this, check the Tabs where column is added and then check the corresponding tab permissions. You may want to modify the tab permissions or remove the column from the tab that is getting hidden due to permissions. Refer Case 1 above to navigate to tab settings&nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "331",
    "name": "331 - How to make lookup column mandatory while not selecting any value as default - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/331%20-%20How%20to%20make%20lookup%20column%20mandatory%20while%20not%20selecting%20any%20value%20as%20default%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Make Lookup Column Mandatory While Not Selecting Any Value As Default Crow Canyon Software",
    "text": "How to make lookup column mandatory while not selecting any value as default - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to make lookup column mandatory while not selecting any value as default How to make lookup column mandatory while not selecting any value as default 1068 views Less than a minute 0 Make lookup column value mandatory while not selecting the first value in the drop-down by default in the new Form. This forces user to make the selection for the lookup column Applies To: SharePoint Online and SharePoint On-Premises (2013/2016/SharePoint Server Subscription Edition) Description When a lookup column is set as mandatory, it will be auto-selected with first value in the drop-down (column setting option: &#8220;Require that this column contains information&#8221;). This means user can save the Form without selecting the value for lookup column since it is already populated with a value. In many cases it is desired that user should select the required value for the lookup Steps Create a new item in the lookup list with lookup column display field value as &#8220;(None)&#8221;. After this change, &#8220;(None)&#8221; will be selected by defaut since it will usually be first in the alphabetical order. Since we don&#8217;t want an item to be saved with value &#8220;(None)&#8221;, configure column validation for the lookup column to disallow this value. For SharePoint On Premises, please refer http://www.crowcanyon.info/manuals/webparts/column-validation-settings.htm for more details on configuring column validations. See sample configurations below: For NITRO Forms column validation, please refer https://www.crowcanyon.info/nitro/appmanual_v2/using-enhanced-list-forms.html for more details. See sample configurations below: For Forms Manager (SharePoint Online), please go to Application Administration &#8211;&gt; Crow Canyon Apps &#8211;&gt; Crow Canyon Forms Manager App &#8211;&gt; Select the &#8220;Tickets&#8221; list, configure a column validation as shown below About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "333",
    "name": "333 - How to remove additional line spaces when you hit enter in Rich text field in SharePoint - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/333%20-%20How%20to%20remove%20additional%20line%20spaces%20when%20you%20hit%20enter%20in%20Rich%20text%20field%20in%20SharePoint%20-%20Crow%20Cany.html",
    "title": "How To Remove Additional Line Spaces When You Hit Enter In Rich Text Field In SharePoint Crow Cany",
    "text": "How to remove additional line spaces when you hit enter in Rich text field in SharePoint - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to remove additional line spaces when you hit enter in Rich text field in SharePoint How to remove additional line spaces when you hit enter in Rich text field in SharePoint 1411 views Less than a minute 1 Line spacing options in SharePoint multi-line text columns (rich text) Applies To: SharePoint Online and SharePoint OnPremises Issue: If you are typing in a rich text field in SharePoint form, when we hit enter, it adds an additional line space. If we copy multiple lines of text from a text editor like notepad, it looks good but when we hit enter in rich text field, it adds an additional line space. Cause: This is expected behavior at the time in SharePoint. By default, the rich text editor formats the paragraphs such as indenting and configuring the text alignment using in-line styles which might lead to inconsitent user experience. When we type any text and hit enter in rich text field, it adds the paragraph tag &lt;p&gt;&#8230;&lt;/p&gt; When we type any text and hit enter in Notepad, it only adds a &lt;/br&gt; tag SharePoint Rich Text field behaves the same way that most HTML editors do. ENTER will add a new paragraph (with additonal space) Resolution: In the SharePoint rich text fields, use &quot;SHIFT+ENTER&quot; to add a single line break About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "334",
    "name": "334 - SharePoint Online_ Uninstall steps for Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/334%20-%20SharePoint%20Online_%20Uninstall%20steps%20for%20Crow%20Canyon%20Application.html",
    "title": "SharePoint Online Uninstall Steps For Crow Canyon Application",
    "text": "SharePoint Online: Uninstall steps for Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Help Desk , How-To / SharePoint Online: Uninstall steps for Crow Canyon Application SharePoint Online: Uninstall steps for Crow Canyon Application 2902 views 1 min , 1 sec read 1 Uninstall steps for Crow Canyon application Applies to: SharePoint Online Product Version: 1.0 &amp; 2.0 Note: This article applicable for the Crow Canyon Helpdesk applications which are using Forms Manager based applications. If you are in latest NITRO based application, please refer this article . Procedure to uninstall Crow Canyon Application Detailed Steps: 1. Delete the Email Sync configuration settings in Crow Canyon Email Sync app. Go to Application Administration &#8211;&gt; Crow Canyon Apps &#8211;&gt; Crow Canyon Email Sync app and delete the settings 2. Delete all the workflows configured in Crow Canyon Workflow Manager Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Workflow manager and delete all the workflows 3. Delete approval workflow configured in Crow Canyon Advanced Approval Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Advanced Approval and delete all the workflows 4. Delete portal site from Advanced Portal Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Power Portal and delete portal site 5. Delete all the apps from the Crow Canyon site List of Apps: Crow Canyon Forms Manager Crow Canyon Charts, Dashboard and Reports Crow Canyon Common Utilities Crow Canyon Apps Common Crow Canyon Print Manager Crow Canyon Advanced Approvals Crow Canyon Advanced Email Crow Canyon Advanced Lookup Crow Canyon Branding App Crow Canyon Cascaded Lookup Column Crow Canyon Conditional Formatting Crow Canyon Email sync Crow Canyon Advanced Portal Crow Canyon Linked Items Column Crow Canyon Workflow Manager Crow Canyon Product App Crow Canyon Tiles and Dials 6. After removing all the apps delete the Site/ Site Collection 7. Remove all the Crow Canyon apps from App Catalog site (If Apps and NITRO are not used in any other site in your tenancy. Leaving these Apps in the Catalog doesn&#8217;t affect anything. Apps are only executed if they are added to any site) Uninstall Crow Canyon Applications Help Desk How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "335",
    "name": "335 - Archival functionality in Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/335%20-%20Archival%20functionality%20in%20Crow%20Canyon%20Application.html",
    "title": "Archival Functionality In Crow Canyon Application",
    "text": "Archival functionality in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Archival functionality in Crow Canyon Application Archival functionality in Crow Canyon Application 1158 views 5 min , 51 sec read 0 Applies To : SharePoint On-Premises 2013, 2016, 2019, SharePoint Server Subscription Edition Description This article describes the archival feature settings in Crow Canyon Service Request Application. Archival feature moves the old closed Tickets and related list items (like Tasks, Emails etc.) to corresponding &#8216;archived&#8217; lists. This is usually done to have better performance by keeping only the required items in Tickets list. It also helps in managing the SharePoint list items threshold limit. Archival process works based on the &#8220;Request Status&#8221; and &#8220;Closed Date&#8221; column values in the Tickets list items. Note : Archival process deletes items from &#8216;main&#8217; lists and moves the data to corresponding &#8216;archived&#8217; lists. Please read the archival feature configurations carefully to avoid any data loss due to the deletion of items in main lists. Archival Settings Service Request Application has archival feature to move old Tickets to a separate list so that your list of active Tickets doesn&#8217;t become too large. The old Tickets are put into the &#8216;Archived Tickets&#8217; list and are fully available in the site for reference and reporting etc. &#8216;Archival Settings&#8217; list in your site has the required configuration settings to manage the archival process. This includes the lists used in archival and criteria to archive (like archiving after specified number of days once the Ticket has been closed). Tickets list items data is copied into corresponding columns in the Archived Tickets list. Archival feature also moves corresponding related items like associated IT Support Tasks, Email Tickets, and Approver Tasks. We can access Archival Settings under Site Contents. There should only be one item for the Archival Settings list. Do not add another item in this list as this may disrupt the archival process, instead edit the existing item to make the required changes. The Archival Settings are provided with the default values as shown below: Note: Before enabling archival feature, ensure that both &#8220;Tickets&#8221; and &#8220;Archived Tickets&#8221; lists has the same set of columns with same data type, internal name and display name. Ensure the same for related lists as well. Missing columns in archival lists can cause data loss during archival process Whenever any change is made to any column in Tickets list, make the same change in &#8220;Archived Tickets&#8221; list as well. This consistency should be maintained in Tickets and Archived Tickets list to prevent any data loss during archival process Whenever any list names are changed, update the Archival Settings accordingly Archival configurations include below mentioned columns. Please create if any of these columns are not present in &#8216;Archival Settings&#8217; list in your site Please create the columns with same Internal Names as mentioned in below table. Display name can be changed after creating the column (by editing the column settings). Please ignore if the column already exists in the list Archival Settings List Column Details S. No. Column Internal Name Column Display Name Type of Column Description 1 Title Title Single line of Text Default Value: Archival Settings Note: Do not change the value in this column. 2 SourceTicketListName Source Ticket List Name Single line of Text Name of main &#8216;Tickets&#8217; list from which items will be moved to archived list. 3 TargetTicketListName Target Ticket List Name Single line of Text Name of Archived Tickets list to which old Ticket items will be moved. 4 SourceEmailListName Source Related List Names Multiple lines of text – Plain Text Tickets list has associated lists like &#8216;Email Tickets&#8217;, &#8216;IT Support Tasks&#8217; etc. Each of these lists should have a lookup column to Tickets list. Specify name of each of these lists that has to be archived in a separate line in this column. 5 TargetEmailListName Target Related List Names Multiple lines of text – Plain Text Similar to above, there will be associated lists for &#8216;Archived Tickets&#8217; list having lookup column to &#8216;Archived Tickets&#8217; list. Items from above lists will be archived to these lists and linked to the archived Ticket item. Ensure that these are in same order as source list names above. Specify each list name in a separate line. 6 TicketIDLookupInTargetList Ticket ID Lookup Field Name in Target List Multiple lines of text – Plain Text These are the names of lookup columns to Tickets/Archived Tickets list in associated lists specified in above two columns. 7 ArchiveCompletedItemsMoreThan Archive Completed Items More Than Number (Default to zero decimals) Set this value to the number of days to keep the Ticket in the main Tickets List after it has been closed. The Ticket will be archived after this many days. With default configuration, Tickets with &#8216;Closed&#8217; status value are archived if the &#8216;Closed Date&#8217; column has a date which is less than Today minus the number of days configured in this column. 8 IncludeModifiedDate Include Modified Date Yes/No Default Value: No If this is set to &#8220;Yes&#8221;, process will look at the last date on which the item was modified and archive the item if it has not been modified for more than days mentioned in &#8216;ArchiveCompletedItemsMoreThan&#8217; column. Note that this is in addition to other criteria based on the status and closed date. This means that archival of the item will go ahead even it it is not &#8216;Closed&#8217;, provided it has not been modified for required number of days. This setting can be used to archive &#8216;inactive&#8217; Tickets though they have not yet been closed. 9 ExecutionMode Execution Mode Choice Options: Test Production &#8211; In &#8216;Test&#8217; mode, archival is done by creating items in corresponding archival lists. But the source items are not deleted. This mode can be used to verify that data is being moved correctly from source to target lists. &#8211; In &#8216;Production&#8217; mode, source items are deleted (non-recoverable) after archival. This should be enabled after verifying the data of moved items in archival lists. 10 ProcessItemIds Process Item Ids Multiple lines of text – Plain Text If any Ticket Item Ids are specified in this column, then archival is run only for these items (instead of the state and date based criteria). This is considered only when &#8216;ExecutionMode&#8217; is set to &#8216;Test&#8217;. In &#8216;Production&#8217; mode this setting is ignored and normal archival process runs. This can be used to verify archival of few selected items before doing it for all eligible items. E.g.: 1025,1026 (comma separated SharePoint generated Id values) If this column value is blank, then archival is run for items as per the state and date criteria. Normally this column will have no value, only during initial setup and testing some item Ids can be specified for data verification. 11 IgnoreColumns Ignore Columns Multiple lines of text – Plain Text Specify the columns (internal names) that should be excluded from archival process for the Tickets list. Data from these columns will not be moved to archived list. Specify each column name in separate line. E.g.: TicketCr CalculatedColumn Note: This settings is only valid for Tickets list and not associated lists 12 ArchiveStatus Archive Status Multiple lines of text – Plain Text By default Tickets with &#8216;Closed&#8217; status are considered for archiving. In this column additional status values can be specified. For example, if &#8216;Resolved&#8217; items too should be archived then that can be specified in this column. Specify each column name in separate line. 13 ArchiveDateColumn Archive Date Column Single line of Text If instead of &#8216;Closed Date&#8217;, archival should happen based on the value of some other date column in the Ticket item, then specify the internal name of that column. For example, if archival should happen based on &#8216;Resolved Date&#8217; or &#8216;Created Date&#8217; of the Ticket, we can specify the internal name of corresponding column here. Archival Logs Archival process stores the process log in a list in site. This can be used to monitor the archival process and identify any issues. Logs are stored in &#8216;CCSArchivalLogs&#8217; list, this will be available from the Site Contents. CCSArchivalLogs list is created automatically when the Archival Timer job runs for the first time. This requires latest version of Crow Canyon Timer Job solution in the SharePoint server. For each run of archival timer job, an entry gets created in this list with Start Time, End Time, Status, Number of items found eligible for archiving, Number of items successfully archived, items that failed along with detail etc. Sample log item: If the number of items to archive exceeds 100, a separate log entry is created for each set of 100 items. Scenarios in which archival process will stop processing Archival process has built in monitoring and stops in following scenarios. Once the reason for stoppage is corrected, archival will resume normal operation from next run onward. This can be monitored from archival log list described above: If there are more than 5 column mismatches between the source and Target lists. This is done to prevent data loss as columns that are missing in target (or not having correct data type) will not get the data from corresponding source columns during archival. If there is an error for more than 3 items continuously during the archival process. This indicates some error in configuration or environment. If error occurred for more than 10 items during the archival process. Large number of errors indicate some environment issue. If current time is approaching the business hours (as per site regional time zone settings) then process is stopped and it resumes in next cycle. Since archival process is resource intensive, it is preferable to run it in non-business hours. Note that this is temporary stoppage that auto-resumes from next run and doesn&#8217;t require any user intervention. Sample configuration for Status and Date Column Change If the business process requires considering a different status value or date column for archival then this can be done by changing the archival settings. More than one status value can be considered for archival and instead of &#8216;Closed Date&#8217; a different column can be specified for considering the age of Tickets for archival. Examples of changes in &#8216;Archival Settings&#8217; list: 1. If &#8216;Resolved&#8217; status is added as one of the Ticket status values and Tickets with this status should also be archived in addition to Tickets with &#8216;Closed&#8217; status, then add this status to the &#8216;Archive Status&#8217; column as shown below: 2. If the requirement is to archive all Tickets created before a certain date as a one time operation, add all possible status values to the &#8216; Archive Status &#8216; column and modify the &#8216;Archive Date Column&#8217; value to &#8216;Created&#8217;. And specify the number of days after Created in &#8216; ArchiveCompletedItemsMoreThan &#8216; column. On next run, archival job will archive all matching Tickets. Once this is done revert the archival settings to normal values: Note : If archival process is not working, please refer this article for troubleshooting: Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 https://www.crowcanyon.help/article/277 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "336",
    "name": "336 - Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoi.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/336%20-%20Crow%20Canyon%20Advanced%20Email%20and%20other%20custom%20action%20buttons%20are%20not%20shown%20in%20Items%20ribbon%20of%20SharePoi.html",
    "title": "Crow Canyon Advanced Email And Other Custom Action Buttons Are Not Shown In Items Ribbon Of SharePoi",
    "text": "Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , NITRO Studio , Troubleshooting / Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint 2709 views Less than a minute 0 Advanced Email and other Crow Canyon action buttons are not shown in the item ribbon for list view web parts added to pages Applies To: SharePoint On-premises and SharePoint Online Issue: Crow Canyon Advanced Email option is not shown for the list view webparts even though the feature is activated for the site. This will also be the case for other Crow Canyon application ribbon buttons Screenshot of item ribbon without the buttons: &nbsp; Cause: The issue happens when the web part property Toolbar Type is selected as &#8220;No Toolbar&#8221; or &#8220;Show Toolbar&#8221;. To check the web part settings, edit the page and edit the list view web part: &nbsp; Resolution: Edit the page, edit the list view webpart and set the toolbar type as &#8220;Full Toolbar&#8221; as shown below: Screenshot of Item Ribbon when Full Toolbar is selected: Crow Canyon Applications NITRO Studio Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "338",
    "name": "338 - How to bulk delete items from SharePoint list_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/338%20-%20How%20to%20bulk%20delete%20items%20from%20SharePoint%20list_.html",
    "title": "How To Bulk Delete Items From SharePoint List",
    "text": "How to bulk delete items from SharePoint list? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / General SharePoint Question , Troubleshooting / How to bulk delete items from SharePoint list? How to bulk delete items from SharePoint list? 11510 views 1 min , 1 sec read 28 Bulk delete Items from SharePoint list Applies to: SharePoint Online &amp; On-premises Description: This article describes steps to delete items from Sharepoint list. If there are many items in list and you only want to keep some of them then based on the ID value items can be deleted. SharePoint Online Pre-requisites: 1. SharePoint Online Management Shell (link to download: https://www.microsoft.com/en-in/download/details.aspx?id=35588 ) and SharePoint Client Components SDK ( https://www.microsoft.com/en-in/download/details.aspx?id=42038 ) 2. Install both of the above components in your machine (Run as Administrator) 3. To delete the items from send mails list you need “Contribute” permissions on the list 4. Script File to delete items (DeleteItems.ps1). Download DeleteItemsScript_Online . Extract the zip file and find the &#8220;DeleteItems.ps1&#8221; script file. Updates to Script File: 1. Open DeleteItems.ps1 and replace place holders with Site URL, List Name, User Name and Password. [Site URL] [List Name] [User Name] [Password] 2. Change $StartItemId and $EndItemId as per the ID range of items to delete. You can add ID column to the list view and sort the view by ID from highest to lowest to see the current maximum ID value. Similarly you can find the minimum value as well. Based on current max Id, you can decide how many to keep and then accordingly set the values for these variables: How to Run: Run “SharePoint Online Management Shell” as administrator and type command Command: “ . ‘[File Path]’ &#8221; Example: . ‘C:\\ DeleteItems.ps1’ Screenshot: SharePoint On-premises Steps: 1. Download DeleteItemsScript_OnPrem . Extract the zip file and find the DeleteItems.ps1 script file. 2. Open delete items script file and modify the &#8220;SiteURL&#8221; and &#8220;ListName&#8221; placeholders in delete items script file and save the file (see screenshot below) 3. Copy the delete items script file to the SharePoint server 4. Right click &#8220;DeleteItems.ps1&#8221; file and click &#8220;Run with Powershell&#8221; General SharePoint Question Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "339",
    "name": "339 - Attachments not getting added to the item from the Portal forms – Save Conflict error - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/339%20-%20Attachments%20not%20getting%20added%20to%20the%20item%20from%20the%20Portal%20forms%20%E2%80%93%20Save%20Conflict%20error%20-%20Crow%20Canyon.html",
    "title": "Attachments Not Getting Added To The Item From The Portal Forms – Save Conflict Error Crow Canyon",
    "text": "Attachments not getting added to the item from the Portal forms – Save Conflict error - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customer Service , Help Desk , Power Portal , Purchase Requests and Purchase Orders , Request Manager , Work Orders / Attachments not getting added to the item from the Portal forms &#8211; Save Conflict error Attachments not getting added to the item from the Portal forms &#8211; Save Conflict error 4445 views Less than a minute 4 Add delay in execution of workflows to eliminate save conflict with portal attachments Applies To: SharePoint Online and SharePoint On Premises Issue: Attachments are not getting added to the item from the portal forms &#8211; Save Conflict Error message in the Portal: Error: NotFoundError: A requested file or directory could not be found at the time an operation was processed. Error: error, Details: {&#8220;error&#8221;:{&#8220;code&#8221;:&#8221;-2130575305,Microsoft.SharePoint.SPException&#8221;,&#8221;message&#8221;:{&#8220;lang&#8221;:&#8221;en-US&#8221;,&#8221;Value&#8221;:&#8221;Save Conflict.\\n\\nYour Changes conflict with those made concurrently by another user. If you want your changes to be applied, click Back in your Web browser, refresh the page, and resubmit your changes.&#8221;}}} (See sample screenshot below) Cause: This issue occurs when there are workflows configured on the list used in Portal forms. Please check Crow Canyon Worklow Manager and look for workflows configured on the same list for Item Update/Create event. Concurrent item updates by attachment code and the workflows results in the save conflict error. Resolution: Add few seconds delay for workflow execution (around 10 seconds) in the workflows configured on the list for Item Create/Update event SharePoint On-Premises: To go to Workflow Manager, go to Site Actions &#8211;&gt; Crow Canyon Workflow Manager &#8211;&gt; Edit the workflow configured on Item Create/Update event for the list and add the delay in seconds (See sample screenshot below) &nbsp; SharePoint Online: Go to Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; NITRO Workflows Manager &#8211;&gt; Edit the workflows on Item Create/Update event on the list and add the delay in seconds (See sample screenshot below) &nbsp; Customer Service Help Desk Power Portal Purchase Requests and Purchase Orders Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Purchasing Training: NITRO Purchasing Approvals NITRO Studio Workshop: New NITRO Features NITRO Help Desk Training: Setting Up SLAs NITRO Studio Workshop: New NITRO Features Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "34",
    "name": "34 - Portal search shows the results as DispForm.aspx.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/34%20-%20Portal%20search%20shows%20the%20results%20as%20DispForm.aspx.html",
    "title": "Portal Search Shows The Results As DispForm.aspx",
    "text": "Portal search shows the results as DispForm.aspx - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customer Service , Help Desk , Onboarding , Power Portal , Purchase Requests and Purchase Orders , Request Manager , Troubleshooting , Work Orders / Portal search shows the results as DispForm.aspx Portal search shows the results as DispForm.aspx 4895 views 1 min , 3 sec read 2 How to eliminate DispForm.aspx in search results of the Portal Search Applies To: SharePoint Online and SharePoint On-Premises Issue: Portal search results shown as DispForm.aspx in the results. See sample screenshot below: Generally, in SharePoint search results, the value present in the Title field will be shown as search results in our Crow Canyon Employee Portal Search Page. If the value is not present in the Title field of the list then the results will be displayed as DispForm.aspx There are two ways to eliminate this error. Set the Title field to mandatory in the Portal Page, go to Portal Settings &#8211;&gt; Portal Pages &#8211;&gt; Edit the New Form page &#8211;&gt; Edit the tab/section and make the column as mandatory (see sample screenshot below) If the Title field is not used in the portal forms/ backend forms, then we need to configure a workflow on Item Added event for the list to update the Title column value with some other column value. We are taking &#8220;Requester&#8221; (sample column) as an example belowFor SharePoint OnPremises, please go to Site Actions &#8211;&gt; Crow Canyon Workflow Manager &#8211;&gt; Configure a new workflow as shown below (Note: If there is any existing workflow on Item Added event and there is an action that updates the item already, then modify the column mappings of that action to set the Title value. This helps avoid multiple updates on the item) Create an Update Item action as shown below For SharePoint Online, please refer https://www.crowcanyon.info/nitro/appmanual_v2/workflow-manager.html for workflow manager manual. Configure a workflow similar to above screenshots. With this workflow configuration, the title value will be filled with the desired value and teh &#8220;DispForm.aspx&#8221; will not appear in search results. Note: We need to update the existing items manually where the title field is empty Customer Service Help Desk Onboarding Power Portal Purchase Requests and Purchase Orders Request Manager Troubleshooting Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Purchasing Training: NITRO Purchasing Approvals NITRO Studio Workshop: New NITRO Features NITRO Help Desk Training: Setting Up SLAs NITRO Studio Workshop: New NITRO Features Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "340",
    "name": "340 - Portal search shows the results as DispForm.aspx.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/340%20-%20Portal%20search%20shows%20the%20results%20as%20DispForm.aspx.html",
    "title": "Portal Search Shows The Results As DispForm.aspx",
    "text": "Portal search shows the results as DispForm.aspx - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customer Service , Help Desk , Onboarding , Power Portal , Purchase Requests and Purchase Orders , Request Manager , Troubleshooting , Work Orders / Portal search shows the results as DispForm.aspx Portal search shows the results as DispForm.aspx 4895 views 1 min , 3 sec read 2 How to eliminate DispForm.aspx in search results of the Portal Search Applies To: SharePoint Online and SharePoint On-Premises Issue: Portal search results shown as DispForm.aspx in the results. See sample screenshot below: Generally, in SharePoint search results, the value present in the Title field will be shown as search results in our Crow Canyon Employee Portal Search Page. If the value is not present in the Title field of the list then the results will be displayed as DispForm.aspx There are two ways to eliminate this error. Set the Title field to mandatory in the Portal Page, go to Portal Settings &#8211;&gt; Portal Pages &#8211;&gt; Edit the New Form page &#8211;&gt; Edit the tab/section and make the column as mandatory (see sample screenshot below) If the Title field is not used in the portal forms/ backend forms, then we need to configure a workflow on Item Added event for the list to update the Title column value with some other column value. We are taking &#8220;Requester&#8221; (sample column) as an example belowFor SharePoint OnPremises, please go to Site Actions &#8211;&gt; Crow Canyon Workflow Manager &#8211;&gt; Configure a new workflow as shown below (Note: If there is any existing workflow on Item Added event and there is an action that updates the item already, then modify the column mappings of that action to set the Title value. This helps avoid multiple updates on the item) Create an Update Item action as shown below For SharePoint Online, please refer https://www.crowcanyon.info/nitro/appmanual_v2/workflow-manager.html for workflow manager manual. Configure a workflow similar to above screenshots. With this workflow configuration, the title value will be filled with the desired value and teh &#8220;DispForm.aspx&#8221; will not appear in search results. Note: We need to update the existing items manually where the title field is empty Customer Service Help Desk Onboarding Power Portal Purchase Requests and Purchase Orders Request Manager Troubleshooting Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Purchasing Training: NITRO Purchasing Approvals NITRO Studio Workshop: New NITRO Features NITRO Help Desk Training: Setting Up SLAs NITRO Studio Workshop: New NITRO Features Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "341",
    "name": "341 - SharePoint Online_ Troubleshooting steps for Outgoing emails in Crow Canyon Applications - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/341%20-%20SharePoint%20Online_%20Troubleshooting%20steps%20for%20Outgoing%20emails%20in%20Crow%20Canyon%20Applications%20-%20Crow%20Cany.html",
    "title": "SharePoint Online Troubleshooting Steps For Outgoing Emails In Crow Canyon Applications Crow Cany",
    "text": "SharePoint Online: Troubleshooting steps for Outgoing emails in Crow Canyon Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , Troubleshooting / SharePoint Online: Troubleshooting steps for Outgoing emails in Crow Canyon Applications SharePoint Online: Troubleshooting steps for Outgoing emails in Crow Canyon Applications 4229 views 1 min , 34 sec read 0 Outgoing email issues in Crow Canyon SharePoint Online based application Applies to SharePoint Online Issue Recipients are not receiving any notifications from Crow Canyon Application Troubleshooting steps 1. If users are not receiving any auto notifications i.e. Notification on Ticket Creation, Assignment, Completion then verify the users (Requester, Assigned Staff, Notify Staff, Assigned Team etc) in Auto Notification utilities in Crow Canyon Application (go to Crow Canyon helpdesk site &#8211;&gt;Application Administration &#8211;&gt; Notifications&#8211;&gt; Notification on Ticket Creation/Assignment/Completion). 2. Check the &#8220;Send Mails&#8221; list and verify if the unassigned, assigned or closed notification email items are getting created in the list or not. Mails are sent based on items created in this list. To check this go to Site Contents &#8211;&gt; Send Mails list -&gt; Verify the items are created in this list (you can search with Ticket CaseId in the &#8220;Title&#8221;) Ex: Assignment email item in Send Mails list 3. If the send mails items are created but still mails are not received then verify the Workflow logs: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Nitro Workflow &#8211;&gt; Click &#8220;Information&#8221; on workflows configured on &#8216; Send Mails &#8216; list and verify if there are any errors. Note: If you have configured other workflows with Send Mail action and mails are not received then check the logs for that workflow similar to above. 4. Add IP address 104.214.52.79 as safe sender in your exchange server. Note that this IP is used for only timer based mails, not the item updated/created/deleted mails. Also add the sender addresses of these mails (from address) as safe senders on your side (you can find the from address in Crow Canyon Application in Notification Utilities, Advanced Emails, Workflow Manager etc.) 5. Check with your exchange administrator if mails are getting blocked at your end. Crow Canyon uses a third party service &#8216;Send Grid&#8217; for outgoing emails. Crow Canyon support can check logs of this service and provide you information on whether mail is delivered or blocked. If mail is delivered from this service then issue has to be sorted out at your exchange level 6. Refer this FAQ to configure your own mailbox for outgoing emails: https://www.crowcanyon.help/article/349 7. If you still have issues after configuring internal mailbox, please check the logs for below exception. Issue In the NITRO Workflow logs, we see exceptions in Debug log column of log list item. Exception: The SMTP server requires a secure connection or the client was not authenticated. The server response was: 5.7.57 Client not authenticated to send mail. Error: 535 5.7.139 Authentication unsuccessful, Smtp ClientAuthentication is disabled for the Mailbox. Cause This is possible if the mailbox used in NITRO Workflows does not have SMTP Authentication enabled. Resolution Refer https://docs.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/authenticated-client- smtp -submission and enable SMTP authentication for the mailbox. Crow Canyon Applications Email Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "342",
    "name": "342 - Prevent duplicate_continuous ticket creation and auto notification.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/342%20-%20Prevent%20duplicate_continuous%20ticket%20creation%20and%20auto%20notification.html",
    "title": "Prevent Duplicate Continuous Ticket Creation And Auto Notification",
    "text": "Prevent duplicate/continuous ticket creation and auto notification - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Email , Troubleshooting / Prevent duplicate/continuous ticket creation and auto notification Prevent duplicate/continuous ticket creation and auto notification 2615 views 1 min , 48 sec read 0 How to stop duplicate or continuous notifications in SharePoint Online Applies To: SharePoint Online Description: When you have the Crow Canyon Email Sync enabled for creating Tickets in our IT or Work Orders applications, you may sometimes experience an issue where the system sends out multiple emails and/or creates multiple tickets for the same email. The below scenarios describe how to fix this situation. To learn more about setting up the Email Sync tool, please click here: https://www.crowcanyon.info/nitro/appmanual_v2/configuring-email-sync.html Possible cause of the infinite loop of ticket creation and auto notification: Normal 0 false false false EN-US X-NONE X-NONE If the email account configured in Email Sync settings (as defined in the &#8220;Connection Settings for Microsoft Exchange Server&#8221; section from the above link) is used as the &#8220;From Address&#8221; in either the auto notification settings (under Notifications in Application Administration) or in any Workflow Manager Send Mail action then it is possible that this could create an infinite loop. As an example, if any recipient of the notification is out of office then the mailbox set up in the Email Sync settings will also receive that email. This in turn creates a new ticket, which sends a new email to the out-of-office recipient, etc. Possible cause of duplicate ticket creation: If the account used in Crow Canyon Email Sync settings is used as the Requester, Assigned Staff, or any other field that will get a notification that then leads to the auto notification. Which in turn then creates a new ticket if the mail does not have the [CaseId: (ID)] syntax. How to fix this: Check the below configurations to see if you have any settings that refer to the mailbox/account set up in the Email Sync Settings A. Crow Canyon Workflow manager: (Send Mail Actions) Go to Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon NITRO Workflows App &#8211;&gt; edit each workflow and edit each Send Mail Action to make sure the account configured in Email Sync settings is not used in any recipient field (See sample screenshot below): B. Crow Canyon Advanced Email Go to Site Contents &#8211;&gt; Tickets list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Email Settings and check if the Email Sync mailbox/account is added as a recipient. See sample screenshot below: C. Notifications Utility: Go to Application Administration &#8211;&gt; Notifications. Make sure the Email Sync mailbox/account is absent from the Notify Staff field: 2. Always configure &#8220;Never Send to&#8221; in the Send Mail Action in Workflow Manager workflows to specify the Email Sync mailbox/account: Normal 0 false false false EN-US X-NONE X-NONE 3. Crow Canyon Email Sync Filters If you use the email account used in Crow Canyon Email Settings as “From Address” in Crow Canyon application outgoing email settings, we need to make sure that the out of office mails are filtered from creating duplicate tickets in Crow Canyon Email Sync settings. Otherwise, when a ticket is created for a user as requester, that user receives auto notification and if that user is out office then out office mail comes to mailbox configured in email sync settings and that creates another ticket and this loop repeats. To prevent this, add a filter condition to restrict creating tickets from automatic replies. See sample screenshot below: Email Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: The NITRO Email Manager Introduction to Email Manager in NITRO Studio How to Setup Email Sync in NITRO Studio Troubleshooting issues related to Crow Canyon Advanced Approvals App Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "343",
    "name": "343 - Troubleshooting steps for Custom Actions in Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/343%20-%20Troubleshooting%20steps%20for%20Custom%20Actions%20in%20Crow%20Canyon%20Application.html",
    "title": "Troubleshooting Steps For Custom Actions In Crow Canyon Application",
    "text": "Troubleshooting steps for Custom Actions in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , NITRO Studio- Custom Actions , Troubleshooting / Troubleshooting steps for Custom Actions in Crow Canyon Application Troubleshooting steps for Custom Actions in Crow Canyon Application 3027 views 1 min , 39 sec read 0 Applies To SharePoint Online and SharePoint On-premises Description This article describes about troubleshooting steps for Crow Canyon Custom Actions. This is a Crow Canyon App/solution and you can refer the features here: https://www.crowcanyon.info/nitro/appmanual_v2/batch-actions.html Symptom&nbsp;1 After executing the custom action, custom action pop up window is not closing on clicking &#8220;Close&#8221; button. Cause (specific to SharePoint On-premises) If alternate access mapping URLs are configured for the site then the site can be accessible with different URLs. If users are not using the URL which is used to configure the custom action then this issue may happen. Ex If we have two different URLs for our sites i.e. URL#1, URL#2 and the site can be accessible with both the URLs. If custom actions are configured using URL#1 but if someone is using the URL#2 to open the site and trying to use the custom actions then this behavior can occur. Fix Please use the same URL (which is used to configure the custom action) to access the sites. Symptom 2 Query list action is not working in Custom Actions. Cause This issue can happen if the target list exceeds the list view threshold limit (5000 in SP Online) and the CAML query used in the action requires going through more than the threshold values to return the result. This is standard SharePoint limitation that we cannot run a query that requires going through more than the list view threshold number of items from a list. Query list action will try to fetch the items based on query and if list view threshold limit (i.e. 5000) is hit then it gives an exception and subsequent actions that depend on the output of this query list will not executed. Fix Index the column(s) that are used in the CAML query to fetch the items from the list. Go to Site Contents -&gt; List -&gt; List Settings-&gt; Indexed columns. Purpose of indexing is to reduce the number of items that SharePoint has to scan to return the query result. It is not about the actual number of matching items that are returned by the query, which will usually be much smaller in case of custom actions. For performance reasons, SharePoint will not scan more than the threshold number of items and indexed columns are used to narrow down the item range required to be scanned. If the CAML query is using multiple columns, first condition itself should return less than list view threshold number of items. Symptom 3 Authentication failure error on invoking a SharePoint designer workflow from ‘Invoke Workflow’ action in Custom Actions. Cause This issue can happen if &#8220;Workflows can use app permissions&#8221; site feature is not activated for the site. Resolution Activate &#8220;Workflows can use app permissions&#8221; site feature. Instructions 1. Go to the site -> Site Settings -> Manage Site Features (under Site Actions). 2. Click on ‘Activate’ button to activate &#8220;Workflows can use app permissions&#8221; site feature. Crow Canyon Applications NITRO Studio- Custom Actions Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "344",
    "name": "344 - Instructions to activate and deactivate Crow Canyon Farm features.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/344%20-%20Instructions%20to%20activate%20and%20deactivate%20Crow%20Canyon%20Farm%20features.html",
    "title": "Instructions To Activate And Deactivate Crow Canyon Farm Features",
    "text": "Instructions to activate and deactivate Crow Canyon Farm features - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Troubleshooting / Instructions to activate and deactivate Crow Canyon Farm features Instructions to activate and deactivate Crow Canyon Farm features 3734 views 1 min , 6 sec read 1 Detailed steps to activate and deactivate Crow Canyon Farm features Applies to: SharePoint On-Premises Description: This article describes how to activate and deactivate Crow Canyon farm features in SharePoint server (2013, 2016 and 2019) Instructions: We have taken Crow Canyon archival feature as an example. Activate Feature: &#8211;&gt; Open Command Prompt (Run as Administrator) &#8211;&gt; Change the directory to &#8220;Hive&#8221; location using the command below Hive location path: SP2013: \"C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\BIN\" SP2016/2019: \"C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\16\\BIN\" Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 Command: STSADM.EXE -o activatefeature -name \" CrowCanyon.TimerJobs_CCSArchivalJob\" -url \"SiteCollectionURL\" –force Deactivate Feature: Command: STSADM.EXE -o deactivatefeature -name \" CrowCanyon.TimerJobs_CCSArchivalJob\" -url \"SiteCollectionURL\" –force Note: We should activate the Crow Canyon timer job features using above command. Crow Canyon Timer Job features: Feature Name Feature Folder Name Crow Canyon Recurrence CrowCanyon.TimerJobs_CCSRecurrenceJob Crow Canyon Archival CrowCanyon.TimerJobs_CCSArchivalJob Crow Canyon SLA CrowCanyon.TimerJobs_CCSSLATimerJobFeature Crow Canyon Scheduled Reports CrowCanyon.CalculatedTable_CrowCanyon Scheduled Reports Feature Crow Canyon Asset Maintenance CrowCanyon.TimerJobs_CCSAssetsMaintenance Crow Canyon Advanced Alerts CrowCanyon.AdvancedAlerts_CrowCanyonAdvancedAlerts Crow Canyon Workflow Manager CrowCanyonWorkflowManager Crow Canyon Advanced Alerts CrowCanyon.AdvancedAlerts_CrowCanyonAdvancedAlerts Crow Canyon Auto Close CrowCanyon.TimerJobs_CCSAutoCloseJobFeature We can also activate or deactivate other features from Manage Site Features of the site. Please refer this article https://support.office.com/en-us/article/activate-features-for-sites-787f3ba1-9df6-480a-ab4c-9f4525490cb9 for more details. Troubleshooting steps for Activate or Deactivate features: 1. If the feature is not installed in the farm, we need to install the solution feature using below command. Please refer the feature folder names from above table and replace in below commands Install Feature: Command: stsadm.exe -o installfeature -name \"##Feature Folder Name##\" UnInstall Feature: Command: stsadm.exe -o uninstallfeature -name \"##Feature Folder Name##\" Feature Folder Path: SP2013: C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\TEMPLATE\\FEATURES SP2016/2019: C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\16\\TEMPLATE\\FEATURES Crow Canyon Applications Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "345",
    "name": "345 - Upgrading Crow Canyon Workflow Manager to Crow Canyon NITRO Workflows App - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/345%20-%20Upgrading%20Crow%20Canyon%20Workflow%20Manager%20to%20Crow%20Canyon%20NITRO%20Workflows%20App%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Upgrading Crow Canyon Workflow Manager To Crow Canyon NITRO Workflows App Crow Canyon Software Sup",
    "text": "Upgrading Crow Canyon Workflow Manager to Crow Canyon NITRO Workflows App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio , NITRO Studio- Workflows / Upgrading Crow Canyon Workflow Manager to Crow Canyon NITRO Workflows App Upgrading Crow Canyon Workflow Manager to Crow Canyon NITRO Workflows App 3421 views Less than a minute 1 Workflows Migration to NITRO Workflows app Applies to: SharePoint Online Description Crow Canyon Applications use the Workflow App for various business processes. There is an updated version of this App available now &#8211; Crow Canyon Nitro Workflow. New App has better UI, enhanced functionality and debugging capability and improved performance. Please refer https://www.crowcanyon.info/nitro/appmanual_v2/configuring-workflows.html to see the sample UI of the NITRO Workflows app. During this upgrade we would be installing our latest app in the site collection and would be providing a link in the Application Administration to access for each service area. We will migrate the existing workflows from old app to the new version of NITRO Workflows app. During the migration process workflows will not work, there won&#8217;t be any other impact on the site. Typically this will be for 15-30 minutes and depends on the number and complexity of configured workflows. Upgrade Process 1. Upload the latest app file to the app catalog. Please find the app file from CrowCanyon.WorkflowManager . Refer msdn article to upload the app file to the app catalog. 2. Go to the Crow Canyon Site Collection and add the Crow Canyon Nitro Workflows app to the root site of the site collection. Please refer msdn to add the app to the site 3. After the app is successfully installed in the site collection, please contact sharepointsupport@crowcanyon.com so that our support personnel will schedule a session as per your availability and do the workflows migration. 4. To perform the workflows migration, we need to have access to the site collection with a site collection admin account. Crow Canyon Applications How-To NITRO Studio NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "346",
    "name": "346 - How to update portal page links after upgrading to new designer based forms - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/346%20-%20How%20to%20update%20portal%20page%20links%20after%20upgrading%20to%20new%20designer%20based%20forms%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "How To Update Portal Page Links After Upgrading To New Designer Based Forms Crow Canyon Software S",
    "text": "How to update portal page links after upgrading to new designer based forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , Power Portal / How to update portal page links after upgrading to new designer based forms How to update portal page links after upgrading to new designer based forms 2899 views 2 min , 10 sec read 1 Update portal forms and page links for email templates etc. Applies to : SharePoint Online and On-premises Description Crow Canyon Power Portal is getting a major update with new functionality. Portal forms can now be designed with a WYSIWYG editor and have more features. These forms can be opened in a pop-up and major feature of NITRO custom actions has been integrated with the Portal forms. Portal page links have been updated with this change. Upgrade process automatically updates the links within the portal. External links such as those in Crow Canon Workflow mail templates or Crow Canyon product notification templates need to be updated. Though portal has the ability to map old links to new pages, it is recommended to update the links in these templates so that future emails directly have the correct links. &nbsp; Places where we need to change the Portal URLs in backend site SharePoint Online: 1. In Auto notification Utilities (i.e. Notification on Ticket Creation/ Assignment/ Completion ) Go to Application Administration &#8211;&gt; Notifications &#8211;&gt; Edit Notification on Ticket Creation/ Assignment/ Completion templates &#8211;&gt; Copy the Ticket list Portal display form URL and append &#8220;&amp;ItemID=&lt;&lt;ID&gt;&gt;&#8221; at the end of the URL and paste it in the &#8220;Portal Ticket link URL&#8221; in auto notifications like shown below. Note: To copy the Portal URL see below instructions. The URL will be like: https://&lt;tenancy&gt;.sharepoint.com/sites/NITRO/ITP/portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets&amp;ItemID=&lt;&lt;ID&gt;&gt; 2. If we are using Portal URL in Workflow Manager in Send Mail actions, modify the portal URL in mail template settings. Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Nitro Workflows &#8211;&gt; Edit the Workflow &#8211;&gt; Edit the Mail Template and modify the Portal URL. 3. If we are using the Portal URL in Advanced Emai mail templates, please modify the Portal URL in Crow Canyon mail templates Go to Tickets list &#8211;&gt; List Ribbon &#8211;&gt; Crow Canyon Mail Templates &#8211;&gt; Edit the mail template and modify Portal URL SharePoint On-Premises: 1. Change the Portal Ticket URL in Configuration list. Go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; click General Configurations and modify the Portal link similar like above The URL will be like: http://&lt;server&gt;:&lt;port&gt;/sites/CCSSR/IT/portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets&amp;ItemID=&lt;&lt;ID&gt;&gt; Note: To copy the Portal URL see below instructions. 2. If we are using Portal URL in Workflow Manager in Send Mail actions, please modify the portal URL in mail template. Go to Crow Canyon Workflow Manager &#8211;&gt; Edit the Workflow &#8211;&gt; Edit the Send Mail action &#8211;&gt; Edit the mail template and modify the portal URL 3. If we are using the Portal URL in Crow Canyon Advanced Emai mail templates, please modify the Portal URL in mail body Go to Tickets list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Advanced Email Settings &#8211;&gt; Email Subject and Body and modify the URL 4. If we are using Portal URL in SLA action configurations, please modify the Portal URL in Notification Settings Go to Actions list &#8211;&gt; Edit the Action &#8211;&gt; Notification Settings tab &#8211;&gt; Modify the Portal URL in Mail Body. How to copy the Portal List form URL? Go to Portal Site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Click &#8220;Edit&#8221; button of Tickets list &#8211;&gt; -&gt; Click Form Settings and copy the Portal Form URL: &nbsp; In the copied URL replace the &#8220;NewForm&#8221; with &#8220;DisplayForm&#8221; and final URL will be like this: The URL will be like: https://&lt;tenancy&gt;.sharepoint.com/sites/NITRO/ITP/portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Crow Canyon Applications How-To Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "347",
    "name": "347 - How to send mail from a SharePoint list item with one click.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/347%20-%20How%20to%20send%20mail%20from%20a%20SharePoint%20list%20item%20with%20one%20click.html",
    "title": "How To Send Mail From A SharePoint List Item With One Click",
    "text": "How to send mail from a SharePoint list item with one click - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , How-To / How to send mail from a SharePoint list item with one click How to send mail from a SharePoint list item with one click 2458 views Less than a minute 1 Send a predefined email with required format and placeholders with a single click from the list item Applies to: SharePoint Online and On-Premises Description: This article desciribes about how to send an email from a SharePoint list with one click. This can be done with Crow Canyon Workflow Manager and Custom Actions solutions. Note: For SPOnline, this can be done completely in Custom Actions solution by configuring a Send Mail action. Since On-premises Custom Actions doesn&#8217;t support Mail templates, we need to use Workflow Manager. This capability will be added shortly and then Workflow Manager solution won&#8217;t be needed in this case. &nbsp; Steps: 1. Create User triggered workflow with a Send Mail action 2. Configure the Custom Action to invoke the workflow &nbsp; Detailed Instructions 1. Create a User triggered workflow with send Mail action: Please refer this article https://www.crowcanyon.help/article/241 for sample send mail action configuration. This article is based on Item Creation, you can modify the &#8220;When to Start the Workflow&#8221; to User triggered (see screenshot below). Please refer Send Mail action app manual from: https://www.crowcanyon.info/nitro/appmanual_v2/send-mail.html &nbsp; Normal 0 false false false EN-US X-NONE X-NONE MicrosoftInternetExplorer4 2. Create Custom Action with Invoke Workflow Action: Go to Tickets list &#8211;&gt; Custom Action in List ribbon &#8211;&gt; Create Invoke Custom action as shown below Invoke Workflow action configuration: &nbsp; &nbsp; &nbsp; Crow Canyon Applications Email How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "348",
    "name": "348 - Installation of Outlook Addin for Crow Canyon Product.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/348%20-%20Installation%20of%20Outlook%20Addin%20for%20Crow%20Canyon%20Product.html",
    "title": "Installation Of Outlook Addin For Crow Canyon Product",
    "text": "Installation of Outlook Addin for Crow Canyon Product - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , How-To / Installation of Outlook Addin for Crow Canyon Product Installation of Outlook Addin for Crow Canyon Product 3240 views 1 min , 42 sec read 1 How to install Crow Canyon Outlook Addin Applies To: SharePoint Online and SharePoint On-Premises Normal 0 false false false EN-US X-NONE X-NONE Crow Canyon Outlook Add-in is used to create new Tickets from Emails in the mailbox or link the emails to existing Tickets in our Help Desk Application. Please download the Crow Canyon Outlook to SharePoint Add in Package from OutlookSharePointAddin . Steps to Install the Outlook Add-in : &#8211; Extract the files from the Zip Folder &#8211; Open the Folder “OutlookSharePointAddin” &#8211; Based on the Outlook version, open the Outlook folder Note: Outlook 2013 Setup is compatible to Outlook 2016 Version also Normal 0 false false false EN-US X-NONE X-NONE &#8211; Select the Folder and run the Setup file “CCSOutlookToSharepointSetup.msi” (Run as Administrator) and Click on Next The Support Email Address needs to be specified here. For SharePoint On Premises: Normal 0 false false false EN-US X-NONE X-NONE The email address to be specified here will be the Email Tickets list email address in Help Desk Module. To get the email address of this list, please go to Help Desk Site &#8211;&gt; Site Contents &#8211;&gt; Email Tickets list &#8211;&gt; List settings &#8211;&gt; Communications &#8211;&gt; Incoming e-mail settings See sample image below For SharePoint Online: Normal 0 false false false EN-US X-NONE X-NONE The email address that is used in configured in the Email Sync Settings need to be specified here. To navigate to the email sync settings, please go to Help Desk site &#8211;&gt; Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Email Sync. See sample image below &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Please wait while the setup is doing the installation. It may take around 2-3 minutes to complete the install and shows below window. After the installation is completed, click on Close. Now restart the Outlook and the Add In options should be available in the ribbon in the Outlook Sample image of Outlook ribbon after installation: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE There will be three options for our Outlook to SharePoint Addin 1. New Service Ticket: This button will open a new email with pre-filled Support email address, requester can fill in the information like subject and body regarding the issue and click on Send 2. Convert email to Ticket: This option is to convert any email in the outlook to a ticket in the Help Desk site. Select the email that needs to converted as a ticket and click on this button. A new ticket will be created with “Subject” of the email as Ticket “Title” and the email body as the “Description” of the ticket. 3. Link email to Ticket: This option is to add/link certain email to a ticket. This can be done by specifying the Ticket Case ID. Select the Email that needs to be linked to a ticket and click on this button. It prompts to fill in a Case ID, specify the Case ID and click on OK. See sample screenshot below Steps to install Outlook add-in in silent mode 1. Command to install Outlook add-in in silent mode: msiexec /i \"Add-in msi file location\\CCSOutlookToSharepointSetup.msi\" /quiet /qn /norestart 2. Update the &#8220;SupportEmail&#8221; registry string value present at &#8220;HKEY_LOCAL_MACHINE\\SOFTWARE\\Crow Canyon Systems\\CCSOutlookToSharepoint\\SR&#8221; in client machine&#8217;s registry editor with the SharePoint &#8220;Email Tickets&#8221; list&#8217;s email address &nbsp; Outlook Add In Crow Canyon Applications Email How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "349",
    "name": "349 - How to use internal mailbox for sending mails from NITRO Workflow Manager and Approval App - Crow Ca.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/349%20-%20How%20to%20use%20internal%20mailbox%20for%20sending%20mails%20from%20NITRO%20Workflow%20Manager%20and%20Approval%20App%20-%20Crow%20Ca.html",
    "title": "How To Use Internal Mailbox For Sending Mails From NITRO Workflow Manager And Approval App Crow Ca",
    "text": "How to use internal mailbox for sending mails from NITRO Workflow Manager and Approval App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Email , How-To , NITRO Studio , NITRO Studio- Workflows / How to use internal mailbox for sending mails from NITRO Workflow Manager and Approval App How to use internal mailbox for sending mails from NITRO Workflow Manager and Approval App 6520 views 3 min , 32 sec read 82 Applies to : SharePoint Online NITRO Workflows and Advanced Approval App Introduction This articles has details for using an internal account to send mails from Workflow Manager and Approval App. Using an internal account results in better mail delivery as mail sent from external servers can be considered as spam by the receiving servers. This article is written taking the example of Workflow Manager, exactly same configurations are to be done for Advanced Approval App (except for Graph API). NITRO Workflows by default sends emails using SendGrid service. This can sometimes cause mail delivery issues as SendGrid server IPs may not be trusted by receiving server. Also, mails originating outside of receiving server but with sender address of internal domain has chances of being considered a spam mail. To avoid these issues, NITRO workflows now has the following additional options to send mails. Microsoft Graph API: Refer instructions from this article Mailbox Settings: Explained in current article In case mail delivery by Mailbox / Graph API fails for any reason then SendGrid is used as backup. This can be configured at the site level in Workflow Manager. All workflows configured in the site will use the same settings for outgoing mails. Note : If we need to use a shared mailbox and not the user account, we need to use Graph API method to setup internal mailbox, please refer the article for more details regarding this. Configured mailbox requires permissions to send mails as another user or send mail on behalf of other users. Please refer this article for permission configurations. Refer below image to configure the settings. Details of the settings are described further down: Mailbox settings Please refer below image for the settings. Note the text within the dialog and in the yellow boxes: Send Mail Process Flow Mails are sent as per below process: If Graph API is enabled and mail size is below 3 MB, attempt to send mail via Graph API If mail is not sent via Graph API (skipped or error) and Mailbox settings are enabled, attempt to send mail via Mailbox (refer example scenario below) If mail is not sent via Mailbox (skipped or error) and SendGrid is enabled, attempt to send mail via SendGrid IP Whitelisting When above mailbox settings are enabled, Crow Canyon Workflow Manager component will attempt to send mails. This is done by connecting to the mailbox using Microsoft Exchange Web Services API. Workflow Manager component runs in Microsoft Azure and following IPs should be whitelisted so that mailbox can be connected for sending mails from the services running in Azure South Central US data center. Also, please ensure that multi-factor authentication (MFA) is not enabled for this mailbox account or below IPs are exempted from MFA: IP Addresses: 104.214.52.79 104.44.128.14 104.44.128.15 104.44.128.16 104.44.128.17 40.124.36.136 [August 2019 Update] Also whitelist the following IPs: 13.65.212.252 13.66.37.235 13.66.36.172 13.84.40.155 13.66.37.11 40.84.136.198 23.98.144.222 23.98.128.142 [December 2024 Update] Additional IPs to whitelist: 13.66.37.235 13.66.36.172 13.84.40.155 13.66.37.11 13.65.212.252 40.84.136.198 23.98.144.222 23.98.128.142 20.118.119.70 20.118.112.218 20.118.116.205 20.225.19.181 20.225.16.176 20.225.16.190 20.225.16.209 20.225.17.45 20.225.17.78 20.225.17.88 20.225.17.101 20.225.17.138 Example Scenario Mailbox configuration in NITRO Workflows: If above settings are not enabled, then mail is sent via SendGrid directly. If settings are enabled then first attempt is made to send the mail with sender as the ‘From’ address configured in the Send Mail action (‘Send As’ scenario). If this fails due to any reason like invalid sender account (no-reply@sharepointonline.com), then mail will be sent from the address of the mailbox configured above. And &#8220;Reply To&#8221; address will be set to the &#8216;From&#8217; address (no-reply@sharepointonline.com) specified in the Send Mail action settings. If both fail and ‘Use SendGrid’ is set to ‘Yes’ then mail is sent via the SendGrid service. Please note that if ‘Use SendGrid’ is set to ‘No’ then outgoing mails will stop working if send mail via Mailbox fails or is not enabled. Consider following accounts for the example below: Mailbox account is crowcanyonemail@crowcanyon365.com Email address associated with above mailbox is crowcanyonemail@crowcanyon365.com (‘Sender Email’). This could be different than mailbox account in certain cases From address is jamesr@crowcanyon365.com (from address configured in Send mail action in NITRO Workflows) 1. &#8216;Send As&#8217; Attempt to send mail as jamesr@crowcanyon365.com using the mailbox of crowcanyonemail@crowcanyon365.com login. This requires the following: crowcanyonemail@crowcanyon365.com login credentials configured in site workflow settings should be valid jamesr@crowcanyon365.com should be a valid account crowcanyonemail@crowcanyon365.com account should have ‘Send as’ permission on jamesr@crowcanyon365.com account To grant &#8216;Send As&#8217; permissions, please click here . Note that we need to grant mailbox permissions to all user accounts for all the possible sender mail addresses. In short, mailbox account should have permission to send as the sender account (From address) configured in the workflow manager mailbox settings. 2. Mailbox &#8216;Send As&#8217; as described above can fail for some reason, e.g. &#8216;Mailbox user&#8217; not having permissions to send mail as &#8216;From address&#8217; user. In this case, application will attempt to send mail with from address as mailbox email address itself (crowcanyonemail@crowcanyon365.com as per example above and not jamesr@crowcanyon365.com). In this case &#8216;Reply To&#8217; address will be set as as the required sender address (jamesr@crowcanyon365.com). When user replies to this email, &#8216;To address&#8217; in the reply will be set to jamesr@crowcanyon365.com. 3. SendGrid If both the above attempts fail then mail will be sent using SendGrid service. SendGrid will be attempted if &#8216;Use SendGrid&#8217; is set to &#8216;Yes&#8217;. Else, mail will not be sent. Grant &#8216;Send As&#8217; permission to mailbox account on one or more accounts used for sending emails Grant mailbox permissions to a single account Navigate to: O365 Admin Center &#8211;&gt; Users &#8211;&gt; Search for the required user (account that is used as sender in Workflows/Send Mail Actions, in above example, it is jamesr@crowcanyon365.com) &#8211;&gt; Mail &#8211;&gt; Mailbox Permissions &#8211;&gt; Grant “Send As” for crowcanyonemail@crowcanyon365.com. Please see sample screenshots below: Edit the Sender Account and grant “Send As” and &#8220;Send on behalf&#8221; permissions as shown below: Note: It takes around 15-20 minutes for the mailbox permission changes to take into effect. Grant mailbox permissions to multiple accounts simultaneously Navigate to: O365 Admin Center &#8211;&gt; Exchange &#8211;&gt; Recipients &#8211;&gt; Select the required users &#8211;&gt; Click on More link on the right hand side panel &#8211;&gt; Mailbox Delegation &#8211;&gt; Grant Send As and Send On Behalf for the mailbox account configured in the NITRO Workflows App. See sample screenshots below: s Internal Mailbox NITRO Workflows Permissions Crow Canyon Applications Email How-To NITRO Studio NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "35",
    "name": "35 - How to configure Recurrence feature using Crow Canyon NITRO Workflows_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/35%20-%20How%20to%20configure%20Recurrence%20feature%20using%20Crow%20Canyon%20NITRO%20Workflows_.html",
    "title": "How To Configure Recurrence Feature Using Crow Canyon NITRO Workflows",
    "text": "How to configure Recurrence feature using Crow Canyon NITRO Workflows? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Crow Canyon Applications , Equipment Management , Help Desk , How-To , NITRO Studio , NITRO Studio- Workflows , Request Manager , Work Orders / How to configure Recurrence feature using Crow Canyon NITRO Workflows? How to configure Recurrence feature using Crow Canyon NITRO Workflows? 4463 views 2 min , 28 sec read 6 How to configure Recurrence feature using Crow Canyon NITRO Workflows Applies to : SharePoint Online &nbsp; Description &nbsp; There are many business scenarios where SharePoint list items need to be created based on Daily, Monthly, Yearly basis or based on specific dates. This is used for cases like recurring maintenance tasks for Assets, renewing Contracts etc., this can be configured using Crow Canyon Workflow Manager. In this article, we have taken Tickets list as an example but this can be configured on any list using the Workflow Manager. We will create a recurring template list and then add Scheduled Query workflow to get the recurring items created in the Tickets list. &nbsp; Summary of Steps: &nbsp; 1. List Schema for Recurring functionality &nbsp; 2. Workflows configuration based on recurrence (Daily, Monthly and Specific Date) &nbsp; Configure a Scheduled query workflow &nbsp; &#8211; Configure create item action that create items in target list based on the recurrence schedule &nbsp; &#8211; Configure “Update Item” actions for each type of recurrence to set the Next Occurrence Date in the recurring schedule &nbsp; Detailed Steps: &nbsp; 1. List Schema for Recurrence: &nbsp; Create a custom list “ Recurring Schedule ” in IT Helpdesk with following fields. Based on the schedule and data in this list, items will be created in Tickets list automatically with corresponding data in the Ticket item fields: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Field Internal Name Display Name Field Type Required Title Title Single Line of Text Yes RecurrenceType Recurrence Type Choice field (Values: Daily, Weekly, Monthly, Yearly, Specific Date) Yes SpecificDate Specific Date Date and Time No NextOccurenceDate Next Occurrence Date Date and Time Yes DayInterval Day Interval Number No MonthlyInterval Monthly Interval Number No ExcludeWeekend Exclude Weekend Yes/No – default to No No TimeSpanDaily Time Span Daily Calculated Column Formula: =CONCATENATE([Day Interval],&#8221;:0:0:0&#8243;) No TicketTitle Ticket Title Single line of Text Yes Category Category Lookup to Category list No IssueType Issue Type Lookup to Issue Type list No Description Description Multiline text No Requester Requester Person or group No &nbsp; We can also create additional fields and map them to Tickets list in workflow manager field mappings in &#8220;Create Item&#8221; action as needed. 2. Configure the NITRO Forms, validations for the Recurrence Schedule list: We need to configure the NITRO forms for the Recurrence Schedule list. Configure two tabs, one for Schedule and another for Ticket fields (i) Schedule: a. Title b. Recurrence Type c. Specific Date d. Next Occurrence Date e. Day Interval f. Month Interval g . Exclude Weekend (ii) Ticket Fields: a. Ticket Title b. Requester c. Category d. Issue Type e. Description Configure permissions for the “Day Interval”, “Month Interval” and “Exclude Weekend” columns depending on the Recurrence Type selection in the form. See the below screenshots to configure the column permissions for “Daily Interval” Screenshot 1: Screenshot 2: Normal 0 false false false EN-US X-NONE X-NONE Also please make sure the dynamic condition evaluation is enabled in the column permissions, see sample image below Similarly, for the “Exclude Weekend” column, we need to configure the column permissions for “Daily” Recurrence Now configure a column validation so that the “Daily interval&#8221; is mandatory when Recurrence Type is set to &#8220;Daily&#8221; in the form. See sample screenshots below Normal 0 false false false EN-US X-NONE X-NONE Also, we need to configure the permissions and validations for the Monthly Interval column on the Monthly Recurrence condition (Recurrence Type is equal to Monthly). Please refer complete user manual for column permissions and validations from https://www.crowcanyon.info/nitro/appmanual_v2/using-enhanced-list-forms.html 1. Workflows configuration Configure a scheduled query workflow using our NITRO Workflows App. Create a workflow as shown below &nbsp; Normal 0 false false false EN-US X-NONE X-NONE &nbsp; Scheduled query used in workflow: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name=&#8217;NextOccurenceDate&#8217; /&gt; &lt;Value Type=&#8217;DateTime&#8217;&gt; &lt;Today /&gt; &lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; 1. Configure a “Create Item” action to create a ticket as shown below Normal 0 false false false EN-US X-NONE X-NONE 2. Create an “Update Item” action for Daily recurrence for business days to update &#8220;Next Occurrence Date&#8221; in the recurring schedule list item. See sample screenshot below Normal 0 false false false EN-US X-NONE X-NONE Field Mapping: $calcbusinesstime([Next Occurence Date|NextOccurenceDate],[Time Span Daily|TimeSpanDaily]) 3. Create an “Update Item” action to set the &#8220;Next Occurrence Date&#8221; for Daily recurrence for non-business days case, see sample screenshot below Normal 0 false false false EN-US X-NONE X-NONE Formula: $add([Next Occurence Date|NextOccurenceDate],[Time Span Daily|TimeSpanDaily]) 4. Create an “Update Item” action to set the “Next Occurrence Date” for Monthly interval. See sample screenshot below Formula: $addmonths([Next Occurence Date|NextOccurenceDate],[Month Interval|MonthInterval]) &nbsp; &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Asset Management Crow Canyon Applications Equipment Management Help Desk How-To NITRO Studio NITRO Studio- Workflows Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "350",
    "name": "350 - How to configure Recurrence feature using Crow Canyon NITRO Workflows_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/350%20-%20How%20to%20configure%20Recurrence%20feature%20using%20Crow%20Canyon%20NITRO%20Workflows_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Configure Recurrence Feature Using Crow Canyon NITRO Workflows Crow Canyon Software Suppor",
    "text": "How to configure Recurrence feature using Crow Canyon NITRO Workflows? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Crow Canyon Applications , Equipment Management , Help Desk , How-To , NITRO Studio , NITRO Studio- Workflows , Request Manager , Work Orders / How to configure Recurrence feature using Crow Canyon NITRO Workflows? How to configure Recurrence feature using Crow Canyon NITRO Workflows? 4463 views 2 min , 28 sec read 6 How to configure Recurrence feature using Crow Canyon NITRO Workflows Applies to : SharePoint Online &nbsp; Description &nbsp; There are many business scenarios where SharePoint list items need to be created based on Daily, Monthly, Yearly basis or based on specific dates. This is used for cases like recurring maintenance tasks for Assets, renewing Contracts etc., this can be configured using Crow Canyon Workflow Manager. In this article, we have taken Tickets list as an example but this can be configured on any list using the Workflow Manager. We will create a recurring template list and then add Scheduled Query workflow to get the recurring items created in the Tickets list. &nbsp; Summary of Steps: &nbsp; 1. List Schema for Recurring functionality &nbsp; 2. Workflows configuration based on recurrence (Daily, Monthly and Specific Date) &nbsp; Configure a Scheduled query workflow &nbsp; &#8211; Configure create item action that create items in target list based on the recurrence schedule &nbsp; &#8211; Configure “Update Item” actions for each type of recurrence to set the Next Occurrence Date in the recurring schedule &nbsp; Detailed Steps: &nbsp; 1. List Schema for Recurrence: &nbsp; Create a custom list “ Recurring Schedule ” in IT Helpdesk with following fields. Based on the schedule and data in this list, items will be created in Tickets list automatically with corresponding data in the Ticket item fields: &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Field Internal Name Display Name Field Type Required Title Title Single Line of Text Yes RecurrenceType Recurrence Type Choice field (Values: Daily, Weekly, Monthly, Yearly, Specific Date) Yes SpecificDate Specific Date Date and Time No NextOccurenceDate Next Occurrence Date Date and Time Yes DayInterval Day Interval Number No MonthlyInterval Monthly Interval Number No ExcludeWeekend Exclude Weekend Yes/No – default to No No TimeSpanDaily Time Span Daily Calculated Column Formula: =CONCATENATE([Day Interval],&#8221;:0:0:0&#8243;) No TicketTitle Ticket Title Single line of Text Yes Category Category Lookup to Category list No IssueType Issue Type Lookup to Issue Type list No Description Description Multiline text No Requester Requester Person or group No &nbsp; We can also create additional fields and map them to Tickets list in workflow manager field mappings in &#8220;Create Item&#8221; action as needed. 2. Configure the NITRO Forms, validations for the Recurrence Schedule list: We need to configure the NITRO forms for the Recurrence Schedule list. Configure two tabs, one for Schedule and another for Ticket fields (i) Schedule: a. Title b. Recurrence Type c. Specific Date d. Next Occurrence Date e. Day Interval f. Month Interval g . Exclude Weekend (ii) Ticket Fields: a. Ticket Title b. Requester c. Category d. Issue Type e. Description Configure permissions for the “Day Interval”, “Month Interval” and “Exclude Weekend” columns depending on the Recurrence Type selection in the form. See the below screenshots to configure the column permissions for “Daily Interval” Screenshot 1: Screenshot 2: Normal 0 false false false EN-US X-NONE X-NONE Also please make sure the dynamic condition evaluation is enabled in the column permissions, see sample image below Similarly, for the “Exclude Weekend” column, we need to configure the column permissions for “Daily” Recurrence Now configure a column validation so that the “Daily interval&#8221; is mandatory when Recurrence Type is set to &#8220;Daily&#8221; in the form. See sample screenshots below Normal 0 false false false EN-US X-NONE X-NONE Also, we need to configure the permissions and validations for the Monthly Interval column on the Monthly Recurrence condition (Recurrence Type is equal to Monthly). Please refer complete user manual for column permissions and validations from https://www.crowcanyon.info/nitro/appmanual_v2/using-enhanced-list-forms.html 1. Workflows configuration Configure a scheduled query workflow using our NITRO Workflows App. Create a workflow as shown below &nbsp; Normal 0 false false false EN-US X-NONE X-NONE &nbsp; Scheduled query used in workflow: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name=&#8217;NextOccurenceDate&#8217; /&gt; &lt;Value Type=&#8217;DateTime&#8217;&gt; &lt;Today /&gt; &lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; 1. Configure a “Create Item” action to create a ticket as shown below Normal 0 false false false EN-US X-NONE X-NONE 2. Create an “Update Item” action for Daily recurrence for business days to update &#8220;Next Occurrence Date&#8221; in the recurring schedule list item. See sample screenshot below Normal 0 false false false EN-US X-NONE X-NONE Field Mapping: $calcbusinesstime([Next Occurence Date|NextOccurenceDate],[Time Span Daily|TimeSpanDaily]) 3. Create an “Update Item” action to set the &#8220;Next Occurrence Date&#8221; for Daily recurrence for non-business days case, see sample screenshot below Normal 0 false false false EN-US X-NONE X-NONE Formula: $add([Next Occurence Date|NextOccurenceDate],[Time Span Daily|TimeSpanDaily]) 4. Create an “Update Item” action to set the “Next Occurrence Date” for Monthly interval. See sample screenshot below Formula: $addmonths([Next Occurence Date|NextOccurenceDate],[Month Interval|MonthInterval]) &nbsp; &nbsp; Normal 0 false false false EN-US X-NONE X-NONE Asset Management Crow Canyon Applications Equipment Management Help Desk How-To NITRO Studio NITRO Studio- Workflows Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "352",
    "name": "352 - How to configure the Portal Forms to open in Dialog Form_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/352%20-%20How%20to%20configure%20the%20Portal%20Forms%20to%20open%20in%20Dialog%20Form_.html",
    "title": "How To Configure The Portal Forms To Open In Dialog Form",
    "text": "How to configure the Portal Forms to open in Dialog Form? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , Power Portal / How to configure the Portal Forms to open in Dialog Form? How to configure the Portal Forms to open in Dialog Form? 4809 views Less than a minute 0 How to Open Portal forms in Dialog mode Appies To: SharePoint Onine and SharePoint On Premises Normal 0 false false false EN-US X-NONE X-NONE 1. How to open the menu bar links in dialogue box mode? Please go to Portal Settings &#8211;&gt; Common UI Settings &#8211;&gt; Menu Section &#8211;&gt; edit the link and select the Popup Dialog for the desired links and save. See Sample Screenshot below &nbsp; 2. How to open the list forms (display/edit) in dialog box mode from the list view page? Normal 0 false false false EN-US X-NONE X-NONE Go to Portal settings &#8211;&gt; Portal Pages &#8211;&gt; Select &#8220;List View Page&#8221; from the dropdown &#8211;&gt; Edit the desired list view page &#8211;&gt; Enable the “Launch forms in a dialog” option for the display and edit forms under Page Actions section. See Sample Screenshot below. 3. How to open Search results in Dialog box mode? Normal 0 false false false EN-US X-NONE X-NONE Go to Portal settings &#8211;&gt; Portal Pages &#8211;&gt; Select &#8220;Search Page&#8221; from the dropdown &#8211;&gt; Edit the desired search page &#8211;&gt; Enable “Launch forms in a dialog” option for the display form under Page Actions section. See Sample Screenshot below. &nbsp; &nbsp; Crow Canyon Applications How-To Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "36",
    "name": "36 - How to create Managed Properties to use Property restrictions in SharePoint Search box.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/36%20-%20How%20to%20create%20Managed%20Properties%20to%20use%20Property%20restrictions%20in%20SharePoint%20Search%20box.html",
    "title": "How To Create Managed Properties To Use Property Restrictions In SharePoint Search Box",
    "text": "How to create Managed Properties to use Property restrictions in SharePoint Search box - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create Managed Properties to use Property restrictions in SharePoint Search box How to create Managed Properties to use Property restrictions in SharePoint Search box 1189 views 1 min , 7 sec read 0 Applies to: SharePoint Online and On-premises Description: SharePoint search supports the keyword query language and one of the features of this language is property restriction. To use the property restriction feature on a column, that column needs to be mapped to a Managed Property. This property should be Searchable, Queryable, and Retrievable. Use Case: In Crow Canyon NITRO Forms, we have several options to enhance the lookup columns functionality (under &#8220;Advanced&#8221; =&gt; &#8220;Lookup Settings&#8221;). Using this we can enable cascading feature to filter &#8216;child&#8217; lookup as per the selection in &#8216;parent&#8217; lookup column (for e.g. &#8216;Country&#8217; lookup column as parent for child lookup column &#8216;State&#8217;). Another feature is to not load the items in the lookup column and instead search the items and then select. This is very useful in scenarios where lookup list has lot of items and form load is slowed down considerably if lookup column is populated at the time of form load. Also, if lookup list has more items than the list view threshold then lookup column will not get loaded at all. With NITRO forms &#8220;Do not load lookup list items&#8221; feature these problems are addressed as form loads faster and lookup list items can be searched and set in the lookup column even in case of list view threshold exceeded scenario. If search is enabled on the child lookup, then search results should filter out items based on the value selected in the parent column. This is similar to the case where search is not enabled and lookup list items are shown in the drop down. For this to work, parent column in lookup list of child lookup column needs to be a managed property in search schema. For configuring the managed property, please refer below links. To summarise, if cascading is enabled on a child lookup and search is enabled along with do not load option, then it is mandatory to configure managed property. Refer this article to create/edit managed property. Refer this article for keyword query language. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "360",
    "name": "360 - How to create Managed Properties to use Property restrictions in SharePoint Search box - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/360%20-%20How%20to%20create%20Managed%20Properties%20to%20use%20Property%20restrictions%20in%20SharePoint%20Search%20box%20-%20Crow%20Canyon.html",
    "title": "How To Create Managed Properties To Use Property Restrictions In SharePoint Search Box Crow Canyon",
    "text": "How to create Managed Properties to use Property restrictions in SharePoint Search box - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create Managed Properties to use Property restrictions in SharePoint Search box How to create Managed Properties to use Property restrictions in SharePoint Search box 1189 views 1 min , 7 sec read 0 Applies to: SharePoint Online and On-premises Description: SharePoint search supports the keyword query language and one of the features of this language is property restriction. To use the property restriction feature on a column, that column needs to be mapped to a Managed Property. This property should be Searchable, Queryable, and Retrievable. Use Case: In Crow Canyon NITRO Forms, we have several options to enhance the lookup columns functionality (under &#8220;Advanced&#8221; =&gt; &#8220;Lookup Settings&#8221;). Using this we can enable cascading feature to filter &#8216;child&#8217; lookup as per the selection in &#8216;parent&#8217; lookup column (for e.g. &#8216;Country&#8217; lookup column as parent for child lookup column &#8216;State&#8217;). Another feature is to not load the items in the lookup column and instead search the items and then select. This is very useful in scenarios where lookup list has lot of items and form load is slowed down considerably if lookup column is populated at the time of form load. Also, if lookup list has more items than the list view threshold then lookup column will not get loaded at all. With NITRO forms &#8220;Do not load lookup list items&#8221; feature these problems are addressed as form loads faster and lookup list items can be searched and set in the lookup column even in case of list view threshold exceeded scenario. If search is enabled on the child lookup, then search results should filter out items based on the value selected in the parent column. This is similar to the case where search is not enabled and lookup list items are shown in the drop down. For this to work, parent column in lookup list of child lookup column needs to be a managed property in search schema. For configuring the managed property, please refer below links. To summarise, if cascading is enabled on a child lookup and search is enabled along with do not load option, then it is mandatory to configure managed property. Refer this article to create/edit managed property. Refer this article for keyword query language. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "361",
    "name": "361 - Upgrade Crow Canyon application for SharePoint Online to NITRO based application version - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/361%20-%20Upgrade%20Crow%20Canyon%20application%20for%20SharePoint%20Online%20to%20NITRO%20based%20application%20version%20-%20Crow%20Cany.html",
    "title": "Upgrade Crow Canyon Application For SharePoint Online To NITRO Based Application Version Crow Cany",
    "text": "Upgrade Crow Canyon application for SharePoint Online to NITRO based application version - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , NITRO Studio / Upgrade Crow Canyon application for SharePoint Online to NITRO based application version Upgrade Crow Canyon application for SharePoint Online to NITRO based application version 2593 views 1 min , 36 sec read 0 Applies to: SharePoint Online Description: Crow Canyon NITRO Studio is an easy to use no-code solution that provides the components to build highly configurable applications in SharePoint online. We have upgraded our applications (IT, Facilities, Requests Management, Purchasing etc.) to take advantage of NITRO capabilities. This article provides the details of upgrading existing applications to new NITRO based versions. Important points to note: Only application settings and configuration are updated, there is no change in application data NITRO Studio needs to be installed in customer site collection. Crow Canyon can assist in this step as required Though there is not much downtime during the upgrade, it is preferable to do this during non-business hours Please refer NITRO Studio Components for more details description about NITRO components. Please refer NITRO Studio Video Library for videos on new NITRO capabilities. Upgrade Process: Prior to upgrading the Crow Canyon application, we need to install the new NITRO Studio and other related apps in the root site of the site collection. Detailed process is described in this article After the NITRO Studio and related apps are installed successfully in the root site of the site collection, please contact sharepointsupport@crowcanyon.com so that our support personnel will schedule a session for the application upgrade. During upgrade session, logged in user should have site collection admin rights If the Workflow Manager is already upgraded then there will be no down time during the NITRO upgrade. Otherwise, there will be around 15-30 minutes downtime depends up on the complexity of configured workflows. Please refer this article for more details about Workflow Manger upgrade process. As part of this upgrade, our old Crow Canyon apps related features will be migrated to our new NITRO Studio based solutions including Forms, Reports etc. There will be no real downtime, however, this migration process takes around 15 minutes so we can consider this as downtime/maintenance window. Next Step is to convert the list forms to NITRO Forms. This conversion will not have any downtime. We will get all the forms configured and then finally publish to convert the forms. After this users will start noticing the form UI changes. Please find the sample screenshots of the list forms before and after upgrade at the end of this article. Note: All the users can continue using the application during this upgrade Email to Ticket conversion functionality will continue to work without any interruptions during this upgrade Old Forms Manager based forms (Tabs on top of standard SharePoint list forms) will be converted to Crow Canyon NITRO Forms Existing categories, issue types, notification utility configurations, quick launch links, top link bar links, Application Administration and all other custom features/configurations will work as is after the upgrade Existing Tickets and other lists data etc. won&#8217;t have any impact Screenshot 1: Sample Asset Form before NITRO upgrade Screenshot 2: Sample Asset Form after NITRO upgrade NITRO Upgrade Crow Canyon Applications NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "362",
    "name": "362 - How to modify the default “Save” and “Cancel” buttons in Nitro forms and Portal_ - Crow Canyon Softw.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/362%20-%20How%20to%20modify%20the%20default%20%E2%80%9CSave%E2%80%9D%20and%20%E2%80%9CCancel%E2%80%9D%20buttons%20in%20Nitro%20forms%20and%20Portal_%20-%20Crow%20Canyon%20Softw.html",
    "title": "How To Modify The Default “Save” And “Cancel” Buttons In Nitro Forms And Portal Crow Canyon Softw",
    "text": "How to modify the default “Save” and “Cancel” buttons in Nitro forms and Portal? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How-To , NITRO Studio- Forms / How to modify the default &#8220;Save&#8221; and &#8220;Cancel&#8221; buttons in Nitro forms and Portal? How to modify the default &#8220;Save&#8221; and &#8220;Cancel&#8221; buttons in Nitro forms and Portal? 5724 views 3 min , 3 sec read 9 Applies to : SharePoint online and On-premises This article describes about how to modify the default &#8220;Save&#8221; and &#8220;Cancel&#8221; buttons in NITRO forms and Portal forms and related functionality. Save button text change Cancel button text change How to redirect to custom page URL after submitting the form? Change background color and hover color of the buttons To replace the Save and Cancel buttons, we will use Submit action and Script action buttons in Nitro forms. With these action buttons we can execute the custom script and also we can invoke the configured custom actions in Submit action. This article takes Tickets list as example, you can configure the same on any list. Detailed Instructions Save button text change Go to IT help desk site &#8211;&gt; Tickets list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; Select the desired form (one list can have multiple NITRO Forms configured) Hide the &#8220;Save&#8221; button under Layouts and Theme section and insert the &#8220;Submit Action&#8221; button. To insert the submit action button, drag and drop the Submit Action button from &#8220;Actions&#8221; section to the desired position on the form: Rename Button Title to &#8220;Submit work Order&#8221; &#8211;&gt; enter &#8220; functionCallback(); &#8221; under Script Function panel under action settings like shown in below image. Note: You can specify any text for the button title and select any image To customize the width of the submit button, we can use Custom CSS in NITRO forms. Please go to Advanced section &#8211;&gt; Custom CSS &#8211;&gt; add below and save the settings. .ccs_btn_SubmitAction{ min-width:150px !important; } Cancel button text change Go to IT help desk site &#8211;&gt; Tickets list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; Select the desired form (one list can have multiple NITRO Forms configured) Hide the &#8220;Cancel&#8221; button under Layouts and Theme section and insert the &#8220;Script Action&#8221; button. To insert the script action button, drag and drop the Script Action button from &#8220;Actions&#8221; section to the desired position on the form. Rename the &#8220;Cancel&#8221; Button Title as required &#8211;&gt; enter &#8220; $('#btnCancel').trigger('onclick'); &#8221; under Script Function panel under action settings like shown in below image. Note: You can specify any text for the button title and select any image To customize the width of the submit button, we can use Custom CSS in NITRO forms. Please go to Advanced section &#8211;&gt; Custom CSS &#8211;&gt; add below and save the settings. .ccs_btn_ScriptAction{ min-width: 150px !important; } How to redirect to a custom URL after submitting the form? For this we need to configure Post Save settings in submit button action settings in NITRO Forms Permissions Configuration To show this “Submit Work Order” action button only for the specific group of people, we can configure permissions for the action button. Select the button, go to permissions section and configure the permissions as required. Change background color and hover color of the buttons. Navigate to NITRO Forms designer for the list -&gt; Select the previously dragged ‘Submit Action’ button -&gt; Expand ‘Style’ section from the button settings panel. 2. Under the ‘Style’ section, check ‘Override Button Style’ -&gt; Click ‘Edit’ button as shown below: 3. In the opened ‘Style’ pop-up, click ‘Gradient generator’ link under ‘Background Gradient’ as shown below: 4. On the opened page (with URL: https://www.colorzilla.com/gradient-editor/ ), select any gradient from the ‘Presets’ option -&gt; Drag the color slider to generate the required gradient -&gt; Copy the generated CSS as shown below: 5. On the NITRO Forms designer page, paste the copied CSS in ‘Background Gradient’ section as shown below: 6. Similarly, generate the ‘Hover Gradient’ and paste the CSS in ‘Hover Gradient’ section. 7. Click ‘OK’ -&gt; Click ‘Apply’ -&gt; Publish the NITRO Forms. Sample output: If ‘Background Gradient’ and ‘Hover Gradient’ needs to be changed for all the buttons on the NITRO Form and not just for one button, then the below steps can be followed: Navigate to NITRO Forms designer for the list -> Open ‘GLOBAL SETTINGS’ ribbon -> Edit or copy the current theme (or any other theme from the dropdown menu) as shown below: 2. Navigate to ‘Buttons’ tab in ‘Configure Forms Theme’ dialog -&gt; Click ‘Gradient generator’ link under ‘Background Gradient’ -&gt; Select any gradient from the ‘Presets’ option -&gt; Drag the color slider to generate the required gradient -&gt; Copy the generated CSS as shown below: 3. Paste the copied CSS code from above in ‘Background Gradient’ section. 4. Similarly, generate the ‘Hover Gradient’ and paste the CSS in ‘Hover Gradient’ section. 5. Also, check the &#8220;Border Radius&#8221; setting. The default value is ‘0 px’, increasing this number will increase the amount of rounding on the corners. Sample output for the rounded corners when the ‘Border Radius’ is set to 10 px is as shown below: Note: In the above screenshot, ‘Submit Action’ button does not reflect the rounded corners because the style for this button has been overridden in #2 as explained at the beginning of this case. Hence, individual styling takes precedence over the global settings set in the NITRO Forms. 6. The applied changes can also be checked in real-time by selecting the edited theme under ‘Layouts and Theme’ section as shown below: Sample output after changing background and hover color in the ‘Global Settings’ of the NITRO Forms: More information about the themes can be found by referring to the below link: https://www.crowcanyon.info/nitro/appmanual_v2/themes.html How-To NITRO Studio- Forms About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "363",
    "name": "363 - How to configure Recurrence feature in SharePoint Online using Calendar list - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/363%20-%20How%20to%20configure%20Recurrence%20feature%20in%20SharePoint%20Online%20using%20Calendar%20list%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Configure Recurrence Feature In SharePoint Online Using Calendar List Crow Canyon Software",
    "text": "How to configure Recurrence feature in SharePoint Online using Calendar list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Contract Management , NITRO Studio- Workflows / How to configure Recurrence feature in SharePoint Online using Calendar list How to configure Recurrence feature in SharePoint Online using Calendar list 10460 views 1 min , 59 sec read 1 Applies To : SharePoint Online and On-premises Description There are many business scenarios where SharePoint list items need to be created based on Daily, Monthly, Yearly basis or based on specific dates. This is used for cases like recurring maintenance tasks for Assets, renewing Contracts etc. This functionality can be configured using Crow Canyon NITRO Workflows App. In this article, we have taken Tickets list as an example but this can be configured on any list using the Workflow Manager. We will create a recurring schedule list (Calendar list) and then configure a Scheduled workflow to get the recurring items created in the Tickets list. Calendar list has two functions: You can use the standard calendar feature to set the date of occurrence. This could be a one time occurrence or a recurring schedule. For example, if maintenance Ticket has to be created every month then enable the recurrence in the calendar item and set the schedule including end date or number of occurrences etc. While creating the maintenance Ticket, we need to put the required information in the Ticket. We will create additional columns in the Calendar list to hold this information and this is copied to the Ticket at the time of Ticket creation. Summary of Steps Create a Calendar List for recurrence and add columns to put the required information in the Tickets Workflow configuration for creating Tickets as per the recurrence/date specified in the calendar list items Detailed Steps List Schema for Calendar List Create a Calendar type list with name “Recurrence Schedule” (you can give a name of your choice) and create the columns that are used to create the ticket. We can use the calendar recurrence option to set the recurrence schedule for this ticket. Please go to &#8216;Site Contents&#8217; page of your site, click &#8216;add an app&#8217; and then search for &#8216;Calendar&#8217; type list and then create a new list of type &#8216;Calendar&#8217;: Columns to be created in the “Recurrence Schedule” list for this example: Field Internal Name Display Name Field Type Required TicketTitle Ticket Title Single line of text field Yes TicketCategory Ticket Category Lookup to Category list No TicketIssueType Ticket Issue Type Lookup to IssueType list No TicketDescription Ticket Description Multiline text No TicketPriority Ticket Priority Choice (Normal, Low, High`) TicketRequester Ticket Requester Person or group Yes RelatedAsset Related Asset Lookup to Assets list No Please note that above columns are just representative and you can add whatever columns are required as per your use case of creating recurrence items. These columns need to be used in the Workflow later for mapping to the Ticket items that will get created as per the recurring schedule. Sample screenshot for calendar item recurrence for monthly Tickets: &nbsp; Note : If you want to create maintenance Tickets on specific dates and not as per a recurring schedule then create items in the “Recurrence Schedule” list without checking &#8220;Recurrence&#8221; column. In this case you can specify the Start Time and End Time and put the date value for the date on which Ticket should be created. Create a separate item in “Recurrence Schedule” list for each specific date on which Ticket should be created &nbsp; Workflow Configuration Configure a “scheduled” workflow on Recurring Schedule list using our NITRO Workflows App. Create a workflow as shown below: &nbsp; Configure a “Create Item” action to create a ticket as shown below: View upcoming maintenance Tickets In order to view upcoming recurrence tickets, please go to the Calendar list and check for the next month calendar view. Sample screenshot for Calendar view for June: Calendar view for July: Calendar NITRO Workflows Recurrence Asset Management Contract Management NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "364",
    "name": "364 - Requester approval for resolved Ticket and auto close ticket if requester does not respond - Crow Ca.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/364%20-%20Requester%20approval%20for%20resolved%20Ticket%20and%20auto%20close%20ticket%20if%20requester%20does%20not%20respond%20-%20Crow%20Ca.html",
    "title": "Requester Approval For Resolved Ticket And Auto Close Ticket If Requester Does Not Respond Crow Ca",
    "text": "Requester approval for resolved Ticket and auto close ticket if requester does not respond - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Requester approval for resolved Ticket and auto close ticket if requester does not respond Requester approval for resolved Ticket and auto close ticket if requester does not respond 1222 views 1 min , 15 sec read 0 Applies to : SharePoint Online and SharePoint On-Premises Requirement Description: Send the resolution for requester approval before closing the ticket. Generally Assigned Staff is allowed to close the ticket directly, however, it is possible to configure such that resolution is sent to requester so requester can close the ticket from portal and/or can add comments and update the ticket. Summary of Steps: Configure required list schema Add &#8220;Resolved&#8221; status option to the &#8220;Request Status&#8221; choice column in Ticket list Create &#8220;Resolved Date&#8221; date time column in Tickets list Configure notification to Requester on ticket resolve and update resolved date on the ticket using Crow Canyon NITRO Workflow Manager Refer Article to send notification on ticket resolution and updates the Resolved Date on Ticket For mail template configuration, please follow &#8220;Mail template Configuration Steps&#8221; instructions under &#8220;Detailed Steps&#8221; below in this article Configure portal ticket edit form with custom action that is visible for only Resolved tickets Refer &#8220;Custom Action in Portal Forms&#8221; instructions under &#8220;Detailed Steps&#8221; below in this article Configure a workflow that auto closes the resolved ticket after &#8220;n&#8221; number of days of its resolved date Refer Article to auto close resolved tickets after &#8216;n&#8217; number of days. Detailed Steps: Mail template Configuration Steps: Copy the Tickets list forms URL from Portal Site. Go to Portal Site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Edit Tickets list forms &#8211;&gt; Form Settings and copy the URL like shown below Format the URL like shown below: Ex: https://crowcanyonsystemsinc.sharepoint.com/sites/demoSP20/NitroUpgrade/Portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets&amp;ItemID=[[ID || ID]] Next, configure the URL in mail template like shown below. &nbsp; Custom Action in Portal Forms Go to Portal Site &#8211;&gt; Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Edit Tickets list forms &#8211;&gt; Switch to Edit form &#8211;&gt; Add &#8220;Submit Action&#8221; button to the form. In Submit Action settings, add the below two lines of script code to the &#8220;Script Function&#8221; container and then click &#8220;Apply&#8221; button. Script: formContext.setColumnControlValueByName(\"RequestStatus\", \"Closed\"); functionCallback(); Configure permissions to show this button only when the &#8220;Request Status&#8221; is equal to &#8220;Resolved&#8221; Show: Hide: After configuring the permissions, click &#8220;Apply&#8221; button and publish the Ticket forms. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "365",
    "name": "365 - Send mail with unassigned Tickets information for a particular category to a group of people daily -.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/365%20-%20Send%20mail%20with%20unassigned%20Tickets%20information%20for%20a%20particular%20category%20to%20a%20group%20of%20people%20daily%20-.html",
    "title": "Send Mail With Unassigned Tickets Information For A Particular Category To A Group Of People Daily",
    "text": "Send mail with unassigned Tickets information for a particular category to a group of people daily - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Send mail with unassigned Tickets information for a particular category to a group of people daily Send mail with unassigned Tickets information for a particular category to a group of people daily 977 views Less than a minute 0 Applies to: SharePoint On-premises Description: This article describes the configurations required to send mail to a SharePoint group of people daily with the unassigned tickets summary information for a particular category. Summary of Steps: Create an associated item column &#8220;Related Unassigned Tickets&#8221; in Category list Configure a workflow that sends mail to SharePoint group with unassigned tickets details in mail body Detailed Steps: Create an associated item column &#8220;Related Unassigned Tickets&#8221; in Category list Go to Category list &#8211;&gt; List Settings &#8211;&gt; Create column &#8211;&gt; Create &#8220;Related Unassigned Tickets&#8221; column of type &#8220;Crow Canyon Associated Items&#8221; as shown below. Note: Unassigned Tickets view already present in Tickets list, if not we need to create one with a condition &#8220;Assigned Staff&#8221; is blank and &#8220;Request Status&#8221; is not equals to &#8220;Closed&#8221;. Please create index column for &#8220;Category&#8221; in Tickets list. 2. Configure a workflow that sends mail to SharePoint group with unassigned tickets details in mail body Create a Schedule Query workflow on &#8220;Category&#8221; list to send mail with details of unassigned ticket as shown in below screenshot. Query used in above screenshot: &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='Title'/&gt; &lt;Value Type='Text'&gt;Calendar&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; Note: In the above query, Title value can be modified based on the categories to consider. If we build query that qualifies multiple categories then it send notification for each category tickets separately. 2. Create &#8220;Send Mail&#8221; action in this scheduled query workflow as shown in below screenshot 3. Sample Mail Template configuration About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "367",
    "name": "367 - SharePoint list item is not getting saved on clicking “Save” button.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/367%20-%20SharePoint%20list%20item%20is%20not%20getting%20saved%20on%20clicking%20%E2%80%9CSave%E2%80%9D%20button.html",
    "title": "SharePoint List Item Is Not Getting Saved On Clicking “Save” Button",
    "text": "SharePoint list item is not getting saved on clicking “Save” button - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint list item is not getting saved on clicking &#8220;Save&#8221; button SharePoint list item is not getting saved on clicking &#8220;Save&#8221; button 2079 views 1 min , 22 sec read 0 Applies to: SharePoint Online and On-Premises Symptom: Unable to update or create new item. Nothing happened when we click &#8220;Save&#8221; button. Cause: If there are any required columns missing from the form, it does not allow saving the item. Resolution: In list settings, check if any columns are marked as &#8216;Required&#8217; but are not added to any of the tabs/sections in the form. If this is the case then add them to forms or mark them as optional. Go to Site Contents &#8211;&gt; List &#8211;&gt; List Settings &#8211;&gt; find the required columns that are not present in the tabs. Sample screenshot that shows the columns in the list that are marked as required: 2. Also if the &#8216;Content Types&#8217; are enabled for the list, open each content type and find the columns with status as &#8216;Required&#8217; but are not added to the the tabs/sections. Please refer images below: Go to List &#8211;&gt; List Settings &#8211;&gt; Content Types &#8211;&gt; Click Content type &#8211;&gt; find the columns with status as &#8216;Required&#8217;: &nbsp; Steps to add a column to the tabs/sections: For SP Online: If list forms are using &#8216;Crow Canyon Forms Manager&#8217;: Go to Application Administration &#8211;&gt; Crow Canyon Apps &#8211;&gt; Crow Canyon Forms Manager &#8211;&gt; Select the list -&gt; Edit the tab and add the column to the tab If list forms are using &#8216;Crow Canyon Nitro Forms&#8217;: Go to Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; Select the list &#8211;&gt; New Form and Edit Form &#8211;&gt; Drag and drop the column on to the form For SP On-Premises: If list forms are using &#8216;Crow Canyon Forms Manager&#8217;: Go to List Settings &#8211;&gt; Crow Canyon Tabs and Tab Permissions &#8211;&gt; Edit the tab and add the column to the form If list forms are using &#8216;Crow Canyon Nitro Forms&#8217;: Go to List Settings &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; New Form and Edit Form &#8211;&gt; Drag and drop the column on to the form. Steps to make the column optional: Go to List Settings &#8211;&gt; Open the column and remove the required column settings and save. To make the column optional in content type, go to List &#8211;&gt; List Settings &#8211;&gt; Content Types &#8211;&gt; Click Content type &#8211;&gt; Edit the column and make the column as optional if not required About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "368",
    "name": "368 - Troubleshooting Excel to SharePoint Tool.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/368%20-%20Troubleshooting%20Excel%20to%20SharePoint%20Tool.html",
    "title": "Troubleshooting Excel To SharePoint Tool",
    "text": "Troubleshooting Excel to SharePoint Tool - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Excel to SharePoint Tool Troubleshooting Excel to SharePoint Tool 3329 views 2 min , 21 sec read 13 Applies To SharePoint On-Premises and SharePoint Online Description This article lists the fixes for common issues in Excel to SharePoint tool Missing SharePoint dependency Dlls Authentication issue for O365 tenancy Multifactor authentication for the SharePoint site Duplicate columns in the excel sheet Excel tool crashes on clicking Load button 1.Missing SharePoint dependency Dlls Error 1 Details “System.NotSupportException” error message appears in the “Excel to SharePoint Import” tool on clicking the “Load” button. See screenshots section below. Error 2 Details: System.IO.FileNotFoundException: Could not load file or assembly &#8216;Microsoft.SharePoint.Client.Runtime, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c&#8217; or one of its dependencies. Cause Missing dependency assembly files in the “Excel to SharePoint Import” tool package Resolution Please make sure that the dependency assembly files (Microsoft.SharePoint.Client.dll and Microsoft.SharePoint.Client.Runtime.dll) present in the same folder where the “Excel to SharePoint Tool” exists. Dependency assemblies are part of the package shared and they should present in the same folder where the tool present. We can find the latest tool with dependency assembly file in below article: https://www.crowcanyon.help/article/204/ 2.Authentication issue for O365 tenancy Error Details “Cannot connect web site or the web sites does not support SharePoint Online Credentials” error message on clicking “Load” button. Log text box may show “System.ArgumentNullException” error message. See Screenshot below. Cause This error may occur if the new (Modern) authentication model is enabled for the site and the legacy authentication mode is disabled. Resolution Enable the Legacy authentication to the SharePoint Online site and retry. To check which authentication model that is being used by the site, please follow below instructions: Download and Install SharePoint Online Management Shell on your desktop. Open “SharePoint Online Management Shell” as Administrator and run below commands one by one to understand whether legacy authentication is enabled or not (See sample screenshot in Screenshots section). Connect-SPOService –Url “https://xxxxxx-admin.sharepoint.com” $tenantSettings = Get-SPOTenant $tenantSettings.LegacyAuthProtocolsEnabled If the legacy authentication is disabled, we need to enable it to use our tool. To enable the legacy authentication mode, start “SharePoint Online Management Shell” as Administrator and run below commands one by one. Connect-SPOService –Url “https://xxxxxx-admin.sharepoint.com” $tenantSettings = Get-SPOTenant $tenantSettings.LegacyAuthProtocolsEnabled Set-SPOTenant -LegacyAuthProtocolsEnabled $true Re open the SharePoint Management Shell and retry #2 and make sure the legacy authentication is enabled. See sample screenshot below For more details on “LegacyAuthProtocolsEnabled”, please refer the article https://docs.microsoft.com/en-us/powershell/module/sharepoint-online/set-spotenant?view=sharepoint-ps 3.Multi factor authentication for SharePoint site Error Details Excel To SharePoint Tool doesn’t load the Target list related fields and results in an error “System.Net.WebException: The request failed with an empty response” in the log. See sample screenshot below Cause Multi-factor authentication is enabled for the SharePoint Site Resolution Please refer below link to Allow users to create app passwords to sign into non-browser applications and import the data again using app password in our tool. https://support.office.com/en-us/article/Set-up-multi-factor-authentication-for-Office-365-users-8f0454b2-f51a-4d9c-bcde-2c48e41621c6 4. Duplicate columns in the excel file Exception details System.ArgumentException: An item with the same key has already been added. at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource) at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add) at CrowCanyon.ExcelToSharePointTool.Form1.ImportDataFromExcelFile(Dictionary`2 mappingFields, Dictionary`2 spFieldsAndTypes, String listName, String serverURL, String userName, String password, String[] titlesArray, String[,] valuesArray, OperationMode opMode) at CrowCanyon.ExcelToSharePointTool.Form1.GenerateItemsThread() Cause Duplicate columns present in the excel file Fix Remove the duplicate column from excel sheet and re-run the Crow Canyon Excel to SharePoint import tool 5. Excel tool crashes on clicking Load button Issue On Clicking Load button in Excel, tool crashes with message: “CrowCanyon.ExcelToSharePointTool has stopped working”. Error image is shown below. Cause This can happen if the tool is blocked as it came from another computer/source to help protect the PC. Resolution Go to the folder where the excel tool binary is located. Right Click on Excel to SharePoint Tool (CrowCanyon.ExcelToSharePointTool.exe) &#8211;&gt; Properties &#8211;&gt; General Tab &#8211;&gt; Unblock the tool and click on Apply. After this step, run the Excel to SharePoint tool (run as Administrator) and it should work as expected. Excel to SharePoint Tool Troubleshooting About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "369",
    "name": "369 - Troubleshooting Crow Canyon Lansweeper Integration Web Part.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/369%20-%20Troubleshooting%20Crow%20Canyon%20Lansweeper%20Integration%20Web%20Part.html",
    "title": "Troubleshooting Crow Canyon Lansweeper Integration Web Part",
    "text": "Troubleshooting Crow Canyon Lansweeper Integration Web Part - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Crow Canyon Lansweeper Integration Web Part Troubleshooting Crow Canyon Lansweeper Integration Web Part 2058 views Less than a minute 0 Applies To: SharePoint On Premises Error: Lansweeper integration stops working and Last Sync Date doesn&#8217;t update. Assets will not be updated as per the configuration. Error appears in the lansweeper log file (LSIntegrationJobLog.txt) like below &#8220;[ERROR] CCSLSJob: Connection Failed!, Error Message: Login failed for user &#8216;lansweeperuser'&#8221;. Also we see the same error in the SharePoint UI in the web part. See sample error screenshot below &nbsp; Cause: Password for the lansweeper user configured in the Crow Canyon lansweeper webpart might be changed recently in the SQL Server and the same is not updated in the web part page. Resolution: Take screenshot of all the settings in the lansweeper integration web part page. When the latest password is entered and clicked on Connect, all the configurations will be lost and we need to configure the lansweeper settings again referring to the screenshot that was taken earlier and save the configuration in the lansweeper web part page. Also make sure the user is able to connect to SQL Server with the same credentials. Lansweeper Troubleshooting About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "37",
    "name": "37 - Troubleshooting Portal forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/37%20-%20Troubleshooting%20Portal%20forms.html",
    "title": "Troubleshooting Portal Forms",
    "text": "Troubleshooting Portal forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Power Portal / Troubleshooting Portal forms Troubleshooting Portal forms 2448 views 1 min , 32 sec read 0 Applies To Crow Canyon NITRO activated sites in: SharePoint On-Premises 2013/2016/2019 Service Request applications/SharePoint Server Subscription Edition Description This article lists the common issues and fixes that occur in Crow Canyon Portal Forms. Lookup column is not populating any values Logged-in user attributes are not auto-populated in Ticket columns Lookup column is not populating any values Issue Though the Lookup list has items in the Back-end site, the lookup column in the portal form is not populating any values. Possible Cause 1 Check if any filter is configured for the lookup column. Resolution Go to Portal Settings, Edit desired list forms, choose the desired form (new/edit), click on &#8220;Lookup settings&#8221; under &#8220;Advanced&#8221; section in left hand side panel, edit the desired lookup column, verify the &#8220;Cascaded Lookup Settings&#8221;. Remove the filter on the lookup column if not needed and check the result. Sample filter condition screenshot below. Possible Cause 2 User does not have at least read permissions on the lookup list Resolution Go to the back end site, open the lookup list &#8211;&gt; list settings &#8211;&gt; permissions for this list &#8211;&gt; grant at least read permissions to the desired group of users. To validate the user permissions before granting, go to lookup list settings, permissions for this list, open &#8220;Permissions&#8221; in ribbon, click &#8220;Check permissions&#8221; and verify the permissions (Sample screenshot below) Logged-in user attributes are not auto-populated in Ticket columns In Crow Canyon Service Request applications, Requester user column and other attributes like Requester Email, Phone and Department etc. are auto-populated when user opens the new Ticket form. This information is fetched based on logged-in user from SharePoint User Information list (SP On-premises) or SharePoint user profile (SP Online). Issue User attributes (Email, Phone and Department etc.) are not getting populated in Portal new form Cause This can happen if the logged-in user doesn’t have permissions on SharePoint User information list. Resolution Option 1: If you are using server version of SharePoint On-premises (that is, not SharePoint Foundation), then you can switch to SharePoint user profile for fetching the user information. Please ensure that user profile sync service is configured, and latest user information is available in the user profiles. Please refer this article to configure auto fill settings in NITRO Forms. Option 2: Grant read permission to everyone on SharePoint User Information List. You can use this option if using SharePoint foundation version or user data is not available in SharePoint user profiles. Instructions Go to root site of the site collection where portal is installed -&gt; Site Settings -&gt; People and Groups -&gt; Change the group membership Id to “0” in the URL, as shown below: Next, go to List settings -&gt; Permissions for this list and grant read permission to everyone. Portal Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Building an Application Portal Using Web Parts NITRO Studio Workshop: Evolution of NITRO Portals Introduction to Power Portals in NITRO Studio Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "371",
    "name": "371 - Troubleshooting Portal forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/371%20-%20Troubleshooting%20Portal%20forms.html",
    "title": "Troubleshooting Portal Forms",
    "text": "Troubleshooting Portal forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Power Portal / Troubleshooting Portal forms Troubleshooting Portal forms 2448 views 1 min , 32 sec read 0 Applies To Crow Canyon NITRO activated sites in: SharePoint On-Premises 2013/2016/2019 Service Request applications/SharePoint Server Subscription Edition Description This article lists the common issues and fixes that occur in Crow Canyon Portal Forms. Lookup column is not populating any values Logged-in user attributes are not auto-populated in Ticket columns Lookup column is not populating any values Issue Though the Lookup list has items in the Back-end site, the lookup column in the portal form is not populating any values. Possible Cause 1 Check if any filter is configured for the lookup column. Resolution Go to Portal Settings, Edit desired list forms, choose the desired form (new/edit), click on &#8220;Lookup settings&#8221; under &#8220;Advanced&#8221; section in left hand side panel, edit the desired lookup column, verify the &#8220;Cascaded Lookup Settings&#8221;. Remove the filter on the lookup column if not needed and check the result. Sample filter condition screenshot below. Possible Cause 2 User does not have at least read permissions on the lookup list Resolution Go to the back end site, open the lookup list &#8211;&gt; list settings &#8211;&gt; permissions for this list &#8211;&gt; grant at least read permissions to the desired group of users. To validate the user permissions before granting, go to lookup list settings, permissions for this list, open &#8220;Permissions&#8221; in ribbon, click &#8220;Check permissions&#8221; and verify the permissions (Sample screenshot below) Logged-in user attributes are not auto-populated in Ticket columns In Crow Canyon Service Request applications, Requester user column and other attributes like Requester Email, Phone and Department etc. are auto-populated when user opens the new Ticket form. This information is fetched based on logged-in user from SharePoint User Information list (SP On-premises) or SharePoint user profile (SP Online). Issue User attributes (Email, Phone and Department etc.) are not getting populated in Portal new form Cause This can happen if the logged-in user doesn’t have permissions on SharePoint User information list. Resolution Option 1: If you are using server version of SharePoint On-premises (that is, not SharePoint Foundation), then you can switch to SharePoint user profile for fetching the user information. Please ensure that user profile sync service is configured, and latest user information is available in the user profiles. Please refer this article to configure auto fill settings in NITRO Forms. Option 2: Grant read permission to everyone on SharePoint User Information List. You can use this option if using SharePoint foundation version or user data is not available in SharePoint user profiles. Instructions Go to root site of the site collection where portal is installed -&gt; Site Settings -&gt; People and Groups -&gt; Change the group membership Id to “0” in the URL, as shown below: Next, go to List settings -&gt; Permissions for this list and grant read permission to everyone. Portal Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Building an Application Portal Using Web Parts NITRO Studio Workshop: Evolution of NITRO Portals Introduction to Power Portals in NITRO Studio Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "372",
    "name": "372 - How to insert the placeholders of list columns in the Workflow Manager condition builder - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/372%20-%20How%20to%20insert%20the%20placeholders%20of%20list%20columns%20in%20the%20Workflow%20Manager%20condition%20builder%20-%20Crow%20Cany.html",
    "title": "How To Insert The Placeholders Of List Columns In The Workflow Manager Condition Builder Crow Cany",
    "text": "How to insert the placeholders of list columns in the Workflow Manager condition builder - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Workflows / How to insert the placeholders of list columns in the Workflow Manager condition builder How to insert the placeholders of list columns in the Workflow Manager condition builder 2894 views 1 min , 7 sec read 0 Applies To: SharePoint On Premises and SharePoint Online Description: In Workflow Manager conditions we frequently compare the list column values with some fixed value or expression. For example, if value of &#8216;Priority&#8217; column is &#8216;High&#8217; or if &#8216;Due Date&#8217; is greater than &#8216;Today&#8217; date value. In some scenarios, we need to compare the value of a list column with another column of the list item. For example, we want to check if item is created by same user who is currently the user to whom Ticket is assigned (compared &#8216;Created By&#8217; column with &#8216;Assigned Staff&#8217; column value). This may be required at the Workflow level or at the action level. In such case we need to use the column placeholders for the value part in conditions as described below: Column placeholder has this syntax: [Display name of column|Internal name of column] You can directly put this syntax in condition or you can use below steps to get the place holder value: In the above example screenshot, we are allowing the workflow execution only if &#8220;Created By&#8221; is not equal to &#8220;Assigned Staff&#8221;. We have selected the &#8220;Created By&#8221; in left drop down and for place holder to insert in right side text box, start configuring a dummy &#8220;Create Item&#8221; action and click on add field mappings to get the column placeholders. See sample screenshot below. Select the desired column (Assigned Staff in our example) from the bottom list box, click &#8220;Add Placeholder to Value&#8221;, this inserts the place holder in &#8220;Column Value&#8221; text box. Copy the whole place holder text, cancel the dummy action, and paste the place holder in the desired condition setting in condition builder. Different type of placeholders/values used in conditions: Possible Value Syntax Example Literal/Custom Values Column Value Resolved Place Holders [Column Display Name|Column Internal Name] [Request Status|RequestStatus] Query List QueryListActionName##[Column Display Name|Column Internal Name] GetApprovalLevel##[Approval Level|ApprovalLevel] Variables VariableName##Value VarTicketID##Value Functions Syntax will be based on function used in condition. $add([Due Date|DueDate],[Created|Created]) Content Types Content Type Name Issue Type NITRO Workflows NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "373",
    "name": "373 - How to update “Total Maintenance Cost” in Asset based on its related maintenance tasks sub total - C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/373%20-%20How%20to%20update%20%E2%80%9CTotal%20Maintenance%20Cost%E2%80%9D%20in%20Asset%20based%20on%20its%20related%20maintenance%20tasks%20sub%20total%20-%20C.html",
    "title": "How To Update “Total Maintenance Cost” In Asset Based On Its Related Maintenance Tasks Sub Total C",
    "text": "How to update “Total Maintenance Cost” in Asset based on its related maintenance tasks sub total - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Equipment Management , NITRO Studio- Workflows / How to update &#8220;Total Maintenance Cost&#8221; in Asset based on its related maintenance tasks sub total How to update &#8220;Total Maintenance Cost&#8221; in Asset based on its related maintenance tasks sub total 3724 views 1 min , 8 sec read 2 Applies To: SharePoint On Premises and SharePoint Online Description: In our Asset Management Module we have a field &#8220;Total Maintenance Cost&#8221; in &#8220;Assets&#8221; list. Also we have maintenance tasks that will be created periodically based on the scheduled preventive maintenance feature for the assets. This article describes how to update &#8220;Total Maintenance Cost&#8221; in Asset with the sum of its related maintenance tasks cost. Summary of Steps: Configure a workflow on &#8220;Tasks&#8221; list on &#8220;an item is created&#8221; event that finds all the related tasks and update the total cost. Configure a workflow on &#8220;Tasks&#8221; list on &#8220;an item is modified&#8221; event that finds all the related tasks and update the total cost. Detailed Steps: Configure a workflow on &#8220;Tasks&#8221; list on &#8220;an item is created&#8221; event that finds all the related tasks and update the total cost. Step 1: Open Workflow manager and configure a new workflow on &#8220;Tasks&#8221; list on &#8220;Item is created&#8221; event as shown below Step 2: Configure a Query List Action as shown below Query used in above action: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='Asset' LookupId='TRUE' /&gt; &lt;Value Type='Lookup'&gt;##Asset##&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; &nbsp; Step 3: Configure an &#8220;Update Item&#8221; actin to update the &#8220;Total Maintenance Cost&#8221; for the Asset list as shown below Column Value in the above field mapping: &lt;&lt;todo&gt;&gt; Syntax: QueryListActionName##$sum(Task Cost from tasks columns) The above field mapping is build using the &#8220;Column Mapping&#8221; dialog as shown below. With the above workflow configuration, on every task creation, it fetches all the related tasks for the asset, sums up all the related task cost and updates in the Total Maintenance Cost. 2. Configure a workflow on &#8220;Tasks&#8221; list on &#8220;an item is modified&#8221; event that finds all the related tasks and update the total cost. Configure another workflow on “an item is modified” event (See sample screenshot below) on “Tasks” list with same actions settings as above. Maintenance NITRO Workflows Asset Management Equipment Management NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "374",
    "name": "374 - Functionality of multiple forms on same SharePoint list in Crow Canyon NITRO Forms and Portal - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/374%20-%20Functionality%20of%20multiple%20forms%20on%20same%20SharePoint%20list%20in%20Crow%20Canyon%20NITRO%20Forms%20and%20Portal%20-%20Crow.html",
    "title": "Functionality Of Multiple Forms On Same SharePoint List In Crow Canyon NITRO Forms And Portal Crow",
    "text": "Functionality of multiple forms on same SharePoint list in Crow Canyon NITRO Forms and Portal - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Functionality of multiple forms on same SharePoint list in Crow Canyon NITRO Forms and Portal Functionality of multiple forms on same SharePoint list in Crow Canyon NITRO Forms and Portal 4211 views 5 min , 34 sec read 1 Applies to: SharePoint online and On-Premises Description Every SharePoint list has three forms: New, Edit and Display. These are used to create a new item in list, edit an existing item and see the details of an existing item respectively. In NITRO terminology a combination of these three is called a &#8216;Form&#8217;. NITRO allows multiple &#8216;Forms&#8217; on a list with each having its own set of form features such tabs/sections, columns, validations, permissions, lookup and associated list settings, e-signature etc. That is, on the same underlying list and columns we can have different types of forms as per the business requirement. Within each &#8216;Form&#8217;, we can use a single configuration to define the New, Edit and Display forms. If there are slight variations then column permissions can be used to differentiate the forms. For example, a tab can be hidden from the New form by using the condition &#8216;ID is Empty&#8217; if rest of the tabs and fields are same for all three. Alternatively, we can create separate configuration for New/Edit/Display forms for the same &#8216;Form&#8217; if there is significant difference in the form layout or functionality. For New/Edit/Display, we can use the NITRO system designed form that just includes all the visible fields in a simple layout or use the custom design to define the form as required with all the features mentioned above. In this article, we have described different possible scenarios and also sample use cases. &nbsp; Typical Scenarios S. No. Form Configuration Description 1 Single &#8216;Form&#8217; with same form for New/Edit/Display and using Custom Design This is the most common scenario where standard SharePoint forms are replaced with NITRO forms for enhanced functionality. It is used where list items are essentially of same type and can be managed with a single form. If any variation is required on the form based on the item data, then that is done using column and tab level permissions 2 Single &#8216;Form&#8217; with same form for New/Edit/Display and using System Design This can be used for simple lists with few fields. Here system designed simple form is sufficient and extra features are not required. This can be used in cases like Associated Items. For example when creating associated Tasks for a Ticket 3 Single &#8216;Form&#8217; with different form for New/Edit/Display and using Custom Design If there is significant difference between New/Edit/Display forms then it is better to design separate forms. Advantage of this approach is that each form can have a totally different set of form features (like tabs, columns, permissions etc.). Though, this can be achieved with use of conditions in column and tab permissions, having separate forms gives more flexibility and keeps the form configurations simple. However, if you make a change in say New form and need the same change in Edit form as well, then you will need to change configurations for both forms separately 4 Multiple &#8216;Form&#8217;s with same/different form for New/Edit/Display and using Custom Design This is required when same list is used to store different types of items. These items will have few common attributes and many different attributes that will depend on the type of item. For e.g. in a Request Management solution, same &#8216;Request&#8217; list is used to store substantially different types of requests like a request for name correction vs. an related to salary. Here different set of New/Edit/Display forms can be created for different types of requests. Layout and columns shown in the forms will be as per the data required for the specific request types. Within each request type, same or different forms can be used for New/Edit/Display depending on how much variation is required in these forms. Please note that, NITRO Forms automatically uses the correct form to edit and display the item depending on which form was used to create the item 5 Associated Items NITRO Forms support showing the associated or linked items on the Form. For example, for a Task list with lookup to Request list, the Request item form can show all the related Tasks associated with current request item. Also, new Tasks can be created for current item and existing ones edited. If you need a separate form for Tasks list for this scenario, then configure a new Form for Task list with required configurations and specify it in the associated item settings of Request list form. Important things to note Every list has default Form with the name of the list. In Nitro/Portal forms, list items will be opened in the same Form that is used to create them Every Form has its own unique identifier. This unique identifier is saved in the item when it is created from the particular New form. When opening the item in Display/Edit form, this identifier is used to open in corresponding form In case there is no Form with the saved identifier, then default Form is used to open the item (scenarios like Form is deleted after creating some items using that Form) Please note that for a list, we need to use same Form name in Portal and back end NITRO Forms settings to ensure that the end users and technicians are seeing the correct forms If we create an item in Portal with a form key which is not configured in back end forms for same list, then in back end site item will be opened with default Form &nbsp; Create multiple &#8216;Forms&#8217; To create multiple &#8216;Forms&#8217;, go to Nitro Forms/Portal Forms &#8211;&gt; &#8220;Manage Forms&#8221; button in ribbon &#8211;&gt; Click &#8220;+New Form&#8221; button to create new Form &nbsp; &nbsp; After creating new Form, we can customize the forms (New/Display/Edit) as per the requirement. &nbsp; Different areas to consider the form selection to open an existing item when there are multiple forms 1. Portal list views In Portal List view page configurations, we can select the Display form and Edit form page settings in page actions sections. Go to Portal Site &#8211;&gt; Portal Settings &#8211;&gt; Portal Pages &#8211;&gt;List View Page For example we have two Forms G1 and G2. If we create item using G1 Form new form, the item will be always opened with G1 Form display/edit forms irrespective of the configurations in view settings. This view settings will be considered only if the G1 related display/edit forms are not available. Also if the ticket is created in back end and if we are opening it from Portal then also the configured Form will be opened if the similar Form key does not exist in portal forms. 2. Edit button in display form Edit button from item display form will open the default Form that is used for created them. 3. Associated Items We can select the Form from associated item column settings (see screenshot below). Go to Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; Edit the list forms &#8211;&gt; Associated item Settings How to create new item links for different forms in portal (quick links, top links) and back end (quick launch)? In Portal Site Portal Top link creation 1. Copy the new Form URL and create links in Menu sections To copy the new Form URL, Go to Portal Settings &#8211;&gt; Portal Forms &#8211;&gt; click on &#8220;Manage Forms&#8221; in the ribbon &#8211;&gt; click on copy URL as shown below &nbsp; Next, go to Portal Settings &#8211;&gt; Common UI Settings &#8211;&gt; New Menu Item link &#8211;&gt; Select URL type as &#8220;Other&#8221; and paste the copied URL and save settings Quick Tile configuration Copy the new Form URL, refer instructions in Portal Top link creation section to copy the desired form URL Go to Portal Settings &#8211;&gt; Home page settings &#8211;&gt; Quick Links &#8211;&gt; Click on New Tile under Configure Tiles section &#8211;&gt; In Back end site Copy the new Form URL and Configure the URL in Quick Launch Go to List Settings &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; Select the form under &#8220;Select a form to design&#8221; &#8211;&gt; Forms Settings and copy the URL Next, create new quick launch link Go to Site Settings &#8211;&gt; Quick Launch links &#8211;&gt; Configure the new link How to make a form as default Form? By default any list come up with one default Form with the name of the list and there is no way to make other Form as default. How to configure such that &#8220;Use a specific form to create item from Crow Canyon Custom Actions but the created item should always be opened with default form&#8221;? Go to back end site &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Custom Action settings &#8211;&gt; Edit the Custom Action &#8211;&gt; Edit the Add Item action and unselect the check box &#8220;Use this Form to display/edit item from the site&#8221; and save the settings such that irrespective of the Form used to create the item from custom action, it always opens with default Forms. Sample Use Cases 1. There are three different departments and each department has its own set of columns in addition to common columns. To make the separation of departments, we can configure multiple forms Use Crow Canyon NITRO Forms and configure different desired Forms. 2. How to provide the validations ability in Crow Canyon Custom Actions? In Custom Actions, it is not possible to make the column as required. If we would like to make the column as required in Custom actions (Update Item actions), we can configure new Form and add the required columns to form and set the column as required in the form. Select the configured Nitro form in Custom Actions update item action. Similarly, we can configure any desired validations in the new Forms and invoke the form from custom action. Go to Custom Actions settings &#8211;&gt; Edit Update list Item action&#8211;&gt; Select the configured Nitro form with desired validations in the settings. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "375",
    "name": "375 - How to create new item from an existing item in Portal_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/375%20-%20How%20to%20create%20new%20item%20from%20an%20existing%20item%20in%20Portal_.html",
    "title": "How To Create New Item From An Existing Item In Portal",
    "text": "How to create new item from an existing item in Portal? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create new item from an existing item in Portal? How to create new item from an existing item in Portal? 1211 views 1 min , 19 sec read 0 Applies to: SharePoint Online and On-Premises Description: This article describes about configurations to create new item from existing ticket in Portal site. Summary of Steps: Configure a custom action &#8220;Copy Item&#8221; with &#8220;Create Item&#8221; function in back end site. Configure portal form with &#8220;Create Item&#8221; action button and invoke the &#8220;Copy Item&#8221; custom action. Detailed Steps: Configure a custom action &#8220;Copy Item&#8221; with &#8220;Create Item&#8221; function in back end site This action creates a new item with the values from the existing item. Columns to copy new item are configurable in &#8220;Create Item&#8221; function. Go to Tickets list &#8211;&gt; list Settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; Configure &#8220;Copy Item&#8221; custom actions as shown below Custom action: Add List Item: 2. Configure portal form with &#8220;Create Item&#8221; action button and invoke the &#8220;Copy Item&#8221; custom action. This step adds a new button in portal Ticket’s display form that allows creating a new ticket from an existing ticket. We can add desired conditions so this button appears based on the existing ticket state. In Display Form: Go to Portal Site &#8211;&gt; Portal Forms &#8211;&gt; Edit Tickets list forms &#8211;&gt; Switch to Display form &#8211;&gt; Drag and drop the “Custom Action” action button on to the form at a desired position &#8211;&gt; Rename the “Button Title” to desired value and select the “Copy Item” custom action (i.e. configured in above step) from the dropdown under “Action Settings” section and Click Apply (See screenshot below). In Edit Form: We can configure this &#8220;Create Item&#8221; action button in portal Ticket&#8217;s edit form as well. Go to Portal Site &#8211;&gt; Portal Forms &#8211;&gt; Edit Tickets list forms &#8211;&gt; Switch to Edit form &#8211;&gt; Drag and drop the &#8220;Submit Action&#8221; button on to the form at a desired position &#8211;&gt; Rename the &#8220;Button Title&#8221; to desired value and select the &#8220;Copy Item&#8221; custom action (i.e. configured in the above step) from the dropdown under &#8220;Action Settings&#8221; section and click Apply (see screenshot below) Additional Configuration: For example, if we would like to show this “Copy Item” custom action button only for the Closed tickets, then we can configure permissions for the action button. Select the button, go to permissions section, add two permission, “show when Request Status equal to Closed” and “hide when Request Status not equal to Closed”. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "376",
    "name": "376 - Add ‘Main Category’ to filter Category values in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/376%20-%20Add%20%E2%80%98Main%20Category%E2%80%99%20to%20filter%20Category%20values%20in%20NITRO%20Forms.html",
    "title": "Add ‘Main Category’ To Filter Category Values In NITRO Forms",
    "text": "Add ‘Main Category’ to filter Category values in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Forms , Power Portal / Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms 2899 views 1 min , 31 sec read 5 Applies To SharePoint On-Premises and SharePoint Online Description Usually in our application, we have &#8220;Category&#8221; and &#8220;Issue Type&#8221; in the Ticket forms. Here Issue Type values get filtered based on selected Category. In some cases we require an additional filter at the top level to get the Category values filtered. In this article, we will call this top level filter column as &#8216;Main Category&#8217;. When this Main Category value is changed, it filters the Category values. This article lists the steps to add this feature. Please note that in certain cases you may add third level at the bottom, that is, it will be like a &#8216;Sub Issue Type&#8217; that will get filtered based on the selected Issue Type. You can apply the same technique as explained in this article, that is create the new column and filter it based on the parent column Issue Type. Summary of Steps Create a custom list (Main Category) and populate the required values in the Title field Configure a lookup column in Tickets list pointing to Title field of &#8220;Main Category&#8221; list Configure a new lookup column in &#8220;Category&#8221; list pointing to Title field of &#8220;Main Category&#8221; list Add the Main Category field to the Ticket and Category list forms to be displayed above the &#8220;Category&#8221; field Configure the cascaded lookup settings for the &#8220;Category&#8221; column to get filtered based on the selection of &#8220;Main Category&#8221; (for both Tickets and Category lists) Detailed Steps Go to Site Contents &#8211;&gt; Add an app &#8211;&gt; Add a custom list &#8211;&gt; name it as per the requirement. In this article we are assuming &#8220;Main Category&#8221; as the list name. Go to &#8220;Tickets&#8221; list &#8211;&gt; List settings &#8211;&gt; Create a lookup column pointing to &#8220;Title&#8221; field of the &#8220;Main Category&#8221; list. See Sample screenshot below Similar to #2 above, go to &#8220;Category&#8221; list &#8211;&gt; List settings &#8211;&gt; Create a lookup column pointing to Title field in the Main Category list. Go to Tickets list &#8211;&gt; List settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; select the list form (New/Edit) and add the Main Category Column to the list form at the required position. Go to create column button and click on &#8216;Create Lookup Column&#8217; to filter Category based on selection of &#8220;Main Category&#8221;. See sample screenshot below: With the above configurations, three level filtering will be done in the backend forms. If the same three level filtering is to be implemented in the portal forms as well, repeat #4 and #5 in the NITRO Forms for the Portal site. Go to Portal site &#8211;&gt; Portal Setting &#8211;&gt; Portal forms &#8211;&gt; Edit the required list form and configure the lookup setting as needed. Main Category NITRO Forms Portal Three level filter NITRO Studio- Forms Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: NITRO on the Go! NITRO Studio Workshop: Deep Dive into NITRO Forms Active Directory Groups integration with NITRO Using Form Event Actions on auto-populated lookup column Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "377",
    "name": "377 - How to configure and apply custom theme using Crow Canyon Branding_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/377%20-%20How%20to%20configure%20and%20apply%20custom%20theme%20using%20Crow%20Canyon%20Branding_.html",
    "title": "How To Configure And Apply Custom Theme Using Crow Canyon Branding",
    "text": "How to configure and apply custom theme using Crow Canyon Branding? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How-To , NITRO Studio- Branding / How to configure and apply custom theme using Crow Canyon Branding? How to configure and apply custom theme using Crow Canyon Branding? 2933 views Less than a minute 1 Applies to: SharePoint online and On-Premises Description: This article describes about how to configure custom themes and apply the same for the sites. By default Crow Canyon provides five different themes listed below. Crow Canyon Mustard Theme Crow Canyon Black Theme Crow Canyon Green Theme Crow Canyon Yellow Theme Crow Canyon Blue Theme To get started with custom branding, we can start with any of the CSS file above except #1 and #2. Mustard and Black themes are not supported for customization. Summary of Steps: Apply default branding to the Site Configuring Custom Theme Detailed Instructions 1. Apply default branding to the Site To configure custom theme, first apply the branding for the site with any of the customization supported default Crow Canyon themes with default quick launch type. Go to the Site &#8211;&gt; Site Settings &#8211;&gt; Crow Canyon Branding &#8211;&gt; Select the theme (ex: Blue Theme) and select the type of quick launch as &#8220;Default&#8221; and click apply. It will create a CSS file at Site Contents &#8211;&gt; Site Assets &#8211;&gt; CCS &#8211;&gt; Branding. 2. Configuring Custom Theme Download the created CSS file in the above step from the below location. Go to Site Contents &#8211;&gt; Site Assets &#8211;&gt; CCS &#8211;&gt;Branding &#8211;&gt; Download the &#8220;BlueTheme.css&#8221; file and make changes to the css as needed and save the file with a different name. Upload this file in &#8220;Custom Theme&#8221; tab under &#8216;Upload Custom Themes&#8217; section (Screenshot below) After uploading, an entry gets created under &#8216;Select a theme&#8217; section for newly uploaded theme (Sample screenshot below) Now apply custom theme on the site by selecting this custom theme along with a quick launch style. For more details, please refer Branding App at https://www.crowcanyon.info/nitro/appmanual_v2/ . Branding How-To NITRO Studio- Branding About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "378",
    "name": "378 - Configure rich print templates using Crow Canyon Print Manager App.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/378%20-%20Configure%20rich%20print%20templates%20using%20Crow%20Canyon%20Print%20Manager%20App.html",
    "title": "Configure Rich Print Templates Using Crow Canyon Print Manager App",
    "text": "Configure rich print templates using Crow Canyon Print Manager App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure rich print templates using Crow Canyon Print Manager App Configure rich print templates using Crow Canyon Print Manager App 2475 views 5 min , 56 sec read 4 Applies to: SharePoint online Description This article lists some advanced configurations for rich print templates for SharePoint list items using Crow Canyon Print Manager App. How to print without Page URL at the bottom of the Print page? How to insert base64 image in Rich text control type print template? How to show associated items in Print template? How to show “$ Sign” print for currency type columns in associated items summary? How to configure such that information comes in left most and right most in the same row like letter format? How to show the Summary of associated items with normal font instead of bold? How to configure print template so that the maximum content comes into single page? How to generate the PDF that matches with print as it is? How to print conditional column values? Multiple choice column does not allow adding own value with new line separation. How to configure such that one can enter own values in notes column along with predefined options selection in multi-choice column control? How to configure print settings such that it shows both column values together as a single column value? Set default width for all columns in associated items column grid in item print template Steps to add a page beak in list print There are multiple options to configure print templates for list items, to configure the rich print template (sample screenshot below) we choose &#8220;Rich Text Control&#8221; option in print template settings. Note: For custom JavaScript based print content modifications please refer this article . Screenshot#1: Sample Print Item Output How to print without Page URL at the bottom of the Print page? Open the display form of the item and click Print button &#8211;&gt; More settings &#8211;&gt; Options &#8211;&gt; disable the &#8220;Headers and footers&#8221;. Please refer inline comment 1 in the screenshot #1. How to insert base64 image in Rich text control type print template? Refer https://www.crowcanyon.help/article/255/ this article to insert images in Print templates. Please refer inline comment 2 in the screenshot #1.. How to show associated items in Print template? Configure associated item using Crow Canyon Linked Items app. Go to the list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Linked Items &#8211;&gt; Configure associated item. After configuring the associated item, configure the associated item column in Print template. Go to List &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Print settings &#8211;&gt; Manage Item Print Templates and add the associated item column to print template. Please refer inline comment 5 in the screenshot #1.. How to show &#8220;$ Sign&#8221; print for currency type columns in associated items summary? Go to Site Contents &#8211;&gt; List &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Linked Items and edit the linked item and configure the &#8220;Format&#8221; like shown below. Please refer inline comment 6 in the screenshot #1. Format value: '$' + Number(%value%).toFixed(2).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); Sample screenshot of linked items summary settings: How to configure such that information comes in left most and right most in the same row like letter format? To show the information in left most and right most in the same row, please follow below instructions. Please refer inline comment 4 in the screenshot #1.. 1. Insert the table (add number of rows and columns as required) 2. To insert the information in left most and right most, use the left align and right align in the table cells (see screenshot below). 3. Edit the view html source and add the below style CCSTopHeading2 to the view html source and add the CCSTopHeading2 to the table tag like shown below. The below style adds the width 100% and make the table boarder empty Sample Style: &lt;style type=\"text/css\"&gt;.CCSTopHeading2{ width:100% !important; border:0 !important; } .CCSTopHeading2 td{ border:0 !important; } &lt;/style&gt; &lt;table class=\"CCSTopHeading2\" style=\"\"&gt;&lt;tbody&gt;&lt;tr style=\"height:100%;\"&gt;&lt;td style=\"width:50%;text-align:left;\"&gt;Date:8/11/2018&lt;/td&gt; &lt;td style=\"width:50%;text-align:right;\"&gt;Category:[[Category1||Category]]&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; How to show the Summary of associated items with normal font instead of bold? Go to List Settings &#8211;&gt; Crow Canyon Print Manager Settings &#8211;&gt; Edit the Print settings and add the below style to HTML source code at the top of the Print template. Style: &lt;style type=\"text/css\"&gt;table#results div#templateresults table tbody tr:last-child div b { font-weight: normal; } #templateresults p.applymargin { margin:0; } &lt;/style&gt; Sample output screenshot in Print: How to configure print template so that the maximum content comes into single page? -&gt; Reduce the spaces in Print template configurations -&gt; Reduce the font size How to generate the PDF that matches with print as it is? Print and PDF buttons output differs due to the known limitation in Crow Canyon Print Manager. In Google Chrome browser, click &#8220;Print&#8221;, change the destination to &#8220;Save as PDF&#8221; option to get the PDF that matches with print. How to print conditional column values? This articles takes an example of printing &#8220;Tax&#8221; column value such that it prints either &#8220;Tax Type&#8221; or &#8220;Tax&#8221; column value based on a choice column &#8220;Non-taxable Status&#8221; value. If the non-taxable column value is &#8220;Add Tax&#8221; only then it shows the &#8220;Tax&#8221; column value otherwise it shows Task Type. Column Name Column Type Value Non-taxable Status Choice Add Tax Included Exempt Tax Type Calculated =IF(OR([Non-taxable Status]=\"Included\",[Non-taxable Status]=\"Exempt\"),[Non-taxable Status],\"\") Tax Amount Currency Tax Calculated =IF([Non-taxable Status]=\"Add Tax\",Tax,\"\") Print template simply looks like below and as per the above column settings, we can achieve conditional printing. See comment &#8220;X&#8221; in the sample screenshot above. Tax: [[TaxType||TaxType]][[TaxAmount||TaxAmount]] Multiple choice column does not allow adding own value with new line separation. How to configure such that one can enter own values in notes column along with predefined options selection in multi-choice column control? How to configure print settings such that it shows both column values together as a single column value? Multiple choice column does not allow own values with new line separation. If we use multi-choice column with own values in Print settings, it shows as single line of text information. It is directly not possible to separate the multiple choice own values as new lines in Print. For this we need to create a new column of type &#8220;Multiple lines of text&#8221; and enter the values in new lines and use this column along with multiple choice column in Print. Example: Exclusions is a multiple choice column and &#8220;Other Exclusions&#8221; is a multiple lines of text column. To merge both columns values in print, use style like below. Style: &lt;p class=\"applymargin\"&gt;[[Exclusions||Exclusions]]&lt;/p&gt; &lt;p style=\"height:0;\"&gt;&amp;nbsp;&lt;/p&gt; &lt;pre style=\"margin-top:-25px;\"&gt;[[OtherExclusions||Other Exclusions]]&lt;/pre&gt;&lt;p style=\"height:0;\"&gt;&amp;nbsp;&lt;/p&gt; Sample column values in form: Sample Print settings and corresponding Output: Set default width for all columns in associated items column grid in item print template It is possible to set default width for all columns in associated items column grid in item print template. Steps Configure ‘Linked Items’ for the associated items column. Navigate to NITRO Studio page for the site -&gt; ‘LINKED ITEMS’ app -&gt; Configure new settings for associated items column. Refer this manual for configuring linked items. Modify configured item print template. Navigate to required list -&gt; Click ‘Print Settings’ from ‘LIST’ ribbon -&gt; ‘Manage Item Print Templates’ -&gt; Edit required item print template for the list and modify as shown below: a. Switch to ‘Rich text with column value placeholders’ template type and add placeholders in ‘Print Format’ as required. b. Click ‘View HTML’ icon to modify the html. c. Place associated items column placeholder, for setting default width, inside the &lt;div&gt; tag. &lt;div id=\"CCSAssociatedStyleColumnName\"&gt;&#91;&#91;Associated item column placeholder]]&lt;/div&gt; d. Go to ‘Header’ tab -&gt; Click ‘View HTML’. e. Paste the below script and save settings. Script: &lt;style&gt;div#CCSAssociatedStyleColumnName span table tbody tr:first-child th { width: 16.6%; } &lt;/style&gt; Note : “CCSAssociatedStyleColumnName” should match with id used in #2.c above. ‘width: 16.6%’ is specified for 6 columns in the grid and is calculated as 100/6 for six columns. Specify the width according to number of columns in the associated items grid (i.e., 100/no. of columns in the grid). Sample output: Steps to add a page beak in list print. The purpose of using page break is to control pagination of the list print. The below code adds page break in list print ensuring that the content following this &lt;div&gt; tag is printed on the next page. It can be used anywhere in the ‘View HTML’ as required. &lt;div style=\"page-break-after:always;\"&gt;&lt;/div&gt; Steps: Navigate to the list -&gt; List Settings -&gt; Permissions and Management -&gt; Crow Canyon Print Manager Settings -&gt; Edit the required list print template. 2. Under the ‘Print Format’ section, select ‘Rich text with column value placeholders’ -> Click ‘View HTML’ button from the print format toolbar. 3. Specify code in the ‘View HTML’ dialog -> Click ‘Update’ button. HTML snippet: &lt;div style=\"page-break-after:always;\">&lt;/div> Sample ‘View HTML’ used in this example: &lt;h3>&lt;strong>Ticket Details:&amp;nbsp;&lt;/strong>&lt;/h3> &lt;p>Title:&amp;nbsp;&#91;&#91;Title||Title]]&lt;/p> &lt;p>ID:&amp;nbsp;&#91;&#91;ID||ID]]&lt;/p> &lt;p>Request Status:&amp;nbsp;&#91;&#91;RequestStatus||Request Status]]&lt;/p> &lt;p>Assigned Staff:&amp;nbsp;&#91;&#91;AssignedStaff||Assigned Staff]]&lt;/p> &lt;p>Due Date:&amp;nbsp;&#91;&#91;DueDate1||Due Date]]&lt;/p> &lt;p>Ticket Description:&amp;nbsp;&#91;&#91;Description1||Description]]&lt;/p> &lt;p>Priority: &#91;&#91;Priority1||Priority]]&lt;/p> &lt;div style=\"page-break-after:always;\">&lt;/div> &lt;h3>Requester Details:&lt;/h3> &lt;p>Requester:&amp;nbsp;&#91;&#91;Requester||Requester]]&lt;/p> &lt;p>Requester Email:&amp;nbsp;&#91;&#91;RequesterEmail||Requester Email]]&lt;/p> &lt;p>Requester Phone:&amp;nbsp;&#91;&#91;RequesterPhone||Requester Phone]]&lt;/p> &lt;p>Requester Department:&amp;nbsp;&#91;&#91;RequesterDepartment||Requester Department]]&lt;/p> &lt;div style=\"page-break-after:always;\">&lt;/div> Note : In list print, one page break will be added after printing ‘Priority’ and another page break will be added after printing ‘Requester Department’ for a list item. Page breaks will be applied for all the list items in a similar manner. 4. Click ‘Save’ to save the list print template. Sample output HTML Snippet is specified in the list print template: HTML Snippet is not specified in the list print template: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "379",
    "name": "379 - Data security in NITRO Apps.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/379%20-%20Data%20security%20in%20NITRO%20Apps.html",
    "title": "Data Security In NITRO Apps",
    "text": "Data security in NITRO Apps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Data security in NITRO Apps Data security in NITRO Apps 1635 views 7 min , 9 sec read 5 Introduction This article describes the data flow in NITRO Apps and the related security aspects. Different scenarios are considered and described in terms of data storage, access and flow. Please contact Crow Canyon support if you need any additional information for any particular App or scenario. Client Side Apps Most of the NITRO Apps are implemented entirely in JavaScript, e.g. NITRO Forms, Reports, Power Portal etc. In this case data doesn&#8217;t flow outside of SharePoint and there are no additional security considerations except for what are there for standard SharePoint functionality. Please note following points: NITRO App code runs in the browser entirely. There is no component that is running outside of the browser or outside of user machine Crow Canyon services running in Azure are not involved except for the license check. Script code calls the Crow Canyon licensing service that is running in Microsoft Azure to check if license is valid. For this it passes the Site URL and App Name and gets back the license status value (Trial including date/Expired/Product etc.). No user information or site data is passed as part of this check NITRO App code uses standard SharePoint JavaScript API (JSOM) to read the data stored in SharePoint lists wherever required for the App functionality NITRO App code doesn&#8217;t collect any statistics, site data or user information and doesn&#8217;t pass it to any outside server Code runs in the context of user who is logged in to the SharePoint site and the data user can access is limited by the permissions he has via the SharePoint permissions Crow Canyon Workflow Manager and Approval Workflow There are two types of Workflows from the data security perspective. We will use the abbreviation WF to refer to the Crow Canyon Workflow Application that is running in Microsoft Azure. Event Based Workflows These workflows are triggered on specific events in SharePoint like when a SharePoint list item is created or modified. Many business processes are configured to run on these events and data security is explained for this by taking a sample scenario: Scenario : Send a mail to user when an existing Ticket is assigned to them Workflow Configuration : On Tickets list, create a workflow on item updated event. If &#8216;Assigned Staff&#8217; user field value has changed and there is a valid user specified, then send a mail with predefined format and Ticket details to the user specified in the &#8216;Assigned Staff&#8217; column in the Ticket item. Please note that this Workflow configuration doesn&#8217;t have any data related to actual Tickets or the users, it is just based on the List name, event, column names and mail format with placeholders for Ticket columns etc. Data Storage : Tickets item data is there in SharePoint just like any other list data and is accessible to users via login to SharePoint. Workflow configuration details are stored in Crow Canyon Azure Database as Xml/JSON and is not encrypted Data Flow &#8211; Versioning is enabled on List : Manager user who is logged into SharePoint edits a Ticket and specifies the name of the staff user who should be working on the Ticket. After entering the required data in Ticket edit form, manager clicks Save button Workflow web application (WF app) running in Azure receives an event with details of list and item that is being updated Since versioning is enabled on list, SharePoint will maintain the item column values in previous version of the item (before change). There is no need to store item data to Crow Canyon Azure database Ticket Save operation completes and Ticket item is modified and has the new user in &#8216;Assigned Staff&#8217; column WF app receives an event with details of list and item that is updated WF app reads the Tickets item data again using same process and keeps it in memory (not stored in any persistent medium). Same is done for the previous version of the item data Item is updated at this point so this is the Ticket data after the Manager user has modified it (after change) As per the workflow configuration, WF app verifies if &#8216;Assigned Staff&#8217; value has changed and there is a valid user value in it. This is done by comparing the two sets of data that the WF App has for the Ticket. &#8216;Before change&#8217; data that is read from previous version of item, and &#8216;after change&#8217; data from latest version. Both of these are in memory and not stored anywhere If &#8216;Assigned Staff&#8217; value has changed then prepare the email content by replacing Ticket column values in the mail format that is stored as part of workflow configuration Connect to Microsoft Exchange server specified in WF settings for the current site and send the mail In memory data is discarded automatically by the Microsoft ASP.Net framework Data Flow &#8211; Versioning is not enabled on List : Manager user who is logged into SharePoint edits a Ticket and specifies the name of the staff user who should be working on the Ticket. After entering the required data in Ticket edit form, manager clicks Save button Workflow web application (WF app) running in Azure receives an event with details of list and item that is being updated WF app reads the Tickets item data from SharePoint using REST API and stores it in the Azure SQL Db after encrypting it using AES . This connection from Azure servers to SharePoint servers is over HTTPS using standard SharePoint API and is entirely within the Microsoft domain. Crow Canyon does not have any third-party servers taking part in this process and doesn&#8217;t access this data in any way Note that this data is stored in database only if Workflow or the Mail Template configuration has reference to item data before its modification. Otherwise, no data is stored in the database during this event Item is not yet saved so this is the Ticket data before the Manager user has modified it (before change) Ticket Save operation completes and Ticket item is modified and has the new user in &#8216;Assigned Staff&#8217; column WF app receives an event with details of list and item that is updated WF app reads the Tickets item data again using same process and keeps it in memory (not stored in any persistent medium) Item is updated at this point so this is the Ticket data after the Manager user has modified it (after change) As per the workflow configuration, WF app verifies if &#8216;Assigned Staff&#8217; value has changed and there is a valid user value in it. This is done by comparing the two sets of data that the WF App has for the Ticket. &#8216;Before change&#8217; data is read from SQL and is decrypted, &#8216;after change&#8217; data is available in memory directly If &#8216;Assigned Staff&#8217; value has changed then prepare the email content by replacing Ticket column values in the mail format that is stored as part of workflow configuration Connect to Microsoft Exchange server specified in WF settings for the current site and send the mail Delete the &#8216;before change&#8217; data stored in SQL Db In memory data is discarded automatically by the Microsoft ASP.Net framework Timer/Scheduled Workflows These workflows are triggered based on the data time values in the SharePoint list items. Many business processes are configured to execute specific actions before or after the date value and data security is explained for this by taking a sample scenario: Scenario : Send a mail to assigned staff of the open Ticket one day after the due date Workflow Configuration : On Tickets list, create a workflow based on the &#8216;Due Date&#8217; column. Workflow is to be triggered one day after the date value specified in the &#8216;Due Date&#8217; column. If Ticket is still open then send a mail with predefined format and Ticket details to the user specified in the &#8216;Assigned Staff&#8217; column in the Ticket item. Please note that this Workflow configuration doesn&#8217;t have any data related to actual Tickets or the users, it is just based on the List name, column names, time difference and mail format with placeholders for Ticket columns etc. Data Storage : Tickets item data is there in SharePoint just like any other list data and is accessible to users via login to SharePoint. Workflow configuration details are stored in Crow Canyon Azure Database as Xml/JSON and is not encrypted Data Flow : Workflow service application (WF service) running in Azure servers runs every 30 minutes to process timer based workflows WF service reads the Workflow configuration from Azure SQL Db. Based on the date column and time difference it will fetch the matching Ticket items from SharePoint WF service reads the matching Tickets data from SharePoint using REST API and keeps it in memory. This connection from Azure servers to SharePoint servers is over HTTPS using standard SharePoint API and is entirely within the Microsoft domain. Crow Canyon or any other third party do not have any servers outside of Microsoft network taking part in this process and don&#8217;t access this data in any way. Also, this data is not stored in any persistent medium As per the workflow configuration, WF service verifies if Ticket is still open by checking the value of &#8216;Status&#8217; column If Ticket is open then prepare the email content by replacing Ticket column values in the mail format that is stored as part of workflow configuration Connect to Microsoft Exchange server specified in WF settings for the current site and send the mail Repeat the above steps for all matching Ticket items In memory Tickets data is discarded automatically by the Microsoft .Net framework Crow Canyon Email Sync This App monitors new mails coming to a mailbox and creates those mails in a SharePoint list. While configuring the App user specifies the mailbox details including the user name and password to read the emails. Password is stored in Azure SQL Db after encrypting it using AES algorithm. Configuration also includes the SharePoint site and list details where emails have to be created. Date Flow: Email Sync application (ES service) running in Azure servers runs every few minutes to check for new mails in configured mailboxes ES service reads the configuration from Azure SQL Db. Based on the mailboxes specified, it will connect to the Microsoft Exchange using the Exchange Web Services API ES service reads the new emails one by one keeps the data in memory. This connection from Azure servers to Microsoft Exchange servers is over HTTPS using standard API and is entirely within the Microsoft domain (if using O365 mail accounts, otherwise it connects to customer&#8217;s/hosted Exchange server). Crow Canyon or any other third party do not have any servers outside of Microsoft network taking part in this process and don&#8217;t access this data in any way. Also, this data is not stored in any persistent medium As per the email sync filter configuration, ES service verifies if email is to be created in SharePoint Connect to SharePoint site as per settings and create a new list item with details of email and add attachments. This connection from Azure servers to SharePoint servers is over HTTPS using standard SharePoint API and is entirely within the Microsoft domain. Crow Canyon or any other third party do not have any servers outside of Microsoft network taking part in this process and don&#8217;t access this data in any way. Also, this data is not stored in any persistent medium Repeat the above steps for all new emails that have come since last sync In memory email data is discarded automatically by the Microsoft .Net framework Crow Canyon NITRO Framework App NITRO functionality is implemented in Client Side Apps and Provider Hosted Apps as explained above. These NITRO Apps have site/site collection level permissions only and run in the context of logged in user. For higher permissions, we have a separate Framework app and it is used during NITRO installation and upgrade. Following operations require higher permissions and so use the framework App: Add/Update app packages in the app catalog of tenancy (e.g. Crow Canyon Modern UI components and Workflow Manager etc.) Check version of installed apps in site collection (e.g. of Workflow Manager) Upgrade/install the apps in site (e.g. of Workflow Manager) Copy pages/JavaScript/CSS to sites where NITRO is activated (e.g. settings pages for Forms/Actions/Cascaded Lookup etc.) These operations are done only when NITRO is installed/updated/uninstalled in site. NITRO Apps like Forms/Actions/Workflows etc. don&#8217;t use framework app for their functionality. Also, no customer data is ever passed via the framework app, its only job is to get the NITRO components installed properly in the site. Actual data flow during business operations follows the process as described above for different Apps. For more information on the design principle of framework app, please refer this Microsoft article . About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "38",
    "name": "38 - How to configure approve via email feature using NITRO Workflow Manager.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/38%20-%20How%20to%20configure%20approve%20via%20email%20feature%20using%20NITRO%20Workflow%20Manager.html",
    "title": "How To Configure Approve Via Email Feature Using NITRO Workflow Manager",
    "text": "How to configure approve via email feature using NITRO Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Email , How-To , NITRO Studio- Workflows / How to configure approve via email feature using NITRO Workflow Manager How to configure approve via email feature using NITRO Workflow Manager 4489 views 3 min , 36 sec read 1 Applies To: SharePoint Online Description: In general Crow Canyon approver feature creates a task for approver and notifies with the link to edit form of the task so that Approver can set the decision and complete the approver task. If the approval feature is configured using Crow Canyon Advanced Approval App, then this article does not work. Please refer https://www.crowcanyon.help/article/299/ for sample configurations and reconfigure the approval feature using NITRO Workflow Manager before proceeding with the configurations described in this article. This article describe the process to configure NITRO workflows such that approver can make the decision directly from the mail instead of going to task edit form (no login required). Idea is, we include the hyperlinks (one for each possible decision like Approve/Deny/etc.) in the approver mail body that opens a new email with pre-filled subject and recipient so approver can click on the desired decision link and click send to confirm the decision. Predefined subject contains a syntax that helps understanding the approver task list, approver task item id and decision Recipient is a mailbox account that needs to be configured in &#8220;Crow Canyon Email Sync&#8221; settings in our &#8220;Crow Canyon Email Sync&#8221; app Summary of Steps: Pre-requisites: This article assumes that the approver feature is already configured as described in the Description above. Configure List Schema Approver Tasks Approver Emails Any main list like Tickets/Purchase Requests/etc. Email Sync Settings Workflow Manager Settings Configure workflows on “Approver Emails” list on &#8220;item created&#8221; event and “Approver Tasks” list on &#8220;item created&#8221; event with required actions as described below using the Crow Canyon NITRO Workflow Manager App Workflow1 : Create a workflow on Approver Tasks list “on item created” event Action1: Notify assignee on the approver task creation with the desired links in the mail body to approve/deny Workflow2: Create a workflow on Approver Emails list “on Item created” event Action1: Get the ID of the Approver task from the email subject Action2: Notify the approver if the invalid option sent through mail subject Action3: Check and ensure the task is not already completed and update only if the task is not already completed. Decision cannot be overridden Action4: Approve the task based on decision key in mail subject Action5: Deny the task based on decision key in mail subject Detailed Steps: List Schema: To support approve via email feature, we need to create certain lists and fields as described in this section. Approver Emails list (Announcements type list): This list will be used in Crow Canyon Email Sync settings and will be used in approver mail template, so when approver click on the decision link and send mail, email reaches to this list and it will be processed further by Crow Canyon NITRO Workflows app. Required Fields: To (Single line of text) Sender (Single line of text) Title (Single line of text) Body (Multiple lines of text field – Enhanced Rich text) Approver Tasks list: This article assumes that &#8220;Approver Tasks&#8221; list already present in the system. List of columns that are used in this article:&#8217; Decision (Choice column with two possible options &#8220;Approve&#8221; and &#8220;Deny&#8221;) Comments (Multiple lines of text column) Task Status (Choice column with &#8220;Completed&#8221; as one of the possible options) Email Sync Settings: Configure Email Sync settings using Crow Canyon Email Sync app on “Approver Emails” list as shown below. Pre-requisite is to have a valid mailbox that can be accessed using on-premises or online exchange web services. Please refer “ https://www.crowcanyon.info/nitro/appmanual_v2/index.html?configuring-email-sync.html ” for Email Sync App complete manual. Workflow Manager Configurations: Workflow1: Create a workflow on Approver Tasks list “on item created” event as showed in below screenshot. Note: If there is already an existing workflow with &#8220;Send Mail&#8221; action on &#8220;Approver Tasks&#8221; list item creation event, modify the existing send mail action and reconfigure the mail template as described below, otherwise create new workflow. Action1: Create a &#8220;Send Mail&#8221; action as shown below Configure the Mail Template as shown below The body of the above mail template has three hyperlinks, one for each possible decision. To configure these links, please insert the hyperlinks in the body as shown below The links can be configured as shown below. As per the configurations described in this article, it should follow the same syntax (List Name Key – ID – Decision Key). Approve mailto:email@domain.com?Subject=Approver Tasks - [[ID||ID]] – Approved Deny mailto:email@domain.com?Subject=Approver Tasks - [[ID||ID]] – Denied The email Address in the above syntax (email@domain.com) is the email account that is used in Email Sync settings in Crow Canyon Email Sync app in above steps. List Key (Approver Tasks) is the &#8220;Approver Tasks&#8221; list name configured as per the list schema above ID and Decision Key (Approved/Denied) options are used in workflow configurations to identify approver decision and update corresponding approver task Workflow2: Create a workflow on &#8220;Approver Emails&#8221; list on &#8220;an item is created&#8221; event as shown below Action1: Configure a &#8220;WF Variable&#8221; action to find the approver task ID from the mail subject. Value: $regextract([Title|Title],@.*- (\\d+) -.*) Action2: Create a &#8220;Send Mail&#8221; action with conditions as shown below Configure the mail template using the placeholders as shown below (note: these are sample configurations, one can configure as per the need) Action3: Configure a “Query List” action to get the corresponding approver task from the “Approver Tasks” list and see whether the task is already completed or not. Further actions will be executed only if the approver task is not already completed. See screenshot below. Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;And&gt;&lt;Eq&gt;&lt;FieldRef Name='ID' /&gt;&lt;Value Type='Number'&gt;%%TaskID##Value%%&lt;/Value&gt;&lt;/Eq&gt;&lt;IsNull&gt;&lt;FieldRef Name='Decision' /&gt;&lt;/IsNull&gt;&lt;/And&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Action4: Configure an “Update Item” action to set the approver decision as “Approve” as shown below. Action5: Configure an “Update Item” action to set the approver decision in “Deny” as shown below Note: In complex cases where there are multiple approver tasks lists exist, we can use the same email address in Crow Canyon Email Sync settings, however, create new workflow on Approver Emails list with different conditions as needed and configure workflows on the other approver tasks list as well with appropriate mail templates. Approve using Email Email Sync NITRO Workflows Email How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "380",
    "name": "380 - How to configure approve via email feature using NITRO Workflow Manager - Crow Canyon Software Suppo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/380%20-%20How%20to%20configure%20approve%20via%20email%20feature%20using%20NITRO%20Workflow%20Manager%20-%20Crow%20Canyon%20Software%20Suppo.html",
    "title": "How To Configure Approve Via Email Feature Using NITRO Workflow Manager Crow Canyon Software Suppo",
    "text": "How to configure approve via email feature using NITRO Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Email , How-To , NITRO Studio- Workflows / How to configure approve via email feature using NITRO Workflow Manager How to configure approve via email feature using NITRO Workflow Manager 4489 views 3 min , 36 sec read 1 Applies To: SharePoint Online Description: In general Crow Canyon approver feature creates a task for approver and notifies with the link to edit form of the task so that Approver can set the decision and complete the approver task. If the approval feature is configured using Crow Canyon Advanced Approval App, then this article does not work. Please refer https://www.crowcanyon.help/article/299/ for sample configurations and reconfigure the approval feature using NITRO Workflow Manager before proceeding with the configurations described in this article. This article describe the process to configure NITRO workflows such that approver can make the decision directly from the mail instead of going to task edit form (no login required). Idea is, we include the hyperlinks (one for each possible decision like Approve/Deny/etc.) in the approver mail body that opens a new email with pre-filled subject and recipient so approver can click on the desired decision link and click send to confirm the decision. Predefined subject contains a syntax that helps understanding the approver task list, approver task item id and decision Recipient is a mailbox account that needs to be configured in &#8220;Crow Canyon Email Sync&#8221; settings in our &#8220;Crow Canyon Email Sync&#8221; app Summary of Steps: Pre-requisites: This article assumes that the approver feature is already configured as described in the Description above. Configure List Schema Approver Tasks Approver Emails Any main list like Tickets/Purchase Requests/etc. Email Sync Settings Workflow Manager Settings Configure workflows on “Approver Emails” list on &#8220;item created&#8221; event and “Approver Tasks” list on &#8220;item created&#8221; event with required actions as described below using the Crow Canyon NITRO Workflow Manager App Workflow1 : Create a workflow on Approver Tasks list “on item created” event Action1: Notify assignee on the approver task creation with the desired links in the mail body to approve/deny Workflow2: Create a workflow on Approver Emails list “on Item created” event Action1: Get the ID of the Approver task from the email subject Action2: Notify the approver if the invalid option sent through mail subject Action3: Check and ensure the task is not already completed and update only if the task is not already completed. Decision cannot be overridden Action4: Approve the task based on decision key in mail subject Action5: Deny the task based on decision key in mail subject Detailed Steps: List Schema: To support approve via email feature, we need to create certain lists and fields as described in this section. Approver Emails list (Announcements type list): This list will be used in Crow Canyon Email Sync settings and will be used in approver mail template, so when approver click on the decision link and send mail, email reaches to this list and it will be processed further by Crow Canyon NITRO Workflows app. Required Fields: To (Single line of text) Sender (Single line of text) Title (Single line of text) Body (Multiple lines of text field – Enhanced Rich text) Approver Tasks list: This article assumes that &#8220;Approver Tasks&#8221; list already present in the system. List of columns that are used in this article:&#8217; Decision (Choice column with two possible options &#8220;Approve&#8221; and &#8220;Deny&#8221;) Comments (Multiple lines of text column) Task Status (Choice column with &#8220;Completed&#8221; as one of the possible options) Email Sync Settings: Configure Email Sync settings using Crow Canyon Email Sync app on “Approver Emails” list as shown below. Pre-requisite is to have a valid mailbox that can be accessed using on-premises or online exchange web services. Please refer “ https://www.crowcanyon.info/nitro/appmanual_v2/index.html?configuring-email-sync.html ” for Email Sync App complete manual. Workflow Manager Configurations: Workflow1: Create a workflow on Approver Tasks list “on item created” event as showed in below screenshot. Note: If there is already an existing workflow with &#8220;Send Mail&#8221; action on &#8220;Approver Tasks&#8221; list item creation event, modify the existing send mail action and reconfigure the mail template as described below, otherwise create new workflow. Action1: Create a &#8220;Send Mail&#8221; action as shown below Configure the Mail Template as shown below The body of the above mail template has three hyperlinks, one for each possible decision. To configure these links, please insert the hyperlinks in the body as shown below The links can be configured as shown below. As per the configurations described in this article, it should follow the same syntax (List Name Key – ID – Decision Key). Approve mailto:email@domain.com?Subject=Approver Tasks - [[ID||ID]] – Approved Deny mailto:email@domain.com?Subject=Approver Tasks - [[ID||ID]] – Denied The email Address in the above syntax (email@domain.com) is the email account that is used in Email Sync settings in Crow Canyon Email Sync app in above steps. List Key (Approver Tasks) is the &#8220;Approver Tasks&#8221; list name configured as per the list schema above ID and Decision Key (Approved/Denied) options are used in workflow configurations to identify approver decision and update corresponding approver task Workflow2: Create a workflow on &#8220;Approver Emails&#8221; list on &#8220;an item is created&#8221; event as shown below Action1: Configure a &#8220;WF Variable&#8221; action to find the approver task ID from the mail subject. Value: $regextract([Title|Title],@.*- (\\d+) -.*) Action2: Create a &#8220;Send Mail&#8221; action with conditions as shown below Configure the mail template using the placeholders as shown below (note: these are sample configurations, one can configure as per the need) Action3: Configure a “Query List” action to get the corresponding approver task from the “Approver Tasks” list and see whether the task is already completed or not. Further actions will be executed only if the approver task is not already completed. See screenshot below. Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;And&gt;&lt;Eq&gt;&lt;FieldRef Name='ID' /&gt;&lt;Value Type='Number'&gt;%%TaskID##Value%%&lt;/Value&gt;&lt;/Eq&gt;&lt;IsNull&gt;&lt;FieldRef Name='Decision' /&gt;&lt;/IsNull&gt;&lt;/And&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Action4: Configure an “Update Item” action to set the approver decision as “Approve” as shown below. Action5: Configure an “Update Item” action to set the approver decision in “Deny” as shown below Note: In complex cases where there are multiple approver tasks lists exist, we can use the same email address in Crow Canyon Email Sync settings, however, create new workflow on Approver Emails list with different conditions as needed and configure workflows on the other approver tasks list as well with appropriate mail templates. Approve using Email Email Sync NITRO Workflows Email How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "381",
    "name": "381 - How to upgrade Crow Canyon solutions in the SharePoint Server.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/381%20-%20How%20to%20upgrade%20Crow%20Canyon%20solutions%20in%20the%20SharePoint%20Server.html",
    "title": "How To Upgrade Crow Canyon Solutions In The SharePoint Server",
    "text": "How to upgrade Crow Canyon solutions in the SharePoint Server - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to upgrade Crow Canyon solutions in the SharePoint Server How to upgrade Crow Canyon solutions in the SharePoint Server 3171 views 1 min , 3 sec read 0 Applies to: SharePoint On-Premises Description: This article describes how to upgrade Crow Canyon farm solutions in the SharePoint Server (2013, 2016 and 2019). Pre Requisites: Logged in user should be a domain user, local admin and a member of Farm Administrators group in SharePoint. Logged in user should have ownership rights on SharePoint Admin content database, SharePoint configuration database and target web application&#8217;s content database. SharePoint Server should be in stable state (No Action Required or Upgrade Available) (Central Admin, System Settings, Manage Servers in the farm) SharePoint Timer Service and SharePoint Admin Service Should be in running state. Instructions: We can use either STSADM or PowerShell command tools to perform the upgrade SharePoint farm solutions. 1. STSADM Tool: Open Command Prompt (Run as Administrator) –&gt; Change the directory to “Hive” location using the command below Hive location path: For SP 2013: cd \"C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\BIN\" For SP 2016/2019: cd \"C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\16\\BIN\" Run below command to upgrade the solution: STSADM.EXE -o upgradesolution -name \"crowcanyon.advancedforms.wsp\" –filename \"LiteralPath of the .wsp solution\" –allowgacdeployment –immediate 2. PowerShell Tool Open SharePoint Management Shell (Run as Administrator) Update-SPSolution –Identity contoso_solution.wsp –LiteralPath \"C:\\contoso_solution.wsp\" –GACDeployment Troubleshooting steps for upgrade solution: If we want to upgrade the solution in SharePoint but the solution deployment is stuck, then we can follow steps #1 to #5 of troubleshooting steps from https://www.crowcanyon.help/article/311/ , but we need to add the latest wsp solution.-&gt; To add the latest solution, delete the existing solution and then add the latest solutionCommand to delete solution: stsadm.exe -o deletesolution –name\"##Solution Name##\" -override -&gt; Add the latest solution Refer “Add Solution” instructions from this article. -&gt; Follow step 5 of troubleshooting article https://www.crowcanyon.help/article/311/ to deploy the solution in SharePoint server when the solution got stuck at deploying. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "382",
    "name": "382 - Admin operations on different Crow Canyon On-Premises Solutions and features - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/382%20-%20Admin%20operations%20on%20different%20Crow%20Canyon%20On-Premises%20Solutions%20and%20features%20-%20Crow%20Canyon%20Software.html",
    "title": "Admin Operations On Different Crow Canyon On Premises Solutions And Features Crow Canyon Software",
    "text": "Admin operations on different Crow Canyon On-Premises Solutions and features - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Help Desk , How-To / Admin operations on different Crow Canyon On-Premises Solutions and features Admin operations on different Crow Canyon On-Premises Solutions and features 2879 views 3 min , 33 sec read 0 Applies to: SharePoint On-Premises Description: This article describes the list of different solutions used in our application(s) along with the instructions to add/deploy/upgrade/retract solutions and activate/deactivate features. Different possible Admin operations: How to Add and deploy crow canyon solutions in the SharePoint Server? https://www.crowcanyon.help/article/311/ How to activate or deactivate crow canyon farm features in our application? https://www.crowcanyon.help/article/344/ How to retract and remove Crow Canyon solutions in the SharePoint Server? https://www.crowcanyon.help/article/310/ How to upgrade Crow Canyon solutions in the SharePoint Server? https://www.crowcanyon.help/article/381 Table 1: Crow Canyon solutions, deployment scope along with any dependency features / solutions. Please note that if there are dependency solution(s) for a solution-X then we need to first deploy them prior to the solution-X. Similarly, we need to activate any dependency feature(s) prior to the actual feature. Feature Name &#8211; Scope &#8211; Activation Method: This column shows us the display name of the feature along with its scope. If the Scope is &#8220;Site Collection&#8221; then we need to activate this from &#8220;Site Collection Features&#8221;. If the scope if web then we need to activate the feature from &#8220;Manage Site Features&#8221; under the required sub site. If the activation method is &#8220;UI&#8221;, then we can activate the feature from the browser otherwise, we need to use either STSADM or PowerShell commands to activate/deactivate those features. S.No. Solution Name Deployment Scope Feature Name &#8211; Scope &#8211; Activation Method Dependency Feature Dependency Solution 1 crowcanyon.configurableportal.wsp Global Deployment Crow Canyon Configurable Portal &#8211; Web &#8211; UI Crow Canyon Forms Attachments crowcanyon.commonutils.wsp 2 crowcanyon.advancedforms.wsp Global Deployment Crow Canyon NITRO Forms Library &#8211; Web &#8211; UI Crow Canyon NITRO Forms &#8211; Web &#8211; UI &#8220;Crow Canyon NITRO Forms Library&#8221; is a dependancy feature for &#8220;Crow Canyon NITRO Forms&#8221; crowcanyon.commonutils.wsp crowcanyon.customactions.wsp 3 crowcanyon.customactions.wsp Global Deployment Crow Canyon Create Library &#8211; Web &#8211; UI Crow Canyon Custom Actions &#8211; Web &#8211; UI &#8220;Crow Canyon Create Library&#8221; is a dependency feature for &#8220;Crow Canyon Custom Actions&#8221; crowcanyon.commonutils.wsp 4 crowcanyon.colorkpi.wsp Global Deployment Crow Canyon Conditional Formatting &#8211; Web &#8211; UI 5 crowcanyon.cascadedlookup.wsp Global Deployment 6 crowcanyon.commonutils.wsp Global Deployment Crow Canyon Forms Attachments &#8211; Web &#8211; UI Crow Canyon Mail Templates Administration &#8211; Site Collection &#8211; Command Line 7 crowcanyon.licensemanager.wsp Global Deployment Crow Canyon License Manager &#8211; Web &#8211; UI (Only applicable for Central Administration site) 8 crowcanyon.advancedemail.wsp Web Application Crow Canyon Advanced Email &#8211; Web &#8211; UI Crow Canyon Mail Templates Administration crowcayon.commonutils.wsp 9 crowcanyon.discussion.wsp Global Deployment 10 crowcanyon.taskmanager.wsp Global Deployment Crow Canyon Associated Items &#8211; Web &#8211; UI 11 ccssreventreciever.wsp Web Application CCS SR Event Receiver V3.6 &#8211; Web &#8211; UI 12 ccssrworkflows.wsp Web Application CCSSRWorkflows &#8211; Site Collection -UI crowcanyon.commonutils.wsp 13 crowcanyon.advancedprint.wsp Web Application Crow Canyon Advanced Print &#8211; Site Collection &#8211; UI 14 crowcanyon.calculatedtable.wsp Web Application CrowCanyon Calculated Table &#8211; Site Collection &#8211; UI CrowCanyon Scheduled Reports Feature &#8211; Site Collection &#8211; Command Line crowcanyon.commonutils.wsp 15 crowcanyon.fieldmanager.wsp Web Application CrowCanyon Field Manager &#8211; Web &#8211; UI crowcanyon.commonutils.wsp 16 crowcanyon.formsmanager.wsp Web Application Crow Canyon Forms Manager &#8211; Site Collection &#8211; UI 17 crowcanyon.webparts.wsp Web Application CrowCanyon Systems WebParts &#8211; Site Collection &#8211; UI crowcanyon.commonutils.wsp 18 crowcanyon.listsearch.wsp Web Application Crow Canyon List Search &#8211; Site Collection &#8211; UI 19 crowcanyon.mobilemanager.wsp Web Application Crow Canyon Mobile Manager &#8211; Web &#8211; UI 20 crowcanyon.timerjobs.wsp Web Application CrowCanyon Archival Job &#8211; Site Collection &#8211; Command Line CrowCanyon Asset Maintenance Job &#8211; Site Collection &#8211; Command Line CrowCanyon Recurrence Job &#8211; Site Collection &#8211; Command Line CrowCanyon SLA Timer Job &#8211; Site Collection &#8211; Command Line Crow Canyon Auto Close &#8211; Web &#8211; Command Line crowcanyon.commonutils.wsp 21 crowcanyon.urlactions.wsp Web Application Crow Canyon URL Actions &#8211; Site Collection &#8211; UI 22 easytabparts.wsp Web Application Easy Tab Web Parts &#8211; Site Collection &#8211; UI 23 crowcanyon.workflowmanager.wsp Web Application Crow Canyon Workflow Manager &#8211; Site Collection &#8211; Command Line Crow Canyon Mail Templates Administration crowcanyon.commonutils.wsp 24 crowcanyonbranding.wsp Global Deployment Crow Canyon Branding Feature &#8211; Web &#8211; UI 25 crowcanyon.advancedalerts.wsp Global Deployment Crow Canyon Advanced Alerts &#8211; Site Collection &#8211; Command Line 26 crowcanyon.batchticketeditor.wsp Web Application Crow Canyon Batch Ticket Editor &#8211; Web &#8211; UI 27 crowcanyon.purchaseassetlink.wsp Web Application Crow Canyon Purchase to Asset Link Feature &#8211; Web &#8211; UI 28 crowcanyon.colorchoicefield.wsp Global Deployment NA In order to activate/deactivate the feature using STSADM/PowerShell commands, we need to know the corresponding feature unique name. Please see below table to get the details of the feature unique names. Note: For Portal upgrade, after upgrading crowcanyon.configurable.wsp and crowcanyon.commonutils.wsp, Portal feature “Crow Canyon Configurable Portal” and its dependency feature “Crow Canyon Forms Attachments” need to be re-activated only for the portal sub site. All other “Web” scoped features needs to be activated to the back end site. Feature Name Feature Unique Name to use in commands Crow Canyon Configurable Portal CCSConfigurablePortal Crow Canyon NITRO Forms Library CrowCanyonAdvancedFormLibrary Crow Canyon Create Library CrowCanyon.CustomActions_CCSAppsLib Crow Canyon Conditional Formatting CrowCanyonColorKPI Crow Canyon Forms Attachments CrowCanyonFormsAttachments Crow Canyon License Manager CrowCanyon.LicenseManager_CrowCanyonLicenseManager Crow Canyon Mail Templates Administration CrowCanyonMailTemplates Crow Canyon Associated Items CrowCanyon.TaskManager_CrowCanyonTaskManager CCS SR Event Receiver V3.6 CCSSREventReceiver_Feature1 CCSSRWorkflows CCSSRWorkflows2013_CCSSRWorkflowsFeature Crow Canyon Advanced Print CrowCanyon.AdvancedPrint_CrowCanyon Advanced Print CrowCanyon Calculated Table CrowCanyon.CalculatedTable_CCSCalculatedTable CrowCanyon Field Manager CrowCanyon.FieldManager_CrowCanyonFieldManager Crow Canyon List Search CrowCanyon.ListSearch_CrowCanyonListSearch Crow Canyon Mobile Manager CrowCanyon.MobileManager_CrowCanyonMobileManagerFeature CrowCanyon Archival Job CrowCanyon.TimerJobs_CCSArchivalJob Crow Canyon URL Actions CrowCanyon.URLActions_Crow Canyon URL Actions CrowCanyon Asset Maintenance Job CrowCanyon.TimerJobs_CCSAssetsMaintenance Crow Canyon Branding Feature CrowCanyonBrandingFeature CrowCanyon Recurrence Job CrowCanyon.TimerJobs_CCSRecurrenceJob CrowCanyon Scheduled Reports Feature CrowCanyon.CalculatedTable_CrowCanyon Scheduled Reports Feature CrowCanyon SLA Timer Job CrowCanyon.TimerJobs_CCSSLATimerJobFeature CrowCanyon Workflow Manager CrowCanyonWorkflowManager Crow Canyon Custom Actions CrowCanyon.CustomActions_CCSAppsLib Crow Canyon NITRO Forms CrowCanyonAdvancedForms Crow Canyon Advanced Alerts CrowCanyon.AdvancedAlerts_CrowCanyonAdvancedAlerts Crow Canyon Advanced Email CrowCanyon.AdvancedEmail_CrowCanyonAdvancedEmail Crow Canyon Auto Close CrowCanyon.TimerJobs_CCSAutoCloseJobFeature Crow Canyon Purchase Asset Link Feature CrowCanyon.PurchaseAssetLink_CCSPurchaseAssetLinkFeature Crow Canyon Batch Ticket Editor CrowCanyon.BatchTicketEditor_CCSBatchTicketEditor Please note that Crow Canyon Color Choice Field and Crow Canyon Advanced Alerts solutions are deprecated Solutions On Premises Crow Canyon Applications Help Desk How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "383",
    "name": "383 - How to Upgrade Forms Manager Forms to NITRO Forms in On Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/383%20-%20How%20to%20Upgrade%20Forms%20Manager%20Forms%20to%20NITRO%20Forms%20in%20On%20Premises.html",
    "title": "How To Upgrade Forms Manager Forms To NITRO Forms In On Premises",
    "text": "How to Upgrade Forms Manager Forms to NITRO Forms in On Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications / How to Upgrade Forms Manager Forms to NITRO Forms in On Premises How to Upgrade Forms Manager Forms to NITRO Forms in On Premises 2543 views 4 min , 25 sec read 0 Applies To: SharePoint On-Premises Description: This article describes the process for upgrading the Crow Canyon Forms Manger forms to NITRO Forms in our application. Summary of Steps: Install/upgrade latest solutions in the SharePoint Server and activate new features Configure NITRO Forms Configure Custom Actions as a replacement for Batch Ticket Editor Portal Ticket URL in Configurations Quick Launch and Top Link bar link URL changes Additional configurations Portal upgrade Detailed Steps: Install/upgrade latest solutions in the SharePoint Server and activate new features List of solutions to be installed/upgraded: crowcanyon.advancedforms.wsp crowcanyon.commonutils.wsp crowcanyon.customactions.wsp crowcanyon.configurableportal.wsp crowcanyon.advancedemail.wsp crowcanyon.colorkpi.wsp crowcanyon.workflowmanager.wsp crowcanyon.licensemanager.wsp Refer https://www.crowcanyon.help/article/382/ for the instructions to install and deploy the crow canyon solutions in the SharePoint Server. Also refer the feature activation instructions in the same article and activate the related features that are installed along with dependency features using the preferred activation method. Important Note: Portal feature “Crow Canyon Configurable Portal” and its dependency feature “Crow Canyon Forms Attachments” need to be re-activated only for the portal sub site. All other “Web” scoped features needs to be activated to the back end site. Configure NITRO Forms To start configuring NITRO Forms for a list, please go to list settings &#8211;&gt; Click on Crow Canyon NITRO Forms. It prompts to select whether to use NITRO Forms or native SharePoint Forms. “Use Native SharePoint Forms” option uses the forms configured using the forms manager solution. To proceed with NITRO Forms configurations, please select “Use NITRO Forms” and click ok as shown in the below screenshot. Once we choose the “NITRO Forms” in the above step, the NITRO Forms settings page (designer surface) appears and the NITRO Forms will be set as default forms. However, we do not want to make the NITRO Forms as default forms until all the required configurations are complete so the users can keep use the current system without any downtime. To continue configuring the NITRO Forms while users are using the current system, go to Form Settings in the top menu &#8211;&gt; click on &#8220;Use Native SharePoint Forms&#8221; and uncheck the &#8220;Close Forms Designer&#8221; option and click on Ok. This will set the default forms as native SharePoint Form but will allow us to continue design the NITRO Forms for the list. See sample screenshot below Please refer sample video tutorials in managing NITRO Forms from https://www.nitro.studio/video-library/ Refer the forms manager settings like tabs and columns, advanced column permissions, advanced column validations and design the NITRO Forms accordingly. Previous forms manager configurations are common for all different forms (new form, display form and edit forms), and in our NITRO Forms, we can use different forms similar to standard SharePoint or we can use the same form configuration. Different areas to consider in NITRO Forms configurations: Tabs and Tab Permissions &#8211; https://www.nitro.studio/advanced-approvals-video/ Column Permissions &#8211; h ttps://www.nitro.studio/advanced-approvals-video/ Column Validations &#8211; https://www.nitro.studio/advanced-approvals-video/ Cascaded Lookup Settings &#8211; https://www.nitro.studio/nitro-forms-video/ Associated Item Settings Auto-Fill User Information Settings &#8211; https://www.nitro.studio/user-info-filler-video/ Let us take an example use case where “Case Id” column needs to be hidden in the New Form and make it read-only in edit form. In such cases we cannot use the same form configuration. We need to split the forms as described below. Before splitting the forms, first configure all the tabs and columns by referring the forms manager configurations and then go to “Form Settings” in the menu &#8211;&gt; Click on use different forms and select the custom design option. See sample screenshot below. This splits the single form to multiple forms for the list and copies the same configuration to all three forms (new, display and edit forms). Now, configure all the required unique configurations like the above example “Hide ‘Case Id’ in new form and make it read-only in edit form” and save the configuration. Please make sure that we are not publishing the forms until all the lists are configured. Once all the lists are configured, we can then Publish NITRO Forms for all the required lists. This sets the NITRO forms as default forms for all these lists. Different lists that needs to be configured in our standard application: Actions Approver Tasks Change Requests Change Request Tasks CR Approver Tasks Configurations Email Tickets IT Support Tasks Knowledge Base Problems Problem Tasks Recurring Schedule Recurring Ticket Templates Report Schedule Tickets Archived Tickets Archived Change Requests Archived Problems Archived Email Tickets Archived IT Support Tasks Archived Time Tracking Note: Change Requests and Problems related lists exists only for IT Premium Version. Ignore if these lists are not existing in the site contents Configure Custom Actions as a replacement for Batch Ticket Editor Please refer sample video tutorial for Custom Actions from https://www.nitro.studio/custom-action-video/ Configure custom actions for the Tickets list for “Self Assign”, “Assign to Someone” and “Close” actions on the “Tickets” list. Portal Ticket URL in Configurations We need to modify the Portal Ticket Link URL in the configurations utility after the portal is upgraded to the latest version that has the designer forms. Please go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; replace the Portal Ticket URL like below http://contoso/sites/CCS/IT/Portal/SitePages/DisplayForm.aspx?lfid=1&amp;FormKey=Tickets&amp;ItemID=&lt;&lt;ID&gt;&gt;. See sample screenshot below Quick Launch and Top link bar link URL Changes New Ticket/New Problem/New Change Request links in the quick launch need to be reconfigured with the new form URL of the NITRO Forms. In order to get the New form URL for any list, please go to list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; Form Settings &#8211;&gt; click on Copy button and this will copy the New form URL for the Ticket NITRO Form. See sample screenshot below Now go to site settings &#8211;&gt; Look and Feel &#8211;&gt; Quick Launch and reconfigure the link with the NITRO Form URL copied above. Please refer https://support.office.com/en-us/article/customize-site-navigation-c040f014-acbb-4c98-8174-48428cf02b25#bm1f for more details to edit the quick launch links Additional Configurations: (i) Configure Email History in NITRO Forms: In our Forms Manager based application, Email History is configured as a web part in display form of the ticket. This need to be reconfigured as Associated item in our NITRO Forms. Go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; Create a multi line text column &#8220;Email History&#8221; as shown below Add Email History column to both Display and Edit forms of the Tickets list under Related Items tab. See screenshots below Go to Advanced section in left hand side panel &#8211;&gt; Associated Item Settings &#8211;&gt; create a new configuration for Email History column like below (ii) Configure Email Handling Utility We have a feature that captures the content of the incoming email and adds it to the Work log of the ticket. In order to configure this, go to IT Helpdesk site &#8211;&gt;site contents &#8211;&gt; Incoming Email Processing list &#8211;&gt; list settings &#8211;&gt; Create a Yes/no column with name “UpdateWorklog” with default value as Yes. See sample screenshot below Now go to Application Administration &#8211;&gt; Email Configurations &#8211;&gt; enable the checkbox for &#8220;UpdateWorklog&#8221; column, save the settings. Portal Upgrade After the “crowcanyon.configurable.wsp and crowcanyon.commonutils.wsp” solutions are upgraded and reactivating the features as part of step #1 in this article, go to Portal site &#8211;&gt; Portal Settings, and this upgrades all the forms automatically. Please wait until the success message appears (screenshot below). Next, reconfigure the security settings for the portal site. Please refer #6 from https://www.crowcanyon.help/article/227/ for instructions. NITRO Upgrade Crow Canyon Applications About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "384",
    "name": "384 - How to enable Email Integration in Crow Canyon NITRO applications_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/384%20-%20How%20to%20enable%20Email%20Integration%20in%20Crow%20Canyon%20NITRO%20applications_.html",
    "title": "How To Enable Email Integration In Crow Canyon NITRO Applications",
    "text": "How to enable Email Integration in Crow Canyon NITRO applications? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to enable Email Integration in Crow Canyon NITRO applications? How to enable Email Integration in Crow Canyon NITRO applications? 1113 views 2 min , 48 sec read 0 Applies to: SharePoint online Description Crow Canyon NITRO Studio has excellent functionality for integrating both incoming and outgoing emails for business scenarios. Items in the list having business data (for e.g. Contract, Purchase Order or Ticket etc.) can be enabled for emails and entire email functionality is directly available in SharePoint itself. ‘Crow Canyon Advanced Email’ App enables outgoing emails directly from SharePoint list items and supports item column placeholders, predefined mail templates, attachments, item links etc. to quickly send mails with relevant SharePoint item content. These emails are also saved in SharePoint list and linked to the original item. Using Crow Canyon Linked Items App these mails are directly available on the main list item forms (and views) for easy referencing. ‘Crow Canyon Email Sync’ App enables incoming emails to be brought into SharePoint and then be linked to the corresponding items in business list. These emails are also available on the main list item form like outgoing emails. Incoming email can also trigger a business flow depending on the mail content (e.g. closing a Ticket) using Crow Canyon Workflow Manager App. Mail content can be added to a multi-line column in main list and a notification can be sent to the concerned person for further action when a mail is received. Pre-requisites An announcement type list for the incoming and outgoing email items Above list should have a lookup column to the main business list (in this FAQ, we will take example of a Contracts list) Summary of steps Activate NITRO on the site having the Contract list Note: If you are using non-NITRO based site then ensure that Email Sync and Advanced Email Apps are installed in the site Configure Crow Canyon Email Sync settings to enable incoming emails Configure Crow Canyon Advanced Email Settings for outgoing emails Configure Email History in Contracts site Configure a workflow using Crow Canyon Workflow Manager to link the incoming emails to the corresponding contracts Detailed Instructions 1. Activate NITRO on the site having the Contract list Go to root site &#8211;&gt; Crow Canyon Nitro Studio and activate the Nitro for the site having the Contract list Note: If you are using non-Nitro based site then ensure that Email Sync and Advanced Email Apps are installed in the site If you do not have the Crow Canyon Email Sync App, please contact Crow Canyon Support (crowcanyonsupport@crowcanyon.com) to get the latest Crow Canyon Email Sync App. Refer instructions to add Crow Canyon Email Sync App to the App Catalog site from: https://www.crowcanyon.info/nitro/appmanual_v2/install-package-in-appcatalog.html After adding Crow Canyon Email Sync App to the App Catalog site, add the Crow Canyon Email Sync app to root site. 2. Configure Crow Canyon Email Sync settings to enable incoming emails Please refer instructions to configure Crow Canyon Email Sync App settings from: https://www.crowcanyon.info/nitro/appmanual_v2/configuring-email-sync.html 3. Configure Crow Canyon Advanced Email Settings for outgoing emails Please refer Email Manager section in below link to configure the Advanced Email settings for outgoing emails and email history etc. https://www.crowcanyon.info/nitro/appmanual_v2/ 4. Configure Email History in Contracts site Since Email list has a lookup to the Contract list, related emails for a Contract can be shown in the list view of Contracts and also in the Contract item forms. Please refer Linked Items App documentation for more details: https://www.crowcanyon.info/nitro/appmanual_v2/configuring-linked-items.html At a high level, following needs to be done: Create “Email History” multiline text column and configure Associated item Settings in the Nitro forms. Go to Contracts list settings &#8211;&gt; Crow Canyon Nitro Forms &#8211;&gt; New designer forms &#8211;&gt; Add Email History column to the Email History tab and configure Associated item Settings as shown below and do the same configuration in Edit and Display forms. 5. Configure a workflow using Crow Canyon Workflow Manager to link the incoming emails to the corresponding contracts 1. Configure a Workflow on Emails list as shown below. This workflow will link the incoming emails to the related contract. Incoming email should have a pre-defined placeholder format to identify the Id of the related Contract. In this example, we are using “ ContractId: &lt;actual Id of the contract&gt; ” in the mail subject. 2. WF Variable action If the incoming email contains ContractId then this action will extract the “Related Contract ID” from mail subject. Sample mail subject: Internship Agreement &#8211; [ContractId:35] Regex for ContractId is given below, you can use a different text than ContractId: $regextract([Title|Title],@.*\\[ContractId: (.+)\\].*) 3. Query list Action This action will get the Contract having the Id specified in the subject of incoming email Query: &lt;View&gt;&lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='ID' /&gt; &lt;Value Type='Number'&gt;%%WFContractId##Value%%&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/View&gt;&lt;/Query&gt; 4. Update Action This action will link the Email item to the Related Contract Column Mapping RelatedContract: GetRelatedContract##ID About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "385",
    "name": "385 - How to convert the Crow Canyon NITRO Trial license to Subscription_Enterprise license_ - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/385%20-%20How%20to%20convert%20the%20Crow%20Canyon%20NITRO%20Trial%20license%20to%20Subscription_Enterprise%20license_%20-%20Crow%20Canyon.html",
    "title": "How To Convert The Crow Canyon NITRO Trial License To Subscription Enterprise License Crow Canyon",
    "text": "How to convert the Crow Canyon NITRO Trial license to Subscription/Enterprise license? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Licenses / How to convert the Crow Canyon NITRO Trial license to Subscription/Enterprise license? How to convert the Crow Canyon NITRO Trial license to Subscription/Enterprise license? 3688 views 1 min , 0 sec read 2 Applies to: SharePoint Online and SharePoint On-Premises Description: This article describes the process to convert the trial license to Subscription/Enterprise license. When we install the NITRO Studio initially it comes with default 30 days trial license. Contact Crow Canyon Software ( sales@crowcanyon.com ) to get the subscription/enterprise license and more details about license validity and other details. For example, assuming that we have applied the NITRO Studio to a sub site in the site collection before purchasing the subscription/enterprise and now we would like to convert the trial license to subscription/enterprise for that sub site. Please follow the below three steps process to apply the subscription/enterprise license. Steps: For SharePoint Online: Go to root site of the site collection &#8211;&gt; site contents &#8211;&gt; open the &#8220;Crow Canyon NITRO Studio&#8221; app. For SharePoint On- Premises: Go to root site of the site collection &#8211;&gt; click on gear icon (cog) in the top right corner of the site &#8211;&gt; click on Crow Canyon NITRO Studio It opens the NITRO Studio Admin Center and shows the subscription/enterprise license status on the right side of the page as shown below. If the Enterprise license, it shows the status as shown below: 2. Click on &#8220;Subscription Details&#8221; button, it opens a dialog and shows all the current sub sites in that site collection that have the NITRO activated as shown below. 3. Click on &#8220;Manage&#8221; button for the sub site that we wish to apply the new subscription/enterprise license. It opens a dialog and shows the site, license type. Make sure that site is correct and license type is &#8220;Subscription/Enterprise&#8221; and click &#8220;OK&#8221; as shown below. Once the &#8220;Subscription/Enterprise&#8221; license is applied, the &#8220;License Type&#8221; will be changed to &#8220;Subscription/Enterprise&#8221; from &#8220;Trial&#8221; as show below. License NITRO Studio- Licenses About supportTeam View all posts by supportTeam &rarr; Related Articles How to convert the Crow Canyon Power Portal Trial license to Subscription/Enterprise license? Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "386",
    "name": "386 - How to convert the Crow Canyon Power Portal Trial license to Subscription_Enterprise license_ - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/386%20-%20How%20to%20convert%20the%20Crow%20Canyon%20Power%20Portal%20Trial%20license%20to%20Subscription_Enterprise%20license_%20-%20Crow.html",
    "title": "How To Convert The Crow Canyon Power Portal Trial License To Subscription Enterprise License Crow",
    "text": "How to convert the Crow Canyon Power Portal Trial license to Subscription/Enterprise license? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Licenses / How to convert the Crow Canyon Power Portal Trial license to Subscription/Enterprise license? How to convert the Crow Canyon Power Portal Trial license to Subscription/Enterprise license? 3097 views Less than a minute 1 Applies to: SharePoint Online and SharePoint On-Premises Description: This article describes the process to convert the Power Portal site trial license to Subscription/Enterprise license. When we install the Power Portal initially it comes with default 30 days trial license. Contact Crow Canyon Software (sales@crowcanyon.com) to get the subscription/enterprise license and more details about license validity and other details. For example, assuming that we have created a portal site in a site collection before purchasing the subscription/enterprise licenses and now we would like to convert the trial license to subscription/enterprise for that portal site. Please follow the below two steps process to apply the subscription/enterprise license. Steps: 1. Open the Power Portal &#8220;Configured Portal Sites&#8221; page For SharePoint Online: Go to root site of the site collection –&gt; site contents –&gt; open the “Crow Canyon Power Portal” app. For SharePoint On- Premises: Go to root site of the site collection –&gt; click on gear icon (cog) in the top right corner of the site –&gt; click on &#8220;Crow Canyon Power Portal&#8221; It opens the configured portal sites page and shows the existing portal sites and the corresponding associated license type with possible action buttons. See sample screenshot below. 2. Click on &#8220;Manage&#8221; button for the portal site that we wish to apply the new subscription/enterprise license. It opens a dialog and shows the site title, site URL and license type. Make sure that site is correct and license type is &#8220;Subscription or Enterprise&#8221; and click &#8220;OK&#8221;. See sample screenshot below. Once the &#8220;Subscription/Enterprise&#8221; license is applied, the &#8220;License Type&#8221; will be changed accordingly from &#8220;Trial&#8221; as show in below screenshot. License NITRO Studio- Licenses About supportTeam View all posts by supportTeam &rarr; Related Articles How to convert the Crow Canyon NITRO Trial license to Subscription/Enterprise license? Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "387",
    "name": "387 - Install Crow Canyon NITRO Studio using Site Collection Framework App.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/387%20-%20Install%20Crow%20Canyon%20NITRO%20Studio%20using%20Site%20Collection%20Framework%20App.html",
    "title": "Install Crow Canyon NITRO Studio Using Site Collection Framework App",
    "text": "Install Crow Canyon NITRO Studio using Site Collection Framework App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Install Crow Canyon NITRO Studio using Site Collection Framework App Install Crow Canyon NITRO Studio using Site Collection Framework App 1798 views 2 min , 56 sec read 0 Applies to: SharePoint Online Introduction This article describes installation of Crow Canyon NITRO Studio. This installation uses the NITRO Framework app with site collection level permissions. Please note that it is preferable to use framework app with tenant level permissions as it makes the NITRO installation and upgrades significantly easy and automated. You can refer this Article for installation instructions. However, if you can’t install the tenant level app due to any restrictions then please follow this article to complete the install using site collection level app. Prerequisites User Permissions User doing the installation needs Site Collection administrator permissions on the site collection where NITRO Studio is going to be installed Site Collection To install NITRO Studio in a new site collection, tenant administrator should create a new site collection Or installation can be done in an existing site collection Site Collection App Catalog Site collection app catalog has to be created by the tenant administrator if it doesn’t exist already. Reference: Create a site collection app catalog Once the app catalog is created, adding apps and installation can be done by site collection administrator. Access Control If &#8220;Allow access from specific IP Address locations&#8221; is enabled in Access Control for the tenancy, please refer this article and allow the the IP Addresses. Enable Custom App Authentication in O365 Some SharePoint tenancies have custom app authentication disabled. In this scenario, Custom Apps do not work in SharePoint sites and show &#8220;The Remote Server returned an error: (401) Unauthorized&#8221; error. If you encounter this error when opening NITRO Studio app, please click here to check and enable Custom App authentication. Package Information Please contact support@crowcanyon.com for the NITRO Studio Site Collection Framework package. Once downloaded to your computer, right click on the downloaded &#8220;NITRO_O365_SiteCollection.zip&#8221; file, go to properties and unblock it if it is blocked and then extract the files. Extracted package contains below files: App Name Description CrowCanyon.NitroStudio.app Main NITRO Studio App that is used to activate NITRO features in a site and manage NITRO in activated sites CrowCanyon.NITROFramework.app Used by NITRO Studio App for working with SharePoint Online. It provides the base functionality and permissions for NITRO activation and updates etc. CrowCanyon.EmailSync.app This App provides the functionality to monitor emails in a Microsoft Exchange mailbox and create those mails as SharePoint list items in O365 CrowCanyon.ApprovalWorkflow.app Configure approval workflows easily on SharePoint lists CrowCanyon.WorkflowManager.app Configure business workflows on SharePoint lists. Supports workflows on list item create/update/delete, based on date time values in the list items and also scheduled workflows (fixed time or recurring Calendar) CrowCanyon.ConfigurablePortal.app Create easy to configure and use versatile Portal sites as a front end to your SharePoint business process sites. Provides customized UI and security settings to provide a simplified and secure interface to users CrowCanyonNITROSPFxWebParts.sppkg Provides NITRO features in SharePoint modern sites. Modern UI has different types of lists and pages and all the NITRO components are fully supported CrowCanyonNITROWebPartsII.sppkg Provides NITRO features in SharePoint modern sites. Modern UI has different types of lists and pages and all the NITRO components are fully supported Installation Summary of Steps Upload all the apps (SharePoint Add-ins) listed in above table into the site collection app catalog Install below SharePoint add-ins in the root of the site collection CrowCanyon.NitroStudio.app CrowCanyon.NITROFramework.app Setup NITRO Studio Activate NITRO Studio Detailed Steps Upload SharePoint Add-ins to site collection app catalog Go to root site of the site collection (It will have URL like https:// &lt;your SharePoint tenant name&gt; .sharepoint.com/sites/ &lt;your site collection URL name&gt;) , &#8220;Site Contents&#8221; and click “Apps for SharePoint” library link to open it as shown below. Upload all the extracted SharePoint Add-ins into &#8216;Apps for SharePoint&#8217;. Select all the files except &#8220;CrowCanyonNITROSPFxWebParts.sppkg&#8221; and &#8220;CrowCanyonNITROWebPartsII.sppkg&#8221; and drag them over at once as shown below. Upload &#8220;CrowCanyonNITROSPFxWebParts.sppkg&#8221; and &#8220;CrowCanyonNITROWebPartsII.sppkg&#8221; files one by one. It will show a dialog to trust and deploy, click &#8220;Deploy&#8221; as shown below. Install SharePoint-Add ins in root site of the site collection Go to root site of the site collection (It will have URL like https:// &lt;your SharePoint tenant name&gt; .sharepoint.com/sites/ &lt;your site collection URL name&gt;) , &#8220;Site Contents&#8221; and click “+ New&#8221;, &#8220;APP&#8221; and add both &#8220;Crow Canyon NITRO Studio&#8221; and &#8220;Crow Canyon NITRO Framework&#8221; apps as shown below. When it prompt for review app permissions and data access, click &#8220;Trust It&#8221; button Setup NITRO Studio Go to root site of the site collection, site contents, open &#8220;Crow Canyon NITRO Studio&#8221; app In NITRO Studio app page, in case if we see the scripting message shown below, then click &#8220;here&#8221; link and follow the instructions. And then click &#8220;Setup&#8221; button as shown below. After the setup process is completed, it will show the success message as shown below and click &#8220;Close&#8221; button to finish the process. Activate NITRO Studio After the above setup process is completed successfully, &#8220;All SITES&#8221; section will show &#8220;Activate&#8221; button as shown below and click on it to activate the NITRO Studio to the required site(s). Note If you have installed the NITRO in Site Collection, please refer this Article to activate the NITRO for a sub site and to install the prebuilt Crow Canyon NITRO applications. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "389",
    "name": "389 - SP Online_ Manage NITRO Studio.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/389%20-%20SP%20Online_%20Manage%20NITRO%20Studio.html",
    "title": "SP Online Manage NITRO Studio",
    "text": "SP Online: Manage NITRO Studio - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SP Online: Manage NITRO Studio SP Online: Manage NITRO Studio 2280 views 1 min , 58 sec read 0 Applies to: SharePoint Online Introduction Site Collection administrator can manage the NITRO Studio for a sub site from NITRO administration page. This article describes the following features: Activate NITRO in a sub site Install pre-built NITRO applications Upgrade NITRO Studio NITRO Repair Uninstall NITRO Studio NITRO Licensing Note This article assumes that you have already installed the Crow Canyon NITRO Studio and Tenant Framework App in the Site Collection where you want to activate the NITRO for a sub site. If you are not installed these apps, please refer instructions from articl e Pre-requisites User should be a site collection administrator. User should have &#8220;Manage Web&#8221; permission level on the sub site. 1. Activate Nitro in a Sub site Go to Site Collection -> Open Crow Canyon NITRO Studio app. All sub sites in the site collection will be listed in the NITRO Studio Admin page. Click the “ACTIVATE” link to install NITRO Studio in the required sub site. By default License Type will be Trial, if we have purchased the subscription or enterprise level license then it shows those options in the License Type drop down (Trial, Subscription, Enterprise). Please contact Crow Canyon Software (sales@crowcanyon.com) to get the subscription/enterprise licenses and more details about the licensing. 2. Install pre-built NITRO Applications NITRO provides a great set of prebuilt applications developed using the NITRO framework. These full featured applications can be installed with just few clicks and then customized as required using the no-code NITRO features. Click on NITRO Applications link in the NITRO Studio Admin page, all the prebuilt applications will be available in this page. Click on the Application that you want to install in the Site Collection. Refer this article for more detailed instructions to install pre-built Crow Canyon NITRO applications. 3. Upgrade NITRO Studio Frequently Crow Canyon will release new features and issue fixes to NITRO Studio components. Users can easily upgrade the NITRO Studio for the site to have these new features.&nbsp; Refer this article for NITRO Studio release version notes To identify the NITRO Studio latest version in NITRO Admin page and the version installed in the sub site, Go to the root Site Collection -> Crow Canyon NITRO Studio app -> Identify the latest NITRO Studio version and the NITRO Studio version installed in the sub site as shown below: Click &#8220;Set UP&#8221; button to install the latest Crow Canyon NITRO Web part apps in the app catalog site To upgrade NITRO Studio for the site, click &#8220;Update&#8221; link for the sub site. This will install the latest NITRO Studio version in the sub site. To upgrade NITRO Studio for all the sites at a time, click &#8220;UPDATE ALL ACTIVATED SITES&#8221; link in the NITRO admin page as shown below:&nbsp; To upgrade NITRO Webpart apps in the sub site, navigate to NITRO Studio apps page for the sub site and click &#8220;Update&#8221; button. This will update the NITRO webpart apps in the site. 4. NITRO Repair Refer NITRO repair instructions from this article 5. Uninstall NITRO Studio Refer uninstall instructions from this article 6. NITRO Licensing When we install the NITRO Studio initially it comes with default 30 days trial license. Contact Crow Canyon Software ( sales@crowcanyon.com ) to get the subscription/enterprise license and more details about license validity and other details. If we have applied the NITRO Studio to a sub site in the site collection before purchasing the subscription/enterprise licenses and now we would like to convert the trial license to subscription/enterprise for that sub site, please refer this article to convert the trial license to Subscription/Enterprise. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "39",
    "name": "39 - How to integrate Assets with Purchase Request System_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/39%20-%20How%20to%20integrate%20Assets%20with%20Purchase%20Request%20System_.html",
    "title": "How To Integrate Assets With Purchase Request System",
    "text": "How to integrate Assets with Purchase Request System? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to integrate Assets with Purchase Request System? How to integrate Assets with Purchase Request System? 1363 views 2 min , 5 sec read 0 Applies to: SharePoint Online Description As part of the standard standalone Crow Canyon Purchasing application, it is configured such that &#8220;Received Quantity&#8221; can be updated from the Purchase items and once all the purchase items are received then Purchase Order status sets to &#8220;Fulfilled&#8221; automatically. If the Crow Canyon Assets module is also purchased, to integrate the Purchasing application with Assets application, follow this article to configure the integration. This article describes the steps to configure &#8220;Create Asset&#8221; custom action when the Purchase Category is &#8220;Hardware Asset&#8221; in Purchase Items list form. This Create Asset action auto links the Asset with the corresponding Purchase Order and also increases the &#8220;Received Quantity&#8221; by one in purchase item every time when a new Asset is generated from the Purchase Item and status of Purchase Item (&#8220;Partially Received&#8221;) and Purchase Order (&#8220;Partially Fulfilled&#8221;) will be updated automatically. Once the Assets are created for all the purchase items it sets the Purchase Order status to &#8220;Fulfilled&#8221;. Pre-requisites Crow Canyon standard Purchasing and Assets applications Summary of Steps Configure the required schema Create &#8216;Related Purchase Order&#8217; NITRO lookup column in the Assets list. Configure &#8220;Create Asset&#8221; Custom action in &#8220;Purchase Items&#8221; list Action1: &#8220;Add Item&#8221; action to create Asset Action2: &#8220;Update Item&#8221; action that increases the &#8220;Received Quantity&#8221; on every Asset creation Action3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order Action4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Standard application comes with “Update Received Quantity” which will update the received quantity in Purchase items for all categories. Update this custom action to show for all the purchase categories other than Hardware Asset since we have created &#8220;Create Asset&#8221; custom action for the Hardware Asset type purchase categories. Detailed Instructions 1. Configure the required schema a. Create &#8216;Related Purchase Order&#8217; NITRO lookup in &#8216;Assets&#8217; list Navigate to Assets site &#8211;&gt; Application Administration &#8211;&gt; Configure Lists &#8211;&gt; &#8216;Configure Assets&#8217; &#8211;&gt; &#8216;Crow Canyon NITRO Forms&#8217; &#8211;&gt; Click &#8216;Create Column&#8217; button from &#8216;FORM&#8217; ribbon &#8211;&gt; Configure &#8216;NITRO Lookup Column&#8217; as shown below: 2. Configure &#8220;Create Asset&#8221; custom action in &#8220;Purchase Items&#8221; list Go to Purchase Order site, go to &#8220;Application Administration&#8221;, click &#8220;Configure Purchase Items&#8221; under Configure Lists section. Click on &#8220;Crow Canyon Custom Actions&#8221; and configure the actions as shown in below screenshots. Action 1: &#8220;Add Item&#8221; action to create Asset Add New Action of type &#8220;Add item&#8221; as shown in below screenshot. Predefined column values Action 2: &#8220;Update Item&#8221; action that increases the &#8220;Received Quantity&#8221; on every Asset creation Add New Action of type &#8220;Update item&#8221; as shown in below screenshot. Value Expression: $add([Received Quantity|ReceivedQuantity],1) Action 3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order This custom action sets the status of the Purchase Order to Partially Fulfilled when any one of the related Purchase Item&#8217;s Received Quantity is not equal to the quantity ordered. Note: By default &#8220;Partially Fulfill PO&#8221; custom action comes with standard application installation and there is no change required in this action. We can just invoke it from this action 3 that we are configuring now. Action 4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order This custom action sets the Purchase Order status to “Fulfilled” when all the related Purchase Items are received. Note: By default &#8220;Fulfill PO&#8221; custom action comes with standard application installation and there is no change required in this action. We can just invoke it from this action 4 that we are configuring now. 3. Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Go to Purchase Items list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; Edit the “Update Received Quantity” custom action and add condition like shown below. Note: No changes are required for the actions About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "390",
    "name": "390 - How to integrate Assets with Purchase Request System_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/390%20-%20How%20to%20integrate%20Assets%20with%20Purchase%20Request%20System_.html",
    "title": "How To Integrate Assets With Purchase Request System",
    "text": "How to integrate Assets with Purchase Request System? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to integrate Assets with Purchase Request System? How to integrate Assets with Purchase Request System? 1363 views 2 min , 5 sec read 0 Applies to: SharePoint Online Description As part of the standard standalone Crow Canyon Purchasing application, it is configured such that &#8220;Received Quantity&#8221; can be updated from the Purchase items and once all the purchase items are received then Purchase Order status sets to &#8220;Fulfilled&#8221; automatically. If the Crow Canyon Assets module is also purchased, to integrate the Purchasing application with Assets application, follow this article to configure the integration. This article describes the steps to configure &#8220;Create Asset&#8221; custom action when the Purchase Category is &#8220;Hardware Asset&#8221; in Purchase Items list form. This Create Asset action auto links the Asset with the corresponding Purchase Order and also increases the &#8220;Received Quantity&#8221; by one in purchase item every time when a new Asset is generated from the Purchase Item and status of Purchase Item (&#8220;Partially Received&#8221;) and Purchase Order (&#8220;Partially Fulfilled&#8221;) will be updated automatically. Once the Assets are created for all the purchase items it sets the Purchase Order status to &#8220;Fulfilled&#8221;. Pre-requisites Crow Canyon standard Purchasing and Assets applications Summary of Steps Configure the required schema Create &#8216;Related Purchase Order&#8217; NITRO lookup column in the Assets list. Configure &#8220;Create Asset&#8221; Custom action in &#8220;Purchase Items&#8221; list Action1: &#8220;Add Item&#8221; action to create Asset Action2: &#8220;Update Item&#8221; action that increases the &#8220;Received Quantity&#8221; on every Asset creation Action3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order Action4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Standard application comes with “Update Received Quantity” which will update the received quantity in Purchase items for all categories. Update this custom action to show for all the purchase categories other than Hardware Asset since we have created &#8220;Create Asset&#8221; custom action for the Hardware Asset type purchase categories. Detailed Instructions 1. Configure the required schema a. Create &#8216;Related Purchase Order&#8217; NITRO lookup in &#8216;Assets&#8217; list Navigate to Assets site &#8211;&gt; Application Administration &#8211;&gt; Configure Lists &#8211;&gt; &#8216;Configure Assets&#8217; &#8211;&gt; &#8216;Crow Canyon NITRO Forms&#8217; &#8211;&gt; Click &#8216;Create Column&#8217; button from &#8216;FORM&#8217; ribbon &#8211;&gt; Configure &#8216;NITRO Lookup Column&#8217; as shown below: 2. Configure &#8220;Create Asset&#8221; custom action in &#8220;Purchase Items&#8221; list Go to Purchase Order site, go to &#8220;Application Administration&#8221;, click &#8220;Configure Purchase Items&#8221; under Configure Lists section. Click on &#8220;Crow Canyon Custom Actions&#8221; and configure the actions as shown in below screenshots. Action 1: &#8220;Add Item&#8221; action to create Asset Add New Action of type &#8220;Add item&#8221; as shown in below screenshot. Predefined column values Action 2: &#8220;Update Item&#8221; action that increases the &#8220;Received Quantity&#8221; on every Asset creation Add New Action of type &#8220;Update item&#8221; as shown in below screenshot. Value Expression: $add([Received Quantity|ReceivedQuantity],1) Action 3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order This custom action sets the status of the Purchase Order to Partially Fulfilled when any one of the related Purchase Item&#8217;s Received Quantity is not equal to the quantity ordered. Note: By default &#8220;Partially Fulfill PO&#8221; custom action comes with standard application installation and there is no change required in this action. We can just invoke it from this action 3 that we are configuring now. Action 4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order This custom action sets the Purchase Order status to “Fulfilled” when all the related Purchase Items are received. Note: By default &#8220;Fulfill PO&#8221; custom action comes with standard application installation and there is no change required in this action. We can just invoke it from this action 4 that we are configuring now. 3. Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Go to Purchase Items list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; Edit the “Update Received Quantity” custom action and add condition like shown below. Note: No changes are required for the actions About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "391",
    "name": "391 - Crow Canyon Onboarding Application Task Details.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/391%20-%20Crow%20Canyon%20Onboarding%20Application%20Task%20Details.html",
    "title": "Crow Canyon Onboarding Application Task Details",
    "text": "Crow Canyon Onboarding Application Task Details - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Onboarding Application Task Details Crow Canyon Onboarding Application Task Details 1081 views 1 min , 29 sec read 0 Applies to: SharePoint Online Onboarding Application Task Details &nbsp; Task Type Task Creation Task Assignment Task Information Created At Credit Card Task Credit Card task is created if the requester who is submitting the onboarding requests checks “Credit Card Eligible?” in the request form Initially, task will be assigned for the Task Owners configured in the Task Type list. After that, if required task can be reassigned by the users in site owners group or the person to whom task is assigned Type of Request First Name Last Name Assigned To Manager Mailing Address City State Zip Task Status Due Date Comments After request submission (along with active directory task) Finance Task This task is always created for any onboarding request. It is created after the Active Directory task is completed Initially, task will be assigned for the Task Owners configured in the Task Type list. After that, if required task can be reassigned by the users in site owners group or the person to whom task is assigned Type of Request Assigned To Employee Manager Primary Work Location Due Date Task Status Comments After active directory task is completed (along with application access tasks) Relocation Task Relocation task is created if the requester who is submitting the onboarding requests checks “Is Relocation Required?” in the request form Initially, task will be assigned for the Task Owners configured in the Task Type list. After that, if required task can be reassigned by the users in site owners group or the person to whom task is assigned Type of Request Assigned To Employee Manager Primary Work Location Due Date Task Status Comments After active directory task is completed (along with application access tasks) HR Task This task is always created for any onboarding request. It is created after the Active Directory task is completed Initially, task will be assigned for the Task Owners configured in the Task Type list. After that, if required task can be reassigned by the users in site owners group or the person to whom task is assigned Type of Request Assigned To Employee Manager Primary Work Location Task Status W-4 Submitted? I-9 Submitted? Task Status Insurance Form Submitted? Comments After active directory task is completed (along with application access tasks) Adhoc Task Requester can create one or more adhoc tasks directly from the onboarding request form and assign to required people. Idea is that if any adhoc work is required then that can be handled via these tasks Assigned staff will be specified by the person creating the onboarding request Title Description Assigned To Employee Due Date Task Status Comments After active directory task is completed (along with application access tasks) &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "392",
    "name": "392 - Uninstall steps for Crow Canyon NITRO Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/392%20-%20Uninstall%20steps%20for%20Crow%20Canyon%20NITRO%20Application.html",
    "title": "Uninstall Steps For Crow Canyon NITRO Application",
    "text": "Uninstall steps for Crow Canyon NITRO Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Uninstall steps for Crow Canyon NITRO Application Uninstall steps for Crow Canyon NITRO Application 2626 views 4 min , 49 sec read 2 Applies To SharePoint Online and SharePoint On-Premises (NITRO Studio) Summary of steps Remove NITRO Apps configurations Deactivate NITRO Studio for the site Remove NITRO Apps (SharePoint Online)/Deactivate NITRO Studio features (SharePoint On-Premises) Note For SharePoint Online, if any one of the Crow Canyon NITRO apps are deleted from the site collection without deleting the configurations in the subsite (i.e. where we want to uninstall the crow canyon application) then please re-add those deleted apps to the site collection and then proceed with the uninstall steps given below. Once uninstall is completed for all the sites where NITRO was activated, you can remove the NITRO Apps from the site collection. Procedure to uninstall Crow Canyon NITRO Application Detailed Steps 1. Delete the Email Sync configuration settings in Crow Canyon Email Sync App (Ignore for SharePoint On-Premises) Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Email Sync and delete the settings. 2. Delete all the workflows configured in the Crow Canyon NITRO Workflows Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO workflows and delete all the workflows 3. Delete Approval workflow configured in the Crow Canyon Advanced Approval (Ignore for SharePoint On-Premises) Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Advanced Approvals and delete all the workflows. 4. Delete Portal site from Power Portal app Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt;Power Portal and delete the portal site. 5. Delete all the configurations settings in NITRO Studio. Go to Application Administration –&gt; Crow Canyon NITRO Apps –&gt; Crow Canyon NITRO Studio and delete all the configurations from the below apps. NITRO Forms Navigate to NITRO form settings from list ribbon, list settings page, or via NITRO site page. In NITRO forms designer, click “Form Settings” in ribbon and then revert to native SharePoint forms. Please note that this is required for each list in the site that is using NITRO forms. Nitro Reports Go to all the web part pages where the reports are added (like Staff Workspace, Manager Dashboard etc.). Edit each page and delete the all the report web parts configured on the page. Once all the report web parts are deleted, navigate to NITRO Reports from Manage Reports in Report Center page, or via NITRO site page. Delete all the reports from NITRO report settings configuration page. Advanced Lookup Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Advanced Lookup and revert all the Advanced Lookup column settings. Branding Navigate to Branding from Site Settings or from NITRO site page. Go to Remove Branding tab and “Revert to standard SharePoint theme”. Go to General Settings tab and delete the Application Administration button. Revert to standard SharePoint theme: Remove Application Administration: Cascaded Lookup Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Cascaded Lookup and revert all the configured Cascaded Lookup columns. Conditional Formatting Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Conditional Formatting -&gt; Select the list and delete the conditional formatting settings. Please note that this is required in all the list where conditional formatting is configured for the columns. Custom Actions Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Custom Actions -&gt; Select the list (Tickets, Assets etc.) and delete all the settings Note: This is required for all the lists where custom actions are configured. Email Manager Delete Email Manager Settings from all the lists where it is configured Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Email Manager -&gt; Select the list -&gt; Delete the default mail template and delete Email Manager settings. Mail Template: Email Manager: Linked Items Column Delete all the linked items column settings Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Linked Items and revert all the configured linked item columns. Print Manager Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Print Manager and delete all the List Print and Item Print Templates. List Rollup Go to all the pages where the list rollups are added (like Admin Dashboard page and My Tasks page in Onboarding application). Edit each page and delete all the list rollup web parts in the page. After deleting the list rollups in web part pages, go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; List Rollup and delete all the list rollup configurations. User Info Filler Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; User Info Filler -&gt; Select the list and delete the user information settings. Please note that this is required in all the list where the user info filler settings are configured for the lists. Tiles &amp; Dials Go to all the pages where the Tiles and Dials are added (Home page etc.), edit each page and delete the Tile or dial web part from the page. After deleting all the Tiles &amp; Dials web parts, go to Application Administration -&gt; Crow Canyon NITRO Studio -&gt; Tiles &amp; Dials and delete all the settings. 6. Delete the Crow Canyon NITRO Modern UI Webparts app and Crow Canyon Product app from the site. Please go to site contents page -&gt; Move your mouse over the app item -&gt; Click ‘…’ and then click ‘Remove’ button (Ignore for SharePoint On-Premises) 7. If your site is using Crow Canyon Product license, then after deleting all the configurations and apps, please contact sharepointsupport@crowcanyon.com to convert the Product license to trial. Until the product license is converted to trial license, NITRO Studio cannot be deactivated for the site. After converting to the trial license, go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio and click “DEACTIVATE THIS SITE” 8. [Optional] For SharePoint Online, if NITRO is deactivated from all sites in the site collection and you no longer want to use NITRO in the site collection then you can uninstall the NITRO related apps. Please go to site contents of root site and remove the Crow Canyon Provider Hosted apps (Crow Canyon Email Sync, Crow Canyon Advanced Approvals, Crow Canyon Power Portal, Crow Canyon NITRO Framework/Crow Canyon NITRO Framework (Tenant), Crow Canyon NITRO Studio, Crow Canyon NITRO Workflows) 9. Deactivate Crow Canyon Site Collection Features referring instructions from here (Ignore for SharePoint Online) Feature Name Feature Folder Name Crow Canyon Workflow Manager CrowCanyonWorkflowManager Crow Canyon Mail Templates Administration CrowCanyonMailTemplates Crow Canyon NITRO Studio Feature CrowCanyon.NITROStudio_CrowCanyonNItroStudio 10. Retract and remove Crow Canyon solutions referring instructions from this article. (Ignore for SharePoint Online) 11. [Optional] Delete the Site(s) or Site Collection as required if it was a test site for NITRO. 12. Clear deleted sites/deleted site collections from subscription details page of the NITRO Studio. After deleting the sub sites from SharePoint, go to the NITRO Studio app -&gt; Click ‘SUBSCRIPTION DETAILS’ from ‘NITRO ADMIN HOME’ page -&gt; Click &#8216;Clear Deleted sites&#8217; button as shown below: If the site collection(s) are deleted, then go to any other site collection where NITRO Studio is installed -> Open the NITRO Studio app -> Click ‘SUBSCRIPTION DETAILS’ from ‘NITRO ADMIN HOME’ page -> Go to ‘All Site Collections’ tab &#8211;> Click &#8216;Clear deleted site collections&#8217; as shown below: Troubleshooting steps for NITRO STUDIO deactivation Symptom: Received below error while trying to deactivate the site: Cause: Configurations for NITRO Reports and Custom actions have not been deleted. Resolution: Delete configurations for NITRO Reports and Custom actions as per the below steps: For NITRO Reports: Navigate to the Site Settings -&gt; Site Administration -&gt; Crow Canyon NITRO Reports -&gt; Delete all the configured reports by clicking delete button as shown below: For Custom Actions Navigate to Site Settings -&gt; Site Administration -&gt; Crow Canyon NITRO Site Settings -&gt; Expand ‘NITRO Utility’ section -&gt; Manage list level user custom actions -&gt; Click ‘Go’ button as shown below: Select ‘CCSWFHistory_Common_ErrorLogs’ list -&gt; Delete all the actions as shown below: Navigate to Site Contents -&gt; Site Assets -&gt; CCS -&gt; Delete the ‘CustomActions’ folder. Once all the above steps have been performed, it is required to clear the browser’s cache and then retry uninstall process for the NITRO Apps. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "393",
    "name": "393 - How to address “Chrome detected unusual code on this page and blocker it to protect your personal in.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/393%20-%20How%20to%20address%20%E2%80%9CChrome%20detected%20unusual%20code%20on%20this%20page%20and%20blocker%20it%20to%20protect%20your%20personal%20in.html",
    "title": "How To Address “Chrome Detected Unusual Code On This Page And Blocker It To Protect Your Personal In",
    "text": "How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Troubleshooting / How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? 2661 views Less than a minute 0 Applies To: SharePoint Online Description/Symptom: To manage the content like list views, reports, tiles and dials etc. in the workspace pages, we generally edit the page and edit the required web part in the browser. Google Chrome browser may throw exception “Chrome detected unusual code on this page and blocker it to protect your personal information” when editing web part pages if the page contains at least one content editor web part that loads dynamic content. See sample screenshot below. Note: In internet explorer, same page is allowed to modify without any issues. List of Crow Canyon components that fall under this limitation: Crow Canyon Report App Crow Canyon Tiles and Dials Crow Canyon List Roll up Resolution: Disable the XSS Protection in the Chrome browser temporarily by following the below steps, make required changes and turn the settings back to its original. Steps to disable XSS protection for Chrome browser: Step 1: Right Click on Google Chrome icon and go to its properties of the browser. See screenshot below Step 2: Go to Shortcut tab and append “ --disable-xss-auditor ” to the Target Name and click on Apply. A complete argument would be something like \"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\" --disable-xss-auditor See sample screenshot below Note: Make sure all Chrome.exe processes are killed before running the command or it will have no effect. Once the pages are modified as required, we can revert the changes in the properties of the Chrome browser back to XSS protection mode by removing the “ --disable-xss-auditor ” postfix. Chrome Compatibility Page is not working Web Parts Crow Canyon Applications Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "394",
    "name": "394 - Placeholders Syntax for different types of Mail Templates in Crow Canyon Application - Crow Canyon S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/394%20-%20Placeholders%20Syntax%20for%20different%20types%20of%20Mail%20Templates%20in%20Crow%20Canyon%20Application%20-%20Crow%20Canyon%20S.html",
    "title": "Placeholders Syntax For Different Types Of Mail Templates In Crow Canyon Application Crow Canyon S",
    "text": "Placeholders Syntax for different types of Mail Templates in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Placeholders Syntax for different types of Mail Templates in Crow Canyon Application Placeholders Syntax for different types of Mail Templates in Crow Canyon Application 966 views 1 min , 4 sec read 0 Applies to: SharePoint Online and On-premises Description This article describes syntax to use placeholders in different Mail Templates in Crow Canyon Application. Syntax in different places SharePoint Online 1. Standard Auto notifications (Notification on Ticket Creation/Assignment/Completion) Go to Application Administration -&gt; Notifications -&gt; Notification on Ticket Creation/ Assignment / Completion Syntax: &lt;&lt;Column display name&gt;&gt; Ex: &lt;&lt;Assigned Staff&gt;&gt; 2. Crow Canyon Advanced Email Templates Go to Tickets list -&gt; Crow Canyon Mail Template from List ribbon -&gt; Edit the default mail template, we can directly add placeholders to body or subject from right side columns list. Syntax: [[Column Internal Name||Column Display Name]] Ex: [[AssignedStaff||Assigned Staff]] 3. Crow Canyon Workflow Manager (Send Mail actions) Go to Application Administration -&gt; Crow Canyon Nitro Apps -&gt; Crow Canyon Workflow Manager -&gt; Edit the Workflows which are having the send mail actions and modify the mail templates Syntax: [[Column Internal Name||Column Display Name]] Ex: [[AssignedStaff||Assigned Staff]] SharePoint On-premises 1. Standard auto notifications (Notification on Ticket creation/Assignment/Resolution/ Completion/ Reactivation) Go to Application Administration -&gt; Notifications -&gt; Edit Notification on Ticket Creation/ Assignment/ Resolution/ Completion/ Resolution Syntax: &lt;&lt;Column display name&gt;&gt; Ex: &lt;&lt;Assigned Staff&gt;&gt; 2. Crow Canyon Advanced Email Templates Go to Tickets list -&gt; List Settings -&gt; Crow Canyon Advanced Email Settings -&gt; Email Subject and Body, we can directly copy and paste the placeholders to body or Subject from right side Columns in list. Syntax: &lt;&lt;Column display name&gt;&gt; Ex: &lt;&lt;Assigned Staff&gt;&gt; 3. Crow Canyon Workflow Manager Go to Settings -&gt; Crow Canyon Workflow Manager -&gt; Edit the Workflows which are having the send mail actions. We can directly add placeholders to the Body or Subject from right side columns list Syntax: [[Column Internal Name||Column Display Name]] Ex: [[AssignedStaff||Assigned Staff]] About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "395",
    "name": "395 - How to configure permissions to show_hide a Quick Tile in Portal site for a SharePoint Group - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/395%20-%20How%20to%20configure%20permissions%20to%20show_hide%20a%20Quick%20Tile%20in%20Portal%20site%20for%20a%20SharePoint%20Group%20-%20Crow.html",
    "title": "How To Configure Permissions To Show Hide A Quick Tile In Portal Site For A SharePoint Group Crow",
    "text": "How to configure permissions to show/hide a Quick Tile in Portal site for a SharePoint Group - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , Power Portal / How to configure permissions to show/hide a Quick Tile in Portal site for a SharePoint Group How to configure permissions to show/hide a Quick Tile in Portal site for a SharePoint Group 3472 views 1 min , 3 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: By default, the portal quick links are visible for all the users. If we need to show particular quick link only to users present in a SharePoint group, we need to configure a script for the quick link to achieve this. Summary of Steps: Create the required quick link in the Portal site. Please refer instructions to create the quick link to auto populate with certain category and issue type from #3 in https://www.crowcanyon.help/article/197/ Configure custom script to show/hide for the users present in the SharePoint group. Detailed Steps: After the Portal quick tile is configured in the Portal settings, we can configure a custom script for the required tile to achieve this feature. Please go to the Portal site &#8211;&gt; Portal settings&#8211;&gt; Home Page Settings &#8211;&gt; Quick Links &#8211;&gt; Edit the required quick link &#8211;&gt; Click on “Custom JavaScript” &#8211;&gt; enter the below script in the script function and click on Ok and save the settings. See sample screenshots below Script: $.ajax({ url: _spPageContextInfo.webAbsoluteUrl + '/_api/web/currentuser/?$expand=groups', method: \"GET\", contentType: \"application/json;odata=verbose\", headers: { \"Accept\": \"application/json;odata=verbose\" } }).done(function(data) { var groupNames = ['SharePoint Group Name']; var userGroups = data.d.Groups.results; var foundInGroups = userGroups.filter(function(g){ return groupNames.indexOf(g.LoginName) &gt; -1}); if(!foundInGroups || foundInGroups.length == 0){ $(\"#\" + paramTileInfo.Guid).remove(); }else{ functionCallback(paramTileInfo); } }) .fail( function(error){ console.log(JSON.stringify(error)); functionCallback(paramTileInfo); }) Note: Please specify the required SharePoint group name in the above script at “Var groupNames” variable so the quick link appears in the portal only for the members present in this SP group. Additional Information: &#8211; If we need to show this tile to multiple SharePoint Groups, then replace the “Var groupNames” variables in the script like below &#8211; var groupNames = [&#8216;SharePoint Group Name&#8217;,&#8217;Other SharePoint Group Name&#8217;]; Home Tile Portal Power Portal Quick Tile Crow Canyon Applications How-To Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "396",
    "name": "396 - Email flow in Crow Canyon SharePoint Online Helpdesk application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/396%20-%20Email%20flow%20in%20Crow%20Canyon%20SharePoint%20Online%20Helpdesk%20application.html",
    "title": "Email Flow In Crow Canyon SharePoint Online Helpdesk Application",
    "text": "Email flow in Crow Canyon SharePoint Online Helpdesk application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Email flow in Crow Canyon SharePoint Online Helpdesk application Email flow in Crow Canyon SharePoint Online Helpdesk application 1343 views 1 min , 50 sec read 1 Applies to: SharePoint Online Description This article describes incoming and outgoing email flow in Crow Canyon helpdesk applications. Email flow in crow canyon application involves Email to Ticket Conversion Outgoing Emails using Crow Canyon Email Incoming Email capture (linking email to an existing ticket) Detailed information 1. Email To Ticket Conversion Crow Canyon Email to Ticket conversion works using Crow Canyon Email Sync and Product App. Crow Canyon Email Sync app reads the new messages from the configured mailbox and creates an item in &#8220;Email Tickets&#8221; list in our application. Crow Canyon Product app captures the email item created in SharePoint Email Tickets list and creates an item in &#8220;Tickets&#8221; list if there is no case id syntax present in the email subject. Subject of the email will be set as &#8220;Title&#8221; on the Ticket. Body of the email will be set as &#8220;Description&#8221; column on the ticket. Sender of the email will be set as &#8220;Requester&#8221; on the ticket. If the sender is an external user (not a valid SharePoint user), the sender email address will be set on the &#8220;Additional Requester Email&#8221; column on the ticket. Once the ticket is created in &#8220;Tickets&#8221; list, auto notifications will be sent to the requester (sender) and other configured recipients with the predefined mail template (case id syntax in mail subject) in &#8220;Notification on Ticket Creation&#8221; utility. Refer below article for more details about &#8220;Crow Canyon Email Sync&#8221; app configurations. https://www.crowcanyon.info/nitro/appmanual_v2/index.html?configuring-email-sync.html Refer this article for using the email address configured in Crow Canyon Email Sync app as from address so whenever user reply back to the auto notifications, they are captured in the &#8220;Email History&#8221; of the ticket. 2. Outgoing Emails using Crow Canyon Email &#8220;Crow Canyon Email&#8221; button available in &#8220;Tickets&#8221; list form ribbon can be used by technician to send email to users directly from SharePoint. This &#8220;Crow Canyon Email&#8221; action sends outgoing email to the selected recipients and at the same time it captures the history in &#8220;Email Tickets&#8221; based on the configurations. If we configure the &#8220;From Address&#8221; with the &#8220;email address&#8221; configured in email sync setting then whenever user reply they directly comes to mailbox and that will be processed to link with existing ticket. Please refer &#8220;Email Manager&#8221; section in below article for more details about &#8220;Crow Canyon Email&#8221; configurations. https://www.crowcanyon.info/nitro/appmanual_v2/index.html?configuring-email-settings.html Note: If we configure email sync setting mailbox address as &#8220;From Address&#8221;, then there is a chance that if the recipient configures the out of the box auto reply then these mails comes to mailbox but they should not create duplicate/junk tickets. To address this, please configure the Email Filters settings in &#8220;Email Sync&#8221; settings. 3. Incoming Email capture (linking email to an existing ticket) When users reply to auto notifications and/or email sent using &#8220;Crow Canyon Email&#8221; action button that has case id syntax in the subject, that reaches to &#8220;Email Tickets&#8221; list using Crow Canyon Email Sync app. Crow Canyon Product app catches this email and links the email to &#8220;Ticket&#8221; and is available in &#8220;Email History&#8221; in the ticket. &nbsp; Note: If outgoing emails are not working in Crow Canyon application, please refer outgoing emails troubleshooting article from: https://www.crowcanyon.help/article/341/ &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "397",
    "name": "397 - Troubleshooting steps for Crow Canyon NITRO Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/397%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20NITRO%20Applications.html",
    "title": "Troubleshooting Steps For Crow Canyon NITRO Applications",
    "text": "Troubleshooting steps for Crow Canyon NITRO Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Forms , Troubleshooting / Troubleshooting steps for Crow Canyon NITRO Applications Troubleshooting steps for Crow Canyon NITRO Applications 3754 views 2 min , 37 sec read 2 Applies To: SharePoint Online and SharePoint OnPremises Description: This article describes troubleshooting steps for Crow Canyon NITRO Forms. Rich text control not wrapping up in the column 401 unauthorized error appearing for NITRO Apps Portal Forms configured for the Tickets list does not appear in NITRO Forms Modal Dialog not opening in Custom Actions and NITRO Forms Designer pages Symptom 1: In multiple lines of enhanced rich text control, data is coming in a single row instead of multiple lines. In other words text wrap is not happening (see screenshot below) Cause: If we copy the information from a browser and paste into the rich text column directly, html tags like “&lt;pre&gt;” will also be copied along with the text and that could cause these type of issues. If &lt;Pre&gt; tag present in the html source code of the multiline rich text control then this issue should happen. Fix: Remove the &lt;Pre&gt; tag from html source code of the multiline rich text column. Edit the item and remove the &lt;Pre&gt; tag in the html source code. Sample screenshot: Preventive Action: To prevent this issue, work around is to copy the information to a notepad and then paste this information into the multiple lines of rich text column Symptom 2: Crow Canyon NITRO Apps (NITRO Studio, Power Portal, Email Sync, Advanced Approvals) does not open and throws 401 unauthorized error even for site collection Administrator access Cause: Global Admin can set the access control settings in the tenancy to allow only certain IP Addresses, and this issue could happen certain IP Addresses that our Crow Canyon Apps use are also blocked. Resolution: Our Crow Canyon Apps use certain IP addresses and these need to be added to the SharePoint Administration Access Control to get the apps working. Note that all these IP addresses are from Microsoft Azure data centers where Crow Canyon Apps are hosted. IP Address to be allowed: 4.151.16.183,4.156.176.15,4.156.176.32,4.156.176.34,4.156.176.53,4.156.176.83,4.156.176.107, 4.156.176.139,4.156.176.191,4.156.176.214,4.156.176.221,4.156.176.228,4.156.177.93,4.156.177.146, 4.249.144.27,13.64.111.53,13.64.111.83,13.64.111.88,13.65.212.252,13.66.36.172,13.66.37.11,13.66.37.235, 13.84.40.155,13.84.55.90,13.84.129.10,13.89.172.2,20.62.137.12,20.62.142.154,20.66.67.46,20.66.68.19,20.66.68.27, 20.66.68.120,20.66.69.89,20.66.70.135,20.75.145.80,20.75.150.123,20.75.150.159,20.75.150.168,20.75.150.205, 20.75.150.206,20.75.150.211,20.75.150.226,20.75.151.8,20.75.151.29,20.75.151.99,20.75.151.170,20.75.151.173, 20.75.151.231,20.94.150.147,20.94.151.109,20.94.151.161,20.94.151.251,20.114.80.165,20.114.81.54,20.118.112.218, 20.118.116.205,20.118.119.70,20.119.0.45,20.168.147.125,20.168.147.153,20.168.147.216,20.168.147.225,20.168.148.8, 20.221.41.255,20.221.45.181,20.221.45.212,20.221.45.234,20.221.45.243,20.221.45.248,20.221.45.250,20.221.46.19, 20.221.46.24,20.221.46.84,20.221.46.88,20.221.46.94,20.225.16.176,20.225.16.190,20.225.16.209,20.225.17.45,20.225.17.78, 20.225.17.88,20.225.17.101,20.225.17.138,20.225.19.181,20.236.162.63,20.245.208.27,20.253.146.226,23.98.128.142, 23.98.144.222,23.99.133.160,23.99.229.34,23.99.231.53,23.101.112.78,23.101.117.42,40.83.147.125,40.84.136.198,40.88.197.12, 40.112.243.97,40.119.12.75,52.152.96.63,52.152.96.132,52.152.96.170,52.152.97.38,52.152.97.112,52.152.97.159,52.152.97.202, 52.152.98.54,52.152.98.95,52.152.98.244,52.152.98.251,52.152.99.55,52.152.99.56,52.152.99.104,52.152.99.215,52.152.100.37, 52.152.100.50,52.152.100.69,52.152.100.75,52.152.100.76,52.152.100.78,52.152.100.99,52.152.100.106,52.152.100.116, 52.152.100.119,52.152.100.120,52.152.100.203,52.152.100.232,52.152.100.247,52.153.120.144,52.153.120.252, 52.153.121.79,52.153.121.89,52.153.121.176,52.153.121.231,52.171.127.103,52.171.127.129,52.171.127.135, 52.171.127.140,52.171.127.142,52.171.127.145,52.249.32.54,52.249.60.60,65.52.33.205,104.42.209.107, 104.44.128.13,104.44.128.14,104.44.128.15,104.44.128.16,104.44.128.17,104.45.222.255,104.45.223.170,104.45.223.179, 104.210.148.43,104.214.118.162,138.91.140.114,138.91.142.39,138.91.144.81,138.91.145.153,138.91.145.239,138.91.145.243, 138.91.147.198,138.91.148.104,138.91.150.212,138.91.151.27,138.91.187.142,138.91.188.46,138.91.189.187,138.91.189.240, 138.91.190.35,138.91.190.47,138.91.190.217,138.91.191.145,168.61.6.36,168.61.6.126,168.61.189.180,168.61.214.234, 168.62.209.142,191.236.106.123,191.239.49.193,191.239.50.228,191.239.52.104,191.239.53.140 Please go to O365 Admin Center &#8211;&gt; SharePoint Admin Center &#8211;&gt; Policies &#8211;&gt; Access Control &#8211;&gt; Network Location and add the above IP Addresses. See sample screenshot below. Note that this step is required only if &#8216;Allow Access only from specific IP Address ranges&#8217; setting is enabled. Ensure that NITRO Studio IP Addresses are appended to the existing IP Addresses in this setting already and save the settings. Symptom 3: Portal Forms configured for the Tickets list are not available in the back end NITRO Forms Cause: The designer forms configured for the Tickets list in the Portal are different from the NITRO Forms configured for the same list in the back end site. If we would like to have similar columns appear in the back end as well, we need to configure the NITRO Forms similarly in the back end site as well. Symptom 4 When we open custom actions from a list, the modal dialog hangs during the loading process. Following error appears in the browser console logs (press F12 to see the logs): Cause: This issue could happen if a custom master page is used in the site that loads jQuery file without checking if there jQuery is already loaded on the page. Any custom script or web part that overrides already loaded jQuery can cause this issue. Fix: Replace the line 1 with line 2 in the master page to check before loading the jQuery. Generally master pages loads the jQuery file from style library so we are taking this location as an example in this article (Line 1 below). If the jQuery is being loaded from a different location then please update the file path accordingly. Go to Site Settings -&gt; Master Pages under Web Designer Galleries -&gt; Download the master page and replace the below line and upload it again. Once the updated master page is uploaded, publish the major version. Line 1: &lt;script src=\"/Style%20Library/js/jquery-3.2.1.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt; Line 2: &lt;script type=\"text/javascript\"&gt; if (typeof jQuery == 'undefined') { document.write(unescape('%3Cscript src=\"/Style%20Library/js/jquery-3.2.1.min.js\"%3E%3C/script%3E')); } &lt;/script&gt; Symptom 5: (Applies to: SharePoint On-Premises) NITRO Studio app shows the below error message. Cause: Blocked URLs and IP Addresses by Firewall Firewall is blocking some or all of the dependency URL(s) and IP Address(s) listed in the resolution below. Resolution: Update firewall settings to whitelist the below URLs and IP addresses. URLs: https://nitrostudio.azurewebsites.net https://ccsportal.azurewebsites.net IP Addresses: Ensure that these IP addresses are whitelisted and are not blocked by the network security. Note that all these IP addresses are from Microsoft Azure data centres where Crow Canyon Apps are hosted. &nbsp; 104.44.128.14 104.44.128.15 104.44.128.16 104.44.128.17 104.214.52.79 13.65.212.252 13.66.37.235 13.66.36.172 13.84.40.155 13.66.37.11 40.84.136.198 23.98.144.222 23.98.128.142 40.124.36.136 &nbsp; NITRO Forms NITRO Studio- Forms Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: NITRO on the Go! NITRO Studio Workshop: Deep Dive into NITRO Forms Active Directory Groups integration with NITRO Using Form Event Actions on auto-populated lookup column Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "398",
    "name": "398 - Steps to integrate Bot Application with Crow Canyon applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/398%20-%20Steps%20to%20integrate%20Bot%20Application%20with%20Crow%20Canyon%20applications.html",
    "title": "Steps To Integrate Bot Application With Crow Canyon Applications",
    "text": "Steps to integrate Bot Application with Crow Canyon applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps to integrate Bot Application with Crow Canyon applications Steps to integrate Bot Application with Crow Canyon applications 3788 views 7 min , 0 sec read 0 Applies to: SharePoint Online Description Crow Canyon Support Bot application utilizes your existing data to solve common user issues using sophisticated NLP bases search and Crow Canyon&#8217;s proprietary matching and ranking algorithm. Bot &#8220;learns&#8217; from resolved and unresolved cases to get better at solving user problems over time. Click here to see more detailed diagram. This article describes the steps to configure the Crow Canyon Bot application. Detailed Steps There are four steps to configure the Bot. Bot Application Configuration Email Domain Configuration Bot Analytics Configurations Bot Channels Getting started to configure the Bot application: Go to the site collection root site, open the Crow Canyon NITRO Studio, that takes us to &#8220;NITRO Admin Home&#8221; page. Click on the &#8220;AI Applications&#8221; link available on the top link bar section, this navigates us to the page that shows existing configurations and we can start new configuration from the same page. Click on &#8220;New Bot Application&#8221; link to get started. 1. Bot Application Configuration 1.a. Site Configuration Title : If bot is used for multiple applications then users select the application for which they need assistance for (e.g. “IT HelpDesk”, “Request Management” etc.). It should be unique across tenancy Application Type : Type of the application for which this bot is configured Site : SharePoint Site where Crow Canyon application is installed. This is used for searching the solution and creating Ticket/Request/Work Order etc. Once the Crow Canyon application site is selected, all the other properties &#8220;Knowledge Base List&#8221;, &#8220;Sort Column&#8221;, &#8220;Tickets List&#8221;, &#8220;Category Column&#8221;, &#8220;Issue Type Column&#8221;, &#8220;Description Column&#8221;, &#8220;Requester Column&#8221;, and &#8220;Requester Email Column&#8221; options will be auto populated. 1.b. Knowledge Base List Configurations Knowledge Base List : Bot will search this list for the solutions based on user input text Knowledge Base Display Form URL: It auto populates the KB list&#8217;s back end default form URL, if required we can replace with corresponding portal form URL. It supports ##ItemID## placeholder to construct the URL. Category Column: This column is used to search KB articles with matched pass phrases that are resolved to categories Issue Type Column: This column is also used to search KB articles with matched pass phrases that are resolved to issue types Sort Column : This column is used to sort the KB articles when top 5 articles are required to be shown to user Sort Order : Sorting order for KB articles for the above sort column 1.c. Tickets List Configurations Ticket List: This list configuration is used for two different purposes. Used for creating Ticket/Request/Work Order as per user input when problem is not resolved. Used to find solutions based on existing items for similar problems For Ticket/Request/Work Order Creation, select below mentioned columns: Ticket Display Form URL It auto populates the Ticket list&#8217;s back end default form URL, if required we can replace with corresponding portal form URL. It supports ##ItemID## placeholder to construct the URL. Category Column Issue Type Column Description Column Requester Column Requester Email Column Status Column Used to search for tickets that are resolved (Resolved/Closed based on Resolved Status value configured) and find the linked KB articles to the result resolved tickets and show in search results in Bot. Resolved Status Value Archived Tickets List Crow Canyon application has archival feature to address SharePoint list view threshold and performance. Multiple archived tickets list can be configured in the application based on the tickets frequency. This configuration in Bot application configuration is used to search archived tickets in addition to tickets data and find the linked KB articles and show them in search result in Bot. 1.d. LUIS Application Configuration LUIS Application : Please create the LUIS application and specify the details after selecting custom option. Details of creating LUIS application are given below. Default is only for testing purpose and should not be used for production bot. To create the LUIS application, refer Creating LUIS App section in this article below. Application Key : The ID of your LUIS application Subscription Key : Authoring Key, available in Luis.ai site under Account Settings Entity for Category : Define Entity name that has the values for Ticket/Request/Work Order. We need to enter the categories entity name that we have configured in the Luis application. 1.e. Search Schema Manage Properties: More Info Search discovers information by crawling items on your site. The discovered content and metadata are called properties of the item. The search schema has a list of crawled properties that helps the crawler decide what content and metadata to extract. Related KB Articles : Enter Related KB Articles Managed Property alias. If it doesn’t exist, then create managed property for Related KB Articles column (in Ticket list). Refer Search Configurations in site Category : Enter Category Managed Property alias. If it doesn’t exist, then create managed property for Category column (in Knowledge Base list) Issue Type : Enter Managed Property alias. If it doesn’t exist, then create managed property for Issue Type column (Knowledge Base List) in crawled properties Note: If we do not find the crawled property to map (for example, ows_RelatedKBArticles), go the list that has this column, list settings, Advanced Settings, click &#8220;Reindex List&#8221;. We can continue with other configurations as SharePoint may take time to get the re-indexing done for the list. 2. Email Domains Bot prompts user to login with their Microsoft O365 account. It uses the domain of logged in user to identify the bot applications that user can access. It is mandatory to specify all the required domains in this section. If no domains are added then BOT won&#8217;t respond for anyone. 3. Bot Analytics Configurations Go to Crow Canyon NITRO Studio, NITRO Admin Home, Nitro Applications, Updates, click on &#8220;BOT ANALYTICS&#8221;, select the site and click OK. This creates the &#8220;Chat Bot Admin Dashboard&#8221; and &#8220;Performance Reports&#8221;. This helps admins recognize the area of improvements to Knowledge Base system so Bot &#8220;learns&#8221; more at solving user problems over time. 4. Bot Channels There are three possible channels for the Bot as listed below. &#8220;Teams&#8221; is the only supported channel for Crow Canyon Bot. Teams Web Chat Skype Channel Name Login Method Option Selection Supported? Teams Additional login is not required Clickabe Sample options are like below: If there are multiple applications configured then it shows all options and we need to select one of them. Based on problem description entered, it shows the result KB links and click to open the required KB Yes Skype Outside the app Clickable No support is provided by Crow Canyon Web Chat Outside the app Not Clickable, user has to type/copy paste the options No support is provided by Crow Canyon How to add Bot to Teams Account Teams is a convenient channel for bot as it doesn&#8217;t require you to login. Click this link to add bot to the Teams account. How to add Skype in SharePoint site page (classic page) Note: No Support is provided by Crow Canyon Open SharePoint Page in Internet Explorer Click on Edit Page menu under Gear icon (top right Corner), click on add web part, select &#8220;Content Editor&#8221; under &#8220;Content and Management&#8221; group, add Content Editor Web Part on Page with below Content. Please add the below content as it is including id. &lt;span class=\"skype-button bubble\" data-bot-id=\"bb501dd9-6ae5-4ec8-9f8c-e0dae444efde\"&gt;&lt;/span&gt; &lt;script src=\"https://swc.cdn.skype.com/sdk/v1/sdk.min.js\"&gt;&lt;/script&gt; // Note: If above is not working, you can try the below script which may have newer but not yet released changes // &lt;script src=\"https://latest-swc.cdn.skype.com/sdk/v1/sdk.js\"&gt;&lt;/script&gt; How to add Web Chat in SharePoint site page (classic page) Note: No Support is provided by Crow Canyon Open SharePoint Page in Internet Explorer Click on Edit Page menu under Gear icon (top right Corner), click on add web part, select &#8220;Content Editor&#8221; under &#8220;Content and Management&#8221; group, add Content Editor Web Part on Page with below Content. &lt;iframe src='https://webchat.botframework.com/embed/CrowCanyonDemoBot?s=dmkPOKKXbhw.cwA.A5g.QFeixgAlW1nJTADi49eabQu3s82ZC_-OjMh7iHE3ClE' style='min-width: 400px; width: 100%; min-height: 500px;'&gt;&lt;/iframe&gt; Search configurations in site To create search schema manage properties, please follow below steps: 1.Go to Root Site &#8211; Site Settings 2. Under Site Collection Administration, click on &#8220;Search Schema&#8221; Link 3. Filter &#8220;RefinableString&#8221; Managed Property 4. Click on unused RefinableString__ property 5. Specify alias name for property, use this alias in Bot configuration &#8211; search schema Column Property 6. Scroll to “Mappings to crawled properties” section, click on Add a Mapping button: 7. Search crawled property with column internal Name for which you want to create manage property. Then select the property (starts with ows_[Column Internal Name]) and click Ok. 8. Property is now added in Mappings to crawled properties List box 9. Click on Save Button. 10. Re-index List: Go to List Settings Page =&gt; Click on Advanced Settings =&gt; Click on Re-index Button. Note: If you are unable to find crawled property for list columns then re-index the list. It takes about an hour to re-index the list Creating a LUIS App Create a LUIS app in the LUIS site (https://www.luis.ai/) Sign-in with O365 credentials On My Apps page, select Create new app In the dialog box, name your application (For ex. &#8220;LUIS HelpDesk Bot&#8221;) Choose your application culture (for LUIS HelpDesk Bot app, choose English), and then click Done Click on the created App (LUIS HelpDesk Bot) Click on Entities (Left Side Navigation Panel) Click on &#8220;Add prebuilt entity&#8221; In Dialog, Type keyPhrase inside the search box and then select keyPhrase entity and then select Done. Click on &#8220;Create new entity&#8221; Enter Entity Name (such as ITCategories) Select &#8220;List&#8221; Entity type, and then select Done. Click on Category Entity to Configure Values (import values form category.json, to generate this file go to Bot Application Page and In Luis custom section click on download Category.json file). Note, you can modify this file to enter more variations for issues type text Click on &#8220;Train&#8221; button on right top corner (Initially Train button has red dot indication and once we clicked, it changes to green dot indication) Once the Train is completed (green) then click on &#8220;Publish&#8221; button and wait to see &#8220;Publishing complete&#8221; message How to Use Bot application? This section shows the sample usage along with sample output screenshots. 1. Open Microsoft Teams (It supports both Desktop/Web versions), go to &#8220;Crow Canyon Support Bot&#8221;, type &#8220;hi&#8221;. It does not require additional sign-in. It prompts to select the bot application if there are multiple bot applications configured as shown below. 2. Click on the desired application then it asks to describe your problem as shown below. Enter the problem and hit Enter. 5. Based on the problem description (Keywords in the question), it shows the KB Article links. We can click and open the KB Article and see the information as shown below. 6. Based on whether the article is helpful or not, one can click one of the available options (My issue is resolved, Enter more details, I want to try something else, I want to submit a ticket, I want to start over). If we click on either &#8220;My issue is resolved&#8221;, it shows the &#8220;Thank You. Have a nice day!&#8221; message. then again the process starts from #2 i.e. we have to start from &#8220;hi&#8221; but this time we don&#8217;t need to sign-in again. If we click on &#8220;Enter more details&#8221;, we can enter the problem description in different words. If we click on &#8220;I want to start over&#8221; then it shows the available bots and we can choose the required service area bot and start again. If we click on &#8220;I want to try something else&#8221; then it shows all the stored categories so we can select required category then it shows available issue types and then it shows articles based on the issue type selection. If we click on &#8220;I want to submit a Ticket&#8221;, it creates a ticket with title, category, issue type, description, and requester information and shows the ticket edit form link as shown below. Troubleshooting Bot application issues Symptom Bot application conversation chat is disabled with a message like &#8220;Sending new messages to this bot has been disabled by your administrator&#8221; as shown below. Cause &#8220;Allow Uploading custom apps&#8221; is disabled in Teams Admin Center. Resolution Go to O365 Admin Center, open &#8220;Teams&#8221; Admin Center, expand &#8220;Teams apps&#8221;, click on &#8220;Setup policies&#8221;, open &#8220;Global (Org-wide default)&#8221;, please turn on &#8220;Allow uploading custom apps&#8221; option as shown below. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "399",
    "name": "399 - How to Configure NLP based list search in Crow Canyon Search Web Part_ - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/399%20-%20How%20to%20Configure%20NLP%20based%20list%20search%20in%20Crow%20Canyon%20Search%20Web%20Part_%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "How To Configure NLP Based List Search In Crow Canyon Search Web Part Crow Canyon Software Suppor",
    "text": "How to Configure NLP based list search in Crow Canyon Search Web Part? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Configure NLP based list search in Crow Canyon Search Web Part? How to Configure NLP based list search in Crow Canyon Search Web Part? 1647 views 1 min , 1 sec read 0 Introduction This article describes the steps to follow to configure NLP based list search in Crow Canyon Search web part. Pre-requisites: 1.Crow Canyon SPFx app needs to be installed in the site 2. A modern page with &#8220;Knowledge Base Search List&#8221; web part. web part needs to be configured with required Web URL and List. Configure LUIS Application Please create the LUIS application and specify the details. To create the LUIS application, refer Creating LUIS App section in this article below. Region: Application Key : The region in which you publish your LUIS app corresponds to the region or location you specify in the Azure portal when you create an Azure LUIS endpoint key. When you publish an app, LUIS automatically generates an endpoint URL for the region associated with the key Application Key : The ID of your LUIS application Authoring Key : Authoring Key is available in Luis.ai site under Account Settings Creating a LUIS App Create a LUIS app in the LUIS site (https://www.luis.ai/) Sign-in with O365 credentials On My Apps page, select Create new app In the dialog box, name your application (For ex. “LUIS SharePoint List Search”) Choose your application culture (for LUIS HelpDesk Bot app, choose English), and then click Done Click on the created App (“LUIS SharePoint List Search”) Click on Entities (Left Side Navigation Panel) Click on “Add prebuilt entity” In Dialog, type keyPhrase inside the search box and then select keyPhrase entity and then select Done. You can add more entities as per requirement in your app through the Entities list on the Entities LUIS offers two main types of entities: prebuilt entities, and your own custom entities. For more details click here Click on “Train” button on right top corner Once “Train” is completed (green) then click on “Publish” button and wait till “Publishing complete” message appears About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "4",
    "name": "4 - Troubleshooting Steps For Crow Canyon Data Sync Service.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/4%20-%20Troubleshooting%20Steps%20For%20Crow%20Canyon%20Data%20Sync%20Service.html",
    "title": "Troubleshooting Steps For Crow Canyon Data Sync Service",
    "text": "Troubleshooting Steps For Crow Canyon Data Sync Service - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting / Troubleshooting Steps For Crow Canyon Data Sync Service Troubleshooting Steps For Crow Canyon Data Sync Service 2543 views 1 min , 15 sec read 1 This article lists the fixes for common issues in Crow Canyon Data Sync Tool Crow Canyon Data Sync Service Stopping immediately Items from Database do not sync to the SharePoint list Issue Symptom 1: Exception occured while running the Sync Process. Erro Details: Login failed for the user the user &#8216;User Account&#8217;. Cause: SQL authentication is set to Windows Authentication mode only. Resolution: Set mixed mode authentication in SQL by following below steps and restart the CrowCanyon Data Sync service. Steps to enable the Mixed Mode Authentication: Open SQL Server Management Studio Express. Choose Windows Authentication from the Authentication drop down list. Click Connect to open the Microsoft SQL Server Management Studio Express window. Right-click the SQL instance and choose Properties to open the Server Properties &#8211; window. Click Security on the left hand side. Choose both SQL Server and Windows Authentication Mode on the right side. Click OK to close the Server Properties &#8211; window. Right-click the SQL instance and choose Restart . Click Yes to restart the SQL server. Validation: To check the authentication, logon to the SQL studio with SQL Authentication mode and it should allow logging in without any errors. Issue Symptom 2: Crow Canyon Data Sync service runs but no items from the database will be synced in SharePoint. This generally happens when some of the files like .exe, .dll are downloaded from the browser and are not trusted. In this case, we do not see any error but the items sync will not start at all. Cause: Crow Canyon Data Sync service has dependency assembly files “Microsoft.SharePoint.Client.dll, Microsoft.SharePoint.Client.Runtime.dll” and they should present in the service installation folder and they are missed. Resolution: Stop Crow Canyon Data Sync service, place the missing dependency files in the installation folder, start the Crow Canyon Data Sync service. Also, unblock all the package files in the installation folder by following below steps. Right Click on the “Microsoft.SharePoint.Client.dll “ file, click properties, if “Unblock” button is visible under “General” tab at the bottom in the security column, click unblock. See sample screenshot below. Repeat the above steps for all the files in the installation folder (Configuration.xml, CrowCanyon.DBSyncService.exe, InstallUtil.exe, Microsoft.SharePoint.Client.dll and Microsoft.SharePoint.Client.Runtime.dll). Data Sync SQL Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles Troubleshooting issues related to Crow Canyon Advanced Approvals App Troubleshooting steps for Crow Canyon NITRO Applications How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "40",
    "name": "40 - Troubleshooting Steps For Crow Canyon Data Sync Service.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/40%20-%20Troubleshooting%20Steps%20For%20Crow%20Canyon%20Data%20Sync%20Service.html",
    "title": "Troubleshooting Steps For Crow Canyon Data Sync Service",
    "text": "Troubleshooting Steps For Crow Canyon Data Sync Service - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting / Troubleshooting Steps For Crow Canyon Data Sync Service Troubleshooting Steps For Crow Canyon Data Sync Service 2543 views 1 min , 15 sec read 1 This article lists the fixes for common issues in Crow Canyon Data Sync Tool Crow Canyon Data Sync Service Stopping immediately Items from Database do not sync to the SharePoint list Issue Symptom 1: Exception occured while running the Sync Process. Erro Details: Login failed for the user the user &#8216;User Account&#8217;. Cause: SQL authentication is set to Windows Authentication mode only. Resolution: Set mixed mode authentication in SQL by following below steps and restart the CrowCanyon Data Sync service. Steps to enable the Mixed Mode Authentication: Open SQL Server Management Studio Express. Choose Windows Authentication from the Authentication drop down list. Click Connect to open the Microsoft SQL Server Management Studio Express window. Right-click the SQL instance and choose Properties to open the Server Properties &#8211; window. Click Security on the left hand side. Choose both SQL Server and Windows Authentication Mode on the right side. Click OK to close the Server Properties &#8211; window. Right-click the SQL instance and choose Restart . Click Yes to restart the SQL server. Validation: To check the authentication, logon to the SQL studio with SQL Authentication mode and it should allow logging in without any errors. Issue Symptom 2: Crow Canyon Data Sync service runs but no items from the database will be synced in SharePoint. This generally happens when some of the files like .exe, .dll are downloaded from the browser and are not trusted. In this case, we do not see any error but the items sync will not start at all. Cause: Crow Canyon Data Sync service has dependency assembly files “Microsoft.SharePoint.Client.dll, Microsoft.SharePoint.Client.Runtime.dll” and they should present in the service installation folder and they are missed. Resolution: Stop Crow Canyon Data Sync service, place the missing dependency files in the installation folder, start the Crow Canyon Data Sync service. Also, unblock all the package files in the installation folder by following below steps. Right Click on the “Microsoft.SharePoint.Client.dll “ file, click properties, if “Unblock” button is visible under “General” tab at the bottom in the security column, click unblock. See sample screenshot below. Repeat the above steps for all the files in the installation folder (Configuration.xml, CrowCanyon.DBSyncService.exe, InstallUtil.exe, Microsoft.SharePoint.Client.dll and Microsoft.SharePoint.Client.Runtime.dll). Data Sync SQL Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles Troubleshooting issues related to Crow Canyon Advanced Approvals App Troubleshooting steps for Crow Canyon NITRO Applications How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "400",
    "name": "400 - Troubleshooting Steps For Crow Canyon Data Sync Service.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/400%20-%20Troubleshooting%20Steps%20For%20Crow%20Canyon%20Data%20Sync%20Service.html",
    "title": "Troubleshooting Steps For Crow Canyon Data Sync Service",
    "text": "Troubleshooting Steps For Crow Canyon Data Sync Service - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting / Troubleshooting Steps For Crow Canyon Data Sync Service Troubleshooting Steps For Crow Canyon Data Sync Service 2543 views 1 min , 15 sec read 1 This article lists the fixes for common issues in Crow Canyon Data Sync Tool Crow Canyon Data Sync Service Stopping immediately Items from Database do not sync to the SharePoint list Issue Symptom 1: Exception occured while running the Sync Process. Erro Details: Login failed for the user the user &#8216;User Account&#8217;. Cause: SQL authentication is set to Windows Authentication mode only. Resolution: Set mixed mode authentication in SQL by following below steps and restart the CrowCanyon Data Sync service. Steps to enable the Mixed Mode Authentication: Open SQL Server Management Studio Express. Choose Windows Authentication from the Authentication drop down list. Click Connect to open the Microsoft SQL Server Management Studio Express window. Right-click the SQL instance and choose Properties to open the Server Properties &#8211; window. Click Security on the left hand side. Choose both SQL Server and Windows Authentication Mode on the right side. Click OK to close the Server Properties &#8211; window. Right-click the SQL instance and choose Restart . Click Yes to restart the SQL server. Validation: To check the authentication, logon to the SQL studio with SQL Authentication mode and it should allow logging in without any errors. Issue Symptom 2: Crow Canyon Data Sync service runs but no items from the database will be synced in SharePoint. This generally happens when some of the files like .exe, .dll are downloaded from the browser and are not trusted. In this case, we do not see any error but the items sync will not start at all. Cause: Crow Canyon Data Sync service has dependency assembly files “Microsoft.SharePoint.Client.dll, Microsoft.SharePoint.Client.Runtime.dll” and they should present in the service installation folder and they are missed. Resolution: Stop Crow Canyon Data Sync service, place the missing dependency files in the installation folder, start the Crow Canyon Data Sync service. Also, unblock all the package files in the installation folder by following below steps. Right Click on the “Microsoft.SharePoint.Client.dll “ file, click properties, if “Unblock” button is visible under “General” tab at the bottom in the security column, click unblock. See sample screenshot below. Repeat the above steps for all the files in the installation folder (Configuration.xml, CrowCanyon.DBSyncService.exe, InstallUtil.exe, Microsoft.SharePoint.Client.dll and Microsoft.SharePoint.Client.Runtime.dll). Data Sync SQL Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles Troubleshooting issues related to Crow Canyon Advanced Approvals App Troubleshooting steps for Crow Canyon NITRO Applications How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "401",
    "name": "401 - Columns used in Out of the box features in Crow Canyon Assets Management application - Crow Canyon S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/401%20-%20Columns%20used%20in%20Out%20of%20the%20box%20features%20in%20Crow%20Canyon%20Assets%20Management%20application%20-%20Crow%20Canyon%20S.html",
    "title": "Columns Used In Out Of The Box Features In Crow Canyon Assets Management Application Crow Canyon S",
    "text": "Columns used in Out of the box features in Crow Canyon Assets Management application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Columns used in Out of the box features in Crow Canyon Assets Management application Columns used in Out of the box features in Crow Canyon Assets Management application 982 views Less than a minute 0 Applies to: SharePoint Online and On-Premises Description This article describes about the columns that are used in out of the box features in Crow Canyon Assets Management application. These columns can not be deleted from the Assets list but they can be renamed as required. Rest of the fields in the Assets list can be deleted or renamed as required. We can create our own set of fields and configure the tabs and permissions as required. Check In/Check Out feature Check Out/In Status Checked Out To Expected Check In Date Check In Date Check out Date Check Out/In Status Asset History Asset Maintenance Asset Type Enable Maintenance Last Maintenance Date Next Scheduled Maintenance Total Maintenance Cost Tasks Assigned To Reports Department Category Status Service Type Vendor Location Associated Items Warranties Contracts Manuals Depreciated Cost calculation Depreciable Life Depreciation Method Purchase Price Salvage Value Depreciable Life Purchase Date Depreciation Value Date Other Columns Title Asset Category Asset Description Make Model Model No Serial Number Asset Info link Building Location Room Rack Bar Code Number &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "402",
    "name": "402 - Control access to Tickets in Crow Canyon applications (IT, Facilities and Requests Management) - Cro.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/402%20-%20Control%20access%20to%20Tickets%20in%20Crow%20Canyon%20applications%20%28IT%2C%20Facilities%20and%20Requests%20Management%29%20-%20Cro.html",
    "title": "Control Access To Tickets In Crow Canyon Applications (IT, Facilities And Requests Management) Cro",
    "text": "Control access to Tickets in Crow Canyon applications (IT, Facilities and Requests Management) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , NITRO Studio- Workflows / Control access to Tickets in Crow Canyon applications (IT, Facilities and Requests Management) Control access to Tickets in Crow Canyon applications (IT, Facilities and Requests Management) 3235 views Less than a minute 3 Applies To SharePoint Online and SharePoint On-Premises Description This article describes the steps to configure item level permissions using Crow Canton NITRO Workflows such that Tickets created for a particular Category will be visible to particular SharePoint user(s) or SharePoint group(s). This can be done based on some other parameter instead of Category and also can be applied in general to any list in NITRO based applications. In this article, we have considered a use case of &#8220;Payroll&#8221; Category. If a Ticket is created with Payroll Category, we would like to grant permissions to Payroll SharePoint group only. Summary of Steps Configure a workflow on Ticket creation event that breaks the permissions inheritance and grants specific permissions to required SharePoint user(s) or group(s) Configure a workflow on Ticket update event that breaks the permissions inheritance and grants specific permissions to required SharePoint user(s) or group(s) Detailed Steps 1. Go to Application administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon NITRO Workflows and create a new workflow on Tickets list for &#8220;item added&#8221; event as shown in screenshot below: &nbsp; Configure “Manage Permission” action to grant permissions for the required users/SharePoint groups for the Payroll Category: 2. Create another workflow on Tickets list on &#8220;item modified&#8221; event with the same configurations as described above with an additional condition i.e. Category equals &#8220;afterchange:Payroll&#8221;. This workflow will be triggered if Category of the Ticket is changed to &#8220;Payroll&#8221; and hence specific permissions need to be granted. Please refer the screenshot below: Please refer this article for the complete user manual for “Manage Permissions” action in Crow Canyon NITRO Workflow Manager. How To Item Level Permissions Crow Canyon Applications NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "403",
    "name": "403 - How to implement Crow Canyon Ticketing System for different departments_ - Crow Canyon Software Supp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/403%20-%20How%20to%20implement%20Crow%20Canyon%20Ticketing%20System%20for%20different%20departments_%20-%20Crow%20Canyon%20Software%20Supp.html",
    "title": "How To Implement Crow Canyon Ticketing System For Different Departments Crow Canyon Software Supp",
    "text": "How to implement Crow Canyon Ticketing System for different departments? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Workflows / How to implement Crow Canyon Ticketing System for different departments? How to implement Crow Canyon Ticketing System for different departments? 3861 views 2 min , 17 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: Generally permissions can be configured at the root site as sub sites inherit the permissions unless the permissions are broken. There might be cases where we need to have unique permissions for some of the lists. In such case, we can go for the list settings &#8211;&gt; Permissions for the list and grant unique permissions on the list by breaking the inheritance from the parent (sub site/root site). Also there are standard SharePoint item level permissions settings for the list like whether to show/hide the items created by the users. To enable this setting, please go to list settings &#8211;&gt; Advanced Settings &#8211;&gt; Item level permissions section and configure the required option. If the above doesn’t satisfy the requirement and if we need to grant unique permissions for the list items based on certain value in the ticket on ticket creation/update, we can configure them using our NITRO Workflows. We have “Manage Permissions” action that has the ability to set the unique permissions for the list items created with required criteria based on Department/Category of the ticket on ticket creation/update as needed Different Possible Solutions: Case 1: If anyone from any department can access Tickets from the Tickets list but the Tickets need to be segregated as per the value in ‘Assigned Staff’ and ‘Assigned Team’ column. Crow Canyon List View can be configured to display tickets based upon the ‘Assigned Staff’ and ‘Assigned Team’ column value. It will show Tickets assigned to the logged-in user based upon any of the following conditions: Tickets that are directly assigned to the logged-in user. That is, logged-in user is specified in the ‘Assigned Staff’ column. Logged-in user is the member of those SharePoint group(s) that are specified in ‘Assigned Team’ column of the Tickets. This ensures that users can see their assigned Tickets or their team’s Tickets for efficient management and tracking. Detailed steps In this example, we have taken ‘Tickets’ list. Configure Crow Canyon List View on Tickets list. Navigate to Site Settings -&gt; Site Administration -&gt; Crow Canyon List View -&gt; Configure a list view as shown below: 2. Click ‘New View’ button -&gt; Select the ‘View Source’ as ‘Query’ and configure the other settings as shown below: 3. Conditions added in &#8216;Query Settings’: Conditions: ‘Status’ equal ‘Assigned’ Below conditions are specified with ‘OR’ operator in a group: ‘Assigned Staff’ equal ‘{Me}’ ‘Assigned Team’ equal ‘{CurrentUserMemberOf}’ List view is filtered to display items that are assigned either to the logged-in user or to the team/group the user belongs to, based on the value in &#8216;Assigned Staff&#8217; column and ‘Assigned Team’ column respectively. 4. Click ‘Ok’ to save the view -&gt; Click ‘Save Settings’ to save the list view configurations. 5. Refer to this article and add the above list view on a site page. Sample output Crow Canyon List view shows tickets that are assigned directly to the logged-in user and those assigned to groups they belong to. Joe Bloggs is the logged-in user in this example and he is a member of &#8216;IT team&#8217; SharePoint Group. &nbsp; 2. Additional Service Area (Contact Crow Canyon Sales) To have an additional service area exclusively for a department/ for certain users, then it would be better to have an additional service area. This would require additional license cost. Please contact sales@crowcanyon.com for more details. Case 2: If one department people are not allowed to see other department tickets (security is major factor) Additional Service Area Please contact Sales@crowcanyon.com to proceed with the additional service area installation Item level permissions We can use our “Manage Permissions” action of our Crow Canyon NITRO Workflows and configure item level permissions based on the value of a column “Department” and grant unique permissions on item create and item update events. Please refer https://www.crowcanyon.help/article/402/ for more details regarding this configuration. Please refer https://www.crowcanyon.info/nitro/appmanual_v2/index.html?manage-permissions.html for the complete user manual for “Manage Permissions” action in Crow Canyon NITRO Workflow Manager. Item Level Permissions Crow Canyon Applications How-To NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "404",
    "name": "404 - Configuration of LAN Sweeper Integration.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/404%20-%20Configuration%20of%20LAN%20Sweeper%20Integration.html",
    "title": "Configuration Of LAN Sweeper Integration",
    "text": "Configuration of LAN Sweeper Integration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configuration of LAN Sweeper Integration Configuration of LAN Sweeper Integration 1857 views 1 min , 32 sec read 0 Applies to: SharePoint On-Premises and SharePoint Online Description Crow Canyon Data Sync windows service will be installed in one of the SharePoint on-premises servers. This service invokes a process in the regular intervals (configurable) and sync the data from LAN Sweeper database to SharePoint Assets list (one way sync). Pre-Requisites An SQL Account that has read permissions on the database to connect to SQL Server and execute permissions on the stored procedure that we may create during the configurations so the service can communicate with SQL database and read the required information. This information will be used in the configurations. A SharePoint account that has at least add/edit item permissions on the required SharePoint site. This information will be used in the configurations so the service can communicate with SharePoint Online site. An SQL Admin Account to create Stored Procedure in the SQL database. This account will be used only to create the stored procedure and it will not be used in any configurations. Database and SharePoint should be accessible from the server where the service is installed. Local Administrator account on the server to install the service. This sync service reads a configuration xml file that has three different configurable nodes as described below. 1. Database information This section takes the connection string so the service can communicate with the database and read information from LAN Sweeper. It takes the stored procedure name as input that returns the required information from database. We have our standard stored procedure that returns below information. tblAssets.AssetID (Asset ID) tblAssets.AssetName (Asset Name) tblAssets.Description (Asset Description) tblAssets.FQDN (FQDN) tblAssets.IPAddress (IP Address) tblAssets.Lasttried (Last Log on date) tblOperatingsystem.Caption (Operating System) tblOperatingsystem.ServicePackMajorVersion (OS Service Pack) tblOperatingsystem.Version (OS Version) tblADusers.Company (User Company) tblADusers.Department (User Department) tblADusers.email (User Email) tblADusers.Fax (User Fax) tblADusers.Mobile (User Mobile) tblADusers.Telephone (User Telephone) tblADusers.Zip (User Zip) tblADusers.Userdomain (user Domain) tblADusers.Username (User Name) tblAssetCustom.Manufacturer (Make) tblAssetCustom.Model (Model) Along with the above information, we also update “Asset Info Link” hyperlink column in SharePoint Asset with your corresponding LAN Sweeper web console URL so one can always click to see more details about the Asset. 2. SharePoint information This section takes SharePoint site URL, user credentials so it can communicate with SharePoint and add/update the Assets. 3. Column Mappings This section provides ability to map the database column values to SharePoint Assets list column. Also, our sync service considers “Asset ID” as unique key and verifies the existence prior to creating the Asset in SharePoint, this way it eliminates duplicate items creation. Please note that if we would like to pull more information from LAN Sweeper database, then we can alter the standard stored procedure accordingly. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "405",
    "name": "405 - Configuration of SCCM Integration.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/405%20-%20Configuration%20of%20SCCM%20Integration.html",
    "title": "Configuration Of SCCM Integration",
    "text": "Configuration of SCCM Integration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configuration of SCCM Integration Configuration of SCCM Integration 1505 views 1 min , 19 sec read 0 Applies to: SharePoint On-Premises and SharePoint Online Description Crow Canyon Data Sync windows service will be installed in one of the SharePoint on-premises servers. This service invokes a process in the regular intervals (configurable) and sync the data from SCCM database to SharePoint Assets list (one way sync). Pre-Requisites An SQL Account that has read permissions on the database to connect to SQL Server and execute permissions on the stored procedure that we may create during the configurations so the service can communicate with SQL database and read the required information. This information will be used in the configurations. A SharePoint account that has at least add/edit item permissions on the required SharePoint site. This information will be used in the configurations so the service can communicate with SharePoint Online/On-Prem site. An SQL Admin Account to create Stored Procedure in the SQL database. This account will be used only to create the stored procedure and it will not be used in any configurations. Database and SharePoint should be accessible from the server where the service is installed. Local Administrator account on the server to install the service. This sync service reads a configuration xml file that has three different configurable nodes as described below. 1. Database information This section takes the connection string so the service can communicate with the database and read information from SCCM. It takes the stored procedure name as input that returns the required information from database. We have our standard stored procedure that returns below information. s.ResourceID (Id) s.Netbios_Name0 (Computer Name) t.IP_Addresses0 Operating_System_Name_and0 (OSName) CSYS.Manufacturer0 (CSYSManufacturer) CSYS.Model0 (CSYSModel) Processor.Name0 (ProcessorName) OPSYS.Name0 (OPSYSName) OPSYS.ServicePackMajorVersion0 (OPSYSVersion) MEM.TotalPhysicalMemory0 (MEMTotalRAM) LOGDisk.Size0 (TotalHDSpace) RS.lastLogon0 (LastLogon) RS.User_Domain0 (Domain) RS.User_Name0 (UserName) Rs.Last_Logon_Timestamp0 (LASTLogonTime) PCBios.SerialNumber0 (PCBiosSerialNumber) 2. SharePoint information This section takes SharePoint site URL, user credentials so it can communicate with SharePoint and add/update the Assets. 3. Column Mappings This section provides ability to map the database column values to SharePoint Assets list column. Also, our sync service considers “Asset ID” as unique key and verifies the existence prior to creating the Asset in SharePoint, this way it eliminates duplicate items creation. Please note that if we would like to pull more information from SCCM database, then we can alter the standard stored procedure accordingly. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "406",
    "name": "406 - How to Change Case ID syntax in our Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/406%20-%20How%20to%20Change%20Case%20ID%20syntax%20in%20our%20Crow%20Canyon%20Application.html",
    "title": "How To Change Case ID Syntax In Our Crow Canyon Application",
    "text": "How to Change Case ID syntax in our Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Help Desk , How-To , Work Orders / How to Change Case ID syntax in our Crow Canyon Application How to Change Case ID syntax in our Crow Canyon Application 3664 views 1 min , 39 sec read 1 Applies To: SharePoint Online Description: Case Id is default syntax and can be changed as required. In this article we will take example of changing &#8220;Case Id&#8221; to &#8220;Work Order Id&#8221; in our Crow Canyon Application. This requires changes to the notification utilities, any mail templates configured in send mail actions of Workflow manager or Custom Actions, Advanced Email features. Summary of Steps: List schema for Configurations list Case Id column name change in Tickets, Archived Tickets lists Notification Utilities Update the mail templates that are configured using the NITRO Workflows Update the mail templates that are configured using the NITRO Custom Actions Advanced Email for Tickets list Steps 3 to 6 are required for subject key change in the notifications and steps 1,2 are required for changing the column name. Detailed Steps: List schema changes for the Configurations list Go to site contents &#8211;&gt; Configurations list &#8211;&gt; list settings &#8211;&gt; NITRO Forms &#8211;&gt; Create a single line of text column with internal name as &#8220;CaseIdKey&#8221; &#8211;&gt; Add the column to General tab and publish the NITRO Forms. See sample screenshot below Go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; Enter &#8220;Work Order Id:&#8221; in the &#8220;CaseIdKey&#8221; column and save the list item. Case Id column rename in Tickets and Archived Tickets lists Go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; edit &#8220;Case Id&#8221; column and rename the column to &#8220;Work Order Id&#8221; Go to Site Contents &#8211;&gt; Archived Tickets list &#8211;&gt; List settings &#8211;&gt; edit &#8220;Case Id&#8221; column and rename the column to &#8220;Work Order Id&#8221; Notification Utilities: Go to Application Administration &#8211;&gt; Notifications &#8211;&gt; edit each notification utility item and update the placeholders from &lt;&lt;Case Id&gt;&gt; to &lt;&lt;Work Order Id&gt;&gt; and click on Ok. See sample screenshot below. NITRO Workflows: Go to Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; NITRO Workflows &#8211;&gt; edit the workflow that has the send mail actions for Tickets list items and update the mail template with the Work Order Id placeholders as needed and save the settings. Custom Actions: Please go to site contents &#8211;&gt; List settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; edit the custom action that has the &#8220;Send Mail&#8221; action &#8211;&gt; update the mail template with the &#8220;Work Order Id:&#8221; instead of case id as needed. For more details in managing mail templates of custom actions, please refer app manual from https://www.crowcanyon.info/nitro/appmanual_v2/index.html?send-mail2.html Advanced Email: Go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Crow Canyon Email Manager settings &#8211;&gt; update the mail template case id to Work Order Id. For more details in accessing and updating mail templates for advanced email, please refer the app manual from https://www.crowcanyon.info/nitro/appmanual_v2/index.html?configuring-mail-templates.html Case Id Product Crow Canyon Applications Help Desk How-To Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "407",
    "name": "407 - How to add additional close button for default sharepoint form at the top - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/407%20-%20How%20to%20add%20additional%20close%20button%20for%20default%20sharepoint%20form%20at%20the%20top%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Add Additional Close Button For Default Sharepoint Form At The Top Crow Canyon Software Sup",
    "text": "How to add additional close button for default sharepoint form at the top - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to add additional close button for default sharepoint form at the top How to add additional close button for default sharepoint form at the top 1132 views Less than a minute 0 Applies To: SharePoint On Premises Description: This article has the steps to configure additional close button for default SharePoint forms at the top right corner of the form. Detailed steps: Step 1: Please navigate to site contents &#8211;&gt; required list &#8211;&gt; list ribbon &#8211;&gt; Form Web Parts &#8211;&gt; Default Display Form (See sample screenshot below) Step 2: Click on Add a web part in the default form to add a content editor web part. See sample screenshot below Step 3: Click inside the content editor &#8211;&gt; Format text option in the list ribbon &#8211;&gt; edit the source code for the content editor web part. See sample screenshot below Step 4: Enter the script in the source code and click on Ok. Now click on Ok in the web part settings for the content editor and stop saving the page. See sample screenshot below Source Code: &lt;style&gt;div#listFormToolBarTop { display: block !important; }&lt;/style&gt;&lt;br/&gt; Now opening the display form of the list item will have additional close button in the top right corner of the form. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "408",
    "name": "408 - How to make Contract ID as manual entry_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/408%20-%20How%20to%20make%20Contract%20ID%20as%20manual%20entry_.html",
    "title": "How To Make Contract ID As Manual Entry",
    "text": "How to make Contract ID as manual entry? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to make Contract ID as manual entry? How to make Contract ID as manual entry? 1063 views Less than a minute 0 Applies to: SharePoint Online Description In Crow Canyon standard Contracts Management application, Contract ID is auto generated as soon as a new Contract is created with the syntax Contract_Year_0000ID. This article describes the steps to stop auto generation of Contract ID and make it as a manual entry. Summary of Steps: Disable the auto generation of Contract ID Make the Contract ID editable and mandatory in Contract forms Detailed Steps Disable the auto generation of Contract ID In standard Contracts application, we have two submit action named “Save”. One submit action is visible only in New form that invokes the “Generate Contract ID” custom action that generates the Contract ID. Second Submit action is visible only in edit form. Delete these two submit action and show standard “Save” button by following below instructions. Go to Contracts list -&gt; List Settings -&gt; Crow Canyon NITRO forms -&gt; Delete both “Save” submit action buttons on the form. Unselect the “Hide Save Button” in Layouts and Theme section and publish the form. Make the Contract ID editable and mandatory in Contract forms Go to Contracts list -&gt; List Settings -&gt; Crow Canyon NITRO forms -&gt; Select the Contract Id column, remove “Hide” permission on “Contract Id” column and click apply (See screenshot below). Make the Contract Id column as required. Select the Contract Id column and Edit the Column Settings and make the column as required (See sample screenshot below) and click apply. Once all the above configurations are completed, “Publish” the Contract form. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "409",
    "name": "409 - Troubleshooting NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/409%20-%20Troubleshooting%20NITRO%20Forms.html",
    "title": "Troubleshooting NITRO Forms",
    "text": "Troubleshooting NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting NITRO Forms Troubleshooting NITRO Forms 1517 views 5 min , 45 sec read 0 Applies To SharePoint Online and SharePoint On-Premises Description This article lists the common issues and fixes that occur in Crow Canyon NITRO Forms. Part of the Forms functionality is not working Date/Time format is not in correct format Attachments are not getting added to the item (for SharePoint OnPremises 2013/16) Item create/update fails with duplicate values error Form looks congested with associated items grid Not able to publish NITRO Forms Open item display/edit form with a different NITRO form instead of default form Part of the Forms functionality is not working The Associated item grid does not appear in the NITRO Form and cascaded lookup filters does not work. Cause This issue can happen if the site URL is changed or the user is using a different host named URL to access the site other than the installed URL. Resolution Please go to each list in the site for which NITRO Forms are configured, go to NITRO Forms &#8211;&gt; edit each lookup setting, associated item settings, auto fill user information setting and save the settings once. Repeat this process for New, Edit and display forms and publish the forms.&nbsp;After making the above changes in the NITRO Form settings, click on Reset cache in the form settings and publish the settings. After publishing the forms, please clear the browser cache and the forms will work as intended now. Date/Time format is not in correct format To modify the date time format, go to any list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Switch to &#8220;Global Settings&#8221; tab and modify the Regional Time Settings as required. Note: This change will be applied to all the lists in that site. Attachments are not added to the item Attachments are not added to the item for SharePoint On-Premises (2013 &amp; 2016) and below messages are shown: 1. &#8220;Please contact Your administrator to get CCSItemAttachments folder created in Site Assets and grant permissions to upload files.&#8221; 2. User is not having the Edit Permission on CCSItemAttachments Folder Cause This issue can happen if: #1. &#8220;CCSItemAttachments&#8221; folder does not exist in the &#8216;Site Assets&#8217; document library #2. Or user does not have &#8220;Contribute&#8221; permission on CCSItemAttachments folder Fix #1. Activate (deactivate and activate again) &#8220;Crow Canyon Forms Attachments&#8221; feature in the site. For this, go to Site Settings -&gt; Manage Site Features and activate Crow Canyon Forms Attachments feature #2. Grant &#8220;Contribute&#8221; permission on CCSItemAttachments folder for the required users. For this, go to Site Contents -&gt; Site Assets document library -&gt; CCSItemAttachments folder -&gt; ECB menu -&gt; &#8220;Shared With&#8221; -&gt; Advanced and grant &#8220;Contribute&#8221; permission level for the user Item create/update fails with duplicate values error Item create/update fails due to duplicate values error as shown below Error details:&nbsp;&#8220;the list item could not be added or updated because duplicate values were found in the following fields (s)&#8221; in the list: Cause This issue can happen if &#8220;Enforce unique values&#8221; setting is enabled for the column shown in the error screenshot. Fix 1. Disable the &#8220;Enforce unique values&#8221; setting for the column. Go to List -&gt; List Settings -&gt; Edit column and disable the &#8220;Enforce unique values&#8221; setting and save. 2. If &#8220;Enforce unique values&#8221; is the business requirement then we need to specify a unique value for the column for every item while creating/updating items Form looks congested with associated items grid This can happen if associated items list view has many columns and one or more columns have multi-line data. With more columns, scroll bar comes up as shown below Please use one or more of the below options for this situation: Increase the Form width in the NITRO Form settings Navigate to required list &#8211;&gt; list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; Layouts and Theme in left hand side panel &#8211;&gt; adjust the Form Width of the NITRO form and publish the settings. Note: We need to configure form width for each form (new/edit/display) as required if separate forms are being used Modify the columns in associated item list view: Associated Items grid shows the columns as per the configurations in the list view specified in the associated item column settings. We can modify the view to remove columns that may not be required to show in the grid. Navigate to NITRO Forms configured for the list &#8211;&gt; Advanced Section in left hand side panel &#8211;&gt; Associated Item Settings &#8211;&gt; Edit the required associated item settings to get the view name. See sample screenshot below: Now navigate to the associated list &#8211;&gt; List view as mentioned in the above screenshot &#8211;&gt; edit the view and remove the columns that are not required Remove multi-line text columns Typically, description kind of columns have multiple lines of data and that doesn’t look very good in the grid as it increases the height of grid rows as per the data in multiple lines of text columns. Consider removing such columns from the view We can make use of Crow Canyon Associated item UI settings as shown below to have Vertical grid lines Enable pagination of items Set the width of individual columns Note: We need to use the column internal names in the the column width JSON Example format: {\"Title\":{\"width\":150},\"ID\":{\"width\":80}} Show/Hide vertical grid lines as required Pagination: Enable pagination to remove vertical scroll bar and show items in multiple pages. This is useful if associated items number is expected to be large If pagination bar is not required and number of items are not many, then enable vertical scrollbar We can also move the associated item to a new tab to have more space in case of having multiple associated items and having large content to be displayed on the form We can configure vertical layout in the tab/section settings as shown below where we have the associated items so that entire form width will be utilized by the associated item grid which makes the form look good. Not able to publish NITRO Forms Issue 1: When publishing NITRO forms getting error as shown below: Cause This issue could happen if scripting capability is not enabled for the site. Fix Enable scripting capability for the site. Refer instructions from this article Issue 2: When publishing the NITRO forms, getting below error: Cause: This issue can happen if the size of NITRO forms settings file in “Site Assets” library exceeds 4MB. Resolution: Reduce the NITRO forms settings file size less than 4MB to publish the forms. Follow below steps to reduce the NITRO forms settings file size: Instead of configuring separate forms for new, edit and display forms, configure a common form. Using column permissions in common form, columns can be hidden or made read-only depending on the mode (new, edit and display). Delete unused forms if multiple NITRO forms are configured for the list. Instead of configuring individual column level permissions, configure group ‘Column Permissions’ for multiple columns requiring same set of permissions. ‘Column Permissions’ is available in ‘Advanced’ section in left-hand panel of NITRO forms designer. Similarly, configure group ‘Column Validations’ for common validations for more than one column. ‘Column Validations’ is available in ‘Advanced’ section in left-hand panel of NITRO forms designer. Instead of directly putting custom script in “Eval” option in “Custom JavaScript” in NITRO Forms, put the script in a file and include the link to the file in “Link” option in “Custom JavaScript” in NITRO Forms. Refer this article for sample use case for custom script. If there are line/HTML controls with large text, then try to reduce it. 7. Open item display/edit form with a different NITRO form instead of default form Description We can configure multiple NITRO forms for a list. In some cases, we need to open different forms for different users. For example, in Crow Canyon Helpdesk applications, staff will access the backend site (helpdesk site) to work on the Tickets and end users will use portal site to create/update/view the Tickets. Based on the logged in user, we need to open the item in corresponding form. In this sample use case, we have considered Tickets list with below forms. Tickets (Default form), used in backend site for staff users. PortalTicket, used in portal site for end users. For staff using the backend site, items will be opened with “Tickets” form (default). For end users using the portal site, items will be opened with “PortalTicket” form. In some cases, staff will create Tickets from backend site on behalf of the end user. In this case, if requester (end user) opens this Ticket in portal, then it should open with “PortalTicket” form (and not the “Tickets” form). In this sample use case, we have described a scenario where Staff will create Tickets from backend site using “Tickets” default form. On Tickets creation, a workflow will send an email to requester with link to the Ticket. When Requester clicks the Ticket link in the email, Ticket should open with “PortalTicket” form instead of “Tickets” form (form with which item was created). Link configured in send mail action: https://contoso.com/lists/Tickets/ccs_EditForm.aspx?FormKey=PortalTicket&amp;ID=[ID|ID] Issue When Requester clicks the Ticket link in the email, Ticket opens with default form key “Tickets” instead of form key used in the link in the email. Cause Even though we specify value for “FormKey” in the URL, item will be opened with the form that was used to create the item. In this case, Ticket is created with default form “Tickets”, so it is opened with that form. Resolution Configure override form key in the URL in mail template. Configure “OFormKey” instead of “FormKey” keyword in the URL in mail template Ex: https://contoso.com/lists/Tickets/ccs_EditForm.aspx?OFormKey=PortalTicket&amp;ID=[ID|ID] Detailed steps 1. Modify the URL to open Tickets with ‘PortalTicket’ form&nbsp;as shown below: Sample URL: https://contoso.sharepoint.com/sites/Helpdesk/IT/Lists/Tickets/ccs_EditForm.aspx?OFormKey=PortalTicket&#038;ID=[[ID||ID]] Note : ‘FormKey= PortalTicket’ is replaced with ‘OFormKey= PortalTicket’. 2. &nbsp;Edit the mail template configured in ‘Send Mail’ action. Select the text to insert link and click ‘Insert hyperlink’ from ‘Mail Body’. 3. Paste the modified URL in ‘Web address’ -&gt; Click ‘Insert’ Unable to publish NITRO forms About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "41",
    "name": "41 - How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/41%20-%20How%20to%20configure%20%E2%80%9CAllow%20Fill-in%20choice%E2%80%9D%20option%20in%20Crow%20Canyon%20NITRO%20forms_.html",
    "title": "How To Configure “Allow Fill In Choice” Option In Crow Canyon NITRO Forms",
    "text": "How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? 1210 views Less than a minute 0 Applies to: SharePoint Online and On-Premises Description SharePoint choice column type has “Allow Fill-in choice” that allows entering custom values in addition to the configured choice options. Crow Canyon NITRO Forms does not support this setting in the current version. This article describes a workaround to achieve required behaviour. Summary of Steps Add “Other” option to the required choice column Create “Other Sources” column of type multiple lines of plain text Configure dynamic column permissions using NITRO Forms Detailed Instructions This article describes the steps using an example “Ticket Source” column of type multiple selection enabled choice column. 1. Add “Other” option to the required choice column Edit the Ticket Source choice column and add “Other” choice value 2. Create “Other Sources” column of type multiple lines of plain text Go to required list -&gt; List Settings -&gt; Create multiple lines of plain text field 3. Configure dynamic column permissions using NITRO Forms Go to required list -&gt; list settings -&gt; Crow Canyon NITRO Forms -&gt; Edit required form (New/Edit/Display) -&gt; Add “Other Source” column below the Ticket Source column and configure dynamic column permissions as shown below. After configuring the column permissions, click on Publish. Hide permission Show permission About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "410",
    "name": "410 - How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms_ - Crow Canyon Software Su.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/410%20-%20How%20to%20configure%20%E2%80%9CAllow%20Fill-in%20choice%E2%80%9D%20option%20in%20Crow%20Canyon%20NITRO%20forms_%20-%20Crow%20Canyon%20Software%20Su.html",
    "title": "How To Configure “Allow Fill In Choice” Option In Crow Canyon NITRO Forms Crow Canyon Software Su",
    "text": "How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? How to configure “Allow Fill-in choice” option in Crow Canyon NITRO forms? 1210 views Less than a minute 0 Applies to: SharePoint Online and On-Premises Description SharePoint choice column type has “Allow Fill-in choice” that allows entering custom values in addition to the configured choice options. Crow Canyon NITRO Forms does not support this setting in the current version. This article describes a workaround to achieve required behaviour. Summary of Steps Add “Other” option to the required choice column Create “Other Sources” column of type multiple lines of plain text Configure dynamic column permissions using NITRO Forms Detailed Instructions This article describes the steps using an example “Ticket Source” column of type multiple selection enabled choice column. 1. Add “Other” option to the required choice column Edit the Ticket Source choice column and add “Other” choice value 2. Create “Other Sources” column of type multiple lines of plain text Go to required list -&gt; List Settings -&gt; Create multiple lines of plain text field 3. Configure dynamic column permissions using NITRO Forms Go to required list -&gt; list settings -&gt; Crow Canyon NITRO Forms -&gt; Edit required form (New/Edit/Display) -&gt; Add “Other Source” column below the Ticket Source column and configure dynamic column permissions as shown below. After configuring the column permissions, click on Publish. Hide permission Show permission About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "411",
    "name": "411 - How to Configure Additional level approval process in Contract Management application_ - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/411%20-%20How%20to%20Configure%20Additional%20level%20approval%20process%20in%20Contract%20Management%20application_%20-%20Crow%20Canyon.html",
    "title": "How To Configure Additional Level Approval Process In Contract Management Application Crow Canyon",
    "text": "How to Configure Additional level approval process in Contract Management application? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to Configure Additional level approval process in Contract Management application? How to Configure Additional level approval process in Contract Management application? 1807 views 2 min , 21 sec read 0 Applies to: SharePoint Online Description Crow Canyon standard Contracts application has two levels of approval process by default. This article describes the steps to configure third level approval process in Contract Management application. We can add any number of additional level by repeating the steps in this article. Summary of Steps Prepare the required list schema Configure Custom Actions Configure Workflow Manager workflows Detailed Instructions Prepare the List Schema Contract Renewal Options list Create below columns Column Name Column Display Name Column Type ThirdLevelAmount Third Level Amount Currency ThirdLevelApprover Third Level Approver Person or group After creating these columns, add them to NITRO forms Go to the Contract Renewal Options List Settings -&gt; Crow Canyon NITRO forms and add the columns to the tab and publish the form. Contracts list There is an existing choice column “Approval Level” with two possible values “Level 1” and “Level 2”. Edit this column and add new option “Level 3”. Approver Tasks list There is an existing choice column “Approval Level” with two possible values “Level 1” and “Level 2”. Edit this column and add new option “Level 3”. Configure Custom Actions Once the approval process is initiated for a contract, if the contract requires approval then it starts creating the tasks in “Approver Task” list. Approver receives notification with link to their task and the task list has custom action to take the required decision. This logic is implemented using Crow Canyon Custom Actions for two levels of approval. We need to modify these custom actions configurations in Contracts list and Approver Task list to add another level of approval. Contracts list Go to Contracts list settings -&gt; Crow Canyon Custom Actions -&gt; Edit “Update Contract Renewal” custom action and modify the actions as shown below Action: Update Contract Renewal action Add new group to condition builder for Level 2 as shown in below screenshot. No changes are required to the column mappings. Action: Create Third level Approval Task Create a new action of type “Add List Item” to create third level approval task as shown in below screenshots. This action is to create third level approval task based on the contract value when Level 2 approver approves the contract. Approver Tasks list Go to Approval Task list settings -&gt; Crow Canyon Custom Actions -&gt; Edit “Approve” custom action and add new action of type “Update List Item” action as shown below. This action sets the Approval Level of the Contract to Level 3 when the Level 2 approver approves the contract. Configure Workflow Manager Workflows Crow Canyon Contracts Management approval process is implemented using the NITRO Custom Actions. However, there is a Crow Canyon NITRO Workflow that is configured to support “Approve/Deny” via email functionality. If we are not using the approve/deny via email feature, we can ignore this section. Otherwise, please follow the below instructions to support third level approval. Please go to Application Administration -&gt; Crow Canyon NITRO Applications -&gt; Crow Canyon NITRO Workflows -&gt; Edit “Approval Task approve/deny via email” workflow and modify the actions like shown below Action: Update Contract renewal Modify the workflow conditions like shown below. No changes are required to column mappings. Action: Create Third Level Approval Task Create a new action of type “Add Item” in the same “Approval Task approve/deny via email“ workflow. This action creates third level approver task when second level approver approves via email if the Contract value is greater or equal to the selected Renewal Option’s third level amount. Conditions: Column Operator Condition Value RenewalOption::Third Level Amount Less or equal [Contract::Value|Contract::Value] Approval Decision Equal afterchange:Approve Approval Level Equal Level 2 Column Mapping: Column Name Column Value Approval Level Level 3 Assigned To [RenewalOption::Third Level Approver|RenewalOption::ThirdLevelApprover] Contract [Contract|Contract] Task Name [Task Name|Title][Task Name|Title] RenewalOption [RenewalOption|RenewalOption] Action: Update Contract Approval Level to Level 3 Create a new action of type “Update Item” in the same “Approval Task approve/deny via email“ workflow. This action will update the Contract’s “Approval Level” column to “Level 3” after the third level approval task is created using the above action. Conditions: Column Name Operator Value Approval Level equal Level 2 RenewalOption::Third Level Amount less or equal [Contract::Value|Contract::Value] About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "412",
    "name": "412 - Frequently asked questions in Contract Management application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/412%20-%20Frequently%20asked%20questions%20in%20Contract%20Management%20application.html",
    "title": "Frequently Asked Questions In Contract Management Application",
    "text": "Frequently asked questions in Contract Management application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions in Contract Management application Frequently asked questions in Contract Management application 935 views 1 min , 3 sec read 0 Applies to: SharePoint Online How to enable attachments in Contracts forms? In Crow Canyon Contracts Management application, we have turned off attachments by default in both Contracts and Contract External Documents list forms. To enable attachments in NITRO forms, please go to the required list’s “List Settings” -&gt; Crow Canyon NITRO Forms -&gt; Edit New/Display/Edit forms -&gt; go to “Form Controls” section, drag and drop Attachments control to the form and publish. How to renew the contract without approval process? In standard Contracts application, if “Allow Auto Renewal” is enabled, then the contract will be auto renewed automatically without needing approval. If “Allow Auto Renewal” is disabled on a contract then it needs to go through the approval process based on the Contract Value (Cost) and the selected Renewal option. “Renewal Option” column on the Contract is a lookup column pointing to the “Contract Renewal Options” list (utility). This utility list has renewal time span along with two different levels of approvals with associated threshold values. If we would like to manually renew the Contracts without needing any approval, we can turn of the approval process for the selected renewal option in the utility. Please go to “Contract Renewal Options” list -&gt; Edit the required item in this utility, and clear the values from “First Level Amount”, “First Level Approver”, “Second Level Amount” and “Second Level Approver” columns so that whenever someone initiates the renewal from the contract form using “Submit for Renewal” action button, it updates the Start Date and Expiration Date columns on the contract without needing any approval. How to make Contract ID as manual entry? To make Contract ID as manual entry, refer instructions from https://www.crowcanyon.help/article/408/ How to configure additional level approval process in Contract Management application? To configure additional level approval process, refer instructions from: https://www.crowcanyon.help/article/411/ About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "413",
    "name": "413 - Crow Canyon NITRO apps launch behaviour in SharePoint On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/413%20-%20Crow%20Canyon%20NITRO%20apps%20launch%20behaviour%20in%20SharePoint%20On-Premises.html",
    "title": "Crow Canyon NITRO Apps Launch Behaviour In SharePoint On Premises",
    "text": "Crow Canyon NITRO apps launch behaviour in SharePoint On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon NITRO apps launch behaviour in SharePoint On-Premises Crow Canyon NITRO apps launch behaviour in SharePoint On-Premises 992 views 1 min , 32 sec read 0 Applies to: SharePoint 2013 &amp; 2016 and SharePoint Server Subscription Edition Description Crow Canyon NITRO Apps features and launch behaviours are little different in SharePoint online and SharePoint On-Premises. The NITRO Studio Dashboard is not available in SharePoint On-Premises. This article describes the steps to access different NITRO components in SharePoint On-Premises. Crow Canyon NITRO Forms Go to a list -&gt; List Settings -&gt; Click “Crow Canyon NITRO Forms” and configure the required tab, columns as needed. Please refer instructions to configure NITRO forms from: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?custom-forms.html Crow Canyon Custom Actions Go to a list -&gt; List Settings -&gt; Click “Crow Canyon Custom Actions” link and configure the custom actions as needed. Please refer instructions from: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?batch-actions.html Crow Canyon Workflow Manager Go to the Settings (gear icon) from the top right corner of the browser and click on “Crow Canyon Workflow Manager” and configure the workflows as needed. Refer instructions from: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?workflow-manager.html Crow Canyon List Search Please refer instructions to configure Crow Canyon List search web part from: https://www.crowcanyon.help/article/263/ . For more details regarding the Crow Canyon List Search, please refer http://www.crowcanyon.info/manuals/webparts/index.html?cross-site_list_search.htm Crow Canyon Tiles &amp; Dials Please refer this article http://www.crowcanyon.info/manuals/webparts/index.html?tiles.htm for Tiles configuration in SharePoint On-Premises. To configure the Tiles &amp; Dials, we need two lists “Home Tiles” and “Home Arcs”. Please download those list templates from: ListTemplates Crow Canyon Conditional Formatting Go to a list -&gt; List Settings -&gt; Crow Canyon Conditional Formatting. Please refer instructions to configure Crow Canyon Conditional Format from: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?conditional-formatting.html Crow Canyon Calculated Table Please refer instructions to configure Crow Canyon reports from: https://www.crowcanyon.help/article/260/ . For more details regarding the Crow Canyon Calculated table, please refer: http://www.crowcanyon.info/manuals/webparts/index.html?calculated_table_2_0.htm Crow Canyon Advanced Email Go to a list -&gt; List Settings -&gt; Crow Canyon Advanced Email Settings. Please refer Crow Canyon Advanced email section from: http://www.crowcanyon.info/sharepoint-manuals-37/index.html?crow_canyon_advanced_email_settings.html Crow Canyon Print Manager Go to a list -&gt; List Settings -&gt; Crow Canyon Print Manager Settings. Please refer instructions to configure Print templates from: http://www.crowcanyon.info/manuals/webparts/index.html?print_manager.htm Crow Canyon Branding Go to Site Settings -&gt; Crow Canyon Branding. For more details, please refer Crow Canyon Branding from: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?branding-app.html About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "414",
    "name": "414 - Crow Canyon Data Sync service for two way sync between SharePoint list items and database table - Cr.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/414%20-%20Crow%20Canyon%20Data%20Sync%20service%20for%20two%20way%20sync%20between%20SharePoint%20list%20items%20and%20database%20table%20-%20Cr.html",
    "title": "Crow Canyon Data Sync Service For Two Way Sync Between SharePoint List Items And Database Table Cr",
    "text": "Crow Canyon Data Sync service for two way sync between SharePoint list items and database table - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Data Sync service for two way sync between SharePoint list items and database table Crow Canyon Data Sync service for two way sync between SharePoint list items and database table 4266 views 10 min , 19 sec read 20 Applies to: SharePoint Online and On-Premises Note: This service requires an additional purchase. Description Crow Canyon DataSync Service for SharePoint is a Windows Service that synchronizes any ODBC-compliant database table(s) data to corresponding SharePoint list(s) and vice versa. We can use this as one way sync as well based on the use case. This service is installed in the customer&#8217;s intranet and is configurable in terms of which records to sync, mapping from database to SharePoint list columns (vice versa) and the sync frequency. It can sync new records by creating new list items in SharePoint/Database and sync existing records by updating list items. Data Sync Process: Initial Sync Initial sync is only one-way sync i.e. database to SharePoint Service will read data from the database and create/update items in SharePoint based on the unique key configured during the setup Incremental Sync Incremental sync is two-way sync SharePoint to database sync has the first preference Service will fetch items created/modified in SharePoint since last sync, and will create/update items in database Service will fetch items created/modified in database since last sync, and will add/update SharePoint list items Note: Service does not delete items in either SharePoint or database. Sample Use Cases: One Way Sync: For example, there are Network inventory tools like SCCM and LAN Sweeper that store computer and other network component information in database tables. This information is required in SharePoint for many applications that use Asset records for request tracking, reporting etc. Using this service, this data can be easily brought into SharePoint and then automatically updated whenever any change is made in corresponding database record by the network inventory tool. Data from more than one table can be brought into the same list and items can also be created in a SharePoint list manually without affecting the items coming from the database(s). Two Way Sync: For example, there is a large list in SharePoint and we would like to create Reports on this large list. SharePoint API has list view threshold limitation that it can fetch 5000 items only at a time. Using this service, we can sync any changes from SharePoint to a database table and then use Power BI etc. tools to build required reports. This article describes the installation and configuration of Crow Canyon DataSync Service. Pre-requisites An SQL Account that has read permissions on the SQL database to connect to SQL Server and execute permissions on the stored procedure that we may create during the configurations so the service can communicate with SQL database and read the required information. This information will be used in the configurations. If we need SharePoint to Database sync, SQL Account require write permissions on the target database table. A SharePoint account that has at least add/edit item permissions on the required SharePoint site. This information will be used in the configurations so the service can communicate with the SharePoint site. An SQL Admin Account to create Stored Procedure(s) in the SQL database. This account will be used only to create the stored procedure during the installation time and it will not be used in any configurations. Database and SharePoint should be accessible from the server where the service is being installed. Microsoft .NET Framework 4.7.2 or above should be installed on the server. Local Administrator account on the server to install the service. Installation Package Configuration.xml (SCCM/Lansweeper) StoredProcedure.txt CrowCanyon.DBSyncService.exe InstallUtil.exe Dependency Dlls (Microsoft.SharePoint.Client.dll, Microsoft.SharePoint.Client.Runtime.dll, Microsoft.Identity.Client.dll, microsoft.identitymodel.dll, Microsoft.IdentityModel.Extensions.dll) List Templates (O365/On-Premises) Installation Steps There are multiple steps that need to be performed to get the Crow Canyon DataSync Service installed and running. Prepare the install location Prepare the SharePoint Environment Prepare the Stored Procedure Prepare the Configuration file Install Crow Canyon data sync Service Prepare the install location Downloaded package &#8220;CrowCanyon.DBSyncService.zip&#8221;, right click, properties and unblock the file if it is blocked. Open Command Prompt (Run as Administrator) –&gt; navigate to the Package location –&gt; enter the below command to verify MD5 signature for the package. In this example, package download link is like “https://…/MD5_44dd766b53664330143b8a49cecd7362/CrowCanyon.DBSyncService.zip” and the command output is matching with GUID in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this GUID is not matching. After MD5 signature is validated, right click on zip file and extract the required package files. Paste the installation package at proper location as this location will be the installation location and the logs will generated in this location and service assemblies (*.dll) will be present in the same location Place all the below files in required folder and the service will be installed in this location. Right click on each file in the package, properties, unblock if the file is blocked. Configuration.xml CrowCanyon.DBSyncService.exe InstallUtil.exe Dependency assemblies Note: Package contains “Configuration_LANSweeper.xml” and “Configuration_SCCM.xml” files, based on the application that is being configured (LANSweeper VS SCCM), rename the corresponding configuration file to configuration.xml. If we are using this for custom database sync other than Lansweeper and SCCM, take any configuration file as starting point and update it with required changes. Prepare the SharePoint Environment Create two lists in the target SharePoint site using the list templates available in the package. Create a list for Sync Process Log using &#8220;CCSSyncLog.stp&#8221; List Template from the package. List name should be &#8220;CCSSyncLog&#8221;. Index &#8220;Created&#8221; column, update the default view with filter like &#8220;Created&#8221; is greater than or equal to &#8220;[Today]-7&#8221;. Create a list for Sync Time using &#8220;CCSSyncTime.stp&#8221; List Template from the package. List name should be &#8220;CCSSyncTime&#8221;. Recreate &#8220;SyncLog&#8221; Lookup column (Lookup List: CCSSyncLog) Note: For SharePoint Online, use the list templates from “O365” folder in the package For SharePoint On Premises, use the list templates from “OnPrem” folder in the package Create the required list schema in the SharePoint Target list to map the columns from the database to SharePoint columns. These will be used at a later stage while defining the field mappings from database to SharePoint list fields. Prepare the Stored Procedure Service can be installed without the stored procedure as well, however it is easy and recommended to use the stored procedure. Steps to create stored procedure For the standard integration with SCCM, refer the “StoredProcedue_SCCM.txt” file in package. For the standard integration with Lansweeper, refer the “Lansweeper_StoredProcedure.txt” file in package. Login to the SQL Server where the required database present with the admin account and create a stored procedure with the query mentioned in one of the above standard stored procedures as required. For any custom database sync, take any one of the stored procedure as reference and update as per the requirement. Grant permissions An SQL Account that has read permissions on the database to connect to SQL Server and execute permissions on the stored procedure is required to be configured in the configuration file described in below section. Create a new SQL authenticated account and grant below permissions. After creating the stored procedure, grant Execute and read permissions on it for the SQL authenticated account created above. The same SQL User account will be used in our configuration file. If we need SharePoint to Database sync, grant write permissions on the target database table. Login to the SQL Server with the SQL user credentials and make sure the user is able to execute the stored procedure. Prepare the configuration file Please refer “Crow Canyon Data Sync Configurations description” section below for detailed description about the configuration file. Install Crow Canyon Data Sync Service Open administrator command prompt (Run as administrator) Change the location to setup files location Cd &lt;&lt;setup file path&gt;&gt; Run below command: InstallUtil.exe -i “CrowCanyon.DBSyncService.exe” In prompts to enter the service account, fill the details and save (Local Administrator account) After this step, “Crow Canyon Database Sync Service” starts appearing in service in the services.msc Configure Data sync service Configurations file description Setup Configuration.xml file. It is possible to configure sync settings for multiple databases using our Data Sync service. For every database sync we can add one Sync configuration node. Every Sync Configuration contains mainly below set of nodes SharePoint Information Database Information Mappings Signature Information Sync Time Information Process Information Log Policy SyncConfig Node Every database needs to have its own Sync configuration node. Every sync configuration node need to have its own Sync Configuration Id. SyncConfigID Attribute Unique ID provided for a sync configuration. For example, CCSSCCM, CCSLanSweeper1, etc. SPInfo Node We need to provide SharePoint List connection information in this node. SPType Attribute Type of SharePoint environment Possible values : (On Prem, On Prem CSOM , Office 365) For on-premises environment, if the database is in the SharePoint server itself then we can use “On Prem” value otherwise use “On Prem CSOM” For SharePoint Online environment, use “Office 365” SiteURL Node Enter SharePoint site URL in which the target list exists that we need to use for this sync Domain Node If we are configuring for On-premises, this node is required otherwise we can leave this node blank UserName Node Specify a user name that has “create and update” item permissions on the SharePoint Sync List Password Node Enter user password for the user mentioned in UserName Node Generally password may have special character so we need to use below syntax for password. &lt;Password IsSecure=&#8221;false&#8221;&gt;&lt;![CDATA[password]]&gt;&lt;/Password&gt; App Client Node This is required only for O365 Version where the tenant uses Modern Authentication. In this case, we need to register an app for the site collection and grant permissions for the Modern app to access the site. To create Modern app for the site collection, please use below URL and click on &#8216;Generate&#8217; for Client ID and Client Secret, specify a domain name as needed. https://&lt;site collection url&gt;/_layouts/15/AppRegNew.aspx Fill the following details Title: Crow Canyon DB Service App Domain: www.contoso.com Redirect URI: https://www.contoso.com/default.aspx Please specify the domain of the organization and Redirect URI with required organization page URL. Above used addresses are a sample addresses we have considered for configurations. Save the above details to a notepad file. To grant permissions on the site for the modern app, please use below URL and grant permissions as shown below https://&lt;site collection url&gt;/_layouts/15/appinv.aspx Enter Application Client ID obtained above and click on Lookup to auto fetch details as shown below. Enter below lines in Permission Request XML and click on Ok. &lt;AppPermissionRequests AllowAppOnlyPolicy=\"true\" &gt; &lt;AppPermissionRequest Scope=\"http://sharepoint/content/sitecollection\" Right=\"FullControl\" /&gt; &lt;/AppPermissionRequests&gt; Update Configuration.xml with above App Client ID and App Client Secret as shown below. ListName Node Specify SharePoint target list title that we need to sync (create/update items) for this sync UpdateCAML Node Enter CAML Query that could check if the database entry is already created in SharePoint list. If the service finds the SharePoint list item with this CAML query then it updates the item otherwise it creates the item in SharePoint list so it eliminates the duplicate entries. This CAML Query accepts the placeholders. We can use the SharePoint column internal name in “Name” attribute of “FieldRef” tag and we can use database result set column name in “Value” tag text. This way every time before the service creates a new entry for every item in result data set, it checks if the entry is already created in SharePoint. Placeholder Syntax: {ValueExp: &#8220;[DBColumn Name]&#8221;, RegEx=&#8221;&#8221;} Please note that in ValueExp, more than one column name and static text can be specified. e.g., we could give “[DBFirstName] [DBLastName]” (note the static space between Db column name expressions) A regular expression can also be specified that will extract the matching string from the ValueExp (after replacing DB column values) and then that will be used in the query. e.g. if we want to extract the domain name from SharePoint site URL then you can use something like “https://(.+?)/” DelayExecution Node When querying SharePoint to check if the item is already created in SharePoint list using above UpdateCML setting, sometimes SharePoint may throw throttling error (http status codes 429, 406, 503 and 504). This generally happens when syncing large data and for try avoiding this conflict, we can add delay between each operation using this node. In the below sample, we are adding 100 milli seconds delay between each SharePoint operation. &lt;DelayExecution&gt;100&lt;/DelayExecution&gt; RetryCountAfterThrottle Node Event after using delay execution setting mentioned above, if we are still receiving the throttle error from SharePoint then we can use this node to retry. Service uses RetryIntervalAfterThrottle node mentioned below for waiting (in seconds) before next retry. See example below, it will retry two times. &lt;RetryCountAfterThrottle&gt;2&lt;/RetryCountAfterThrottle&gt; RetryIntervalAfterThrottle Node Event after using delay execution setting mentioned above, if we are still receiving the throttle error from SharePoint then we can use this node along with RetryCountAfterThrottle setting described above. See example below, it will retry after 2 seconds. Generally SharePoint will provide the number of seconds to be waited before retry and this property will be used only in case SharePoint does not give the required wait interval information. &lt;RetryIntervalAfterThrottle&gt;2&lt;/RetryIntervalAfterThrottle&gt; DBInfo Node: Provide Database Connection Information DBType Attribute: Only “SQLServer” value is supported currently DBConnectionString Node: Connection String that is used to communicate with the database server needs to entered in this node. For example, &lt;DBConnectionString IsSecure=&#8221;false&#8221;&gt;Server=server\\Instance;Database=DBName;User ID=USER;Password=PASSWORD&lt;/DBConnectionString&gt;. Note: we can encrypt the connection string using CrowCanyon.DBSyncPasswordEncryptor.exe tool that is part of the package and use encrypted text in configuration file with IsSecure=&#8221;true&#8221; in above DBConnectionString node. This connection string account should have at least read permissions on the source database and execute permissions on the stored procedure. UpdateQuery Node: We can either directly use the SQL Query that could read required information from database or stored procedure name in this node. IsStoredProc Node: Set this attribute value to True if UpdateQuery has Stored Procedure name else set this attribute to False Parameters Node: Define Param for UpdateQuery (Stored Procedure) Param Node: Name Attribute: name of the UpdateQuery Parameter ODBCType Attribute: Parameter ODBCType (example, varchar) ContextType Attribute: ContextType is Enumeration, possible value are: BatchSize – Number of items to fetch from Db in a single query and then sync to SharePoint. Sync cycle repeats until all the items found. LastID – Db column name for sorting the records with a unique Id. This value is used batch processing to fetch next set of records StartTime – Time at which the last sync finished. This is maintained in SharePoint list by the sync service. This value should be left blank as service automatically refers the last sync record to get this value EndTime – This is the time at which current sync cycle started. It is maintained by the service and should be left blank ValueContext Attribute: This will help to get the Parameter Value. This contains the database column name that has the unique identification information like Asset ID. DefaultValue Attribute: Default value of the Parameter UpdateDBSettings Node: UpdateQuery Node: Enter stored procedure name that create/updates items in database in this node. IsStoredProc Node: Set this attribute value to True if UpdateQuery has Stored Procedure name else set this attribute to False Parameters Node: Define Param for UpdateQuery (Stored Procedure) Param Node: Name Attribute: name of the UpdateQuery Parameter, it should match with the input parameter name in stored procedure. ODBCType Attribute: Parameter ODBCType (example, varchar) ContextType Attribute: Value should always be &#8220;SyncList&#8221; ValueContext Attribute: Value Expression can have SharePoint Column Internal Name enclosed in square bracket([]). For example: [Title] DefaultValue Attribute: Default value of the Parameter Mappings Node: This section provides ability to map the database column values to SharePoint list columns. Map Node: This defines the mapping detail of SharePoint Column. SPField Attribute: This defines the SharePoint List column internal name ValueExp Attribute: This define the SharePoint Column Value Expression. Value Expression can have Database Recordset Column Name enclosed in square bracket([]). For example: [AssetName] We can define multiple placeholders in one Expression to Concatenate the Two Recordset Column value. RegEx Attribute: Parse the Value expression value using Regular expression. For Example get the Domain name from Web Url SPLookupListColName Attribute: Resolve the lookup column based on specified column internal name in this property instead of resolving value based on display column setting in lookup column setting of the column mentioned in SPField attribute above. SignatureInfo Node: SignatureFieldName Attribute: SharePoint List Column Name (Internal Name of the Column) SignatureFieldValue Attribute: Unique Value for this Sync like CCSLansweeper. This helps us to identify the items created by our Data Sync Service. SyncTimeInfo Node: ListName Attribute: This define the CCSSyncTime SharePoint list name Process Node: Recurr Attributrte: If True, then Sync Process has to run event n number of minutes (based not Recurring interval) If False, then process run daily once based on ScanTime ScanTime Node: In this node, we can set the Hour at which this sync should start happen every day. Possible Value (0-23) hour of day. If recurrence is disabled then only sync happens daily at the time mentioned in this node. RecurInterval Node: This defines the recurrence interval in minutes for the sync. This setting will be used only if recurrence is enabled. LogPolicy Node LogLevel Node: Information Log will be generated if the value is set to 1. For Error log, set this attribute to 0. LogFileName node: The log file name can be given in this attribute SyncLogInfo Node: SyncLogListName Attribute: CCSSyncLog SharePoint list Name. We can refer this list to see the logs to investigate possible unknown errors. ServiceSettings: This tag has the settings SyncInterval node for the service which are common to all the Sync configurations. Based on the time interval set in the SyncInterval Node, service starts after every n minutes. RetainLogFilesForHours node can be used to automatically delete the service logs. Enter required number of hours to retain the log files in Logs folder. Example: &lt;RetainLogFilesForHours&gt;10&lt;/RetainLogFilesForHours&gt; Please refer https://www.crowcanyon.help/article/404/ article for standard information that returns stored procedure from LAN Sweeper database. Please refer https://www.crowcanyon.help/article/405/ article for standard information that returns stored procedure from SCCM database. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "415",
    "name": "415 - Manual and User Guide – DataSync (Auditing for SharePoint).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/415%20-%20Manual%20and%20User%20Guide%20%E2%80%93%20DataSync%20%28Auditing%20for%20SharePoint%29.html",
    "title": "Manual And User Guide – DataSync (Auditing For SharePoint)",
    "text": "Manual and User Guide – DataSync (Auditing for SharePoint) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To / Manual and User Guide &#8211; DataSync (Auditing for SharePoint) Manual and User Guide &#8211; DataSync (Auditing for SharePoint) 5492 views 7 min , 44 sec read 1 Applies to: SharePoint Online and On-Premises Description Crow Canyon DataSync Tool for SharePoint is a server-side tool that synchronizes any SharePoint custom list to any ODBC-compliant database. Users can then use standard reporting tools of their choice (e.g. Crystal Reports, SQL Server Reporting Services, etc.) to run comprehensive reports on the exported SharePoint list data. Most importantly, the DataSync Tool provides access to the Version History of SharePoint list items for audit and historical reports. Audit information includes details such as what SharePoint items were changed, which fields were modified, what the old and new values are, who made the change, and when it was made. For SharePoint on-premises environment: The tool is deployed to the SharePoint application server. For SharePoint Online environment: Tool is deployed in one of the on-premises servers that has access to internet and can communicate with both SQL database and SharePoint online site. Through a few simple steps, users can quickly configure data synchronization from a SharePoint list to an external database. The tool provides support to configure any number of SharePoint lists. Users can start and stop the sync at any time for one or more lists. Users can specify the length of time between data syncs as per their reporting requirements. This article describes the installation and configuration of Crow Canyon Data Sync and Auditing Tool for SharePoint. Pre-requisites Local Administrator rights on the installation server. User installing the tool must have local administrator access to that machine In case of SharePoint on-premises, installation server should be one of the SharePoint servers in the farm Microsoft .Net Framework 4.7.2 on the installation server Access to SQL server instance where this data will be synchronized. This account requires permissions to create required tables in the database SQL authenticated user account details (user name and password) This account needs “Write” permissions on the target database. The account details will be used in our tool configurations User account details (user name and password) for service account This account will be used to install the windows service. for SharePoint on-premises environment This account should have at least read permissions on the site from where we would like to take the lists data for the sync. This account should also have “SPShellAdmin” access on the SharePoint configuration database and content database in which the site present, refer instructions from this Article SharePoint Online only User login and password that has at least read permissions on the site and list that we would like to consider for the sync If this user account has multi-factor authentication enabled then we need to use app password Legacy authentication should be enabled in SharePoint Online tenancy (Optional) FILESTREAM should be enabled on the instance of the SQL server database engine if you want to copy attachments from items. To enable and configure FILESTREAM on the instance of the SQL server database engine, refer instructions from this&nbsp; Article After enabling the FILESTREAM, we need to use FILESTREAM enabled database in the sync configuration settings.&nbsp;Refer instructions to create FILESTREAM enabled database from this Article Installation Package CrowCanyon.SharePoint.DataSyncSetup.zip Installation Steps 1. Login with the local administrator account to the installation server. 2. Download the package &#8220;CrowCanyon.SharePoint.DataSyncSetup.zip&#8221;, right click, properties and unblock the file if it is blocked. 3. Open Command Prompt (Run as Administrator) –> navigate to the Package location –> enter the below command to verify MD5 signature for the package. 4. In this example, package download link is like “https://…/MD5_a74ffb7338e67fcf78cf83d1d540da4a/CrowCanyon.SharePoint.DataSyncSetup.zip” and the command output is matching with GUID in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this GUID is not matching. 5. After MD5 signature is validated, right click on zip file and extract the required package folder and paste in one of the local drives in installation server. 6. Unblock the CrowCanyon.SharePoint.DataSyncSetup.exe and other files present in the package folder. Right-click on the CrowCanyon.SharePoint.DataSyncSetup.exe file, click properties, if &#8220;Unblock&#8221; button is visible under &#8220;General&#8221; tab at the bottom in the security column, click Unblock. See screenshot below. 7. Right-click on the CrowCanyon.SharePoint.DataSyncSetup.exe file and choose “Run as Administrator” Accept the License Agreement and Click Next 8. Enter the qualified Domain username and password as shown in below picture and click next. For SharePoint on-premises environment, Data Sync service runs in the context of these credentials so it must have access to read data from SharePoint list (from which data is to be taken) and write access to SQL Server database (in which list data is to be stored) At the end of the installer, click &#8220;Finish&#8221; button and that will launch the Crow Canyon Data Sync Configuration tool and also it will add shortcut on the desktop as shown below. Configuration of Data Sync Tool Add list Data Synchronization Note: &nbsp;Data from Lookup columns can be stored either as text or as a reference to items in another table or both. We can configure Data Sync on the lookup list(s) first to sync all items in lookup list(s) to a separate table(s). The ID column value of the lookup list items will be one of the columns in this table. After this, for the main list having this lookup column, we can sync the lookup ID which is same as the ID in the lookup list table (similar to foreign key relations in Db). You can then use joins in Db based on this common ID value between tables. Steps for syncing a list: Add List Data Sync Open the Data Sync configuration tool, Click on ‘Add List DataSync’ to open Data Sync List Configuration Form SharePoint Type Select On-Prem/SPOnline as per the source SharePoint environment. On-prem: This does not required additional input as service account will be used to read SharePoint lists data SP Online: Enter user name and password. We can also use App context and that will need additional steps (not covered in this article). SharePoint List Settings These settings is to configure required list data to synchronize into database table Site URL: Enter the Site URL of your SharePoint lists and Click Populate List List Name: All of the SharePoint lists from that site will be loaded into the &#8216;List Name&#8217; dropdown. Select the list from the drop down, which you want to synchronize. List Sync Interval: Enter the interval time in minutes in List Sync Interval for synchronizing data in the list. For example: if you enter&nbsp; 30 , the synchronization will occur every 30 minutes. Database Settings These settings are used to define the location in the SQL Db where the data will be stored: Build Connection When we click on Build connection, it will open the&nbsp; Database Connection Settings window. Enter the Database server name having the database to save synchronized data Select the database from the populated items in the dropdown list Note: &nbsp;If you want create a new database, first open SQL Server Management Studio. Then in Object explorer right click on databases and click &#8216;New Database&#8217; to create a database Click On Test Connection. You&#8217;ll see a message that the connection was successful. If it was not, please check the information you entered. After Build Connection is successful, it will auto fill the Connection String Database Tables List data table name, Audit data table name, Attachments data table and Version Data table names are auto filled by the Data Sync tool. You can change the names as required. Audit data table name and Copy List Versions are enabled when versioning is enabled in list (Advanced Settings page in the SharePoint List Settings). The audit table has details of changes made to the list columns: Column Name, previous value, new value, who made the change and when. Version Data table name is enabled when Copy List Versions is checked. This table will have one record for every version of the item. If versioning is enabled on the SharePoint list then a new version is generated every time item is saved. Attachments data table is enabled when Copy Attachments is checked. This table will have one record for every attachment for the item. Create Data Table Now or Generate script to create database tables You have two options for creating tables: When you&nbsp;select ‘Create Data Table now’ option, it will create the tables when the settings are saved When you select ‘Generate script to create database tables’ option, it will generate the SQL script and saves it in “ C:\\programming Files\\Crow Canyon\\SharePoint\\DataSync\\ ”. By executing this script in the SQL Server Management Studio, you can create the Tables manually. Please run the script for the correct database SharePoint List Settings These settings are used to select the SharePoint list columns whose data will be stored in the database. Also, data type has to be selected. Here we can edit the data types, if needed. Normally, you can leave the default value which is selected based on the type of the column. Exclude Hidden Columns By selecting this, you can exclude columns which are hidden by default in SharePoint. Populate mapping Grid It reads the list settings and populates the grid with one row for each List Column.&nbsp;Details of various columns in grid: SharePoint List Fields Name of the list column Field Type Type of the column Do Audit If we select this checkbox it saves the version history of that particular column in the audit table Database Column Name Name of the database table column name in which data for this SharePoint list column will be saved Note: You can rename the columns Column Data Type The data type of&nbsp;particular column name in you database Transform By default lookup fields and person or group field in SharePoint will have the values format like {id; value}. If you check this, it will trim the ID from the value. Note: Some of the field like Modified, Modified By, lookup and user type fields have “_sp_Id” as suffix and these are auto selected. These fields are used to store the ID of the user or the lookup item and can be used to join with corresponding user/lookup list tables You have to click On Save Settings to start the Data Synchronization. Note: Once created, sync configuration cannot be edited. Please delete and recreate for any changes. Start/Stop a Data Sync Service There are two ways to start the Service 1. From Services in your server computer Open services and Right Click on Crow Canyon SharePoint DataSync and you will now start or stop service from drop down menu 2. From application of Data Sync Configuration Tool Go to General Settings -&gt; Click on to Start if service is not started Enable/Disable List Data Sync This option is used to enable or disable the list data synchronization. Delete List Data Sync Select the list that you want to delete and click on Delete List DataSync. This will open up a dialog box . If checkbox is checked: All the Data in database tables related to this sync configuration will be deleted permanently If checkbox is unchecked: &nbsp; It deletes only the sync configuration and not the data Enable/Disable Logs Go to ‘general settings’ -&gt; click on checkbox to Enable or Disable log We can change the location of log file. By default it is saved in “C:\\CrowCanyon Logs” and log file name is CCSSPListDataSyncLog . Information (log file stores the information of about synchronization) Connection string Check Db string Column Mapping Change data count of list items in Database Error (log file&nbsp;stores errors which are generated when list synchronization runs) Configure Logon Account to start Service Click WIN+R and Type ‘services.msc’, and then press Ok. In the details pane, right-click the Crow Canyon SharePoint DataSync and then click Properties . On the General tab, in Startup type , click Automatic , Manual , Disabled , or Automatic (Delayed Start) . To specify the user account that the service can use to log on, click the Log On tab, and then do one of the following: To specify that the service uses the Local System account, click Local System account . To specify that the service uses the Local Service account, click ‘ This account’ , and then type NT AUTHORITY\\LocalService . To specify that the service uses the Network Service account, click ‘ This account’ , and then type NT AUTHORITY\\NetworkService . To specify another account, click ‘ This account’ , click Browse , and then specify a user account in the Select User dialog box. When you are finished, click OK . Type the password for the user account in Password and in Confirm password , and then click OK . Note: If you select the Local Service account or Network Service account, do not type a password. Configure User Information list User Information list is available in the site collection. Configure this to Sync all user and groups from SharePoint to Database. Related List Data Sync Example Suppose if we want to sync “Tickets” list data and it is having some related lists like “Category” and “Issue Type”. Configure List Data Sync on Category, Issue Type and Tickets as Standalone configurations (i.e. three separate Data Sync configurations in this example). From the database, we can join the Tickets table with Category and Issue Type Tables after data sync. Uninstall Steps for Crow Canyon Data Sync Service Stop the Crow Canyon SharePoint DataSync service&nbsp; (services.msc) Uninstall the service using below command Open Command Prompt (Run as administrator) Run the below command C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\InstallUtil.exe /u &#8220;setup file path\\CCSSPDataSyncService.exe&#8221; After this steps you should not see the Crow Canyon SharePoint DataSync service&nbsp; in services.msc any longer Clean up the folder where Crow Canyon SharePoint Data Sync settings file is stored Optional: Delete Data Sync Db and revoke any special permissions to any user account for service or Database Crow Canyon Applications How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "417",
    "name": "417 - How to configure the Change Request Approval Tasks in Change Request form_ - Crow Canyon Software Su.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/417%20-%20How%20to%20configure%20the%20Change%20Request%20Approval%20Tasks%20in%20Change%20Request%20form_%20-%20Crow%20Canyon%20Software%20Su.html",
    "title": "How To Configure The Change Request Approval Tasks In Change Request Form Crow Canyon Software Su",
    "text": "How to configure the Change Request Approval Tasks in Change Request form? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure the Change Request Approval Tasks in Change Request form? How to configure the Change Request Approval Tasks in Change Request form? 1102 views Less than a minute 0 Applies to: SharePoint online and On-Premises Description In our standard application, Change Request Approval Tasks are not shown in the Change Request form. However, if we would like, we can show the Change Requests Approval Tasks in Change Requests form. This article describes the steps to configure Change Request Approval Tasks column in Change Request form. Detailed instructions 1. Create &#8220;CR Approval Tasks&#8221; field in Change Request list Go to Site Contents -&gt; Change Request list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt;Click Create Column and create a multiple lines of enhanced rich text column named &#8220;CR Approval Tasks&#8221; 2. Add &#8220;CR Approval Tasks&#8221; column to Change Request list edit and new forms Go to Change Request list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; add the CR Approval Tasks field to Edit and Display forms to the desired tab. 3. Select the CR Approval Tasks column and configure the column permissions from column settings as shown below Hide Show 4. Configure associated item settings for &#8220;CR Approval Tasks&#8221; column. Go to Advanced Settings -&gt; Associated Item Settings and configure associated item settings like shown below. Note: If we would like to show all approval tasks and not just &#8220;My Tasks&#8221;, we can choose All items view so it shows all the approval tasks related to the current Change Request irrespective of the logged in user. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "418",
    "name": "418 - How to upgrade Crow Canyon Timer Job solution_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/418%20-%20How%20to%20upgrade%20Crow%20Canyon%20Timer%20Job%20solution_.html",
    "title": "How To Upgrade Crow Canyon Timer Job Solution",
    "text": "How to upgrade Crow Canyon Timer Job solution? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to upgrade Crow Canyon Timer Job solution? How to upgrade Crow Canyon Timer Job solution? 2089 views Less than a minute 3 Applies to: SharePoint On-Premises Description This article describes the instructions to upgrade Crow Canyon Timer Job Solution in SharePoint server. Detailed Instructions 1. Deactivate the below site collection features using STSADM or PowerShell command. Please refer &#8220;Deactivate Feature&#8221; instructions from: https://www.crowcanyon.help/article/344/ CrowCanyon.TimerJobs_CCSRecurrenceJob CrowCanyon.TimerJobs_CCSArchivalJob CrowCanyon.TimerJobs_CCSSLATimerJobFeature CrowCanyon.TimerJobs_CCSAssetsMaintenance CrowCanyon.CalculatedTable_CrowCanyon Scheduled Reports Feature (please ignore this feature if we are using NITRO Studio based solution) CrowCanyonWorkflowManager 2. Upgrade the Crow Canyon Timer Jobs solution in your SharePoint server. Refer solution upgrade instructions from: https://www.crowcanyon.help/article/381/ 3. After upgrading the solution, activate the features that we have deactivated in #1 using STSADM or PowerShell commands. Refer &#8220;Activate Feature&#8221; instructions from: https://www.crowcanyon.help/article/344/ 4. Once the features are activated, go to SharePoint Central Administration -&gt; Monitoring -&gt; Review Job definitions under Timer Jobs -&gt; Click on &#8220;Crow Canyon Archival Timer Job&#8221; and set the timer job schedule for daily and save the settings (see screenshot below). Repeat the same for &#8220;Crow Canyon Recurrence Timer Job&#8221; timer job. Screenshot of Crow Canyon Archival Timer Job: Screenshot of Crow Canyon Recurrence Timer Job: 5. Restart the SharePoint Timer service in all SharePoint servers in the SharePoint farm About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "419",
    "name": "419 - How to replace Crow Canyon Batch actions with Crow Canyon Custom Actions_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/419%20-%20How%20to%20replace%20Crow%20Canyon%20Batch%20actions%20with%20Crow%20Canyon%20Custom%20Actions_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Replace Crow Canyon Batch Actions With Crow Canyon Custom Actions Crow Canyon Software Sup",
    "text": "How to replace Crow Canyon Batch actions with Crow Canyon Custom Actions? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to replace Crow Canyon Batch actions with Crow Canyon Custom Actions? How to replace Crow Canyon Batch actions with Crow Canyon Custom Actions? 966 views Less than a minute 0 Applies to: SharePoint On-Premises Description This article describes the steps to replace &#8220;Crow Canyon Batch Ticket Editor&#8221; hard coded actions with Crow Canyon Custom Actions (Configurable). Summary of Steps Deactivate the Crow Canyon Batch Ticket Editor feature Activate Crow Canyon Custom Actions feature Configure Custom Actions Self Assign Assign to Someone Close Detailed instructions Deactivate the Crow Canyon Batch Ticket Editor feature This feature will remove all the three button (Self-Assign, Assign to Someone and Mark Closed) from ticket&#8217;s display form, view and ECB control. Go to service area site, Site Settings -&gt; Manage Site Features and deactivate the &#8220;Crow Canyon Batch Ticket Editor&#8221; feature Activate Crow Canyon Custom Actions feature for the site Note: if the Crow Canyon Custom Actions solution is not available in your SharePoint server manage farm solution, please contact Crow Canyon support to get the latest Crow Canyon Custom Actions solution. Go to IT Site -&gt; Site Settings -&gt; Manage Site Features -&gt; activate the &#8220;Crow Canyon Create Library&#8221; and &#8220;Crow Canyon Custom Actions&#8221; features. Configure Custom Actions After activating the Crow Canyon Custom actions, go to Tickets list -&gt; List Settings -&gt; Crow Canyon Custom Actions and configure the custom actions as shown below Self-Assign Update List Item action: Assign to Someone else Update List Item action: Mark Closed Update List Item actions About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "42",
    "name": "42 - How to configure Round-Robin selection using Crow Canyon NITRO Workflows_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/42%20-%20How%20to%20configure%20Round-Robin%20selection%20using%20Crow%20Canyon%20NITRO%20Workflows_.html",
    "title": "How To Configure Round Robin Selection Using Crow Canyon NITRO Workflows",
    "text": "How to configure Round-Robin selection using Crow Canyon NITRO Workflows? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Round-Robin selection using Crow Canyon NITRO Workflows? How to configure Round-Robin selection using Crow Canyon NITRO Workflows? 1231 views 1 min , 46 sec read 0 Applies to: SharePoint Online and On-Premises Description This article describes a way to implement round-robin selection using Crow Canyon NITRO Workflows. This articles takes the example of selecting a user from a group of users to whom Ticket should be assigned. You can use this concept to apply in other places where round-robin selection is required. &nbsp; Summary of Steps Configure List Schema Create a list that has an entry for each selectable item Each item will maintain the count that will be used to determine the item that is selected in next iteration Configure Round robin assignment workflow Action 1: Configure Query list action to get the item with minimum count from list Action 2: Use the selected item (in this case to assign the Ticket to selected user) Action 3: Update the Count for selected item so that next item with lower count becomes eligible for selection Detailed Steps 1. Configure List Schema Create a list (i.e. Staff) for Staff members and maintain all the staff users in this list. That is, this list is for user to whom we want to auto-assign unassign Tickets in round-robin fashion Create below fields: Staff &#8211; This is the user column to whom Ticket will be assigned Internal Name: Staff Display Name: Staff Column Type: Person or group (Allow multi selection as required) Count &#8211; This column will maintain the count and will be incremented with every selection to make the next user with lower count eligible for next selection Internal Name: Count Display Name: Count Column Type: Number (default value = 0) Status &#8211; This column is used to temporarily or permanently remove an item from the round-robin selection Internal Name: Status Display Name: Status Column Type: Choice (Values: Active, Inactive, On Leave) Default value: Active 2. Configure Round Robin Assignment Workflow Configure a timer based workflow as shown below. The objective of the workflow is to check for Tickets that remain unassigned for a certain period after creation and then assign them to staff users in round-robin fashion. That is, we will pick the user who has the lowest assignment count at this point and increment the count after assigning the Ticket to him. Action 1: Configure Query list action to get the active users from the Staff list. This action will query the users and return the active user with minimum value in Count column. Query: &lt;View&gt; &lt;Query&gt; &lt;OrderBy&gt; &lt;FieldRef Name='Count' Ascending='True'/&gt; &lt;/OrderBy&gt; &lt;Where&gt; &lt;And&gt; &lt;Eq&gt; &lt;FieldRef Name='Status'/&gt; &lt;Value Type='Choice'&gt;Active&lt;/Value&gt; &lt;/Eq&gt; &lt;Geq&gt; &lt;FieldRef Name='ID'/&gt; &lt;Value Type='Number'&gt;1&lt;/Value&gt; &lt;/Geq&gt; &lt;/And&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;RowLimit Paged='False'&gt;1&lt;/RowLimit&gt; &lt;/View&gt; Screenshot: Action 2: Update the unassigned Tickets using staff from action 1 This action will update the Assigned Staff for the unassigned Ticket Column Mapping: Assigned Staff = $usercollection(QL-Staff##Staff) Screenshot: Action 3: Update the Count for Staff in Staff list This action will update the Count for the assigned staff by 1 in Staff list Column Mapping: Count = $add(QL-Staff##Count,1) Screenshot: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "420",
    "name": "420 - How to configure Round-Robin selection using Crow Canyon NITRO Workflows_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/420%20-%20How%20to%20configure%20Round-Robin%20selection%20using%20Crow%20Canyon%20NITRO%20Workflows_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Configure Round Robin Selection Using Crow Canyon NITRO Workflows Crow Canyon Software Sup",
    "text": "How to configure Round-Robin selection using Crow Canyon NITRO Workflows? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Round-Robin selection using Crow Canyon NITRO Workflows? How to configure Round-Robin selection using Crow Canyon NITRO Workflows? 1231 views 1 min , 46 sec read 0 Applies to: SharePoint Online and On-Premises Description This article describes a way to implement round-robin selection using Crow Canyon NITRO Workflows. This articles takes the example of selecting a user from a group of users to whom Ticket should be assigned. You can use this concept to apply in other places where round-robin selection is required. &nbsp; Summary of Steps Configure List Schema Create a list that has an entry for each selectable item Each item will maintain the count that will be used to determine the item that is selected in next iteration Configure Round robin assignment workflow Action 1: Configure Query list action to get the item with minimum count from list Action 2: Use the selected item (in this case to assign the Ticket to selected user) Action 3: Update the Count for selected item so that next item with lower count becomes eligible for selection Detailed Steps 1. Configure List Schema Create a list (i.e. Staff) for Staff members and maintain all the staff users in this list. That is, this list is for user to whom we want to auto-assign unassign Tickets in round-robin fashion Create below fields: Staff &#8211; This is the user column to whom Ticket will be assigned Internal Name: Staff Display Name: Staff Column Type: Person or group (Allow multi selection as required) Count &#8211; This column will maintain the count and will be incremented with every selection to make the next user with lower count eligible for next selection Internal Name: Count Display Name: Count Column Type: Number (default value = 0) Status &#8211; This column is used to temporarily or permanently remove an item from the round-robin selection Internal Name: Status Display Name: Status Column Type: Choice (Values: Active, Inactive, On Leave) Default value: Active 2. Configure Round Robin Assignment Workflow Configure a timer based workflow as shown below. The objective of the workflow is to check for Tickets that remain unassigned for a certain period after creation and then assign them to staff users in round-robin fashion. That is, we will pick the user who has the lowest assignment count at this point and increment the count after assigning the Ticket to him. Action 1: Configure Query list action to get the active users from the Staff list. This action will query the users and return the active user with minimum value in Count column. Query: &lt;View&gt; &lt;Query&gt; &lt;OrderBy&gt; &lt;FieldRef Name='Count' Ascending='True'/&gt; &lt;/OrderBy&gt; &lt;Where&gt; &lt;And&gt; &lt;Eq&gt; &lt;FieldRef Name='Status'/&gt; &lt;Value Type='Choice'&gt;Active&lt;/Value&gt; &lt;/Eq&gt; &lt;Geq&gt; &lt;FieldRef Name='ID'/&gt; &lt;Value Type='Number'&gt;1&lt;/Value&gt; &lt;/Geq&gt; &lt;/And&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;RowLimit Paged='False'&gt;1&lt;/RowLimit&gt; &lt;/View&gt; Screenshot: Action 2: Update the unassigned Tickets using staff from action 1 This action will update the Assigned Staff for the unassigned Ticket Column Mapping: Assigned Staff = $usercollection(QL-Staff##Staff) Screenshot: Action 3: Update the Count for Staff in Staff list This action will update the Count for the assigned staff by 1 in Staff list Column Mapping: Count = $add(QL-Staff##Count,1) Screenshot: About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "421",
    "name": "421 - How to manage external user Information in Crow Canyon helpdesk application_ - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/421%20-%20How%20to%20manage%20external%20user%20Information%20in%20Crow%20Canyon%20helpdesk%20application_%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Manage External User Information In Crow Canyon Helpdesk Application Crow Canyon Software",
    "text": "How to manage external user Information in Crow Canyon helpdesk application? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to manage external user Information in Crow Canyon helpdesk application? How to manage external user Information in Crow Canyon helpdesk application? 1125 views 2 min , 48 sec read 0 Applies to: SharePoint Online and On-Premises Description Crow Canyon Help Desk product has a feature to auto-populate requester user information in the Ticket (e.g. Requester Email, Requester Phone, Requester Department etc. and more such attributes can be added easily for auto-population). Also, Requester field is auto-populated with logged in user when user opens the new Ticket form. This information can be pulled from SharePoint user profile, SharePoint user information list or a custom list with information about users. Please refer this article more details on this. Above feature works for users who have a SharePoint login. If you have external users submitting Tickets via Email, then user won&#8217;t be resolved in Requester field and this standard auto-population won&#8217;t work. In this case, you can use Crow Canyon NITRO Workflow solution to manage external user information in a list and use it to populate information in the Ticket. When user sends mail for the first time, a record is created just with the email and admin is notified to enter other information like Phone etc. After this for subsequent Tickets submitted by same user, this information will be auto-populated on the Ticket. This article describes steps to maintain external user information and auto-populate it in Tickets. Summary of Steps Configure List Schema Maintain external users information in a custom list Create required fields in Tickets list and add the columns to tabs Configure workflow to update the external user information in the ticket Action 1: Configure Query list action to check if the external user is already present in the custom list Action 2: Configure update item action to update the external user information in the ticket if the user information is available in the external users list Action 3: Configure create item action to create the external user record in the custom list for new users Configure workflow to send mail to admin group when a new external user is entered in the custom list Detailed Instructions Configure List Schema 1. Create a custom list (i.e External Users) and maintain all your external users in this list. Create below fields in External Users list Email Internal Name: Email Display Name: Email Column Type: Single line of Text Phone Internal Name: Phone Display Name: Phone Column Type: Single line of Text Department Internal Name: Department Display Name: Department Column Type: Single line of Text Note: We can add more columns as per the requirement and then these additional columns can be mapped to populate data in the Tickets list 2. Create external user related columns in the Tickets list Additional Requester Phone Internal Name: AdditionalRequesterPhone Display Name: Additional Requester Phone Column Type: Single line of Text Additional Requester Department Internal Name: AdditionalRequesterDepartment Display Name: Additional Requester Department Column Type: Single line of Text 3. After creating the fields, add them to NITRO forms Go to Tickets list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Click Edit and Display forms -&gt; add the additional requester columns to forms Please refer NITRO Forms section from https://www.crowcanyon.info/nitro/appmanual_v2/ this article for more details. Configure workflow to update the external user information in the ticket Configure workflow on item update event on Tickets list as shown below. The objective of this workflow is to verify if external user record already exists in the custom list and update the external user information in the Ticket if that&#8217;s the case. If the external user record (based on email address) is not present in the custom list then this workflow creates a new entry. Note that conditions are set so that this workflow is run for external users and not users who can login to SharePoint. Action 1: Configure query list action to get the user record from the External Users list Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='Email'/&gt; &lt;Value Type='Text'&gt;##AdditionalRequesterEmail##&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Screenshot: Action 2: Create an update item action to update the external user information in the ticket if the user record exists in the External Users list Condition: Additional Requester Email equal QL-ExternalUsers##Email Column Mappings: Additional Requester Phone: QL-ExternalUsers##Phone Additional Requester Department: Note: We can add more column mappings as required. Please note the syntax to add column mappings in this action Syntax: QueryListActionName##ColumnInternalName Action 3: Configure a create item action to create the external user in the External Users list. This action will be executed for new users who do not already have a record in this list Condition: Additional Requester Email not equal QL-ExternalUsers##Email Configure a workflow to send mail to admin group when the external user created in the External Users list This is to notify the administrator group that a new external user record has been created. They can then update this record with required user information for subsequent use. Action 1: Configure Send Mail action to notify admin group Send Mail: Mail Template: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "422",
    "name": "422 - Custom CSS examples for NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/422%20-%20Custom%20CSS%20examples%20for%20NITRO%20Forms.html",
    "title": "Custom CSS Examples For NITRO Forms",
    "text": "Custom CSS examples for NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Forms / Custom CSS examples for NITRO Forms Custom CSS examples for NITRO Forms 4112 views 5 min , 20 sec read 1 Applies to: &nbsp;SharePoint Online and On-Premises Product: SharePoint Online – 2.0 SharePoint On-premises – 3.7 Description NITRO Forms has lot of built in functionality to create dynamic forms and customize the form UI as required in common business applications. For any custom requirements, you can add CSS and JavaScript on the form to change the UI and functionality. This article lists some CSS examples to change the look and feel of the NITRO Forms. Please note that to apply this CSS on the Form, you need to open NITRO Forms designer from List Settings. After that open &#8220;Custom CSS&#8221; section under &#8220;Advanced&#8221; section on the left bar. After specifying the CSS, publish the forms. You can clear browser cache or try in private browsing session in case new changes are not immediately working. Use Case 1: Custom CSS to show Choice / Radio column options in single line instead of one below the other Use Case 2: Add image for tabs in NITRO Forms using Custom CSS Use Case 3: Modify the background color in the NITRO forms Use Case 4: Modify width, color and hover over color for Submit Action in NITRO forms Use Case 5: Modify width, color and hover colors for Script Actions in NITRO forms Use Case 6: Modify color and hover colors for Custom Actions in NITRO forms (Display Form) Use Case 7: How to change the form/column row/column control color based on a choice column value change on the form? Use Case 8: Set default behavior of ‘New Item’ button only as inline mode in NITRO associated items column Use Case 9: Custom CSS for repositioning ‘Action’ buttons in the NITRO Forms Use Case 1: Custom CSS to show Choice / Radio column options in single line instead of one below the other By default, multi-choice options and radio button options are listed one below the other in separate lines. If you want to have them listed one after the other in same line then use the below CSS. Please note that you need to replace &#8220;InternalName&#8221; in below CSS with the actual internal name of the choice column for which this change is required: #row_InternalName #ccs_control_InternalName &gt; div { display: inline-block !important; margin-right: 5px !important; } #row_InternalName #ccs_control_InternalName &gt; div &gt; label { vertical-align: text-bottom; } Checkbox/Radio Button appearance in the form without any custom CSS: Checkbox/Radio Button appearance in the form with custom CSS: Sample CSS used for “Ticket Source” column: #row_TicketSource #ccs_control_TicketSource &gt; div { display: inline-block !important; margin-right: 5px !important; } #row_TicketSource #ccs_control_TicketSource &gt; div &gt; label { vertical-align: text-bottom; } Note: To get internal name of the column, please go to site contents &#8211;&gt; navigate to the required list &#8211;&gt; List settings &#8211;&gt; edit the choice column and search for the internal name of the column in the URL at the end. See sample screenshot below &nbsp; Use Case 2: Add image for tabs in NITRO Forms using Custom CSS Add icons for the tabs in the NITRO forms. See sample image below: We can get the available icons from this link:&nbsp; https://fontawesome.com/v4.7.0/icons/ Navigate to the above link and search for the icon to be set in the tab, click on the search result. Copy the Unicode of the icon to use in the custom CSS. CSS to insert icons for tabs: Syntax: Note: The &#8220;Index&#8221; value in below script has to be replaced with the index of the tab starting from 1 from left to right ul#panelCCSTabs &gt; li:nth-child(Index) &gt; .k-link:before { /*Index = 1 for first tab, 2 for second tab, .. */ font-family: FontAwesome; content: \"\\f095\"; /*Unicode of icon to be set here*/ padding-right: 5px; color: #4575aa; } Sample code for the NITRO Form ul#panelCCSTabs &gt; li:nth-child(1) &gt; .k-link:before { font-family: FontAwesome; content: \"\\f095\"; padding-right: 5px; color: #4575aa; } ul#panelCCSTabs &gt; li:nth-child(2) &gt; .k-link:before { font-family: FontAwesome; content: \"\\f007\"; padding-right: 5px; color: #4575aa; } ul#panelCCSTabs &gt; li:nth-child(3) &gt; .k-link:before { font-family: FontAwesome; content: \"\\f02d\"; padding-right: 5px; color: #4575aa; } ul#panelCCSTabs &gt; li:nth-child(4) &gt; .k-link:before { font-family: FontAwesome; content: \"\\f0c1\"; padding-right: 5px; color: #4575aa; } Use Case 3: Modify the background color in the NITRO forms We can modify the background color for the NITRO Form by using custom CSS option. Please visit http://www.colorzilla.com/gradient-editor/ to generate the required background color CSS code. After that copy the CSS code from this page to be used in our NITRO Forms: Insert the copied CSS in the NITRO Form and publish the NITRO Forms to see the new background color for the forms. Please note that different CSS is required depending on whether you are using Tabs or Sections layout in the form. Sample CSS code (for form layout with tabs): p.k-content#panleFormControls { /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#1e5799+0,7db9e8+100&amp;1+0,0+100 */ background: -moz-linear-gradient(left, rgba(30,87,153,1) 0%, rgba(125,185,232,0) 100%); /* FF3.6-15 */ background: -webkit-linear-gradient(left, rgba(30,87,153,1) 0%,rgba(125,185,232,0) 100%); /* Chrome10-25,Safari5.1-6 */ background: linear-gradient(to right, rgba(30,87,153,1) 0%,rgba(125,185,232,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */ filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1e5799', endColorstr='#007db9e8',GradientType=1 ); /* IE6-9 */ color:white; } Sample CSS code (for form layout with sections): div[id^=\"panelSection\"] { background: -moz-linear-gradient(left, rgba(30,87,153,1) 0%, rgba(125,185,232,0) 100%); background: -webkit-linear-gradient(left, rgba(30,87,153,1) 0%,rgba(125,185,232,0) 100%); background: linear-gradient(to right, rgba(30,87,153,1) 0%,rgba(125,185,232,0) 100%); filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#1e5799', endColorstr='#007db9e8',GradientType=1 ); color: white; } Sample Image: Use Case 4: Modify width, color and hover over color for Submit Action in NITRO forms To set the submit action color and hover color we can use custom CSS in our form settings. See sample code from below: /*Submit Action Button Width and Color*/ button.ccs_btn_SubmitAction { width: 150 px !important; background: green; } /*Submit Action Button Color on hover*/ button.ccs_btn_SubmitAction:hover { background: #0000ff; } Note: For hex color codes, you can visit this page . Sample Submit action button with custom color: Hover Color: Use Case 5: Modify width, color and hover colors for Script Actions in NITRO forms To set the script action color and hover color we can use custom CSS in our form settings. See sample code from below: /*Script Action Button Width and Color*/ button.ccs_btn_ScriptAction { width: 150 px !important; background: #161c3c; } /*Script Action Button Color on hover*/ button.ccs_btn_ScriptAction:hover { background: #0620ba; } Note: For hex color codes, you can visit this page . Sample Script action button with custom colors: Hover Color: Use Case 6: Modify color and hover colors for Custom Actions in NITRO forms (Display Form) To set the custom action color and hover color we can use custom CSS in our form settings. See sample code from below: /*Custom Action Button Color*/ button.ccs_btn_CustomAction { background: green; } /*Custom Action Button Color on hover*/ button.ccs_btn_CustomAction:hover { background: #1a1c1a; } Note: For hex color codes, you can visit this page . Sample Custom action with custom color: Color: Hover Color: Use Case 7:&nbsp;How to change the form/column row/column control color based on a choice column value change on the form? Please refer instructions from this Article Use Case 8: Set default behavior of ‘New Item’ button only as inline mode in NITRO associated items column In NITRO Forms, associated items can be added in two ways: Inline Popup To edit items inline in associated item column, we need to enable “Allow Inline Editing” option in NITRO Associated Items column settings as shown below: By enabling Inline editing, users will see both “Inline” and “Popup” options in the “New Item” button dropdown in associated item column as shown below. Based on the requirement, we can select any of the option to create new items. Currently there is no settings option to hide the “Popup” mode from “New Item” button dropdown. If required, this can be achieved through custom CSS in NITRO forms. In this sample use case, we have configured custom CSS in NITRO forms to achieve the same. Steps Configure below CSS in ‘Custom CSS’ section in the NITRO forms designer settings. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; ‘Advanced’ section in the left-hand panel -&gt; Custom CSS -&gt; Add below script. Custom CSS: #ULccs_control_ColumnInternalName{ display: none; } Note : Replace “ColumnInternalName” in the script with internal name of associated items column. To find internal name of the column, please refer this article . Use Case 9: Custom CSS for repositioning ‘Action’ buttons in the NITRO Forms In NITRO Forms, action buttons are aligned together by default. Users may need to customize the placement of these buttons for better form layout and usability. A common requirement is to position one button to the left while keeping the remaining buttons to the right. This can be achieved using custom CSS based on button’s action ID. Steps: Identify action ID of the button that needs to be moved to the left. Navigate to NITRO forms designer for the list -> Click F12 to open developer tools -> Click arrow icon from the developer tools pane -> Select the ‘Submit Action’ button -> Locate and copy its action ID as shown below: 2. Configure Custom CSS. Expand ‘Advanced’ section from the left-hand panel -> Click ‘Custom CSS’ -> Specify the below CSS with ‘Submit Action’ button Id: div#row_&lt;Button_ACTION_ID> { float: left !important; } Note: Replace ‘&lt;Button_ACTION_ID>’ with ‘Submit Action’ button Id copied in #1 above. Same steps can be followed to reposition ‘Script Action’, ‘Submit Action’ and ‘Custom Action’ buttons. 3. Click Ok -> Publish the NITRO Forms. Refresh the form to see the button repositioned. Sample Output: Custom Action Custom CSS NITRO Forms Submit Action Crow Canyon Applications How-To NITRO Studio- Forms About Prakash Arya View all posts by Prakash Arya &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "423",
    "name": "423 - How to include all Work Log Comments in Notification on Ticket close mails_ - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/423%20-%20How%20to%20include%20all%20Work%20Log%20Comments%20in%20Notification%20on%20Ticket%20close%20mails_%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "How To Include All Work Log Comments In Notification On Ticket Close Mails Crow Canyon Software S",
    "text": "How to include all Work Log Comments in Notification on Ticket close mails? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk / How to include all Work Log Comments in Notification on Ticket close mails? How to include all Work Log Comments in Notification on Ticket close mails? 3171 views 2 min , 4 sec read 1 Applies To: SharePoint Online Description: In Crow Canyon IT/Facilities/Requests applications, there is a column &#8220;Work Log&#8221; which is version enabled so all the comments are stored in its own version along with user and time stamp. Out of the box Crow Canyon application&#8217;s product app could include only the latest comment entered into this &#8220;Work Log&#8221; during the ticket close event. This article describes possible work around to include all Work Log versions along with the known limitations. We are capturing two different types of information in &#8220;Work Log&#8221; column: User entered comments i.e. someone add comments in &#8220;Work Log&#8221; column either from portal or back end ticket form System updates the &#8220;Work Log&#8221; if someone sends an email to SharePoint if ticket’s case id syntax present in the mail subject We can configure such that all comments entered by user (#1 above) are included in the notifications by following the steps described in this article but we cannot include system updates (#2 above) with configurations. Summary of Steps: Create new column &#8220;hiddenWorkLog&#8221; of type &#8220;Multiple lines of text (Enhanced Rich)&#8221; in Tickets list. Configure back end Tickets list New and Edit forms with submit action Configure Portal Ticket Edit form with submit action Configure mail templates Notification on Ticket Completion utility Detailed Steps: 1. Create new column &#8220;hiddenWorkLog&#8221; of type &#8220;Multiple lines of text (Enhanced Rich)&#8221; in Tickets list Go to Tickets list settings, create new column with the name and type mentioned above. This column will be used to copy the Work Log entries every time when someone add comments to &#8220;Work Log&#8221; column. This column won&#8217;t be shown on the form but it will be used in the mail templates. 2. Configure back end Tickets list New and Edit forms with submit action Go to Tickets list, list settings, Crow Canyon NITRO Forms, configure the following Check &#8220;Hide Save Button&#8221; checkbox under &#8220;Layouts and Theme&#8221; section. Set the &#8220;Bottom Action Panel Button Align&#8221; value to &#8220;Right&#8221; under &#8220;Layouts and Theme&#8221; section. Add &#8220;Submit Action&#8221;. Drag and drop Submit action from &#8220;Actions&#8221; section into the form beside the &#8220;Cancel&#8221; button. (See Screenshot 1 below) Select the newly created &#8220;Submit Action&#8221;, Set &#8220;Button Title&#8221; to &#8220;Save&#8221;, set the desired icon and paste the below whole script into the &#8220;Script Function&#8221; text box in &#8220;Action Settings&#8221; section on the right side of the designer surface and click &#8220;Apply&#8221;. Publish the form. (See Screenshot 2 below) Repeat above four steps in &#8220;Edit Tickets Form&#8221; as well. Script: var fn_prepareComment = function (currUserName, comment) { return \"&lt;div style='margin-bottom: 20px;'&gt;&lt;div&gt;&lt;strong&gt;\" + currUserName + \"&lt;/strong&gt; (\" + (new Date()).toLocaleString() + \")&lt;/div&gt;&lt;div&gt;\" + comment + \"&lt;/div&gt;&lt;/div&gt;\"; } try { var resultObject = null; var hiddenWorkLogColumnName = \"hiddenWorkLog\"; var workLogColumnName = \"WorkLog\"; var ccsFormUtils = window.ccs_g_FormUI; var workLogColumnVal = ccsFormUtils.fetchColumnValueUI(workLogColumnName); if (workLogColumnVal) { resultObject = {}; resultObject[hiddenWorkLogColumnName] = fn_prepareComment(ccsFormUtils.getCurrentUserName(), workLogColumnVal); if (ccsFormUtils.isEditForm) { resultObject[hiddenWorkLogColumnName] += ccsFormUtils.listItem.get_item(hiddenWorkLogColumnName) || \"\"; } } functionCallback(false, resultObject); } catch (ex) { functionCallback(false, null); } Screenshot 1 (How to add Submit action?): Screenshot 2 (How to insert the script in Submit Action button?): 3. Configure Portal Ticket Edit form with submit action Go to Portal site, Portal Settings, Edit the Tickets list form under &#8220;Portal Forms&#8221; section, and repeat the steps described in the #2 above. Since Portal tickets list form does not contain the &#8220;Work Log&#8221; column in the new form, these configurations are required only in edit form. 4. Configure mail templates Notification on Ticket Completion utility Go to Application Administration, Notifications, click on &#8220;Notification on Ticket Completion&#8221; tile, replace &#8220;&lt;&lt;Work Log&gt;&gt;&#8221; column place holder with &#8220; &lt;&lt;hiddenWorkLog&gt;&gt; &#8221; in &#8220;User Mail Body&#8221; and &#8220;Staff Mail Body&#8221; columns and save the item. Submit Action Worklog Help Desk About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs Import Tickets using NITRO Custom Actions How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket How to Change Case ID syntax in our Crow Canyon Application Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "424",
    "name": "424 - SharePoint Online_ Crow Canyon NITRO Studio Installation.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/424%20-%20SharePoint%20Online_%20Crow%20Canyon%20NITRO%20Studio%20Installation.html",
    "title": "SharePoint Online Crow Canyon NITRO Studio Installation",
    "text": "SharePoint Online: Crow Canyon NITRO Studio Installation - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Crow Canyon NITRO Studio Installation SharePoint Online: Crow Canyon NITRO Studio Installation 4134 views 3 min , 3 sec read 38 For SharePoint On-premises, please refer this article . Pre-requisites User Permissions User doing the installation requires tenant admin rights on the SharePoint online tenancy where NITRO Studio is being installed Note: If NITRO Studio is already installed in any other site collection in your tenancy then user with site collection administrator permissions can perform the installation. In this case tenant admin permissions are not required Site Collection To install NITRO Studio in a new site collection, tenant administrator can create a new site collection Or installation can be done in an existing site collection App Catalog NITRO Studio components are installed as SharePoint Apps in the site collection. These apps are added to the app catalog site of the tenancy for installation It is likely that app catalog site already exists for your tenancy. If not, it can be created as per steps given in this article Access Control If &#8220;Allow access from specific IP Address locations&#8221; is enabled in Access Control for the tenancy, please refer this article and allow the the IP Addresses. Enable Custom App Authentication in O365 Some SharePoint tenancies have custom app authentication disabled. In this scenario, Custom Apps do not work in SharePoint sites and show “The Remote Server returned an error: (401) Unauthorized” error. If you encounter this error when opening NITRO Studio app, please click here to check and enable Custom App authentication. Installation Steps Install NITRO Studio App in the Site Collection This app is available in the SharePoint App Store and will be installed from there. Go to the NITRO Studio page in the App Store using this link Click &#8220;Get It Now&#8221; button on the App Store page to install NITRO Studio App. You will need to login to your Office 365 account to install this if you are not logged in already You will be asked to choose which Site to install NITRO in. Please select the required site in the drop-down and click &#8216;Continue&#8217; and follow the rest of on-screen steps to install the app in the site collection Please contact Crow Canyon support in case you face any difficulty in NITRO Studio app installation. Grant Permissions After installing the NITRO Studio in the site collection, go to the &#8216;Site Contents&#8217; page of the root site. Click NITRO Studio App to open the main page of NITRO Studio. This page will show a message with &#8220;Grant Permissions&#8221; button as shown below: Note: If these permissions are already granted as part of NITRO setup in any other site collection, then this message is not shown and you can continue with the next step in installation process. A user with administrator privileges on tenancy can click this button to open a window with details of permissions. Click “Accept” button to grant permissions. Once permissions are granted, this message will go away. Please refresh the page couple of times if you still see the message after granting permissions. Setup NITRO Studio components Once permissions are granted, main page will show a message with a Setup button as shown below. Clicking on the Setup button will install all the required components for the NITRO Studio. This will add below Apps to App Catalog site of the tenancy. And these apps will be installed in the Site Collection. Note that NITRO Modern UI WebParts are not installed by this step, this is installed in the sub-site when NITRO is activated in the sub-site. App Name Description CrowCanyon.EmailSync.app This App provides the functionality to monitor emails in a Microsoft Exchange mailbox and create those mails as SharePoint list items in O365 CrowCanyon.ApprovalWorkflow.app Configure approval workflows easily on SharePoint lists CrowCanyon.WorkflowManager.app Configure business workflows on SharePoint lists. Supports workflows on list item create/update/delete, based on date time values in the list items and also scheduled workflows (fixed time or recurring Calendar) CrowCanyon.ConfigurablePortal.app Create easy to configure and use versatile Portal sites as a front end to your SharePoint business process sites. Provides customized UI and security settings to provide a simplified and secure interface to users CrowCanyon.ProductApp.app This App is used in some of the Crow Canyon’s prebuilt business applications like IT Helpdesk. You can add it to the catalog at a later time as well when you actually use one of these applications CrowCanyonNITROSPFxWebParts.sppkg CrowCanyonNITROWebPartsII.sppkg Provides NITRO features in SharePoint modern sites. Modern UI has different types of lists and pages and all the NITRO components are fully supported. Note that these apps are not installed to site during NITRO Studio setup. These are added to individual sites when NITRO Studio is activated in the site. Activate NITRO in a sub-site of the site collection Once above setup is done, NITRO can be activated in the sub-sites of the site collection. Or install the pre-built Crow Canyon NITRO applications. Please refer this article to install the prebuilt Crow Canyon NITRO applications. Steps to check whether Custom App Authentication is enabled Step 1: Download and install SharePoint Online Management Shell. https://www.microsoft.com/en-in/download/details.aspx?id=35588 Step 2: Run SharePoint Online Management Shell as Administrator and perform below commands. Connect-SPOService Provide SharePoint Admin Center URL and authenticate using a Global Admin account https://contoso-admin.sharepoint.com Step 3: Enter the below command to check Custom App Authentication. $tenantSettings = Get-SPOTenant $tenantSettings.DisableCustomAppAuthentication If the result is True, then run below command Set-SPOTenant -DisableCustomAppAuthentication $false Step 4: After enabling the custom app authentication, it may take 5-10 minutes for changes to take &nbsp;effect. Please try opening the ‘Crow Canyon NITRO Studio’ app again to verify that app is working. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "425",
    "name": "425 - SharePoint Online_ Troubleshooting steps for Crow Canyon Reports.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/425%20-%20SharePoint%20Online_%20Troubleshooting%20steps%20for%20Crow%20Canyon%20Reports.html",
    "title": "SharePoint Online Troubleshooting Steps For Crow Canyon Reports",
    "text": "SharePoint Online: Troubleshooting steps for Crow Canyon Reports - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint Online: Troubleshooting steps for Crow Canyon Reports SharePoint Online: Troubleshooting steps for Crow Canyon Reports 1043 views 1 min , 49 sec read 0 Applies to : SharePoint Online 1. Symptom: &#8220;Send Email&#8221; function does not send the email with report to the selected recipients. Also, no error message is shown in the UI. Cause: Workflows are not configured on &#8216;CrowCanyonAppsEmails&#8217; list Details: &#8220; Send Email&#8221; functionality does not directly send email to the recipients. It creates an item in CrowCanyonAppsEmails list with the required content and report attachment. Crow Canyon Workflows then sends an email based on the report content/image in the list item. Note: Please make sure that users who will be using this report email functionality have at least &#8220;Contribute without delete&#8221; permissions on CrowCanyonAppsEmails list. This list is created along with NITRO activation and you can find a link to it in the &#8220;Site Contents&#8221; page Fix : Configure workflows on &#8220;CrowCanyonAppsEmails&#8221; list to send mails to recipients. Refer workflows configuration instructions from: https://www.crowcanyon.help/article/225 (In the sample article workflows are configured on &#8220;Send Mails&#8221; list, please follow the same steps and instead of &#8220;Send Mails&#8221; list use the &#8220;CrowCanyonAppsEmails&#8221; list for configuring the mail template and workflows). Note: For reports, mail is sent with &#8220;From&#8221; address of the current user. That is mail sender is the logged in user who does the action from UI. Please also refer related article about configuring outgoing emails in workflow manager. 2. Symptom: Below error message is displayed while previewing the NITRO Report in Report Manager or viewing the same report on a site page: Cause: One of the columns used in NITRO Report configuration has been deleted from the SharePoint list. Resolution: Recreate the column with same column internal name and type. Steps: Check for the column that is used in the report configuration and is deleted from the SharePoint list. In this example, ‘Number Of Units’ column has been deleted from the SharePoint list. Refer to this article to know about internal name of a list column. Column display name Number Of Units Column internal name NumberOfUnits Column type Single line of text On deletion of this column, the ‘Column’ field under ‘Row (y-axis)’ section becomes blank in the NITRO Report settings page as shown below: 2. To resolve this issue, create a column with same internal name (‘NumberOfUnits’) and same column type in the list. 3. Navigate to the NITRO Report and refresh the page. The ‘Number Of Units’ column will be available under ‘Row (y-axis)’ section as shown below: Click ‘Show Report Preview’ to preview the NITRO Report. Also, refresh the site page where the above NITRO Report is added to view the report. Note : If the column is re-created with a different internal name, then it is required to select the new column manually in NITRO Report settings à ‘Save’ the report à Reset cache from the ‘NITRO Configurations’ page. 3. Symptom: Report on a site page shows an error message (as shown below) but preview for the same report in report settings page works correctly. Cause: After recreating the deleted column or after modifying settings for the column used in NITRO Reports, the NITRO cache is not cleared. Resolution: Reset cache from the ‘NITRO Configurations’ page. Navigate to Site Settings -&gt; Site Administration -&gt; Crow Canyon NITRO Site Settings -&gt; Expand ‘Cache Site Metadata’ section -&gt; Click ‘Reset Cache’ as shown below -&gt; Refresh the site page to view the NITRO Report. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "426",
    "name": "426 - How to improve NITRO Forms performance using its unique features.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/426%20-%20How%20to%20improve%20NITRO%20Forms%20performance%20using%20its%20unique%20features.html",
    "title": "How To Improve NITRO Forms Performance Using Its Unique Features",
    "text": "How to improve NITRO Forms performance using its unique features - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To , NITRO Studio- Forms / How to improve NITRO Forms performance using its unique features How to improve NITRO Forms performance using its unique features 3245 views 1 min , 58 sec read 2 Applies To: SharePoint Online and SharePoint On-Premises Description This article describes the features and related configurations in NITRO Forms that help to improve the forms performance, especially the loading time of New/Edit item forms. Please refer this article for other general performance configurations in Crow Canyon applications: https://www.crowcanyon.help/article/243/ First technique described uses the caching of infrequently modified data to improve the form load time. Second technique is for lookup column load time issues. It is not uncommon to have lookup lists with a lot of items and there is no easy way in standard SharePoint forms to deal with the resultant slow loading of forms. NITRO forms has addressed this problem while enhancing the user experience of usage of lookup columns. &nbsp; Enable Cache for site NITRO forms can cache the list metadata (column information, form settings etc.) instead of loading it every time. This helps improve performance significantly as this cache avoids fetching this data repeatedly and this data doesn’t get modified often. Form designers/administrators can reset the cache if any change is made to the list columns or form settings, this will automatically refresh the cache data for all users. Also, users can clear the browser cache to get the updated settings immediately. This settings applies to all the lists in the site. To enable caching, please navigate to any list that has NITRO Forms &#8211;&gt; list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; Form Settings in the top ribbon &#8211;&gt; Enable Cache. See sample screenshot below We can also enable caching from site settings &#8211;&gt; Site Administration &#8211;&gt; Crow Canyon NITRO site settings &#8211;&gt; enable Cache Site Metadata Enable delay in loading the lookup columns data Lookup columns present in the list forms need to load all the values from respective lists and display them in the New/Edit forms. In case of having more lookup items in a lookup list, form loading takes time to load as it need to fetch all the records present in the lookup list. With lookup lists having thousands of items, it slows down the form loading time significantly. In our NITRO forms, instead of loading lookup items on the form load, we have the ability to delay it until user clicks on lookup column drop down control. Thus initial form can be loaded much faster and lookup list can be loaded on demand. This feature can be applied from NITRO Form settings configured for the list. Please navigate to the list &#8211;&gt; NITRO Forms configured for the list &#8211;&gt; Advanced section in left hand side panel &#8211;&gt; Lookup Settings &#8211;&gt; create lookup setting &#8211;&gt; select the lookup column &#8211;&gt; enable delay load(See screenshot below) Enable Search feature for lookup column to address list view threshold in lookup list: There may be cases where lookup list has lot of items and it is difficult to find the item in drop down. This feature works even in cases where lookup list exceeds the list view threshold. In standard forms, in threshold scenarios, lookup column doesn’t render on the form and user can&#8217;t select the lookup column value on the form. To address this, NITRO Form has a search feature for lookup columns, that uses the SharePoint search to find items and user can then select the items in search results to set the value in lookup column. See sample screenshot below: Sample Form UI for search feature for lookup column: &nbsp; Lookup NITRO Forms Performance Crow Canyon Applications How-To NITRO Studio- Forms About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "428",
    "name": "428 - Configuring permissions for List Views in Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/428%20-%20Configuring%20permissions%20for%20List%20Views%20in%20Crow%20Canyon.html",
    "title": "Configuring Permissions For List Views In Crow Canyon",
    "text": "Configuring permissions for List Views in Crow Canyon - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To / Configuring permissions for List Views in Crow Canyon Configuring permissions for List Views in Crow Canyon 2870 views 1 min , 21 sec read 0 Applies to: SharePoint On-Premises and Online Description It is not directly possible to configure permissions for the SharePoint list views in Out of the box SharePoint. This article describes the alternative solutions. Alternative Solutions: Option 1: Create a web part page (workspace). Add a list view web part to the page. Configure the view filter conditions for the list view web part to show only the items you&#8217;d like to show. Add the link to the Quick launch. Configure permissions for this workspace page to limit who can access the page. Follow these instructions to create and configure a list view web part in a page: https://www.crowcanyon.help/article/264/ To configure permissions for a workspace page, go to the document library where the workspace page is created -&gt; select the workspace page -&gt; click &#8220;Advanced&#8221; in ECB -&gt; click &#8220;Shared With&#8221;-&gt; Advanced -&gt; click &#8220;Stop Inheriting Permissions&#8221; and Grant unique permissions to required groups. Note: Users will still have access to list items and can navigate to other views from the default list page (i.e. Site Contents -&gt; List) or by direct URL/ search. Sample Screenshot: Option 2: Use SharePoint Designer to create a filtered list view. Use this if you would like to filter tickets based on a SharePoint Group. Create one SharePoint group per department (or any other criteria you need to use, e.g. location, Manager, etc). Use the “Assigned Team” column in the ticket to specify which group should see that ticket/request/work order. Configure the view filter using SharePoint designer. Please refer sample list view configuration using SharePoint designer from: https://www.crowcanyon.help/article/304/ Once configured the view shows the tickets only if the logged in user is a member of the SharePoint Group that is assigned to the ticket. Note: Users will still have access to list items and can navigate to other views from the default list page (i.e. Site Contents -&gt; List) or by direct URL/ search. Option 3: If you would like to implement strict security controls, you can configure item level permissions using Crow Canyon NITRO Workflow manager. Please refer sample article to configure item level permissions using Crow Canyon NITRO workflows from: https://www.crowcanyon.help/article/402 . Please refer https://www.crowcanyon.info/nitro/appmanual_v2/index.html?manage-permissions.html for the complete user manual for “Manage Permissions” action in Crow Canyon NITRO Workflow Manager. Crow Canyon Applications How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "429",
    "name": "429 - Troubleshooting steps for Crow Canyon Workflow Manger for On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/429%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20Workflow%20Manger%20for%20On-Premises.html",
    "title": "Troubleshooting Steps For Crow Canyon Workflow Manger For On Premises",
    "text": "Troubleshooting steps for Crow Canyon Workflow Manger for On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Crow Canyon Workflow Manger for On-Premises Troubleshooting steps for Crow Canyon Workflow Manger for On-Premises 1138 views 3 min , 38 sec read 0 Applies to : SharePoint On-Premises (SharePoint Server Subscription Edition) Description This article lists the fixes for common issues in Crow Canyon Workflow Manager for SharePoint On-premises. Workflows configured on list are not working Workflows configured on a list are not working for specific users Workflow Manager page doesn’t show any configured workflows Infinite loop of execution Columns are not shown in Condition builder control in Workflow Manager 1. Workflows configured on list are not working Issue Workflows configured on a specific list are not working for any user whereas for other lists workflows are working fine Cause This may happen if events are not getting fired for a particular list. This can be the case if event receivers registered for this list are corrupted. We can validate this by enabling the information logs for Crow Canyon Workflow Manager solution. Please refer #6 from this article to enable logs. If the logs are not being generated (even after enabling the information logs and ensuring that everyone has required permissions on log folder as described in above article) then it is likely that events are not getting fired. You can confirm this by triggering workflows on other lists where workflows are working and checking that logs are getting generated. Resolution Using SharePoint Manager, navigate to the list that has the issue -&gt; expand “Event Receivers” node -&gt; Remove all the event receivers registered on the list. We have to reactivate the corresponding feature for every event receiver that is being deleted, sample event receiver names and corresponding feature names are listed below Event Receiver Feature Process to Recreate WorkflowManagerEventReceiverItemAdded WorkflowManagerEventReceiverItemDeleted WorkflowManagerEventReceiverItemDeleting WorkflowManagerEventReceiverItemUpdated WorkflowManagerEventReceiverItemUpdating Crow Canyon Workflow Manager Feature: CrowCanyonWorkflowManager Deactivate Crow Canyon Workflow Manager feature and activate Workflow Manager feature for the Site Collection. Note: Feature deactivation / activation need to be done using command prompt for Workflow Manager. Refer instructions from this article CCSSREventReceiverItemAdded CCSSREventReceiverItemAdding CCSSREventReceiverItemUpdated CCSSREventReceiverItemUpdating Crow Canyon Product Workflows Feature: CCSSREventReceiver_Feature1 Deactivate and Activate &#8220;CCS SR Event Receiver V3.6&#8221; feature for the site. Refer instructions from this article . With the above steps, new event receivers get attached to the list and the workflows should work as intended. Workflows configured on a list are not working for specific users 2. Workflows configured on a list are not working for specific users Issue Workflows configured on a list are not working for specific user(s). Workflows may be working for users with higher privileges like Site Collection administrators. Cause Crow Canyon Workflow configuration settings are stored in a hidden list in root site of the site collection. Event based Workflows like Item Added, Updated, and Deleted will run in user context and if the user doesn’t have required permissions on the root site, workflow execution will fail as it will not be able to read the settings from the root site. Resolution Go to root site -&gt; Site Settings -&gt; Users and Permissions -&gt; Site Permissions -&gt; Grant “Read” permission on the root site for Everyone. 3. Workflow Manager page doesn’t show any configured workflows Issue 1: Workflow Manager page doesn’t show any configured workflows and keeps showing the loading image as shown below: Cause This can happen if large number of workflows are configured in a site. Workflow Manager Configurations are stored in JSON format and if there are large number of workflows then the JSON length will be larger and it fails to get the data. Resolution Please refer https://www.crowcanyon.help/article/283/ that has steps to increase the MaxJsonLength property for SharePoint Web Application. After the above step, please do IISRESET in all the SharePoint servers. Issue 2: &#8216;NITRO Workflows&#8217; settings page is not loading Cause This issue can happen if the application pool account doesn’t have permissions on SharePoint configuration or web application content database. Resolution Grant permissions for the application pool account on SharePoint configurations and web application content database. Please refer this article to grant permissions on configuration database and content databases. 4. Infinite loop of execution Issue Workflows are triggered by actions of other workflows in an infinite loop Cause 1 This could happen if a workflow is configured to update the same item without any conditions. Or a workflow creates an item in the same list on item creation event without any conditions. Cause 2 This could happen even with the workflows that have conditions. &nbsp;For example, consider a workflow to update &#8220;Closed Date&#8221; when the &#8220;Task Status&#8221; is equal to &#8220;Closed&#8221;. In this case, when the Task Status is changed to Closed, this workflow will update the task item to set the Closed Date. However, this update will trigger this Workflow again as workflow is configured to run on item update event and task status is still equal to &#8216;Closed&#8217; and thus the conditions are matched. Resolution Configure the workflow with the appropriate conditions such that it does not go into infinite loop. We can use &#8220;afterchange:value&#8221; to eliminate infinite loop for the above example. This will ensure that Workflow to update &#8216;Closed Date&#8217; will run and update only when status has changed first time. In subsequent updates, the status value is already &#8216;Closed&#8217; and it has not changed, so workflow will not update the task item. Also, there is an option in Workflow settings to &#8220;Disable event fire&#8221; on item create/update. With this option, item create/update doesn’t not trigger the workflows and so it won’t get executed repeatedly. Please refer below screenshot for above options: 5. List Columns are not shown in Condition builder control in Workflow Manager Issue In Workflow Manager, condition builder control is not showing any columns for the selected list. Cause This could happen if there are large number of columns that need to be shown in the condition builder and resulting data is exceeding the maximum allowed JSON length. Note that condition builder shows the columns from the current list (list on which workflow is configured) and also the columns of all the lists for which there is a lookup column in the current list. Resolution Increase the maxJsonLength property to its maximum value for Web Application. Please refer instructions from this article Optimize the list columns Check if there are any unused lookup columns that can be removed from the list Use short names for the columns. We can use the column description for adding more details to column and show the description on the list forms instead of having really big and descriptive column names If possible, restructure the lists by creating associated lists and moving some of the columns to these lists. This may not always be a feasible option though About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "43",
    "name": "43 - How to configure simple archival functionality using Crow Canyon NITRO Workflow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/43%20-%20How%20to%20configure%20simple%20archival%20functionality%20using%20Crow%20Canyon%20NITRO%20Workflow.html",
    "title": "How To Configure Simple Archival Functionality Using Crow Canyon NITRO Workflow",
    "text": "How to configure simple archival functionality using Crow Canyon NITRO Workflow - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure simple archival functionality using Crow Canyon NITRO Workflow How to configure simple archival functionality using Crow Canyon NITRO Workflow 1400 views 1 min , 41 sec read 1 Applies to: SharePoint Online Note: If you are using SharePoint On-Premises then please refer this article for archival functionality. Description Archival is the process of moving old or inactive list items from the &#8216;main / live&#8217; list to the corresponding archive list. The archive list has similar columns as the main list and archiving is done to reduce the number of items in the main list to improve list performance. SharePoint has a limit on number of items (list view threshold of 5000 items) that can be processed in any operation so archiving helps keep the item count within the limits. Please note that there are other ways to address list view threshold and you can find more details here . This article describes the steps to configure simple archival functionality on a list without archiving associated lists. This article takes the example of Tickets list. Please note that list items that are moved to archived list are permanently deleted from the main list. Note: If you need to move list items (Tickets) along with all associated lists (like Tasks and Emails) to different lists without breaking the relation then please refer this article . Summary of Steps Configure List Schema Configure Workflow using NITRO Workflows Detailed Instructions 1. Configure List Schema Take list template of Tickets list Go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Click on &#8216;Save list as Template&#8217; link Give the File Name, Template Name and click on &#8220;Ok&#8221; Create Archived Tickets list using this list template. Go to Site Contents -&gt; Add an app -&gt; Select Tickets list template -&gt; name it as Archived Tickets list. After creating the Archived Tickets list, recreate all the lookup fields (e.g. Category, Issue Type etc&#8230;) in Archived Tickets list. 2. Configure Workflow using NITRO Workflows Configure a scheduled workflow on Tickets list using NITRO Workflows. This workflow will run everyday to move inactive items from the main list to the archive list. You can choose the hour such that it runs during non-business hours. Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and configure a scheduled query workflow as shown below: CAML Query used above: This query will fetch all Tickets where closed date column value is less than 365 days from Today. That is, these Tickets have been closed for more than a year. This can be modified to change this time period and also more conditions can be added to only archive those items that are not actively needed in the Tickets list (for e.g., you may choose to not archive Tickets of a particular Category) &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Leq&gt; &lt;FieldRef Name ='ClosedDate' /&gt; &lt;Value Type='DateTime' &gt; &lt;Today OffsetDays='-365' /&gt; &lt;/Value&gt; &lt;/Leq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Move Item Action: Configure move item action as shown below. This action will move the items from main list to the archive list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "430",
    "name": "430 - How to configure simple archival functionality using Crow Canyon NITRO Workflow - Crow Canyon Softwa.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/430%20-%20How%20to%20configure%20simple%20archival%20functionality%20using%20Crow%20Canyon%20NITRO%20Workflow%20-%20Crow%20Canyon%20Softwa.html",
    "title": "How To Configure Simple Archival Functionality Using Crow Canyon NITRO Workflow Crow Canyon Softwa",
    "text": "How to configure simple archival functionality using Crow Canyon NITRO Workflow - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure simple archival functionality using Crow Canyon NITRO Workflow How to configure simple archival functionality using Crow Canyon NITRO Workflow 1400 views 1 min , 41 sec read 1 Applies to: SharePoint Online Note: If you are using SharePoint On-Premises then please refer this article for archival functionality. Description Archival is the process of moving old or inactive list items from the &#8216;main / live&#8217; list to the corresponding archive list. The archive list has similar columns as the main list and archiving is done to reduce the number of items in the main list to improve list performance. SharePoint has a limit on number of items (list view threshold of 5000 items) that can be processed in any operation so archiving helps keep the item count within the limits. Please note that there are other ways to address list view threshold and you can find more details here . This article describes the steps to configure simple archival functionality on a list without archiving associated lists. This article takes the example of Tickets list. Please note that list items that are moved to archived list are permanently deleted from the main list. Note: If you need to move list items (Tickets) along with all associated lists (like Tasks and Emails) to different lists without breaking the relation then please refer this article . Summary of Steps Configure List Schema Configure Workflow using NITRO Workflows Detailed Instructions 1. Configure List Schema Take list template of Tickets list Go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Click on &#8216;Save list as Template&#8217; link Give the File Name, Template Name and click on &#8220;Ok&#8221; Create Archived Tickets list using this list template. Go to Site Contents -&gt; Add an app -&gt; Select Tickets list template -&gt; name it as Archived Tickets list. After creating the Archived Tickets list, recreate all the lookup fields (e.g. Category, Issue Type etc&#8230;) in Archived Tickets list. 2. Configure Workflow using NITRO Workflows Configure a scheduled workflow on Tickets list using NITRO Workflows. This workflow will run everyday to move inactive items from the main list to the archive list. You can choose the hour such that it runs during non-business hours. Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and configure a scheduled query workflow as shown below: CAML Query used above: This query will fetch all Tickets where closed date column value is less than 365 days from Today. That is, these Tickets have been closed for more than a year. This can be modified to change this time period and also more conditions can be added to only archive those items that are not actively needed in the Tickets list (for e.g., you may choose to not archive Tickets of a particular Category) &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Leq&gt; &lt;FieldRef Name ='ClosedDate' /&gt; &lt;Value Type='DateTime' &gt; &lt;Today OffsetDays='-365' /&gt; &lt;/Value&gt; &lt;/Leq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Move Item Action: Configure move item action as shown below. This action will move the items from main list to the archive list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "431",
    "name": "431 - Permissions required for external users to use Modern UI (SPFx) components - Crow Canyon Software Su.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/431%20-%20Permissions%20required%20for%20external%20users%20to%20use%20Modern%20UI%20%28SPFx%29%20components%20-%20Crow%20Canyon%20Software%20Su.html",
    "title": "Permissions Required For External Users To Use Modern UI (SPFx) Components Crow Canyon Software Su",
    "text": "Permissions required for external users to use Modern UI (SPFx) components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Permissions required for external users to use Modern UI (SPFx) components Permissions required for external users to use Modern UI (SPFx) components 5388 views 1 min , 47 sec read 30 Applies to: SharePoint Online Description Crow Canyon Modern UI applications are built using Crow Canyon SPFx web parts. SPFx is a web part model that provides full support for client-side and responsive SharePoint development. Crow Canyon NITRO platform has full support for Modern UI and you can build rich application using this framework. If Modern UI sites are shared with external users, Crow Canyon SPFx web parts may show this error message: &#8220;Sorry something went wrong&#8221;. To fix this, grant read permissions for external users on &#8220;ClientSideAssets&#8221; document library in the App Catalog site for the tenant as described below. Detailed Steps 1. Go to SharePoint App Catalog site for the tenant 2. Go to &#8216;ClientSideAssets&#8217; document library (URL will be like: https:// &lt;your domain&gt; .sharepoint.com/sites/ &lt;your app catalog name&gt; /ClientSideAssets/AllItems.aspx) of the App Catalog site. To get this URL, navigate to the SharePoint Admin Center from your M365 admin site. Click on &#8216;More Features&#8217;, then click on &#8220;Open&#8221; under &#8220;Apps&#8221; section. From there, replace the part of the URL after &#8220;apps&#8221; or &#8220;appcatalog&#8221; in the URL, i.e. the part that starts with &#8220;_layouts/..&#8221;, with &#8220;/ClientSideAssets/AllItems.aspx&#8221;. 3. Go to Library Settings -&gt; &#8216;Permissions for this document library&#8217; and grant read permissions for the external users on this library (i.e. add all individual external users to &#8216;Site Visitors&#8217; group) If we would like to grant permissions to all users including all external users at once, we can do this using SharePoint Online Management Shell by following below steps. Steps: Open SharePoint Management Online Shell and run below command. It prompts for SharePoint Online tenant URL, enter URL (for example, https://yourtenant-admin.sharepoint.com) and then it prompts for credentials. Enter SharePoint Admin or Global Admin credentials to connect to your tenant. Connect-SPOService Once the connection is done, run below command Set-SPOTenant -ShowAllUsersClaim $true Now, SharePoint allows resolving a new group named &#8220;All Users (membership)&#8221;. Grant &#8220;Read&#8221; permissions to this group on &#8220;Client Side Assets&#8221; library in App Catalog site as shown below. If we do not want to allow resolving this group in sites any longer, after performing above steps, run below command in SharePoint Online Management Shell to disable this group. Set-SPOTenant -ShowAllUsersClaim $false Note : If granting &#8216;Read&#8217; permissions to &#8220;All Users (membership)&#8221; group does not work (i.e., if external users are still seeing errors in SPFx web parts), then grant &#8216;Read&#8217; permissions to &#8220;All Users&#8221; group as well. If this still does not work, grant read permissions to each external user manually on this library. Note: To grant the permissions to external users on this library, it is required that external user access is enabled on the App catalog site collection. To enable external sharing for app catalog site, please ensure that external sharing is enabled in SharePoint Admin Center. Refer instructions from this article . Once this is done follow below step to enable external sharing for App catalog site. Go to Admin Centers, select SharePoint, expand sites, click &#8220;Active Sites&#8221; in left panel. Select the App Catalog site collection and click &#8220;Sharing&#8221; and select &#8220;New and existing guests&#8221; option and save the settings (see screenshot below). For more details, refer this article . About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "432",
    "name": "432 - Integrate Crow Canyon Contracts Application with Purchase Request System - Crow Canyon Software Supp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/432%20-%20Integrate%20Crow%20Canyon%20Contracts%20Application%20with%20Purchase%20Request%20System%20-%20Crow%20Canyon%20Software%20Supp.html",
    "title": "Integrate Crow Canyon Contracts Application With Purchase Request System Crow Canyon Software Supp",
    "text": "Integrate Crow Canyon Contracts Application with Purchase Request System - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Asset Management , Contract Management / Integrate Crow Canyon Contracts Application with Purchase Request System Integrate Crow Canyon Contracts Application with Purchase Request System 3385 views 2 min , 19 sec read 1 Applies to: SharePoint Online Description Crow Canyon Purchase Request is a flexible application that can be used to purchase different category of items like General parts and items, Hardware Assets, Software and Services etc. It can be used to purchase Contracts as well by adding corresponding purchase category and associated approval process. If you are also using Crow Canyon Contracts Application, then these two can be integrated so that Contract has the reference to the Purchase Order. Contracts purchased via the Purchasing application can be created in the Contracts application and statistics and status can be automatically updated in the Purchase Order. Integration features are listed below: Contracts have reference to the Purchase Order via which payment has been made for the Contract. And Purchase Order can show all the related Contracts New Contract Form can be invoked from the Purchase Item to create the purchased Contract. This action will be available only when the purchase category is &#8220;Contract&#8221; type After Contract is created, automatically increment the &#8220;Received Quantity&#8221; on the purchase item Automatically set purchase item status as &#8220;Partially Received&#8221; or &#8220;Received&#8221; depending on the purchase quantity and the received quantity Similarly, automatically set the Purchase order status as &#8220;Partially Fulfilled&#8221; (when some but not all Contracts are created) or &#8220;Fulfilled&#8221; (when all purchased Contracts are created) This article describes the configurations required for this integration. Prerequisites Crow Canyon standard Purchasing and Contract Management applications Summary of Steps Configure the required schema Create a lookup in Contracts list to the Purchase Order. This will be a cross-site lookup column (&#8220;Related Purchase Order&#8221;) Add &#8220;Contract&#8221; category in the Purchase Categories list Configure &#8220;Create Contract&#8221; Custom action in &#8220;Purchase Items&#8221; list Action 1: &#8220;Add Item&#8221; action to create Contract Action 2: &#8220;Update Item&#8221; action that increases the &#8220;Received Quantity&#8221; on Contract creation Action 3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order Action 4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Standard application has custom action “Update Received Quantity” that updates the received quantity in Purchase items. Update this custom action to show for all the purchase categories except &#8220;Contract&#8221; category since it will have its separate custom action &#8220;Create Contract&#8221; (#2 point above) Detailed Steps 1. Configure the required schema 1.a. Create &#8220;Related Purchase Order&#8221; cross-site lookup column in the Contracts list Go to Contract Management site &#8211;&gt; Application Administration &#8211;&gt; Crow Canyon Nitro Apps &#8211;&gt; Crow Canyon NITRO Studio &#8211;&gt; Advanced Lookup &#8211;&gt; Create &#8220;Related Purchase Order&#8221; cross-site lookup as shown below: 1.b. Add &#8220;Contract&#8221; item in the Purchase Categories list Go to Application Administration &#8211;&gt; Purchase Categories &#8211;&gt; Create a new item for &#8220;Contract&#8221; type category 2. Configure &#8220;Create Contract&#8221; custom action in &#8220;Purchase Items&#8221; list Go to Purchase Order site, go to &#8220;Application Administration&#8221;, click &#8220;Configure Purchase Items&#8221; under Configure Lists section. Click on &#8220;Crow Canyon Custom Actions&#8221; and configure the actions as shown below: Action 1: &#8220;Add Item&#8221; action to create Contract Add new action of type &#8220;Add item&#8221; as shown below: Predefined column values Action 2: &#8220;Update Item&#8221; action that increments the &#8220;Received Quantity&#8221; on Contract creation Add new action of type &#8220;Update item&#8221; as shown below. Value Expression used below: $add([Received Quantity|ReceivedQuantity],1) &nbsp; &nbsp; Action 3: Invoke &#8220;Partially Fulfill PO&#8221; custom action on Purchase Order &#8220;Partially Fulfill PO&#8221; custom action is part of standard application and here we just need to invoke it on the Purchase Order item. This custom action checks and sets the status of the Purchase Order as &#8220;Partially Fulfilled&#8221; if not all ordered items are received yet. Action 4: Invoke &#8220;Fulfill PO&#8221; custom action on Purchase Order &#8220;Fulfill PO&#8221; custom action is part of standard application and here we just need to invoke it on the Purchase Order item. This custom action checks and sets the status of the Purchase Order as &#8220;Fulfilled&#8221; if all ordered items have been received. 3. Update &#8220;Update Received Quantity&#8221; custom action in Purchase Items Go to Purchase Items list &#8211;&gt; List Settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; Edit the “Update Received Quantity” custom action and add condition as shown below: Note: No other changes are required in this custom action. Asset Management Contract Management About supportTeam View all posts by supportTeam &rarr; Related Articles How to update &#8220;Total Maintenance Cost&#8221; in Asset based on its related maintenance tasks sub total How to configure Recurrence feature in SharePoint Online using Calendar list How to configure Recurrence feature using Crow Canyon NITRO Workflows? How to configure Assets Preventive Maintenance using Crow Canyon NITRO Workflow Manager for O365 Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "433",
    "name": "433 - Troubleshooting issues related to Crow Canyon Advanced Approvals App.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/433%20-%20Troubleshooting%20issues%20related%20to%20Crow%20Canyon%20Advanced%20Approvals%20App.html",
    "title": "Troubleshooting Issues Related To Crow Canyon Advanced Approvals App",
    "text": "Troubleshooting issues related to Crow Canyon Advanced Approvals App - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Advanced Approvals , Troubleshooting / Troubleshooting issues related to Crow Canyon Advanced Approvals App Troubleshooting issues related to Crow Canyon Advanced Approvals App 3011 views Less than a minute 4 Applies To: SharePoint Online Description: This article describes the common issues and fixes related to Crow Canyon Advanced Approvals App. Expected Behavior: If we configure approval setting to read approver from lookup item and if the approver value is blank in the selected lookup item then “Approval Status” sets to “Approved” and sends the approved notification to the users configured in “Users to Notify” section in approval configuration. For example, we have “Type of Change” and “Change Requests” lists. We have “Type of Change” lookup column in “Change Requests” list. Approver Definition configuration is as shown in below screenshot. Required Behavior: In the above case, we would like to set the “Approval Status” to “Not Required” instead of auto approving and sending mails. Solution: If there are no conditions set in the Approver definition configuration, for every item approval status sets to “Approved” if no approver is found in utility/lookup item. We can add conditions to skip the approver definition. For example, add conditions like “lookup::Approvercolumn&#8221; is not empty so approval process gets executed only those for which approvers are available in the selected lookup item. Otherwise, approval status remains at “Not Required” in the item. &nbsp; Approval App NITRO Studio- Advanced Approvals Troubleshooting About supportTeam View all posts by supportTeam &rarr; Related Articles Troubleshooting steps for Crow Canyon NITRO Applications Troubleshooting Steps For Crow Canyon Data Sync Service How to address “Chrome detected unusual code on this page and blocker it to protect your personal information” error in Google Chrome browser when modifying web part pages? Crow Canyon Advanced Email and other custom action buttons are not shown in Items ribbon of SharePoint Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "434",
    "name": "434 - How to configure Header Properties in Modern sites_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/434%20-%20How%20to%20configure%20Header%20Properties%20in%20Modern%20sites_.html",
    "title": "How To Configure Header Properties In Modern Sites",
    "text": "How to configure Header Properties in Modern sites? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Header Properties in Modern sites? How to configure Header Properties in Modern sites? 1368 views 1 min , 6 sec read 0 Applies to: SharePoint Online Description This article describes the steps to configure header properties using Crow Canyon branding in SharePoint Modern UI sites. Note: This article will be enhanced very soon to describe all modern branding settings. Crow Canyon Header Properties in Branding Site header elements and corresponding configurations are shown below: Search Configurations: Search Schema Manage Properties : More Info Search discovers information by crawling items on your site. The discovered content and metadata are called properties of the item. The search schema has a list of crawled properties that helps the crawler decide what content and metadata to extract. Related KB Articles : Enter Related KB Articles Managed Property alias. If it doesn’t exist, then create managed property for Related KB Articles column (in Ticket list). Refer Search Configurations in site Category : Enter Category Managed Property alias. If it doesn’t exist, then create managed property for Category column (in Knowledge Base list) Issue Type : Enter Managed Property alias. If it doesn’t exist, then create managed property for Issue Type column (Knowledge Base List) in crawled properties Search configurations in site To create search schema manage properties, please follow below steps: 1.Go to Root Site &#8211; Site Settings 2. Under Site Collection Administration, click on &#8220;Search Schema&#8221; Link 3. Filter &#8220;RefinableString&#8221; Managed Property 4. Click on unused RefinableString__ property 5. Specify alias name for property, use this alias in Bot configuration &#8211; search schema Column Property 6. Scroll to “Mappings to crawled properties” section, click on Add a Mapping button: 7. Search crawled property with column internal Name for which you want to create manage property. Then select the property (starts with ows_[Column Internal Name]) and click Ok. 8. Property is now added in Mappings to crawled properties List box 9. Click on Save Button. 10. Re-index List: Go to List Settings Page =&gt; Click on Advanced Settings =&gt; Click on Re-index Button. Note: If you are unable to find crawled property for list columns then re-index the list. It takes about an hour to re-index the list About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "435",
    "name": "435 - How to apply color coding for tickets based on email communication (incoming_outgoing emails) for a.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/435%20-%20How%20to%20apply%20color%20coding%20for%20tickets%20based%20on%20email%20communication%20%28incoming_outgoing%20emails%29%20for%20a.html",
    "title": "How To Apply Color Coding For Tickets Based On Email Communication (incoming Outgoing Emails) For A",
    "text": "How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , Help Desk , How-To / How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket How to apply color coding for tickets based on email communication (incoming/outgoing emails) for a ticket 2915 views 1 min , 44 sec read 3 Applies To: SharePoint Online Description: Crow Canyon IT/Facilities/Requests Management applications have email capture feature that allows technicians to send mail to requester directly from the ticket form and if requester reply back then it links that email to ticket. Both the outgoing email by technician and incoming email from requester are captured in the system. This article helps configuring the color coding based on the technician (assigned staff), requester communication. Design: Create a new choice column “Communication Status” that has three different possible values “No Action Required, Waiting for Requester Response, Requester Responded”. By default, Communication Status value will be “No Action Required”. Whenever technician uses “Send Email” action on the ticket form to send mail, Communication Status changes to “Waiting for Requester Response”. If requester reply to the technician email, Communication Status changes to “Requester Responded”. Either technician can manually set the Communication Status to “No Action Required” or system auto set the status on ticket closure. We can configure color coding based on this communication status column using the Crow Canyon Conditional Formatting. Summary of steps: Create a choice column in Tickets list Configure Update Item Action in Advanced Email of the Tickets list Configure a workflow on Email Tickets list to update the ticket Configure conditional formatting for Choice column in Tickets list Configure Workflow on Tickets list to reset the communication status to No Action Required on ticket close Detailed Steps: Please go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Create a choice column with internal name as “CommunicationStatus” like below Configure Update Item Action in Advanced Email of the Tickets list to update Communication Status column to Waiting on Requester Response Please navigate to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Crow Canyon Email Manager Settings &#8211;&gt; Configure Update Item like below to update choice column to Outgoing whenever email is sent from ticket. Configure a workflow on Email Tickets list to update the ticket when requester reply with response for staff mail. This workflow is responsible to update ticket Communication Status choice column value to “Requester Responded” if requester sends email for the existing ticket (case id syntax in subject). Please go to Application Administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; Crow Canyon NITRO Workflows &#8211;&gt; Create a new workflow on Email Tickets list like below &nbsp; Create an Update Item action like below: Configure conditional formatting for Communication Status choice column in Tickets list Please go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Crow Canyon Conditional Formatting &#8211;&gt; Create conditional formatting for choice column like below Waiting for Requester Response: Requester Responded: Configure a workflow on “Item Updated” event on “Tickets” list to update the “Communication Status” to “No Action Required” like below Configure Update Item action like below Note: Instead of waiting until the ticket is closed, if we would like to set Communication Status to &#8220;No Action Required&#8221; when staff updates the ticket, please configure the conditions at the workflow level like below. (Modified By equal [Assigned Staff|AssignedStaff]) Color Coding Incoming Email Crow Canyon Applications Help Desk How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "436",
    "name": "436 - Keyboard based navigation (AODA Compliance feature) in Crow Canyon Portal site - Crow Canyon Softwar.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/436%20-%20Keyboard%20based%20navigation%20%28AODA%20Compliance%20feature%29%20in%20Crow%20Canyon%20Portal%20site%20-%20Crow%20Canyon%20Softwar.html",
    "title": "Keyboard Based Navigation (AODA Compliance Feature) In Crow Canyon Portal Site Crow Canyon Softwar",
    "text": "Keyboard based navigation (AODA Compliance feature) in Crow Canyon Portal site - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Power Portal / Keyboard based navigation (AODA Compliance feature) in Crow Canyon Portal site Keyboard based navigation (AODA Compliance feature) in Crow Canyon Portal site 2369 views Less than a minute 0 Applies To SharePoint On-Premises and SharePoint Online Description Crow Canyon portal site follows the AODA (Accessibility for Ontarians with Disabilities Act) Compliance feature. For example, in Home page when user presses the keyboard “Tab” button, control focus starts from the first actionable/clickable area i.e. site logo (#1 in the screenshot below). After that on every tab key press, focus moves as per the sequence of actionable buttons/areas (home page logo, Home, Logout, top menu links, quick links, notifications, contact us in footer). User can press enter on the focussed item to navigate to it without using the mouse. Please see screenshot below: Similarly, other portal pages like View Page, Search Page and List Form pages also follow the AODA compliance and the control focus changes as per the sequence of actionable areas. In the Portal list forms, control focus moves through the column controls and for dropdown controls like choice and lookup columns, we need to press Alt button and the down key together ( ALT+↓ ) so the drop-down control opens the menu to select the required options. We can then use up/down navigation keys ( ↓ ) in keyboard to choose the option and hit enter to select the required option. See sample screenshot below: AODA Compliance Employee Portal Power Portal Power Portal About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Building an Application Portal Using Web Parts NITRO Studio Workshop: Evolution of NITRO Portals Introduction to Power Portals in NITRO Studio Add &#8216;Main Category&#8217; to filter Category values in NITRO Forms Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "437",
    "name": "437 - Configure a workflow to auto-close Ticket if all the associated tasks are completed - Crow Canyon So.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/437%20-%20Configure%20a%20workflow%20to%20auto-close%20Ticket%20if%20all%20the%20associated%20tasks%20are%20completed%20-%20Crow%20Canyon%20So.html",
    "title": "Configure A Workflow To Auto Close Ticket If All The Associated Tasks Are Completed Crow Canyon So",
    "text": "Configure a workflow to auto-close Ticket if all the associated tasks are completed - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Workflows / Configure a workflow to auto-close Ticket if all the associated tasks are completed Configure a workflow to auto-close Ticket if all the associated tasks are completed 4045 views Less than a minute 0 Applies to:&nbsp; SharePoint Online and On-Premises Description This article describes the steps to configure a workflow to auto close Ticket when all the associated tasks are completed for that Ticket. Configuration Configure a workflow on Associated Tasks list on Item modified event as shown below. Please note the condition on &#8216;Task Status&#8217; column value and put the exact value so that workflow is triggered only when status of a task is getting changed: afterchange:Completed Action 1: Create query list action using Query builder to check if all the associated tasks are completed for the Ticket as shown below. Syntax: %%[Column Display Name|Column Internal Name]%% Example: %%[Related Ticket ID|RelatedTicketID]%% Action 2: Create an update item action to close the Related Ticket as shown below. NITRO Workflows NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "438",
    "name": "438 - Troublingshooting steps for NITRO Modern UI.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/438%20-%20Troublingshooting%20steps%20for%20NITRO%20Modern%20UI.html",
    "title": "Troublingshooting Steps For NITRO Modern UI",
    "text": "Troublingshooting steps for NITRO Modern UI - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troublingshooting steps for NITRO Modern UI Troublingshooting steps for NITRO Modern UI 1398 views Less than a minute 0 Applies to: SharePoint Online Description Crow Canyon NITRO platform provides full functionality in both Classic and Modern UI of SharePoint. This article describes the solutions to common issues in NITRO functionality on Modern UI. Symptom 1 In SharePoint Modern list view web parts, ribbon shows long coded text for NITRO custom actions: Cause: SharePoint does not yet support customizing the standard SharePoint list view web parts. Alternate Solution: We can use Crow Canyon list view web part instead of standard list view web part. Instructions : Go to modern page and edit the page. If you are using Crow Canyon branding and don&#8217;t see the edit button then add &#8220;?CCSMode=1&#8221; to the URL in the browser address bar and click enter. This will open the page in edit mode. Ex: https://contoso.sharepoint.com/sites/helpdesk/ITPremium/SitePages/Ticket-Staff-Workspace.aspx ?CCSMode=1 Next, Edit the page -&gt; Click add web part -&gt; Add &#8220;Crow Canyon list view&#8221; web part -&gt; Edit the list view web part and configure as shown below and then publish the page: &nbsp; &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "439",
    "name": "439 - Install Crow Canyon NITRO solutions for SharePoint On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/439%20-%20Install%20Crow%20Canyon%20NITRO%20solutions%20for%20SharePoint%20On-Premises.html",
    "title": "Install Crow Canyon NITRO Solutions For SharePoint On Premises",
    "text": "Install Crow Canyon NITRO solutions for SharePoint On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio / Install Crow Canyon NITRO solutions for SharePoint On-Premises Install Crow Canyon NITRO solutions for SharePoint On-Premises 2497 views 3 min , 14 sec read 1 Applies To: SharePoint On-Premises Note: This setup process is now deprecated. Please refer this link for setting up NITRO Studio. Description: This article describes the steps to install the Crow Canyon NITRO solutions for SharePoint On-Premises. Pre-requisites: SharePoint should be installed and configured (SharePoint 2013/2016) and server should be in stable state. Go to Central Admin &#8211;&gt; System Settings &#8211;&gt; Manage Servers in the farm, all the SharePoint servers in the farm should be at “No Action Required” or “Upgrade Available” state. Logged in user should be a domain user, local admin and a member of Farm Administrators group in SharePoint. Logged in user should have owner rights on SharePoint Admin content database, SharePoint configuration database and target web application&#8217;s content database. SharePoint Timer Service and SharePoint Administration services should be in running state. In case if multiple servers are present in the farm, these services should be in running state in all the SharePoint servers Package Information: SharePoint Version Package Name (Please contact Crow Canyon for package) SharePoint 2013 NITRO_SP2013.zip SharePoint 2016 NITRO_SP2016.zip Package contains solution files, Power Shell scripts and license tool: Solutions: CrowCanyon.AdvancedEmail.wsp CrowCanyon.AdvancedForms.wsp CrowCanyon.AdvancedPrint.wsp CrowCanyon.CalculatedTable.wsp CrowCanyon.CascadedLookup.wsp CrowCanyon.ColorKPI.wsp CrowCanyon.CommonUtils.wsp CrowCanyon.ConfigurablePortal.wsp CrowCanyon.CustomActions.wsp CrowCanyon.LicenseManager.wsp CrowCanyon.ListSearch.wsp CrowCanyon.TaskManager.wsp CrowCanyon.WebParts.wsp CrowCanyon.WorkflowManager.wsp CrowCanyonBranding.wsp License Tool: CrowCanyon.RegisterLicenseKey.exe PowerShell Scripts: NITRO_Install.ps1 NITRO_ActivateFeatures.ps1 Summary of steps: Prepare the solutions Add and deploy the solutions in the SharePoint Server Activate features Register the licenses Verify the license keys Detailed Steps to install the Crow Canyon NITRO solutions in SharePoint server: Prepare the solutions Extract the files from *.zip file and it contains list of Crow Canyon solutions (*.wsp) along with two PowerShell scripts (NITRO_Install.ps1, NITRO_ActivateFeatures.ps1) to be copied to the SharePoint server. In case if there are multiple servers exists in the SharePoint farm, we can copy the solutions to one of the servers that has “Microsoft SharePoint Foundation Web Application” service running. Add and deploy the solutions in the SharePoint server To add and deploy the Crow Canyon solutions in the SharePoint Server, please open SharePoint Management Shell (run as Administrator) and change the directory to the NITRO install package. See sample screenshot below Enter “ .\\NITRO_Install.ps1 ” and hit enter to start solutions installation. It prompts for the web application URL to deploy the solutions. Please provide the Web application URL and hit enter. See sample screenshot below This will add and deploy all the Crow Canyon solutions (*.wsp) in the SharePoint Server. Open SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Farm Management &#8211;&gt; Manage farm solutions and please wait until all the solutions status changes to “Deployed”. If we would like to use the NITRO in other web applications, please go to Solution Management &#8211;&gt; click on solution &#8211;&gt; deploy to the required web application(s) from below screen.See sample screenshot below Note: In case of any errors during the solution deployment, please refer “ Troubleshooting steps in case above process does not work: ” section from https://www.crowcanyon.help/article/311/ Activate Features Run “NITRO_ActivateFeatures.ps1” from the SharePoint Management Shell to activate the NITRO features to the required site. Enter “ .\\NITRO_ActivateFeatures.ps1 ” and hit enter to start activating the NITRO features. See sample screenshot below NITRO Forms, NITRO Custom Actions, Advanced Email, conditional formatting and branding features are web site (sub site) scoped features. Crow Canyon Workflow Manager, List search, Advanced Print, Calculated table, Crow Canyon web parts are site collection scoped features. So, the activate script prompts for both site collection and sub site URL.Provide the target site collection and hit enter (Sample screenshot below). It prompts for the web URL (sub site) for which the site level features need to be activated. Provide the site URL and hit enter (Sample screenshot below). Output: Success message appears in the PowerShell as “Crow Canyon NITRO Features activation is completed”. See sample screenshot below Portal Feature Please refer &#8220; https://www.crowcanyon.info/nitro/appmanual_v2/index.html?power-portal.html &#8221; link to understand the portal If we would like to configure portal for a site, please create a new sub site under this site, and then activate below sub site scoped features to the newly created portal sub site. Crow Canyon Configurable Portal Crow Canyon Forms Attachments Register the licenses Open Central Administration &#8211;&gt; site settings &#8211;&gt; Manage site features &#8211;&gt; activate “Crow Canyon License Manager”. This creates a new link “Crow Canyon License Manager“ in “System Settings” in Central Administration site. Open this new “Crow Canyon License Manager” page, and send “Farm ID” to sharepointsupport@crowanyon.com . We will generate the trial licenses and will send you. Once the trial licenses are received, go to “Crow Canyon License Manager” page in Central Administration, &#8211;&gt; click on “Register” for the below components and insert the corresponding license keys. Crow Canyon List Search Crow Canyon Associated Items Crow Canyon Cascaded Lookup Crow Canyon Calculated Table Crow Canyon Advanced Print Portal License Portal is a special case, here we need to register license for every portal instance. Please contact Crow Canyon ( sharepointsupport@crowanyon.com ) and send the new portal site URL for the license. See sample screenshot below: Verify the license keys It is mandatory to verify the license key status in all the SharePoint servers in the farm after registering the license keys. Run the “CrowCanyon.RegisterLicenseKey.exe” tool as administrator, select the solution name in the “Product Name” drop down and click “Check License Status”. Repeat this in all the SharePoint servers in the farm. Sample screenshot below: Please contact sharepointsupport@crowcanyon.com in case of any queries regarding the installation process. Installation NITRO Studio Solutions On Premises NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "44",
    "name": "44 - Configure a monthly count report on specific type(s) of list items.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/44%20-%20Configure%20a%20monthly%20count%20report%20on%20specific%20type%28s%29%20of%20list%20items.html",
    "title": "Configure A Monthly Count Report On Specific Type(s) Of List Items",
    "text": "Configure a monthly count report on specific type(s) of list items - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a monthly count report on specific type(s) of list items Configure a monthly count report on specific type(s) of list items 1099 views Less than a minute 0 Applies To: SharePoint Online Description: This articles describes the configurations for a report that shows monthly count of items of a specific type. In this example, we will take “Tickets created by Month” for Ticket of “Software” category. This article assumes the below list Schema: There is a list “Tickets” and it has a lookup column “Category” (from Category list). “Software” is one of the possible values for the “Category” column. Summary of Steps: Step 1 : Create a filtered view to get the tickets of “Software” category Step 2 : Configure a report “Software Tickets by Month“ &nbsp; Detailed Steps: Step 1: Create a filtered view to get the tickets of “Software” category Go to Site Contents &#8211;&gt; open the required list (Tickets) &#8211;&gt; list settings &#8211;&gt; create view &#8211;&gt; name the view as required (Tickets – Software in this use case) &#8211;&gt; configure the filter condition like below &nbsp; Note: More filters can be added based on values in other columns. For example, we can add condition for Status = &#8220;Closed&#8221; to get report on closed Tickets by month. Step 2: Configure a report “Software Tickets by Month“ Go to site settings &#8211;&gt; Site Administration &#8211;&gt; Crow Canyon NITRO Reports &#8211;&gt; Manage Reports &#8211;&gt; Create a new report like below After the report is successfully generated, please refer https://www.crowcanyon.info/nitro/appmanual_v2/index.html?add-report-to-a-page.html to add the report to required work space pages. Note: For more complex report configurations, please refer SharePoint Online section in https://www.crowcanyon.help/article/239/ article. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "440",
    "name": "440 - Configure a monthly count report on specific type(s) of list items.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/440%20-%20Configure%20a%20monthly%20count%20report%20on%20specific%20type%28s%29%20of%20list%20items.html",
    "title": "Configure A Monthly Count Report On Specific Type(s) Of List Items",
    "text": "Configure a monthly count report on specific type(s) of list items - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a monthly count report on specific type(s) of list items Configure a monthly count report on specific type(s) of list items 1099 views Less than a minute 0 Applies To: SharePoint Online Description: This articles describes the configurations for a report that shows monthly count of items of a specific type. In this example, we will take “Tickets created by Month” for Ticket of “Software” category. This article assumes the below list Schema: There is a list “Tickets” and it has a lookup column “Category” (from Category list). “Software” is one of the possible values for the “Category” column. Summary of Steps: Step 1 : Create a filtered view to get the tickets of “Software” category Step 2 : Configure a report “Software Tickets by Month“ &nbsp; Detailed Steps: Step 1: Create a filtered view to get the tickets of “Software” category Go to Site Contents &#8211;&gt; open the required list (Tickets) &#8211;&gt; list settings &#8211;&gt; create view &#8211;&gt; name the view as required (Tickets – Software in this use case) &#8211;&gt; configure the filter condition like below &nbsp; Note: More filters can be added based on values in other columns. For example, we can add condition for Status = &#8220;Closed&#8221; to get report on closed Tickets by month. Step 2: Configure a report “Software Tickets by Month“ Go to site settings &#8211;&gt; Site Administration &#8211;&gt; Crow Canyon NITRO Reports &#8211;&gt; Manage Reports &#8211;&gt; Create a new report like below After the report is successfully generated, please refer https://www.crowcanyon.info/nitro/appmanual_v2/index.html?add-report-to-a-page.html to add the report to required work space pages. Note: For more complex report configurations, please refer SharePoint Online section in https://www.crowcanyon.help/article/239/ article. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "441",
    "name": "441 - Show time taken to close the Ticket (from time it is created to closed) in Crow Canyon applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/441%20-%20Show%20time%20taken%20to%20close%20the%20Ticket%20%28from%20time%20it%20is%20created%20to%20closed%29%20in%20Crow%20Canyon%20applications.html",
    "title": "Show Time Taken To Close The Ticket (from Time It Is Created To Closed) In Crow Canyon Applications",
    "text": "Show time taken to close the Ticket (from time it is created to closed) in Crow Canyon applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Reports / Show time taken to close the Ticket (from time it is created to closed) in Crow Canyon applications Show time taken to close the Ticket (from time it is created to closed) in Crow Canyon applications 3255 views Less than a minute 0 Applies To: SharePoint On-premises and SharePoint Online Description This article describes the procedure to get the age of the ticket, that is, time taken to close the ticket. This is the difference in two time values captured on the Ticket: “Created” date and the “Closed Date”. We can use SharePoint Calculated Column to get the difference between these two date values. This calculated column can then be added to the required forms and views. We can also build reports based on this column. Detailed Steps Go to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Create a calculated column as shown below: Formula: = IF(ISBLANK([Closed Date]),\"0\",INT(([Closed Date]-[Created])*24)/24) This calculated column will be populated with the time taken to close the ticket in days. Note: Refer this article to add the new column to the Ticket forms Refer “Change View” section from this article to add this column to list views Sample Report on Closed Age “Average Age of Tickets by Category” NITRO Studio- Reports About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Deep Dive into NITRO Reports NITRO Studio Workshop: Build a Dashboard with Tiles &#038; Dials, and Reports Introduction to Report Manager in NITRO Studio How to customize NITRO Reports using Script Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "442",
    "name": "442 - How to enable Sentiment Analysis in Crow Canyon Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/442%20-%20How%20to%20enable%20Sentiment%20Analysis%20in%20Crow%20Canyon%20Applications.html",
    "title": "How To Enable Sentiment Analysis In Crow Canyon Applications",
    "text": "How to enable Sentiment Analysis in Crow Canyon Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , How-To / How to enable Sentiment Analysis in Crow Canyon Applications How to enable Sentiment Analysis in Crow Canyon Applications 3637 views 3 min , 42 sec read 0 Applies To SharePoint Online Description Sentiment analysis evaluates input text to assign a sentiment score ranging from 0 (negative) to 1 (positive). This capability is useful in detecting sentiment and enables custom business process based on the sentiment. Crow Canyon uses Microsoft Azure Text Analytics API for this and you can find more information here . This capability can be enabled in Crow Canyon Help Desk Application. When a Ticket is created, application will process the text in Ticket “Description” (or “Title” if there is no description) and determine the text sentiment score (0 to 1). Also, application assigns a configurable text value based on this score for easy identification and configurations. This data can then be used in application for various purposes like decide the priority of the Ticket, configure separate SLAs for Tickets having negative sentiment and send escalation notification if sentiment is excessively negative etc. It can also be used to configure reports to see sentiment for various types of Tickets, trend for assigned staff and time range etc. Summary of Steps Following steps are required to enable Sentiment Analysis in Crow Canyon Applications: Configurations list schema Tickets list schema SLA workflow based on business needs Detailed Steps Configurations List Schema We need to create a multiple lines of text column (plain text) in configurations list with name “SentimentAnalysis”. Go to site contents &#8211;&gt; Configurations list &#8211;&gt; List settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; click on “Create column” in the ribbon (see sample screenshot below) Create a new tab in the form with name “Advanced” and add the newly created “SentimentAnalysis” column to this tab in the NITRO Form. We can rename this column to “Sentiment Analysis” as needed. Please make sure this column is also added to edit and display forms. Note: Ensure that there is no space between Sentiment and Analysis during the column creation (SentimentAnalysis). After column is created, we can rename this column as needed. “Sentiment Analysis” column value contains the configuration required for evaluating the sentiment, details are given below: Sample configuration of the Sentiment Analysis is shown below: Enabled =Yes APIKey =xxxxxxxxxxxxxxxxxxxxxxx URL =southcentralus ScoreNumberColumn =SentimentScore ScoreTextColumn =SentimentValue ScoreTextValue =0.3-Angry,0.5-Negative,0.7-Neutral,1.0-Positive (i) Enabled : This column is used to check whether Sentiment analysis is enabled/disabled in our application. The only two possible values are Yes and No. Yes to enable and No to disable this feature in our application (ii) APIKey : This is a subscription key that needs to be used while calling Cognitive Service. For more details on this, please refer “How to create a Cognitive Services subscription” section at the end of this article. (iii) URL : Region specific URL prefix of Text Analytics service e.g. “westcentralus” or &#8220;southcentralus&#8221;. Please refer “How to create a Cognitive Services subscription” section at the end of this article. (iv) ScoreNumberColumn : This parameter is the internal name of the column that is used in the Tickets list. This column value range is between 0 &#8211; 1. API generates a decimal value between 0 and 1 based on the text sentiment and this result will be stored in this column on the ticket. 0 &#8211; Negative 1 &#8211; Positive (v) ScoreTextColumn : This parameter is the internal name of the column that is used in the Tickets list. This is a single line of text or choice column and will be filled by the Product app on ticket creation. It is a mapping from the numeric sentiment score value to a text value for easy reference in configurations and reports. The text can vary based on business needs. We can configure a value like “0.3- Angry,0.5-Negative,0.7-Neutral,1.0-Positive” and this would imply: If Score is &lt;= 0.3, set the ScoreTextValue as Angry If Score is &lt;= 0.5, set the ScoreTextValue as Negative If Score is &lt;= 0.7, set the ScoreTextValue as Neutral If Score is &lt;= 1.0, set the ScoreTextValue as Positive Tickets list Schema There are two columns to be created in the Tickets list: &#8211; SentimentScore &#8211; SentimentValue (i) SentimentScore : This column should be created with the same internal name that is used for “ScoreNumberColumn” for the Sentiment Analysis configuration list item. Go to site contents &#8211;&gt; Tickets list &#8211;&gt; list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; create a number column with two decimals like below Add it to the required position in the Ticket forms as needed. Value in this column will be set to the score that is obtained by the sentiment analysis functionality in the application. Note: We can rename this column once it is created with the required internal name (ii) SentimentValue : This column should be created with the same internal name specified for the “ScoreTextColumn” in the configuration list item. Create a new single line of text column and add this column to required tab in the NITRO forms as needed. See sample screenshot below Note: We can rename this column once it is created with the required internal name How to create a Cognitive Services subscription If you have a Microsoft Azure subscription, you can create a new “Text Analytics” service. Alternatively, you can use your O365 account to create this service. Please click here to create your own service for this. See sample screenshot below Upon clicking “Get API Key”, it prompts for the type of service that you would like to have. If you already have an Azure account, we can sign in and that would provide us the information for API. See sample screenshot below If you would like to try out a free trial, click on “Get Started” in Guest section that prompts for Country, provide the information and click on Next. See sample screenshot below Now it prompts for us to select one of the login mode as shown below We can sign in with the required option and that would generate us the information for API Key. See sample Text Analytics screenshot below With the above configurations, sentiment analysis is integrated in our Crow Canyon application and it starts assigning sentiment score and value when new Tickets are created. Sample data below: 3. SLA workflow based on sentiment score Since our Product app updates the sentiment score and text value on the ticket, these columns can be used in our NITRO Workflows app to automatically set the priority to the required value in the tickets. See sample SLA Workflow from below Configure Update item action like below The above workflow will auto set priority to “High” if the sentiment value is &#8220;Angry&#8221; for the ticket. Similarly, we can configure other update item actions to automate the Priority setting based on Sentiment Value as needed. Please refer SLA.docx (sharepoint.com) article for more detail on SLA feature. Sentiment Crow Canyon Applications How-To About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "443",
    "name": "443 - Custom Script examples in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/443%20-%20Custom%20Script%20examples%20in%20NITRO%20Forms.html",
    "title": "Custom Script Examples In NITRO Forms",
    "text": "Custom Script examples in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Custom Script examples in NITRO Forms Custom Script examples in NITRO Forms 4622 views 5 min , 46 sec read 4 Applies to: SharePoint Online and SharePoint On-Premises Description NITRO Forms have lot of built-in functionality for layout, design and functionality. For any specific cases not covered directly by the configurations, custom JavaScript and CSS can be added. These custom scripts can be invoked on form load, on column values change and before/after item submit. For all these cases, scripts can be invoked conditionally based on values entered in the form. This article lists some of the use cases and configuration steps for custom scripts: Switch to a tab on the form when a specific value is selected in a column Include one or more custom JavaScript files in NITRO forms Show a popup message on column value change Open Portal Quick link tiles in modal dialog How can we configure a hyperlink in the “Safety Data Sheet” document library whenever a new “SDS image” is uploaded or edited? How to configure Print feature in Portal forms? Copy SharePoint column value to clipboard on button click Switch to a tab on the form when a specific value is selected in a column This example is based on following configurations on the form: A tab is added to form with name “Spam” Tab permissions are configured to show this tab only when Category column value is &#8216;Email&#8217; and &#8216;Issue Type&#8217; column value is Spam When user selects the &#8216;Issue Type&#8217; as Spam, focus should automatically shift to this tab in the NITRO forms (that is, this tab should get selected). This can be configured using NITRO Forms advanced options. Go to List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced Section -&gt; Form Event Actions. Note: If &#8220;Form Event Actions&#8221; option is not available in the NITRO forms, please upgrade the NITRO Studio for the site to latest version. Go to site -&gt; Application Administration -&gt; Crow Canyon NITRO Studio -&gt; Click &#8220;Update This Site&#8221; link. With &#8220;Form Event Actions&#8221; we can invoke script code on column change event or during form load. In this scenario, we will configure a form event action on &#8216;Issue Type&#8217; column change to switch focus to “Spam” tab. Click &#8220;Form Event Actions&#8221; button and configure a new action that will be executed when user changes &#8220;Issue Type&#8221; column value to “Spam” on the form: Next, configure an “Execute Script” action to switch to specific tab: Script used above : var tabTitle = \"NAMEOFTAB\"; var selTab = $(\"#tabStripForm &gt; div&gt; ul &gt; li .k-link:contains(\"+tabTitle+\")\"); if(selTab.length == 1 &amp;&amp; selTab.text().trim() == tabTitle){ var tabIdx = $(\"#tabStripForm &gt; div &gt; ul &gt; li\").index(selTab.closest(\"li\")); $(\"#tabStripForm\").data(\"kendoTabStrip\").select(tabIdx); Note: Please rename “NAMEOFTAB” with the required tab in the above script Next, save the settings and publish the NITRO Forms. You may have to refresh NITRO Form a couple of times for new settings to take effect as settings are cached to improve performance. Include one or more Custom JavaScript files in NITRO forms We can add custom JavaScript that is loaded at the time of form load. We can put the script in a file and include the link to the file in the form settings. In this example we have described the configuration to add one or more custom JavaScript files in NITRO forms. Instructions : Upload script files to &#8216;Site Assets&#8217; library in the site. In this sample use case, we have uploaded custom script files to &#8216;Scripts&#8217; folder in the &#8216;Site Assets&#8217; library. URLs: https://contoso.sharepoint.com/sites/Helpdesk/IT/SiteAssets/Scripts/File1.js https://contoso.sharepoint.com/sites/Helpdesk/IT/SiteAssets/Scripts/File2.js 2. Configure custom JavaScript files in NITRO Forms. Go to List Settings -&gt; Open NITRO forms -&gt; Click on Advanced Settings -&gt; Click on Custom JavaScript 1. Link – If we would like to add only one custom JavaScript link to the form then we can use this option. 2. Eval To include two or more Custom JavaScript links to the form follow below instructions. Note: Please note that File1.js and File2.js URLs (highlighted in above image) in the above script need to be re placed with the actual locations of the JS file(s). Script used in the above screenshot : var script1 = document.createElement('script'); script1.type = 'text/javascript'; script1.src = \"https://contoso.sharepoint.com/sites/Helpdesk/IT/SiteAssets/Scripts/File1.js\"; $('head').append(script1); var script2 = document.createElement('script'); script2.type = 'text/javascript'; script2.src = \"https://contoso.sharepoint.com/sites/Helpdesk/IT/SiteAssets/Scripts/File2.js\"; $('head').append(script2); functionCallback(); After configuring the forms, save the settings and publish the NITRO Forms. 3. How to configure Form Event actions to show a popup message? In this example, we have configured Form Event actions such that if the &#8220;Number of Employees&#8221; more than 1 then we can show a popup message i.e. “Please attach spreadsheet with employee data”. Instructions: Go to list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced Settings -&gt; Form Event Actions and configure the execute script action as shown below. Script window.alert(\"Please attach spreadsheet with employee data\"); 4. How to open Portal Quick link tiles in modal dialog? In this example, we have configured Portal Quick Link tiles open in model dialog. Follow the instructions below to open quick link tiles in model dialog. Instructions Step1: Go to Portal Settings -&gt; Home Page Settings -&gt; edit the Quick Link Step2: Append “&amp;IsNITRO=1&amp;Dlg=1” in the URL of the quick link as shown below. Step3: Go to “Custom JavaScript&#8221; button for the quick link and add the attached script as shown below and save the settings. Script used in above action: paramTileInfo.IsPopup = true; setTimeout(function(){ functionCallback(paramTileInfo); },10); After that refresh the page and click on the Quick Link it will be open in dialog. Note: Above steps need to be repeated for all the Quick Tickets needed as per our business scenario. 5. How can we configure a hyperlink in the “Safety Data Sheet” document library whenever a new “SDS image” is uploaded or edited? We can populate a hyperlink in the Safety Data Sheet” item that has the direct link to the “SDS Image”. Find the instructions to configure below. Detailed Steps Create a Library and it is named as “Safety Data Sheet” Create a lookup column in the “Safety Data Sheet” Library and it is named as ‘Product Image’ as shown below. Create a hyperlink type of column with name ‘Link’ as shown below. Create an another Library and it’s named as “SDS Image” When we are uploading the images in this folder that image hyperlink will be auto-fill in the edit form of “Safety Data Sheet” while selecting the ‘Product Image’. Instructions Step1: Go to Site Contents -&gt; Safety Data Sheet document library -&gt; Library Settings -&gt; Crow Canyon NITRO Forms. Step2: Go to Advanced section in left hand panel -&gt; Form Event Actions -&gt; Create a new configuration as shown below Configure a new action as shown below Script used in the above action: var fieldInterName = \"Product_x0020_Image\"; var objLookupControl = CCSLookupUI.Controls[fieldInterName]; var ProductItemIds = objLookupControl.GetUIValueIDs(true); if(ProductItemIds &amp;&amp; ProductItemIds.length &gt; 0){ var objItem = objLookupControl.ObjLookupList.getItemById(ProductItemIds[0]); objLookupControl.Context.load(objItem,'File'); objLookupControl.Context.executeQueryAsync( function () { var urlColValue = {URL : \"\", Title : \"\"}; var objFile = objItem.get_file(); urlColValue.URL = objFile.get_serverRelativeUrl(); urlColValue.Title = objFile.get_name(); window.ccs_g_FormUI.setColumnControlValueByName(\"Link”, urlColValue) }, function () { //console.log }); } Note : we have to replace the ##LookupColumnInternalName##, ##HyperlinkColumnInternalName## in the above script with the internal names of the columns (lookup, hyperlink) as per our business scenarios. To know the internal names of the columns, Go to library settings of the “Safety Data Sheet” document library -&gt; click on lookup column -&gt; Internal name will be present in the URL as shown below. 6. How to configure Print feature in Portal forms? NITRO activated sites have a print feature for the list items. This is not directly available in the NITRO Power Portal forms. In this example we have described the configuration to add print feature in portal display forms. Instructions We can configure print button in portal display form using custom JavaScript. Please follow steps given below. Go to Portal Site -&gt; Portal Settings -&gt; Portal Forms -&gt; Edit “Tickets” list forms -&gt; Go to Display form -&gt; Custom JavaScript (under Advanced section). Enter the script given below in ‘Custom JavaScript Code’ section and then publish the portal forms. Script used above: Custom JavaScript_Print Download Print button will appear in portal display form as shown below: 7. Copy SharePoint column value to clipboard on button click In this sample use case, we have configured custom script to copy the URL from a hyperlink column on button click. Note : Same steps can be followed for below different SharePoint column types: Single line of text Multiple lines of text (Plain text) Choice Number Date and Time Lookup Yes/No Person or Group Hyperlink or Picture Instructions In this sample use case, we have configured “Copy URL” button under “Asset Info Link” hyperlink column. Add ‘Line/HTML’ control below the ‘Asset Info Link” hyperlink column. Navigate to NITRO Forms designer for the list -&gt; Add ‘Line/HTML’ from ‘Form Controls’ section below ‘Asset Info Link’ column. Edit source code for ‘Line/HTML’ from left hand panel settings. Update ‘View HTML’ with below script: &lt;div style=\"text-align:right;\"&gt;&lt;button class=\"btn btn-info\" id=\"CopyURLtoClipBoard\" type=\"button\"&gt;Copy URL&lt;/button&gt;&lt;/div&gt;&lt;span id=\"CopyURLtoClipBoardNotification\"&gt;&lt;/span&gt; Note: ‘Copy URL’ is the button title. Replace button title as required. Click ‘Custom JavaScript’ (from ‘Advanced’ section in left hand panel) and enter the given script. Script: $(\"#CopyURLtoClipBoardNotification\").kendoNotification({ hideOnClick: true, autoHideAfter : 2000, position: { top: 10 } }); //left/right/bottom $(\"#CopyURLtoClipBoard\").click(function(e){ e.preventDefault(); var copyURLField = \"ColumnInternalName\"; //Replace Column Internal Name in above line as needed. var linkURL = \"\"; if (window.ccs_g_FormUI.isDisplayForm) { var objlinkURL = window.ccs_g_FormUI.getListItemColumnValue(window.ccs_g_FormUI.listFields[copyURLField],true); if(objlinkURL &amp;&amp; objlinkURL.URL){ linkURL = objlinkURL.URL; } } else { linkURL = window.ccs_g_FormUI.fetchColumnValueUI(copyURLField); } window.ccs_g_Utils.copyToClipBoard(linkURL); $(\"#CopyURLtoClipBoardNotification\").getKendoNotification().show(\"&amp;nbsp;URL copied to clipboard\"); }); Note : Replace ‘ColumnInternalName’ with internal name of required SharePoint column. Replace ‘URL copied to clipboard’ with required notification message. Sample Output About supportTeam View all posts by supportTeam &rarr; One thought on &ldquo;Custom Script examples in NITRO Forms&rdquo; Its-Matt-From-IT says: May 4, 2021 at 3:19 pm For the print feature, the code shown in the screenshot does not match the text JS that is provided. Took me a bit to realize why it wasn&#8217;t working properly! The below line should fix that for people. var buttonHTML = &#8216;&lt;button id=&#8221;btnCCSPrintCustom&#8221; style=&#8221;min-width: 135px;&#8221; type=&#8221;button&#8221; class=&#8221;ccs-btnColor&#8221;&gt;Print&lt;/button&gt;&#8217;; Log in to Reply Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "444",
    "name": "444 - NITRO Forms_ Change the color of Form _ Columns based on a value selected in the form - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/444%20-%20NITRO%20Forms_%20Change%20the%20color%20of%20Form%20_%20Columns%20based%20on%20a%20value%20selected%20in%20the%20form%20-%20Crow%20Canyon.html",
    "title": "NITRO Forms Change The Color Of Form Columns Based On A Value Selected In The Form Crow Canyon",
    "text": "NITRO Forms: Change the color of Form / Columns based on a value selected in the form - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Forms: Change the color of Form / Columns based on a value selected in the form NITRO Forms: Change the color of Form / Columns based on a value selected in the form 2873 views 3 min , 43 sec read 2 Applies to: SharePoint Online and On-Premises Description NITRO Forms has lot of built in functionality to create dynamic forms and customize the form UI as required in common business applications. For any custom requirements, you can add CSS and JavaScript on the form to change the UI and functionality. This article describes the configurations required to modify the NITRO form color in NITRO designer settings. In this article we have also described the configurations required to change the look and feel of the NITRO Forms based on a request status column value. These color changes are applied dynamically when the value is changed on the New/Edit item Form. For display Form, it is based on the saved column value. Modify the NITRO forms look and feel Modify the NITRO forms look and feel dynamically based on &#8220;Status&#8221; column value Detailed Steps 1. Modify the NITRO forms look and feel In NITRO forms settings we can directly modify the look and feel of NITRO form using &#8220;UI&#8221; setting for tab/section. Go to List Settings -&gt; Crow Canyon NITRO forms -&gt; Select the Tab -&gt; Tab Settings -&gt; UI -&gt; Select the &#8220;Tab Icon&#8221; and &#8220;Tab Panel Background Color&#8221; then click on Apply and and publish the settings. Please refer image below for tabs, similar settings can be applied for sections: 2. Modify the NITRO forms look and feel dynamically based on &#8220;Status&#8221; column value In this article, we have considered the &#8220;Request Status&#8221; column. Based on the value of this column different colors are applied on the form. Summary of Steps Details of the required custom script for changing colors Form configuration in New/Edit forms Form configuration in Display form Sample Output Sample output screenshots applied to whole form Sample output screenshots applied to only column row 1. Details of the required custom script for changing colors Please copy the below script in notepad/code editor and then make the required changes. Script requires following updates, please refer image below to make these changes: Internal name of the column needs to be replaced in multiple places. Different colors are applied based on value of this column Column value text and corresponding color codes Certain lines in script are for New/Edit form of the list item, others are for the display form. Uncomment the required lines depending on usage Based on whether you are using tabs or sections on the Form, different lines need to be used You can apply color to whole form or only particular column control. Uncomment the required lines as required var controllStyleId = \"CCSFormBGStyleByColumn\" var requestStatusColumnName = \"RequestStatus\"; if ($(\"#\" + controllStyleId).length == 0) { $(\"body\").append(\"&lt;div id='\" + controllStyleId + \"'/&gt;\"); } $(\"#\" + controllStyleId).empty(); //Uncomment below line for New/Edit Form //var status = window.ccs_g_FormUI.fetchColumnValueUI(requestStatusColumnName); //Uncomment below \"if statement\" if we want to run this script on lookup column //if(status){ //status = status.split(\";#\")[1]; //} //Uncomment below line for Display Form //var status = window.ccs_g_FormUI.getListItemColumnValue(window.ccs_g_FormUI.listFields[requestStatusColumnName]); //Uncomment below line for Tabs (Adds color to whole form) //var controlId = \"#panleFormControls\"; //Uncomment below line for Sections (Adds color to whole form) //var controlId = \"#ccsMainControl\"; //Uncomment below line for adding comments to one column row instead of whole form //var controlId = \"#row_ColumnInternalName\"; //Uncomment below line for adding comments to one column control instead of whole row and instead of whole form //var controlId = \"#row_ColumnInternalName .ccs_ColumnControl\"; var cssText = \"\"; if (status == \"Unassigned\") { cssText = controlId + \" {background: #80aaff !important;}\"; } else if (status == \"Assigned\") { cssText = controlId + \" {background: #d98cb3 !important;}\"; } else if (status == \"Closed\") { cssText = controlId + \" {background: #80ffaa !important;}\"; } if (cssText) { var style = document.createElement('style'); style.type = 'text/css'; if (style.styleSheet) { style.styleSheet.cssText = cssText; } else { style.appendChild(document.createTextNode(cssText)); } $(\"#\" + controllStyleId).append(style); } Note: Use this link to generate the color code. Please change the above script as explained below: In above script, replace &#8220;RequestStatus&#8221; column name with actual column internal name as per your requirement. 2. Form configuration in New/Edit forms Go to List Settings -&gt; NITRO forms -&gt; Advanced Settings -&gt; Click on Form Event Actions and configure the form event action as shown below: Please note the column selected for column value change. Select the required column in your environment: Execute Script action Modify the above script as per your requirement and use that in the execute script action. Note the comments about New/Edit form in script image to uncomment the required lines and make other updates for column name/value and color codes: 3. Form configuration in Display form Go to List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select Display Forms -&gt; Custom Java Script -&gt; Modify the above script as needed and configure like shown below. Modify the script as per your requirement and use that here. Note the comments about Display form in script image to uncomment the required lines and make other updates for column name/value and color codes: 4. Sample Output Sample output screenshots applied to whole form Output same in new or edit or display forms based on the Request Status: Unassigned Status: Assigned Status: Closed Status: Applying colors only to the column row (and not to whole Form background) Use the script that was copied from above and make the changes required for only column control color (and not the whole form). Also make other changes related to column name/value and color codes etc. Sample script is given below: var controllStyleId = \"CCSFormBGStyleByColumn\"; var requestStatusColumnName = \"RequestStatus\"; if ($(\"#\" + controllStyleId).length == 0) { $(\"body\").append(\"&lt;div id='\" + controllStyleId + \"'/&gt;\"); } $(\"#\" + controllStyleId).empty(); var status = window.ccs_g_FormUI.fetchColumnValueUI(requestStatusColumnName); //Uncomment below line for New/Edit Form var status = window.ccs_g_FormUI.fetchColumnValueUI(requestStatusColumnName); //Uncomment below line for Display Form //var status = window.ccs_g_FormUI.getListItemColumnValue(window.ccs_g_FormUI.listFields[requestStatusColumnName]); //Uncomment below line for Tabs (Adds color to whole form) //var controlId = \"#panleFormControls\"; //Uncomment below line for Sections (Adds color to whole form) //var controlId = \"#ccsMainControl\"; //Uncomment below line for adding comments to one column row instead of whole form var controlId = \"#row_RequestStatus\"; //Uncomment below line for adding comments to one column control instead of whole row and instead of whole form //var controlId = \"#row_ColumnInternalName .ccs_ColumnControl\"; var cssText = \"\"; if (status == \"Unassigned\") { cssText = controlId + \" {background: #80aaff !important;}\"; } else if (status == \"Assigned\") { cssText = controlId + \" {background: #d98cb3 !important;}\"; } else if (status == \"Closed\") { cssText = controlId + \" {background: #80ffaa !important;}\"; } if (cssText) { var style = document.createElement('style'); style.type = 'text/css'; if (style.styleSheet) { style.styleSheet.cssText = cssText; } else { style.appendChild(document.createTextNode(cssText)); } $(\"#\" + controllStyleId).append(style); } Sample Output screenshots Unassigned: Assigned: Closed: For more custom CSS examples in NITRO forms, please refer this Article About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "445",
    "name": "445 - How to Export and Import Crow Canyon NITRO Configurations.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/445%20-%20How%20to%20Export%20and%20Import%20Crow%20Canyon%20NITRO%20Configurations.html",
    "title": "How To Export And Import Crow Canyon NITRO Configurations",
    "text": "How to Export and Import Crow Canyon NITRO Configurations - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Forms , NITRO Studio- Workflows / How to Export and Import Crow Canyon NITRO Configurations How to Export and Import Crow Canyon NITRO Configurations 3553 views 2 min , 47 sec read 24 Applies to: SharePoint Online Description In certain cases when list and site structure is same, it is possible to export the NITRO Forms and Workflow configurations from one site and apply the same on other site having similar schema. Most common scenario is when there are two environments for an application: Development and Production. In this case forms and workflows can be configured and tested on development environment and then exported and applied to production. Any list and field changes in development environment should be applied to production before doing the export and import. General Prerequisites SharePoint list and fields schema (list names, field internal name, display name and type) should match in both source and target sites to get the export and import to work If Forms and Workflows refer to other lists (lookup column relationships), then schema should match for these related lists as well Export and Import Crow Canyon NITRO Forms Functionality and Prerequisites List and related lists in source and target site should have same schema Associated lists should have NITRO Forms with same names. This will generally be the case if lists have same names All forms configured on the list are imported/exported and NITRO form settings of target list are overwritten, so user should back them up if required (by exporting) Note: User need to save/publish the settings after import If NITRO Forms are using submit actions which invoke NITRO custom actions, then actions with same Id should be present in target Unless these sites are created by our setups, generally action Ids will be different even though they may have same name. In this case, user can update the Form settings with correct action after import Feature limitations Cross-site lookups/associated items are not supported If Script is used, and it has hard-coded site/list Id/URL etc., then this has to be updated manually in target after import Steps to Export/Import NITRO Forms Export Go to the source list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; click on &#8220;Manage Forms&#8221; in Form Ribbon as shown below &#8211;&gt; click on “Advanced Settings” &#8211;&gt; click on “Export” button, it asks to save the file locally as shown below: Note: If multiple forms are configured in the list, then it directly opens the below dialog when we open the NITRO Forms for that list. Import Go to the target list settings, Crow Canyon NITRO Forms, click on &#8220;Manage Forms&#8221;, click on “Advanced Settings”, click on “Choose File”, select the form settings exported file in above step and click “Import”. Please wait until the forms settings are imported and it shows the success message once the import is completed. Note that these settings are not applied to list forms after the import, these are just imported in the designer UI. You need to publish the forms for these settings to take effect. You can make changes after import and then publish. Export and Import Crow Canyon Workflow Manager Workflows Feature Limitations Mail templates won’t be exported/imported. Once the workflow is imported, we need to edit the “Send Mail” actions, create the required mail templates manually and update the workflow settings. Steps to Export/Import Workflow Manager Settings Export Go to Site Settings, Crow Canyon NITRO Apps, Open NITRO Workflows, use the “Export Workflow Settings” button under the “Actions” column in the grid as shown below. When we click this export button, browser prompts to save the settings (*.json”) file locally, save to the local drives. Import We can import the workflow manager settings as a new workflow. If we would like to override the existing workflows using import options, we can achieve by deleting the old workflow and create new workflow using the import option. Create new workflow, select site, list, browse the exported settings file, click “Import” button as shown below Note: Please note that we have to reconfigure the mail template settings. Export/Import form settings for a specific NITRO Form: Use case: A list has multiple NITRO Forms and among those forms, a specific form’s settings need to be exported and imported to another NITRO form. Steps: Navigate to the source list -> List Settings -> Crow Canyon NITRO Forms -> Click the icon ‘&lt;/>’ for the desired NITRO Form whose settings needs to be exported as shown below: 2. In the opened window, under ‘Export settings’, copy the form settings and paste them in notepad as shown below: 3. Navigate to the target list -> List settings -> Crow Canyon NITRO Forms -> Click ‘&lt;/>’ for the desired NITRO Form where the settings need to be imported -> Paste the form configurations under the ‘Import settings’ (that were exported in #2 above) -> Click ‘Import’ button as shown below: 4. Publish the NITRO Forms and check the result. Note: If a list has separate NITRO Forms for ‘New, Edit and Display’ then, we need to export and import the settings for each form from the source to the target forms as shown below: Export Import NITRO NITRO Studio- Forms NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface Leave a Reply Cancel reply You must be logged in to post a comment."
  },
  {
    "id": "446",
    "name": "446 - How to enable scripting capabilities with PowerShell.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/446%20-%20How%20to%20enable%20scripting%20capabilities%20with%20PowerShell.html",
    "title": "How To Enable Scripting Capabilities With PowerShell",
    "text": "How to enable scripting capabilities with PowerShell - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to enable scripting capabilities with PowerShell How to enable scripting capabilities with PowerShell 1449 views Less than a minute 10 Applies To : SharePoint Online Description Crow Canyon NITRO Studio requires that custom scripting should be enabled in the SharePoint site. Please refer this Microsoft article to enable scripting from the SharePoint admin center. To enable scripting immediately for the site using PowerShell, please follow the detailed steps given below. Note that enabling the scripting from SharePoint admin center is still required as otherwise it overrides the settings done using PowerShell (in about 24 hours). Steps to enable scripting using PowerShell Download and Install Windows Management Framework 5.1 (if the Operating System is not Windows 10) Download and Install SharePoint Online Management Shell Open SharePoint Online Management Shell from Windows Start Menu Connect to your SharePoint Admin Portal Enter the following command to open connection: Connect-SPOService Enter the URL of your SharePoint Online admin portal: https://&lt;your_tenant_name&gt;-admin.sharepoint.com For example, if your SharePoint tenant domain is https://mycompany.sharepoint.com , enter https://mycompany-admin.sharepoint.com Sign in Enter the username and password for the user who has tenant admin permissions 5. Enable Scripting Capabilities on your site Update site collection property to enable scripting Enter the following command to enable scripting capabilities on your site: Set-SPOsite &lt;Site Collection URL&gt; -DenyAddAndCustomizePages 0 We need to enter the site collection URL for &lt;Site Collection URL&gt; E.g. Site Collection URL: https://your-tenant-name.sharepoint.com/sites/site1 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "447",
    "name": "447 - External Data Column configuration in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/447%20-%20External%20Data%20Column%20configuration%20in%20NITRO%20Forms.html",
    "title": "External Data Column Configuration In NITRO Forms",
    "text": "External Data Column configuration in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / External Data Column configuration in NITRO Forms External Data Column configuration in NITRO Forms 3186 views 6 min , 31 sec read 0 Applies To SharePoint Online and SharePoint On-Premises Overview NITRO Forms allow integration of external data with SharePoint list data. Data in Microsoft SQL server tables can be fetched and populated in SharePoint list columns in the NITRO Forms. For data in sources other than SQL Server, custom service option can be used. When list item is saved, this data is saved in the SharePoint item columns. This saved data has reference to the SQL table record based on the unique Id value of record that is saved in the list item data. While fetching data from Database, we can get it based on data already present on the form. This can be based on other external columns or regular SharePoint list columns or combination of both. These cases are explained in more details in below sections. NITRO also allows insert / update of records in external data. Please refer this article for more details. Prerequisites Multiple Records If you want to pull back multiple records from SQL (e.g. to show a dropdown of choices from the SQL DB), you will need to create two Single Line of Text columns prior to setting up the below configurations. For example, you will want to create a column called &#8220;Department&#8221; and one called &#8220;DepartmentID&#8221; if you are pulling back multiple records from a table of departments. Single Record When using the Single Record option, you&#8217;re typically mapping information from SQL to columns in SharePoint based on the returned record. In this case, you&#8217;ll want to create as many SharePoint columns ( Single Line of text, Multiple lines of text, Choice, Number, Currency, Date, Yes/No, or Lookup ) as necessary to capture the information from SQL. Steps to configure External Data Columns Go to NITRO form Setting Page Go to the Form Settings section on the left panel Click on ‘External Data Columns’ Button to bring up the list of existing configurations Click ‘New Configuration’ button to bring up ‘Configure External Data Column’ form. Specify the external data settings options as per the description given below Configuration Name This should be a unique name for the external data configuration for a column in the NITRO form. Query Output Multiple Records This is used when list of items is maintained in database table and on the Form user needs to make a selection of one item. For example: Get all departments and let user select the department for a purchase request Get all employees of the department (based on selected department on the Form) and let user select the employee who will be approving the purchase request This configuration uses two list columns, one for the display and selection of the database record, and other for storing the unique value of the database record Single Records This is used when a single record is fetched from database and one or more values from the record need to be mapped to corresponding SharePoint list column. Typically this record will be fetched based on the data already on the form. For example: Based on the selected employee on the form, fetch the employee’s email and phone number and populate these values on the corresponding columns on the Form In this case multiple attributes fetched from the database record can be mapped to corresponding columns on the form. Supported SharePoint list column types are Single Line of text, Multiple lines of text, Choice, Number, Currency, Date, Yes/No and Lookup Web Service Type NITRO Forms are implemented fully in client side code (JavaScript and CSS). However, database can’t be connected directly from client side code and so an intermediate service is required to connect and fetch data. Below options are available for this service: Default SharePoint On-Premises: NITRO Forms has SharePoint server-side code component that directly connects to Database. This means database server should be accessible from the SharePoint server(s) SharePoint Online: Crow Canyon has a web service running in Microsoft Azure to connect to your database and fetch data. This means database server should be accessible from Microsoft Azure network Custom If we don’t want to use the default Crow Canyon provided services, you can easily write your own service and deploy it. In this case the database connection string need not be specified in the NITRO Forms settings and can be there only in your service code Please refer Custom Service section in this document for more details. We provide the service template to which you can add your code to connect and fetch data and deploy it. After that you can use this service URL in NITRO Forms settings to fetch data Web Service URL – Only for custom option. Enter Custom Web Service URL to connection the Database for fetching data from Database tables Database Settings Database Connection String &#8211; Microsoft SQL Server Database Connection string Mandatory for Default Service Type Optional for Custom Service Type (your custom service code can override the connection string value sent from UI) Select Query – Fetch the records from Database table using SQL Select Query. Queries can be simple without any variable data from other columns on the form. In Scenario 1 described below, list of departments is fetched from database using a simple query E.g: Select [Id], [DepartmentName] FROM [dbo].[Department] This query doesn&#8217;t use any parameters based on the column values on the form If Query output should vary based on the data on the form, then use parameters in the where clause of the select query. Parameter can be given any name and need to be prefixed with @ In Scenario 2 described below, employee records are fetched from database for the department value selected on the form E.g: select [Id], [Name] from Employee where DepartmentId = @Department Here, DepartmentId is the column in Employee table. While getting the records, we want to get those employees that are from department selected on the form. For this, we define a parameter @Department. The value of this parameter will be mapped to the department column on the form in &#8216;Query Parameters&#8217; section as described below Query Parameters – If select query has any parameters, then these need to be mapped to list columns on the form. Before running the query NITRO Forms code will replace the actual value of the column in the query. In above example, before fetching employee records from database, @Department parameter in the query will be replaced with the column that is mapped for this parameter Sample use case is mentioned in Scenario 2 configuration below. Please see this section on details of mapping the parameters to list column values A query can have more than one parameters. And these parameters can be mapped to normal list columns or other external data columns If any column that is mapped to a query parameter is changed on the Form, NITRO forms will automatically run the query for external column(s) using that column value as parameter. This way, the values/options of such external columns will automatically get refreshed Configuration (e.g. in Scenario 2 below) Parameter in the query: @Department Parameter name for mapping: Department (without the @ prefix) Parameter Type: This will be database column value type like number, date, text etc. In this case it is a number as departmentId column in database has the Id of the department Value Expression – To build the value expression use SharePoint List columns and predefined functions. Typically, it can be just the value of the other list column on the form Database to SharePoint Column Mapping For Multiple Records Database Column &#8211; Enter the column name from the database query. This column will have the value that will be shown to user (e.g. Department name) SharePoint Column &#8211; Select List Column to show and store above value. This is the column on the form that will show the values fetched from database in a drop-down (or search control) Database Id Column &#8211; Enter the column name from the database query. This column will have the Id of the database record (typically a number column) SharePoint Id Column &#8211; Select List Column to store Unique database record Id. For saved forms, this value is used to select the record in display column (so it will work even if display value in Db record is changed) Enable Search – This feature only works when query output is multiple records. It is possible that database table has many records and these can’t be shown and selected properly in the drop-down. In such cases you can enable the search option. This will show a text box where user can enter some text and then press a button to show all matching database records. User can then select the required record from the search results. Search query can also use parameters to filter records based on other column values on the Form For Single Records Column – Select SharePoint List Column Value Expression – Use DB column Expression &#8211; [Column|Column] E.g. Populate Employee Email Address &#8211; Value expression is [EmpEmail|EmpEmail] where EmpEmail is Db column name. Please refer Scenario 3 below for more details. Scenarios Scenario 1: Get all departments from Database and show them as a drop-down list on the form Please refer to the below image on how this appears on the NITRO Form: Configuration for the above scenario: Scenario 2: Show employees in drop-down list based on selected department When department is selected/changed in the department column, get all employees of the selected department and show it in the employee drop-down column on the form. This appears on the NITRO Form as shown below: Configuration for the this scenario: Scenario 3: Populate employee attributes on the Form When employee is selected/changed in the employee column, get attributes of the employee from the Database table and populate these attributes in the columns on the Form. This appears on the NITRO Form as shown below: Configuration for the this scenario: Phone Mapping Dialog Employee Details Mapping Dialog Custom Web Service Crow Canyon provide Web API Service project template ( CrowCayon.DBServiceApp ) that you can use for the custom option in the settings above. Add the required code and deploy the service and provide the service deployment URL. Please note that service should be accessible from the SharePoint environment. Microsoft Visual Studio 2013 or later is required to update and build the project. Crow Canyon can assist you with this service as part of professional services. Please refer below for the code that needs to be modified for your custom service: Currently two methods are defined in DBUtilsService class and these can be modified: TestConnection Method – Arguments &#8211; Dictionary&lt;string, object&gt; Parameters Parameters key &#8220; dbConn &#8220;: This has Database Connection string specified in NITRO Forms Settings. You can modify the connection string value in the dictionary to override what is configured in NITRO Forms. That way, you can give a dummy value in UI and put your actual connection string here. Since service is running in your environment, no one else will have access to the connection string if it is specified here SelectQuery Method – Arguments &#8211; Dictionary&lt;string, object&gt; Parameters Parameters key &#8220; dbConn &#8220;: Please refer above details Parameters key &#8220; queryText &#8220;: This has the select query specified in NITRO form settings and can be updated here as required Parameters key &#8220; isSProc &#8220;: Whether query is Stored Procedure or a simple select query Parameters key &#8220; params &#8220;: The value for this key has the Query Text Parameters as dictionary with parameter names as key and parameter value as the value in dictionary. It contains the query parameters that are defined while configuring the external data columns in NITRO Forms. Service will get the parameter values as per the data on the form and they can be modified here if required About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "448",
    "name": "448 - Install Crow Canyon NITRO Studio for SharePoint On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/448%20-%20Install%20Crow%20Canyon%20NITRO%20Studio%20for%20SharePoint%20On-Premises.html",
    "title": "Install Crow Canyon NITRO Studio For SharePoint On Premises",
    "text": "Install Crow Canyon NITRO Studio for SharePoint On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications , NITRO Studio / Install Crow Canyon NITRO Studio for SharePoint On-Premises Install Crow Canyon NITRO Studio for SharePoint On-Premises 6225 views 5 min , 22 sec read 2 Applies To : SharePoint On-Premises Note: This setup process is for NITRO Studio Azure version. Please refer this link for setting up secure version of NITRO Studio. Description This article describes the steps to install the Crow Canyon NITRO Studio for SharePoint On-Premises (2013 / 2016 / 2019). Prerequisites SharePoint should be installed and configured (SharePoint 2013/2016/2019) and server should be in stable state Go to SharePoint Central Admin &#8211;&gt; System Settings &#8211;&gt; Manage Servers in the farm. All the SharePoint servers in the farm should be in state “No Action Required” or “Upgrade Available” Logged-in user should be a domain user, local admin and a member of Farm Administrators group in SharePoint Logged-in user should have owner rights on SharePoint Admin content database, SharePoint configuration database and target web application&#8217;s content database SharePoint Timer Service and SharePoint Administration services should be in running state If SharePoint farm has multiple servers, these services should be in running state in all the SharePoint servers Execute pending Admin Jobs before starting setup, please follow below instructions: Stop SharePoint Timer Service and SharePoint Administration services in SharePoint server Run administrator command prompt from SharePoint server, change the directory to SharePoint hive location SharePoint 2013: C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\15\\BIN SharePoint 2016/SharePoint 2019: C:\\Program Files\\Common Files\\Microsoft Shared\\Web Server Extensions\\16\\BIN Run below command STSADM.EXE -o execadmsvcjobs Expected Output: It will show executing message for any pending admin jobs and shows &#8220;Operations completed successfully&#8221; message at the end Start SharePoint Timer Service and SharePoint Administration Services If SharePoint farm has multiple servers, repeat the same steps in all the servers in the farm Ensure that following URLs and IP Addresses are accessible from SharePoint server(s): URLs: https://nitrostudio.azurewebsites.net, https://ccsportal.azurewebsites.net IP Addresses: 104.44.128.14, 104.44.128.15, 104.44.128.16, 104.44.128.17, 104.214.52.79, 13.65.212.252, 13.66.37.235, 13.66.36.172, 13.84.40.155, 13.66.37.11, 40.84.136.198, 23.98.144.222, 23.98.128.142, 40.124.36.136 (these IPs are from Microsoft Azure datacenters where Crow Canyon services are hosted) Package Information: SharePoint Version Package Name (Please contact Crow Canyon for package) SharePoint 2013 NITRO_SP2013.zip SharePoint 2016/SharePoint 2019 NITRO_SP2016_SP2019.zip Package contains SharePoint solution files (.wsp) and Power Shell scripts (.ps1). Solutions CrowCanyon.NitroStudio.wsp CrowCanyon.CommonUtils.wsp CrowCanyon.WorkflowManager.wsp PowerShell Scripts NITRO_Install.ps1 NITRO_ActivateFeatures.ps1 Summary of steps Prepare the solutions Add and deploy the solutions in the SharePoint Server Activate features in site collection Activate NITRO for a site Create Portal Site (Optional) Register License Install NITRO Workflow debugging service Install NITRO Office API for document generation Detailed Steps 1. Prepare the solutions Copy the downloaded zip file to the SharePoint Server. Note : If there are multiple SharePoint servers in the farm, copy the zip file to one of the servers in the SharePoint farm that is running “Microsoft SharePoint Foundation Web Application” service. Open Command Prompt (Run as Administrator) –&gt; navigate to the Package location –&gt; enter the below command to verify MD5 signature for the package. SP 2013: CertUtil -hashfile NITRO_SP2013.zip MD5 SP 2016/SP 2019: CertUtil -hashfile NITRO_SP2016_SP2019.zip MD5 In this example, package download link is like “https://…/MD5_de609b2210c24edd9d40b691613a7574/NITROStudioSetup.zip” and the command output is matching with checksum in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this checksum is not matching. Note : MD5 signature is to be verified for the downloaded &#8216;NITRO_SP2013.zip/NITRO_SP2016_SP2019.zip&#8217; file and not the extracted files from it. After MD5 signature is validated, right click on zip file and extract the files from *.zip file that contains Crow Canyon solutions (*.wsp) along with two PowerShell scripts (*.ps1) and copy them to the SharePoint server Note : It is possible that the extracted files are blocked as they are downloaded from internet. To unblock the files, Right click on each file –&gt; Properties –&gt; Unblock the file as shown below: 2. Add and deploy the solutions in the SharePoint server Note : There will be a downtime of 2-3 minutes in the SharePoint Server during the solutions deployment If the solutions are already installed in the SharePoint server then those solutions will be upgraded To add and deploy the Crow Canyon solutions in the SharePoint Server, open SharePoint Management Shell (run as administrator) and change the directory to the NITRO install package: Type “ .\\NITRO_Install.ps1 ” and hit enter to start solutions installation Script will prompt for the web application URL to deploy the solutions. Enter the Web application URL and hit enter: This will add and deploy all the Crow Canyon solutions (*.wsp) in the SharePoint Server Open SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Farm Management &#8211;&gt; Manage farm solutions. Wait until status for all solutions changes to “Deployed” After the solutions were successfully deployed in SharePoint server, go to Services.msc &#8211;&gt; restart &#8216;SharePoint Timer Service&#8217; in all SharePoint servers Solution Description S. No. Solution Name Deployment Scope Description Feature Scope 1 crowcanyon.commonutils.wsp Global This solution has common functionality used by various NITRO components: Read SharePoint site and list schema Mail templates and sending emails Condition evaluation based on list item data Read user information from Active Directory Handle list item attachments in NITRO Forms Crow Canyon Forms Attachments &#8211; Site Crow Canyon Mail Templates Administration &#8211; Site Collection 2 crowcanyon.nitrostudio.wsp Web Application Except for Workflow Manager, all NITRO components run on client side. That is, NITRO code runs in browser in context of the logged-in user. NITRO Studio solution is only used to install these client-side components in the site where NITRO is activated. This is done from pages listed below: NITRO Admin Home page: To manage NITRO activation and licensing for all sub-sites in the site collection NITRO Site page: To manage NITRO applications in site along with NITRO upgrade/repair NITRO Applications page: Install and upgrade pre-built NITRO applications Note that NITRO Studio solution is not used by NITRO components running in site for their functionality. It is only used for operations triggered by users from NITRO Studio pages. Site Collection 3 crowcanyon.workflowmanager.wsp Web Application This solution has server side code to handle SharePoint list item events like item added/updated/deleted. It also creates a timer job in SharePoint for workflows that run as per a schedule or a date/time. This component is used to implement business process flows in SharePoint. Site Collection To use NITRO in other web applications, go to Solution Management &#8211;&gt; click on &#8220;crowcanyon.workflowmanager.wsp&#8221; solution &#8211;&gt; Deploy to the required web application(s) Note: In case of any errors during the solution deployment, please refer “ Troubleshooting steps in case above process does not work ” section from https://www.crowcanyon.help/article/311/. Activate Features to a site collection Run “NITRO_ActivateFeatures.ps1” from the SharePoint Management Shell to activate the NITRO features in the required site. Enter “ .\\NITRO_ActivateFeatures.ps1 ” and hit enter to start activating the NITRO features. Script will prompt for site collection URL, enter the target site collection URL and hit enter: Output: Success message will be shown in the PowerShell as “Crow Canyon NITRO Features activation is completed”: Activate NITRO for a site Go to the site collection where NITRO is activated and click the gear icon (cog) in the top right corner: Click Crow Canyon NITRO Studio to navigate to the NITRO Studio Admin page. This page lists all the sub-sites in the site collection: To activate NITRO Studio for a site, click “Activate” link for the corresponding site: Activation process will being and show the progress: Wait until success message appears and then click on Ok: Go to Site Collection &#8211;&gt; Site settings &#8211;&gt; Site Collection Administration &#8211;&gt; Site collection features and ensure that below site collection features are activated: With the above steps, NITRO will get activated on the site. Refer https://www.crowcanyon.info/nitro/appmanual_v2/ for user manual of NITRO Apps 5. Create Portal Site (Optional) In order to create portal site, navigate to the site collection and click gear icon (cog) in the top right corner: Click Crow Canyon Power Portal and click New Portal site as shown below: Provide the Portal site URL, title and select the license and click on Ok: Wait until success message appears as shown below and then click Ok Please refer https://www.crowcanyon.info/nitro/appmanual_v2/index.html?portal-settings.html to configure the portal 6. Register License By default the NITRO studio comes with 45 days trial license. To get the subscription farm licenses, please send the SharePoint Farm Id to sharepointsupport@crowcanyon.com and we will do the needful. To know the Farm Id of the SharePoint server, open SharePoint Management Shell and type the command as shown belowCommand: (Get-SPFarm).Id If the NITRO Studio is purchased for particular site(s), then along with the SharePoint Farm Id send us the site URL(s) (both NITRO sites and corresponding portal sites if any) and we will register the subscription license for the required site(s). Please contact sharepointsupport@crowcanyon.com in case of any queries regarding the installation process. 7. Install NITRO Workflow debugging service This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to debug NITRO workflows. Please refer to this article to install this component in your SharePoint farm. 8. Install NITRO Office API for document generation This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to generate documents using Office API method in Custom Actions and NITRO workflows. Please refer to this article to install this component in your SharePoint farm. Crow Canyon Applications NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "449",
    "name": "449 - Auto-assign Tickets based on selected Category, Issue Type and Requester location - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/449%20-%20Auto-assign%20Tickets%20based%20on%20selected%20Category%2C%20Issue%20Type%20and%20Requester%20location%20-%20Crow%20Canyon%20Soft.html",
    "title": "Auto Assign Tickets Based On Selected Category, Issue Type And Requester Location Crow Canyon Soft",
    "text": "Auto-assign Tickets based on selected Category, Issue Type and Requester location - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto-assign Tickets based on selected Category, Issue Type and Requester location Auto-assign Tickets based on selected Category, Issue Type and Requester location 1858 views 2 min , 39 sec read 0 Applies to: SharePoint Online and On-Premises Description Crow Canyon Service Request application has auto-assignment feature that works based on Category and Issue Type of the Ticket. Sometimes, we may want to use a different criteria for auto-assignment. For example, for the same Category and Issue Type different staff need to be assigned based on the requester’s location. Here requester&#8217;s location can be read from AD/User profile and populated automatically in the Ticket by NITRO Forms. This article describes the steps to auto-assign Tickets based on a different criteria i.e. combination of Category, Issue Type and Requester Location column values. You can use a different combination of columns as per your business process. Please note that this article assumes that Requester Location column value is available on the Ticket form. Using NITRO Forms user information filler settings, it will be auto-filled based the SharePoint logged-in user. And along with location other attributes like email, phone and department can also be auto-filled. Or these attributes can be entered manually in the Ticket. Summary of steps Create a list to store mapping of Category, Issue Type and Location to the user to whom Ticket should be assigned Add entries to the mapping list created in above step Disable standard auto-assignment feature Configure auto-assignment functionality using Crow Canyon NITRO Workflows Detailed Instructions 1. Create a list to store mapping of Category, Issue Type and Location to the required Assigned Staff Create a mapping list called “Assignment Utility” with the list schema as described below. This list is used to maintain the Assigned Staff for all the possible Category, Issue Type and Location combinations. Note that you can give a different name to this list as required. Subsequent steps will use this list to read Assigned Staff from this list based on the Ticket Category, Issue Type and Requester Location and then assign the Ticket to the corresponding staff. Category Internal Name: Category Display Name: Category Issue Type Internal Name: IssueType Display Name: Issue Type &nbsp; Locations Internal Name: Locations Display Name: Locations Assigned Staff Internal Name: AssignedStaff Display Name: Assigned Staff &nbsp; 2. Configure cascading functionality between Category and Issue Type columns Issue Type values need to filtered based on selected Category. After creating the columns, please follow below steps for this: If you are using SharePoint Online: Go to Application Administration -&gt; Crow Canyon NITRO apps &#8211;&gt; Cascaded Lookup and configure the lookup settings as shown below: If you are using SharePoint On-Premises: Go to Site Contents -&gt; Assignment Utility list -&gt; List Settings -&gt; Create column -&gt; Create Issue Type cascaded lookup column like shown below. Note: If you have already created the “Issue Type” lookup column, delete the column and then recreate with Crow Canyon Cascaded lookup column like shown below. 3. Add entries to the mapping list (i.e. Assignment Utility) Create items for every possible Category, Issue Type and Requester Location combination with the associated Assigned Staff. 3. Disable standard auto-assignment feature Go to Issue Type list and remove Assigned Staff column values for all the Issue Types. 4. Configure auto-assignment functionality using Crow Canyon NITRO Workflows Note: Crow Canyon Workflow Manager functionality is same in both SharePoint Online and On-premises and there are only minor differences in the UI. Below images are from SharePoint online and you can follow the same even if you are using SharePoint On-premises. Create a workflow on item creation event in Tickets list as shown below Action 1: Create a Query list action to get the &#8216;Assigned Staff&#8217; value from Assignment Utility list based on the selected Requester Location, category and Issue Type combination. Note: We do not need to consider the Category in the CAML Query as the cascading feature is already configured in the assignment utility. &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;And&gt; &lt;Contains&gt; &lt;FieldRef Name='Locations'/&gt; &lt;Value Type='Choice'&gt;## RequesterLocation ##&lt;/Value&gt; &lt;/Contains&gt; &lt;Eq&gt; &lt;FieldRef Name='IssueType' LookupId='TRUE' /&gt; &lt;Value Type='Lookup'&gt;##IssueType##&lt;/Value&gt; &lt;/Eq&gt; &lt;/And&gt; &lt;/Where&gt; &lt;/View&gt; &lt;/Query&gt; Note: In the CAML query, please modify the “RequesterLocation” (highlighted) with internal of the “Requester Location” column in “Tickets” list. Go to Tickets list -&gt; List Settings -&gt; Edit “Requester Location” column and find the internal name at the end of the URL. Action 2: Configure an update item action to assign the tickets Column Mapping: QL_GetAssignmentItem##AssignedStaff Note: If we would like to assign (or re-assign) the Ticket when the Ticket’s Category or Issue Type or Requester Location is updated then configure the workflow on item update event as shown below: Workflow Actions are same as above. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "45",
    "name": "45 - Permissions required for NITRO Apps.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/45%20-%20Permissions%20required%20for%20NITRO%20Apps.html",
    "title": "Permissions Required For NITRO Apps",
    "text": "Permissions required for NITRO Apps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio / Permissions required for NITRO Apps Permissions required for NITRO Apps 2746 views 1 min , 50 sec read 6 Applies to: SharePoint Online and On-Premises Description This article describes the minimum permissions required for the administrators and the end users for the Crow Canyon NITRO apps. Admin users who can configure the functionality using Crow Canyon NITRO apps in the site and the end users who can use the system. Please note that NITRO Apps have functionality for cross-site operations. For example, cross-site lookups and associated items are supported on NITRO Forms and reports/list views/list search etc. can show data from other sub-sites within the site collection. Permissions required for these cases are explained later in this article. Permissions required NITRO Component Minimum permissions required for Administrators role Minimum permissions required for User role NITRO Forms Current Site: Manage Web Site permissions (generally it comes with Full Control permissions) Root Site: Read Permissions In general, no special permissions are required to use NITRO Forms, one who has permissions to view/add/edit items can see the NITRO Forms. NITRO Workflows Current Site: Full Control Root Site: Read Same as above NITRO Reports Current Site: To create, edit, delete report, need minimum Add Item, Edit Item and Delete item permissions for the users on the site. Current Site: To add report to the workspace pages, need “Add and Customize Pages” permissions required for the users on the site. Root Site: Read Same as above Power Portal Current Site and corresponding backend site: Full Control Root Site: Read Same as above Advanced Approvals Current Site: Full Control Root Site: Read Same as above Advanced Lookup Current Site: Manage Web Site permissions Root Site: None Same as above Branding Current Site: Manage Web Site permissions Root Site: None Same as above Cascaded Lookup Current Site: Manage Web Site permissions Root Site: None Same as above Conditional Formatting Current Site: Manage Web Site permissions Root Site: None Same as above Custom Actions Current Site: Manage Web Site permissions Root Site: Read Same as above Email Manager Current Site: Manage Web Site permissions Root Site: None Same as above Email Sync Current Site: Full Control Root Site: Read Same as above Linked Items Current Site: Manage Web Site permissions Root Site: None Same as above List Rollup Same as NITRO reports Same as above List Search Same as NITRO reports Same as above Print Manager Current Site: Manage Web Site permissions Root Site: None Same as above Tiles and Dials Same as NITRO reports Same as above &nbsp; Cross-site Apps functionality permissions Crow Canyon NITRO Forms, reports and etc. support cross-site (within the site collection). If &#8220;Admin&#8221; role wants to configure cross-site scenarios then they need to have permissions on those target sites as well. At the same time, user also need to have permissions on corresponding cross-sites. For example, if &#8220;Admin&#8221; configures &#8220;Associated items&#8221; on a list from a sub-site in the site collection and adds it to the NITRO Forms then the user who is using the NITRO form need to have permissions on the target list from cross-site to view the associated items. Required permissions for the user role on the cross-site/lists are based on the actions allowed. For example, if “Allow create item/Edit item” actions are enabled in associated items settings then user need to have corresponding permission level (add/edit items) on the target list in sub-site. NITRO Studio NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "450",
    "name": "450 - Permissions required for NITRO Apps.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/450%20-%20Permissions%20required%20for%20NITRO%20Apps.html",
    "title": "Permissions Required For NITRO Apps",
    "text": "Permissions required for NITRO Apps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio / Permissions required for NITRO Apps Permissions required for NITRO Apps 2746 views 1 min , 50 sec read 6 Applies to: SharePoint Online and On-Premises Description This article describes the minimum permissions required for the administrators and the end users for the Crow Canyon NITRO apps. Admin users who can configure the functionality using Crow Canyon NITRO apps in the site and the end users who can use the system. Please note that NITRO Apps have functionality for cross-site operations. For example, cross-site lookups and associated items are supported on NITRO Forms and reports/list views/list search etc. can show data from other sub-sites within the site collection. Permissions required for these cases are explained later in this article. Permissions required NITRO Component Minimum permissions required for Administrators role Minimum permissions required for User role NITRO Forms Current Site: Manage Web Site permissions (generally it comes with Full Control permissions) Root Site: Read Permissions In general, no special permissions are required to use NITRO Forms, one who has permissions to view/add/edit items can see the NITRO Forms. NITRO Workflows Current Site: Full Control Root Site: Read Same as above NITRO Reports Current Site: To create, edit, delete report, need minimum Add Item, Edit Item and Delete item permissions for the users on the site. Current Site: To add report to the workspace pages, need “Add and Customize Pages” permissions required for the users on the site. Root Site: Read Same as above Power Portal Current Site and corresponding backend site: Full Control Root Site: Read Same as above Advanced Approvals Current Site: Full Control Root Site: Read Same as above Advanced Lookup Current Site: Manage Web Site permissions Root Site: None Same as above Branding Current Site: Manage Web Site permissions Root Site: None Same as above Cascaded Lookup Current Site: Manage Web Site permissions Root Site: None Same as above Conditional Formatting Current Site: Manage Web Site permissions Root Site: None Same as above Custom Actions Current Site: Manage Web Site permissions Root Site: Read Same as above Email Manager Current Site: Manage Web Site permissions Root Site: None Same as above Email Sync Current Site: Full Control Root Site: Read Same as above Linked Items Current Site: Manage Web Site permissions Root Site: None Same as above List Rollup Same as NITRO reports Same as above List Search Same as NITRO reports Same as above Print Manager Current Site: Manage Web Site permissions Root Site: None Same as above Tiles and Dials Same as NITRO reports Same as above &nbsp; Cross-site Apps functionality permissions Crow Canyon NITRO Forms, reports and etc. support cross-site (within the site collection). If &#8220;Admin&#8221; role wants to configure cross-site scenarios then they need to have permissions on those target sites as well. At the same time, user also need to have permissions on corresponding cross-sites. For example, if &#8220;Admin&#8221; configures &#8220;Associated items&#8221; on a list from a sub-site in the site collection and adds it to the NITRO Forms then the user who is using the NITRO form need to have permissions on the target list from cross-site to view the associated items. Required permissions for the user role on the cross-site/lists are based on the actions allowed. For example, if “Allow create item/Edit item” actions are enabled in associated items settings then user need to have corresponding permission level (add/edit items) on the target list in sub-site. NITRO Studio NITRO Studio About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "451",
    "name": "451 - How to create bulk items in SharePoint list.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/451%20-%20How%20to%20create%20bulk%20items%20in%20SharePoint%20list.html",
    "title": "How To Create Bulk Items In SharePoint List",
    "text": "How to create bulk items in SharePoint list - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to create bulk items in SharePoint list How to create bulk items in SharePoint list 4094 views 1 min , 32 sec read 1 Applies To SharePoint Online and SharePoint On-Premises Description In Crow Canyon Service Request application, &#8216;Case Id&#8217; of the Ticket is same as the SharePoint auto-generated list item Id. For any list, SharePoint generates the item id automatically starting from &#8220;1&#8221; and then incrementing it for every new item. This same value is copied in the Case Id column of the Ticket. If requirement is to start the Case Id from 5000 instead of default 1, then we need to create 4999 dummy items in the list and then delete them so that new Tickets get the Case Id starting from 5000. This article describes steps to create items in bulk in SharePoint list using PowerShell. We need to follow different steps for SharePoint Online and On-premises environment as described below. SharePoint Online Pre-Requisites SharePoint Online Management Shell ( download link ) and SharePoint Client Components SDK ( download link ) Install both of these components in your machine (Run as Administrator) The account that we are going to use to run the script need “Add Item” permissions on the target list in SharePoint site Steps to create list items in SharePoint list Step 1 Download AddItemsScript_Online . Extract the zip file and find the “AddItems_Online.ps1” script file from the package. Right click on the file (AddItems_Online.ps1) &#8211;&gt; Properties &#8211;&gt; unblock the file if it is blocked as shown below: Step 2 Edit the script using notepad and replace the [Site URL], [List Name] and [Number of Items] with actual values as shown below: Step 3 Run &#8220;SharePoint Online Management Shell&#8221; as administrator &#8211;&gt; change the directory path to the location where our script file exists &#8211;&gt; enter the script file name and hit enter as shown below: It will prompt for O365 user credentials and once the credentials are specified, the list items creation starts as shown below: &nbsp; SharePoint On-Premises Pre-Requisites Login to the SharePoint server using an account which is a domain user and local admin Logged in user should have “Add Item” permissions on the target list in SharePoint site Steps to create list items in SharePoint list Step 1 Download AddItemsScript_OnPremises and extract the zip file to find the &#8220;AddItems_OnPremises.ps1&#8221; script from the package. Right click on the file (AddItemsScript_OnPremises.ps1) &#8211;&gt; Properties &#8211;&gt; unblock the file if it is blocked as shown below: Step 2 Edit the script using notepad and replace the [Site URL], [List Name] and [Number of Items] with actual values as shown below: Step 3 Right Click on the script file &#8211;&gt; click on &#8220;Run with PowerShell&#8221; as shown below SharePoint list items creation starts and log comes as shown below. Once the items creation is complete, PowerShell window will be closed automatically. To delete these temporary items, refer this article. &nbsp; About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "452",
    "name": "452 - Select and complete one or more sub-tasks of a parent task.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/452%20-%20Select%20and%20complete%20one%20or%20more%20sub-tasks%20of%20a%20parent%20task.html",
    "title": "Select And Complete One Or More Sub Tasks Of A Parent Task",
    "text": "Select and complete one or more sub-tasks of a parent task - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions / Select and complete one or more sub-tasks of a parent task Select and complete one or more sub-tasks of a parent task 3373 views 1 min , 41 sec read 3 Applies to: SharePoint online and On-Premises Description Lookup columns are used frequently to relate items in one list with other. Most common scenario is when a single selection lookup is created in one list to associated one or more items of that list to an item of the list used in the lookup column. For example, a task list having a lookup column of Tickets list. In this case, multiple tasks can have same Ticket as the lookup column value and all these tasks will then be the associated tasks for that Ticket. We can also have the same relation in case of Tasks and sub-tasks wherein the sub-task list will have the lookup to the task list. Using NITRO Forms and Linked Items apps, the associated items can be shown within the form/list view of the main item. That is, Ticket item form will show all the associated tasks for that Ticket and also allow user to add/edit the tasks for that Ticket. In this scenario, it is possible to complete multiple associated tasks in a single operation using NITRO Custom Actions. You can also use the same steps to take other actions on multiple associated items (like re-assign, send mail etc.). In custom actions, we have the ability to query the associated items with the required criteria. These items can be shown to user for further selection. And for the selected items in, we can execute the actions like update item or send mail as per the requirement. This article describes steps to mark complete the user selected sub-tasks of a parent task. Configuration Steps Summary of Steps Required list schema Create custom action to complete the tasks Query list action to get all the open sub-tasks Update item action to complete all the sub-tasks 1. Configure List Schema We need separate lists for Parent Tasks and the Sub-tasks. Sub-tasks list will have a lookup column with lookup list as the Parent Tasks list. 2. Create a custom action on Parent Tasks list to select and complete the sub-tasks Create “Complete Subtasks” custom action in Parent Tasks list as shown below. Go to Parent Tasks list -&gt; List Settings -&gt; Crow Canyon Custom Actions and configure a custom action as shown below: Action 1: Query list Configure a query list action to get all the open sub-tasks that are associated to the parent task Query: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;And&gt; &lt;Eq&gt; &lt;FieldRef Name='ParentTask' LookupId='TRUE' /&gt; &lt;Value Type='Lookup'&gt;%%[ID|ID]%%&lt;/Value&gt; &lt;/Eq&gt; &lt;Neq&gt; &lt;FieldRef Name='Status'/&gt; &lt;Value Type='Choice'&gt;Completed&lt;/Value&gt; &lt;/Neq&gt; &lt;/And&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Action 2: Mark selected sub-tasks as Complete Configure update item action to complete all the sub tasks. &nbsp; How to execute the action Go to Parent Task list -&gt; Open parent task display form and run the “Complete Subtasks” action. Custom Action NITRO Studio- Custom Actions About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API Active Directory Groups integration with NITRO Import Tickets using NITRO Custom Actions © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "454",
    "name": "454 - How to Parse Email Body to Announcement list fields.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/454%20-%20How%20to%20Parse%20Email%20Body%20to%20Announcement%20list%20fields.html",
    "title": "How To Parse Email Body To Announcement List Fields",
    "text": "How to Parse Email Body to Announcement list fields - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Applications / How to Parse Email Body to Announcement list fields How to Parse Email Body to Announcement list fields 3201 views 4 min , 24 sec read 2 Applies To : SharePoint Online Description Crow Canyon Email Sync App is used to sync an Exchange Mailbox to an announcement list in O365. We can map the title, body, sender and importance etc. of the email to columns in the announcement list. Please refer Email Sync App manual for more details. In addition to these standard email attributes, this App can parse the email body to extract information with specific format from the content and put it in corresponding SharePoint list columns. This capability can be used wherever mails are generated by other applications. For example, a web form may take user input and then generate a mail with structured content and send to Email Sync mailbox. Or monitoring systems can generate an email with details of problem to generate a Ticket with required data. Email Sync supports some common data formats like “name : value” pairs in the mail body. Also, regular expressions can be specified to parse any kind of custom formats. Summary of steps Configure the SharePoint list schema Configure Email Body Parsing Integration of parsing in our Crow Canyon Service Request applications Detailed Steps: 1. Create the SharePoint list and columns In order to configure Email sync in the application, we can create an Announcement type list in the SharePoint site. This gives us standard email columns to map. After this, create more columns based on information to be extracted from the mail body. Supported column types and formats are listed below Column Type Supported Format Single line of text Free form text (up to 255 characters) Multiple lines of text Only plain text format is supported Choice Valid choice options configured in SharePoint column settings Number Valid Number (Decimal values like 8.35 also supported) Currency Number (currency sign should not be present in mail body) Date Only MM-DD-YYYY Date and Time MM-DD-YYYY HH:MM Lookup Display Name/Lookup ID Yes/No True/False (Yes/No as values – Not supported) Person or Group Display Name/User Id Hyperlink URL, Display Name 2. Configure email body parsing &#8211; Predefined formats Email Sync supports two types of pre-defined parsing formats for the mail body as described below. i. Pre-defined format &#8220;&lt;List Column Name&gt;:&lt;Value&gt;&#8221; In this format, email body has content starting with name of the SharePoint list column followed by a colon and then the value of that column. For example: Category:Network Issue Type:VPN Here, &#8220;Category&#8221; and &#8220;Issue Type&#8221; are the display names of the columns in the SharePoint list for which information is present in the mail body. &#8220;Network&#8221; and &#8220;VPN&#8221; are the values that need to be put in the Category and Issue Type column in the list item respectively. &nbsp; Note: The “Column” name should match with the display name of the column present in the announcement list Each line will be parsed separately and if it follows the format and column exists in the list then value will be put in the list item for that column. Column value cannot span more than one line in this format ii. Pre-defined format &#8220;[&lt;List Column Name&gt;:&lt;Value&gt;]&#8221; This is same as above except the data is within the brackets. So parser will look for starting of the bracket to begin reading the column name. And it will read the value up to the ending bracket. This format is useful if information can span multiple lines. Example: [Category:Network] [Issue Type:VPN] [Additional Info: This is a contoso Request. Requested by Team lead on behalf of his team members] In this case value for column &#8220;Additional Info&#8221; is spanning two lines as the ending bracket is not in the same line. 3. Configure email body parsing &#8211; Custom format In this option, regular expression can be specified as per the content structure of the mail body. You can use this option if data is not in one of the two predefined formats. Following configurations are required for custom format option: Regular Expression – Specify a regular expression to parse the content based on specific pattern. This regular expression need to have two &#8220;Groups&#8221;, one to match the SharePoint list column name and the second to match the column value RegEx Multiline Mode: Single: Considers pattern for whole mail body as a single line. This means, value for a column could span multiple lines. In regular expression terminology, this means the &#8220;Dot matches newline&#8221; Multiline: Considers pattern line by line in the mail body. This means each line is parsed separately for the pattern so value of column cannot span multiple lines. Note that one line could have multiple matches depending on how the regular expression is written Sample text in Mail body to extract value : ##Category:Network## ##Issue Type:VPN## ##Additional Information:Contoso Text## For the above text parsing, we can use simple regular expression as given below: ##(.+?):(.+?)## Note : The “Column” name, that is the first part before the colon in content should match with the display name of the column in the announcement list This is a sample regular expression based on the particular format shown above. For your specific content format you can specify the required regular expression. You can contact Crow Canyon for professional services to generate the formatted content and also parse it as per your business requirement Regular Expression for individual columns Above settings will extract information for all columns that have data in the body as per the general format. If however, any particular column has data in some specific format different from the general format, then regular expression specific to that column can be specified. For example, consider a column in SharePoint list with name &#8220;Additional Information&#8221; for which there is information in the email body. This information is prefixed with text &#8220;More Details&#8221; instead of the column name in the list. So we can extract this using a custom regular expression specific to this column. Sample text in Mail body: ##Category:Network## ##Issue Type:VPN## [More Details:Some text for input] General regular expression for columns: ##(.+?):(.+?)## Regular expression for \"Additional Information\" column: \\[More Details:(.+?)\\] &nbsp; The multiline mode settings have same meaning as specified above in this article. 3. Integration of parsing in our Crow Canyon Service Request applications In Crow Canyon Service Request applications, we have standard email sync configured to map Email data such as Subject, Body, From address, Recipients, Attachments etc. to the corresponding list columns in Email Tickets list. Application then creates a Ticket and copies over the data from these standard email columns to the corresponding Ticket list item columns. Using functionality described above, we can configure the email body parsing to extract information for more columns for the Ticket list. Go to site contents &#8211;&gt; Configurations list &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; Create a multiple lines of text column of Plain text mode with name “TicketFromEmailFldMapping” as shown below: Add this column to “Email Handling” tab in the form and rename the column as needed and publish the NITRO forms for the list. This column is used by Crow Canyon Product app to read the information from Announcement list (Email Ticket) and copy it over to the Tickets item. Syntax Internal Name of &#8220;Tickets&#8221; list column=Internal Name of &#8220;Email Tickets&#8221; list column We can specify multiple mappings with a line break as shown below: Category1=Category IssueType= Issue_x0020_Type Note : “IssueType” is internal name of “Issue Type” column in the Tickets list whereas “Issue_x0020_Type” is internal name of column created in &#8220;Email Tickets&#8221; list. In order to get the internal name of the list column, please go to corresponding list settings &#8211;&gt; click on list column and get the internal name from the URL after the “Field=” as shown below: With the above configurations, when a ticket is created from an Email Ticket, Crow Canyon Product app reads the configuration and maps the data from Email Ticket item to corresponding columns in the Ticket item. Email Sync Crow Canyon Applications About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "455",
    "name": "455 - Troubleshooting Recurrence feature in SharePoint On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/455%20-%20Troubleshooting%20Recurrence%20feature%20in%20SharePoint%20On-Premises.html",
    "title": "Troubleshooting Recurrence Feature In SharePoint On Premises",
    "text": "Troubleshooting Recurrence feature in SharePoint On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Recurrence feature in SharePoint On-Premises Troubleshooting Recurrence feature in SharePoint On-Premises 958 views Less than a minute 0 Applies To SharePoint On-Premises Description This article lists the common issues and fixes that occur in Crow Canyon Recurrence feature Pre-Requisites for troubleshooting &#8211; SharePoint Timer Service (Services.msc) should be in “Running” state. &#8211; Open SharePoint Central Administration &#8211;&gt; Monitoring &#8211;&gt; Timer Jobs &#8211;&gt; Review Timer Job Definitions &#8211;&gt; Check if Crow Canyon Recurrence feature for the site collection exists and is set to run daily. If not please activate the feature referring instructions from https://www.crowcanyon.help/article/344/ Issue Recurring Tickets not created as per the schedule. When we enable the information logs, exception occurs that list is not found as shown below Cause Check if the Target list name in the recurring schedule is specified as “Tickets”. Please go to IT Helpdesk site &#8211;&gt; Site Contents &#8211;&gt; Recurring Schedule &#8211;&gt; Edit the item and make sure the target list name is set to “Tickets” as shown below Note For Facilities, it should be &#8216;Work Orders&#8221; and for Request Management it should be “Requests” Resolution Update the Target list name as per the Crow Canyon module and save the settings. Now navigate to the Crow Canyon Recurrence Timer job for the site collection in SharePoint Central Administration &#8211;&gt; Run the timer job manually to create the recurring tickets Timer job should run properly from now on and creates the required recurring tickets for the current date. Note When we run the timer job manually, the possible tickets get created only for the current date. Existing/missed recurring tickets need to be created manually. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "456",
    "name": "456 - How to show Form elements dynamically on NITRO Forms based on certain conditions - Crow Canyon Softw.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/456%20-%20How%20to%20show%20Form%20elements%20dynamically%20on%20NITRO%20Forms%20based%20on%20certain%20conditions%20-%20Crow%20Canyon%20Softw.html",
    "title": "How To Show Form Elements Dynamically On NITRO Forms Based On Certain Conditions Crow Canyon Softw",
    "text": "How to show Form elements dynamically on NITRO Forms based on certain conditions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to show Form elements dynamically on NITRO Forms based on certain conditions How to show Form elements dynamically on NITRO Forms based on certain conditions 1255 views 1 min , 2 sec read 0 Applies To SharePoint Online and SharePoint On-Premises Description This article describes the steps to show images/text/hyperlinks in the NITRO Forms depending on certain criteria. As an example, this can be used to show specific instructions on the form depending on column values selected on the form. In this article, we have taken the example scenario of &#8220;Populate additional information based on Issue Type selection on the Ticket&#8221;. Whenever user selects the Issue Type on the form then corresponding instructions will be rendered on the form. This article is assuming that Issue Type list has &#8220;Template&#8221; column of type multiple lines of enhanced rich text and Tickets list has Additional Information column of same type as Template column. Summary of Steps Configure Lookup settings Configure permissions on column Detailed Steps 1. Configure Lookup Settings Please navigate to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; go to Advanced Section in left panel &#8211;&gt; configure lookup setting for Issue Type column like below Note We need to configure similar lookup setting for Edit Form in the NITRO form settings as well. 2. Permissions on Additional Information column: Please navigate to Application Administration &#8211;&gt; Configure Lists &#8211;&gt; Configure Tickets &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; click on “Additional Information” column &#8211;&gt; Permissions in right hand side panel &#8211;&gt; Configure Hide and Read permissions like below Hide Permission Show Permission Enable dynamic condition evaluation as shown below &nbsp; With the above configurations, if the issue type selected on the form that has information in Template column, it will be shown on the NITRO Form under “Additional Information” column as shown below, otherwise, it will be hidden. &nbsp; Note If we require similar feature in Portal forms as well, we need to repeat the same steps in Portal form settings. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "457",
    "name": "457 - Duplicate email notifications in Crow Canyon Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/457%20-%20Duplicate%20email%20notifications%20in%20Crow%20Canyon%20Application.html",
    "title": "Duplicate Email Notifications In Crow Canyon Application",
    "text": "Duplicate email notifications in Crow Canyon Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Duplicate email notifications in Crow Canyon Application Duplicate email notifications in Crow Canyon Application 1101 views 1 min , 35 sec read 0 Applies To SharePoint Online and SharePoint On-Premises Issue Duplicate notifications are received by Requester/Assigned Staff etc. roles on Ticket. Cause On Ticket creation, Crow Canyon application sets certain hidden fields (like Case Id etc.) and updates the Ticket item. If any NITRO Workflows are configured on the Tickets list that are triggered on item creation and update the Ticket, then multiple updates could be happening on the same Ticket item in fraction of seconds. Each of these update events trigger the workflows which could run simultaneously on same state of Ticket and this could lead to duplicate mails. Resolution Optimize the workflows configurations as described below such that we can eliminate duplicate notifications. Delay Execution If workflows are configured on Ticket creation event, then it is very likely that multiple updates will happen on the Ticket by Crow Canyon application and Workflows simultaneously. In this scenario, we can add delay to workflow execution (maximum 30 seconds). This delay can be added at the workflow level or at the action Disable Event fire (only On-Prem) Workflows On-Premises has an option to not trigger workflows when an item is created/updated via a Workflow Action. This is controlled via “Disable event fire” option as shown below: If this option is enabled for any action and an item gets updated/created by that action, then this will not trigger workflows that are configured on update/create event for that item. Note that if user updates the item or creates the item from SharePoint UI then workflows will trigger. This option is only to prevent Workflows triggering in loop. Reduce the number of updates on same item by merging multiple actions with required conditions For example, requirement could be to that on Ticket create event: Update the Priority based on the Ticket Category Update the Due Date based on Category or some other column value Instead of creating two different workflows (or two different actions) to update the Priority and Due Date of the Ticket separately, do this update in a single action. This may require that multiple Actions have to be configured for different values of Category, and at most only one of them will match the conditions. E.g. If &#8216;Category&#8217; = &#8216;Spam&#8217;, set &#8216;Priority&#8217; = &#8216;Normal&#8217; and set &#8216;Due Date&#8217; = 2 Days from today If &#8216;Category&#8217; = &#8216;Access&#8217;, set &#8216;Priority&#8217; = &#8216;Normal&#8217; and set &#8216;Due Date&#8217; = 1 Days from today If &#8216;Category&#8217; = &#8216;VPN&#8217;, set &#8216;Priority&#8217; = &#8216;High&#8217; and set &#8216;Due Date&#8217; = 1 Days from today There will be multiple update item actions in the Workflow to handle these business scenarios, and each action will have a specific set of conditions for execution. Ticket will be updated only once for both Priority and Due Date value thus reducing the number of updates and consequently reducing unnecessary workflow triggers. Please note that delay and disable events settings mentioned above can be used along with these configurations. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "458",
    "name": "458 - Configure two level approval functionality using NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/458%20-%20Configure%20two%20level%20approval%20functionality%20using%20NITRO%20Custom%20Actions.html",
    "title": "Configure Two Level Approval Functionality Using NITRO Custom Actions",
    "text": "Configure two level approval functionality using NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure two level approval functionality using NITRO Custom Actions Configure two level approval functionality using NITRO Custom Actions 2365 views 4 min , 3 sec read 0 Applies to: SharePoint Online and On-Premises (NITRO) Description This article describes configuring a two-level approval process using Crow Canyon Custom Actions.&nbsp;This article considers the list schema as described below (Tickets list, Category list, Approver Definition list and Approval Tasks). Same approach can be used to configure approvals in any application like Purchase Order, Request Management etc. Also, if more approval levels are required then similar instructions can be followed to add additional levels. In this example, if a Ticket list item is created with a particular category for which approval is required then approval flow is initiated. Approver is assigned a task and a notification is sent so he/she can approve/deny the approval request. Once the approver takes the decision by updating the task, Ticket approval status is updated and Ticket requester is notified. Summary of steps 1. List Schema Category list Create Approver Definition list Create Approval Tasks list Create required fields in Tickets list 2.&nbsp; Configure Custom Actions for approval process Summary of steps is given here, detailed steps are in this article Tickets list Submit for Approval This action will initiate the approval process. Based on the selected Category, it will query the approvers in the Approval Definition list, create required task for approver and updates the Ticket approval status. Action 1: QL_Approver Definition &nbsp;This action will get the approvers from Approver Definition list based on the selected Category in the Ticket. Action 2: Approve This action will approve the Ticket either “the level 2 approval task is approved” or “level 1 task is approved but level 2 approver is empty in the definition”. Action 3: Submit for level 2 Approver This action will create the task for level 2 approver when level 1 approver approve. Action 4: Update Ticket Approval Status II This action will update the Ticket approval level when level 1 approver approve. Action 5: Submit for Level 1 Approver This action will create the task for level 1 approver Action 6: Update Ticket Approval Status I This action will update the approval level and approval status in the Ticket when level 1 task is created Approval Task list: Approve This action approves the current task and updates the Ticket approval status/level. In this action we will invoke the “Submit for Approval” custom action configured in the Tickets list that processes the next level approval. Deny This action sets the approval status of the Ticket to Denied. 3. Configure workflows for auto notification Summary of steps is given here, detailed steps are in this article Workflow 1: Notify approver on task creation Workflow 2: Notify Requester on Ticket Approve/Deny 4. Configure NITRO forms for the lists Tickets list Approval Tasks list &nbsp; Detailed Instructions 1. List Schema To configure the approval feature, we need to create certain lists and fields as per the requirement, below are the details of schema that supports our current approval scenario. Category list This article assumes that Category list is present in the application site and Tickets list has a Category lookup column. By default, Crow Canyon standard product comes with Category list and a Category lookup column in Tickets list. Approval Definition list Create a list with custom list template and name it as &#8216;Approval Definition&#8217; and then create below required fields in this list. Category (Lookup pointing to Category list) Internal Name: Category Display Name: Category Purpose: Used to query the approvers in the custom action Level 1 Approver (&#8216;Person or Group&#8217; column type with &#8216;People Only&#8217; option) Internal Name: L1Approver Display Name: Level 1 Approver Purpose: Used to define level 1 approver for this type of Category Level 2 Approver (&#8216;Person or Group&#8217; column type with &#8216;People Only&#8217; option) Internal Name: L2Approver Display Name: Level 2 Approver Purpose: Used to define level 2 approver for this type of Category Approval Tasks list Create a task list with Tasks list template and name it as &#8216;Approval Tasks&#8217; list and then create below required columns in this list. Delete Related Items, Predecessor, Start Date columns from the list. Rename “Task Status” column to “Approval Decision” and remove default choice values and add below values Approved Denied Approval Level (Choice: Level 1, Level 2) Internal Name: ApprovalLevel Display Name: Approval Level Purpose: Indicates the current approval level Related Ticket (Lookup pointing to Tickets list) Internal Name: RelatedTicket Display Name: Related Ticket Purpose: It indicates the approval process for the related Ticket Comments (Multiple lines of plain text) Internal Name: Comments Display Name: Comments Purpose: To capture the approver comments and will be copied to related Ticket. Tickets list Create below columns in Tickets list Approval Status (Choice) Internal Name: ApprovalStatus Display Name: Approval Status Purpose: Indicates the current approval state of the Ticket Choice values Not Required Pending Approval Approved Denied Approval Level (Choice: Level 1, Level 2) Internal Name: ApprovalLevel Display Name: Approval Level Purpose: Indicates the current approval level of the Ticket Approval Date (Date and Time) Internal Name: ApprovalDate Display Name: Approval Date Purpose: To capture the Ticket approval date Approval Tasks (Multiple lines of text field) Internal Name: ApprovalTasks Display Name: Approval Tasks Purpose: To show the approval tasks in the Ticket Approval Comments (Multiple lines of text version enabled column) Internal Name: ApprovalComments Display Name: Approval Comments Purpose: To capture the approvers comments in the Ticket 2. Configure Custom Actions for approval process Please refer this article to configure approval functionality using Custom Actions 3. Configure workflows for auto-notification Please refer this article to configure workflows for notification emails 4. Configure NITRO forms for the lists Tickets list New Form Hide save button in New Form and Configure Submit action as shown below. Drag and drop the “Submit action” on bottom of the form and configure as shown below: Edit Form Configure the “Submit for Approval” custom action button same as in New Form (refer above instructions) Create Approval tab and configure the tab as shown below. Configure associated item settings for Approval Tasks column. Configure tab permissions: Select “Approval” tab and configure permissions as shown below: Hide Permission: Show permission: Configure column permissions: Configure read permissions for “Approval Status and Approval Level” column. Approval Date: Hide permission: Show permission: Display Form Configure the display form same as Edit form. Approval Tasks list Configure NITRO forms for “Approval Tasks” list as shown below Go to Site Contents -&gt; Approval Tasks list -&gt; List Settings -&gt; Crow Canyon NITRO forms and configure common form as shown below. Configure Approve, Deny submit actions in the form. Approve&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Script: formContext.setColumnControlValueByName('Status','Approved'); functionCallback(); Permissions: Hide Show Deny Configure Deny custom action similar to Approve action. Select “Deny” custom action in place of “Approve” and configure below script. Permissions are same as “Approve”. Script: formContext.setColumnControlValueByName('Status','Denied'); functionCallback(); Column Permission Configure read permissions for all the columns in the form except “Comments” column. Go to Advanced section in NITRO forms -&gt; Column Permissions and configure Read permissions for all the columns. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "459",
    "name": "459 - NITRO Custom Action configurations for two level approval process.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/459%20-%20NITRO%20Custom%20Action%20configurations%20for%20two%20level%20approval%20process.html",
    "title": "NITRO Custom Action Configurations For Two Level Approval Process",
    "text": "NITRO Custom Action configurations for two level approval process - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Custom Action configurations for two level approval process NITRO Custom Action configurations for two level approval process 2090 views 1 min , 14 sec read 1 Applies To: SharePoint Online and SharePoint On-premises Please refer main article on Two-level Approval Functionality for the detailed description and other configurations. This article describes the custom actions configurations required for approval process described in that article. And ensure that the required list schema is created before configuring these custom actions. Tickets list Submit for Approval Configure Variable Configure “ApproverEmpty” variable Action 1: QL_Approver Definition Create Query list action to get the approvers from the Approval Definition list Query: &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name='Category' LookupId='TRUE' /&gt;&lt;Value Type='Lookup'&gt;%%$lookupid([Category|Category1])%%&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; Action 2: Approve Configure update item action to approve the Ticket based on the approval decision. Conditions: Advanced Condition: $parsefieldvalue(ApproverEmpty##Value,String),,$parsefieldvalue(QL_Approver Definition##L2Approver) Action 3: Submit for level 2 Approver Create “Add Item” action to create level 2 approval task Conditions: Advanced Condition: $parsefieldvalue(ApproverEmpty##Value,String),,$parsefieldvalue(QL_Approver Definition##L2Approver) Column Mappings: Task Name: $strcat(Approval Task for, ,[Title|Title]) Approval Level: Level 2 Assigned To: QL_Approver Definition##L2Approver Related Ticket: [ID|ID] Due Date: $add({Today},7:0:0:0) Action 4: Update Ticket Approval Status II Conditions: Advanced Condition: $parsefieldvalue(ApproverEmpty##Value,String),,$parsefieldvalue(QL_Approver Definition##L2Approver) Action 5: Submit for Level 1 approver Create “Add Item” action to create level 1 approval task when the Ticket is submitted for approval. Conditions: Advanced Condition: $parsefieldvalue(ApproverEmpty##Value,String),,$parsefieldvalue(QL_Approver Definition##L1Approver) Column Mappings: Column Mappings same as “Action 3: Submit for level Approver”. Only change is to modify the Approval Level to “Level 1”. Action 6: Update Ticket Approval Status I Create “Update Item” action to update the Ticket on submitted for approval process. Conditions: Advanced Condition: $parsefieldvalue(ApproverEmpty##Value,String),,$parsefieldvalue(QL_Approver Definition##L1Approver) Approval Tasks list Approve Action 1: Approve Related Ticket Create “Invoke Custom” action to invoke the “Submit for Approval” custom action which is configured on Tickets list. Action 2: Update Approval Comments in Ticket Create “Update Item” action to update the Approver comments in Ticket. Deny Action 1: Update Related Ticket Approval Status to Deny Create “Update Item” action to update the Ticket status to denied. &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "46",
    "name": "46 - NITRO Workflow configurations for two level approval process.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/46%20-%20NITRO%20Workflow%20configurations%20for%20two%20level%20approval%20process.html",
    "title": "NITRO Workflow Configurations For Two Level Approval Process",
    "text": "NITRO Workflow configurations for two level approval process - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Workflow configurations for two level approval process NITRO Workflow configurations for two level approval process 1874 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please refer main article on Two-level Approval Functionality for the detailed description and other configurations. This article describes the workflow configurations required for approval process described in that article. And ensure that the required list schema is created before configuring these custom actions. &nbsp; Workflow 1: Notify approver on task creation Create a workflow on “Item Added” event on Approval Task list. Send Mail action Mail Template Workflow 2: Notify Requester on Ticket Approve/Deny Action 1: Send Mail to Requester on Ticket Approval Mail Template Action 2: Send Mail to Requester on Ticket denied Mail Template About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "460",
    "name": "460 - NITRO Workflow configurations for two level approval process.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/460%20-%20NITRO%20Workflow%20configurations%20for%20two%20level%20approval%20process.html",
    "title": "NITRO Workflow Configurations For Two Level Approval Process",
    "text": "NITRO Workflow configurations for two level approval process - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Workflow configurations for two level approval process NITRO Workflow configurations for two level approval process 1874 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-premises Please refer main article on Two-level Approval Functionality for the detailed description and other configurations. This article describes the workflow configurations required for approval process described in that article. And ensure that the required list schema is created before configuring these custom actions. &nbsp; Workflow 1: Notify approver on task creation Create a workflow on “Item Added” event on Approval Task list. Send Mail action Mail Template Workflow 2: Notify Requester on Ticket Approve/Deny Action 1: Send Mail to Requester on Ticket Approval Mail Template Action 2: Send Mail to Requester on Ticket denied Mail Template About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "461",
    "name": "461 - Calculate total time spent on Tickets and show it as percentage of estimated time - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/461%20-%20Calculate%20total%20time%20spent%20on%20Tickets%20and%20show%20it%20as%20percentage%20of%20estimated%20time%20-%20Crow%20Canyon%20Soft.html",
    "title": "Calculate Total Time Spent On Tickets And Show It As Percentage Of Estimated Time Crow Canyon Soft",
    "text": "Calculate total time spent on Tickets and show it as percentage of estimated time - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Calculate total time spent on Tickets and show it as percentage of estimated time Calculate total time spent on Tickets and show it as percentage of estimated time 1501 views 1 min , 38 sec read 0 Applies to: SharePoint Online and On-Premises Description In Crow Canyon IT helpdesk application, there is a Time Tracking list where staff can add entries to capture the time spent on a Ticket for different activities done to resolve that Ticket. Total time spent on the Ticket is the sum of time values entered in these Time Tracking items that are related to that Ticket. If Ticket has an estimated time column, then it is possible to calculate and show the actual time spent as a percentage of the estimated time. This can then be used for reporting purposes and identify where estimated time is significantly in variance with actual time based on say staff, category etc. This article describes how to calculate total time spent based on Time Tracking entries of the Ticket and update this value in a column in the Ticket. And then create a calculated column for total time as the percentage of estimated time. Summary of Steps List Schema changes Time Tracking list Tickets list Configure Workflow to calculate and put the the value of Total time in Tickets item Create calculated column for percentage Detail Steps 1. List Schema Time Tracking list No changes required as this is part of standard application and has the required columns and the Tickets list has a column to show associated &#8220;Time Tracking&#8221; items. Tickets list Create below columns in Tickets list, note that you can specify different names as required: Total Work (Number) Internal Name: TotalWork Display Name: Total Work Estimated Hours (Number) Internal Name: EstimatedHours Display Name: Estimated Hours After creating these columns, add them to NITRO forms. Go to Tickets list -&gt; List Settings -&gt; Crow Canyon NITRO forms -&gt; New Form, Edit Form and Display Form &#8211;&gt; Add these two columns to NITRO forms and publish the forms. 2. Configure Workflow to update Total work in Tickets list Configure a workflow to update the &#8220;Total Work&#8221; value in Tickets list from the &#8220;Time Tracking&#8221; list entries. Configure workflow as shown below on Item create and Item modified events on Time Tracking list. Conditions: Duration Hours equal afterchange:[[Any]] Duration Minutes equal afterchange:[[Any]] Action 1: Query List Create Query list action to get all the related Time Tracking entries for the ticket. Query: &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name=' TicketID ' LookupId='TRUE' /&gt; &lt;Value Type='Lookup'&gt;## TicketID ##&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; Note: In the above query, please use internal name of &#8220;Related Ticket ID&#8221; column in Time Tracking list in place of &#8220;TicketId&#8221; (highlighted in red). Action 2: Update Item Create an update item action to update the “Total Work” value in the Ticket. Column Mapping: Total Work: GetRelatedTimeTrackings##$sum([Total Work|TotalWork]) &nbsp; Create a calculated column in Tickets list This column will have the total time as percentage of the estimated time. Formula: =IF(ISERROR(Total Work/[Estimated Hours]),\"0\",(Total Work/[Estimated Hours])) About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "463",
    "name": "463 - How to configure dynamic permissions for columns in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/463%20-%20How%20to%20configure%20dynamic%20permissions%20for%20columns%20in%20NITRO%20Forms.html",
    "title": "How To Configure Dynamic Permissions For Columns In NITRO Forms",
    "text": "How to configure dynamic permissions for columns in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Forms / How to configure dynamic permissions for columns in NITRO Forms How to configure dynamic permissions for columns in NITRO Forms 2322 views Less than a minute 2 Applies To SharePoint Online and SharePoint On-Premises Description NITRO Forms provide a lot of features to easily configure dynamic forms as per business requirements. Often, we need to show/hide columns based on the value selected in other column(s). We can use Column Permissions feature to implement this quickly without any code. In this article, we are considering &#8220;Resolution&#8221; and &#8220;Resolution Notes&#8221; as two columns on the New/Edit form. Requirement is to show &#8220;Resolution Notes&#8221; column on the form only when &#8220;Resolution&#8221; is not empty. If &#8220;Resolution&#8221; is empty then &#8220;Resolution Notes&#8221; should not be visible. Column Permission Configurations This requires two permissions on &#8220;Resolution Notes&#8221; column: First permission hides the &#8220;Resolution Notes&#8221; column without checking any conditions Second permission conditionally shows the &#8220;Resolution Notes&#8221; column. If &#8220;Resolution&#8221; column has a value, then it shows the &#8220;Resolution Notes&#8221; column Hide Permission Show Permission Note We need to enable &#8220;Dynamic condition evaluation&#8221; as shown below. This means that whenever user changes the value of &#8220;Resolution&#8221; column on the form, these permissions are evaluated again to determine if &#8220;Resolution Notes&#8221; should be displayed or not For this scenario, &#8220;Hide permission has higher priority in case of multiple permissions&#8221; should not be checked. Since first permission that hides the column has no conditions, checking this option will mean that it will always take precedence and column will never be shown on the form NITRO Studio- Forms About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: NITRO on the Go! NITRO Studio Workshop: Deep Dive into NITRO Forms Active Directory Groups integration with NITRO Using Form Event Actions on auto-populated lookup column © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "464",
    "name": "464 - Steps to install Pre-built Crow Canyon NITRO applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/464%20-%20Steps%20to%20install%20Pre-built%20Crow%20Canyon%20NITRO%20applications.html",
    "title": "Steps To Install Pre Built Crow Canyon NITRO Applications",
    "text": "Steps to install Pre-built Crow Canyon NITRO applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps to install Pre-built Crow Canyon NITRO applications Steps to install Pre-built Crow Canyon NITRO applications 3361 views 10 min , 0 sec read 1 Applies to: SharePoint Online and On-Premises (2013 / 2016 / 2019/SharePoint Server Subscription Edition) Introduction Crow Canyon NITRO solution provides the framework to quickly implement business applications on SharePoint. NITRO configurations can be done by users without writing any code and build applications with rich functionality. For advanced and specific business scenarios, simple JavaScript and CSS code can be added for custom configurations within the NITRO Studio. This JavaScript can work with NITRO framework and SharePoint in context of current user to provide specific functionality. In addition, NITRO has a set of pre-built applications (listed below). These full featured applications that can be installed with just few clicks and then customized as required using the no-code NITRO features (or more advanced cases with JavaScript/CSS). This article describes the steps to install these pre-built Crow Canyon NITRO applications: On-boarding IT Help Desk Facilities Request Management Assets/Equipment Management Contract Management Purchase Order System Customer Service Note : 1. For Online: Before installing NITRO based applications, Crow Canyon NITRO Studio and Tenant Framework App should be installed in the Site Collection where application has to be installed. Please refer this article for installation details. 2. For On-premises: NITRO application installation requires that Crow Canyon NITRO Studio solution is installed in your SharePoint server and Crow Canyon NITRO Studio feature should be activated in the site collection where NITRO application has to be setup. For Crow Canyon NITRO Studio installation and activation in a site collection, please refer instructions from this article. 3. License: NITRO Applications will be installed with 45 day trial license by default. Please contact sharepointsupport@crowcanyon.com for purchasing application license. Install prebuilt NITRO Applications Navigate to NITRO Studio Online: Navigate to the Site Collection where we want to install the NITRO application -&gt; Site Contents -&gt; Click Crow Canyon NITRO Studio On-premises: Navigate to the Site collection where we want to install the NITRO application -&gt; Site Settings (click gear icon) -&gt; Crow Canyon NITRO Studio Navigate to NITRO Studio: After navigating to NITRO Studio page -&gt; Click NITRO Applications Click on the application that you want to install: For IT Help Desk, Facilities, Requests Management and Customer Service applications, we need to install two additional solutions before start installing the application, please refer steps here . Note: SharePoint online has modern UI based applications along with classic applications, you can differentiate the classic and modern UI applications beside the application name. 1. On-boarding Application Installation Click Onboarding application tile in NITRO applications page, enter the required details as per details given below and click Ok. Parent Site: Choose the site under which the on-boarding site needs to be created. Generally it will be the root site of the site collection Site Title : Title for the new on-boarding site. This can be changed later from site settings if needed Site Address : URL of the on-boarding site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires lot of configurations changes if URL has to be changed later. Or site can be reinstalled with different URL License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer article to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license From Address : On-boarding application sends email notifications to users, like when a task is assigned to them. This address will be set as sender address for outgoing emails sent by the application Reassign Owners Group Name : Specify the required SharePoint group. Members of this group will have the permission to reassign the tasks in on-boarding application. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. Lazy Approval Email Address Name : Specify the email address for lazy approval process. This email address will be used for the approve/deny via email feature in the On-boarding application. For more details regarding approve via email feature, refer article . Setup will create the site and configure the application. You should see following screen after successful installation: Additional Configurations 1. Enable cache for NITRO forms. Go to Requests list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Global Settings -&gt; Click &#8220;Enable Cache&#8221; button. 2. After installing the Onboarding application, configure owners for various applications that users will be given access to as part of their on-boarding. Tasks will be assigned based on the owner specified for the corresponding applications (like database, email, SAP etc.). go to Application Administration -&gt; Click on Applications and configure &#8220;Owner&#8221; for all the Applications. 3. Configure Owner for all the Tasks in Task Types list. Tasks will be assigned based on the Owner configured in the corresponding Task Types. Go to Application Administration -&gt; Task Types and add Owner for all the Task Types. 4. Configure the Approver, minimum number of days required to process request and other configuration in Configuration settings in Application Administration. Go to Application Administration -&gt; Configurations -&gt; Configure the General Settings (i.e. Approver, Minimum no. of days required to process the request) and save the configurations. Note: Click &#8220;Go&#8221; button to update the Application Management as per the changes done. 2. Service Request Applications (NITRO Helpdesk, IT Professional (2020),IT Standard (2020), Facilities/Work Orders (2020), Request Management (2020), Customer Service (2020)) Add and deploy additional solutions in SharePoint server Applies to: SharePoint On-premises (2013, 2016, 2019) Crow Canyon Service Request application requires product workflows and timer job solutions to be deployed in the SharePoint server. We will send these solutions as part of the installation package if you have purchased the Service Request applications. Please contact Crow Canyon support in case you do not receive these solutions. Add and Deploy solutions Add and deploy the below solutions in SharePoint server, please refer detailed instructions from this article CCSSRWorkflows.wsp CrowCanyon.TimerJobs.wsp S. No. Solution Name Deployment Scope Description Feature Scope 1 CCSSRWorkflows.wsp Web Application This solution has server side code to process business functionality described below: Email to Ticket conversion/linking Handles Ticket create/update events and sends email notifications and calculates SLA Approval functionality on Tickets and Change Requests A workflow on Problems list that auto closes related Tickets when Problem is resolved Site Collection 2 CrowCanyon.TimerJobs.wsp Web Application This solution creates timer jobs in SharePoint for below functionality: Service Level Agreement (SLA) actions Recurrence Archival Assets Maintenance Site Collection Run Service Request Application Installation Applies to: SharePoint Online and On-premises (2013, 2016, 2019) Instructions : Click the application tile that we want to install in the NITRO applications page, specify the required details and click Ok. Parent Site: Choose the site under which the service area site needs to be created. Generally it will be the root site of the site collection Site Title : Title for the new service request applications (IT Professional (2020),IT Standard (2020), Facilities/Work Orders, Request Management, Customer Service) site. This can be changed later from site settings if needed Site Address : URL of the service request application site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires lot of configuration changes if URL has to be changed later License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer article to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license. From Address : Service request application sends email notifications to users, like when a Ticket is created, assigned, resolved, closed etc.. This address will be set as sender address for outgoing emails sent by the application Redirect Owners Group Name : Specify the SharePoint group. Members of this SharePoint group will be redirected to the Manager Dashboard page and all the other users will be redirected to Staff Workspace page when they click on &#8220;Tickets&#8221; link in quick launch. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. Setup will create the site and configure the application. Once the installation is completed it will show the success message. Additional Configurations For Online: Refer this article for additional configurations. For On-premises: Application installer will try to activate the required features and attach workflow instances to the required lists. In case, if it is failed then it shows a message as shown below. Follow the link in the error message to fix the same. For additional configurations to complete the installation process, refer this article . 3. Standalone Assets/Equipment Management application Click on the Standalone Assets/Equipment Management application in NITRO applications page, specify the required details and click Ok. Parent Site: Choose the site under which the asset application site needs to be created. Generally it will be the root site of the site collection. Site Title : Title for the new Assets/Equipment Management application site. This can be changed later from site settings if needed. Site Address : URL of the Assets/Equipment Management application site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires lot of configurations changes if URL has to be changed later. License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer article to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license. Setup will create the site and configure the application. Once the installation is completed it will show the success message. Additional Configurations Enable cache for NITRO forms. Go to Assets/Equipment list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Global Settings -&gt; Click &#8220;Enable Cache&#8221; button. &#8220;Equipment Management&#8221; application specific post configurations: Preventive Maintenance Calendar: Go to Maintenance Tasks list, recreate ‘Preventive Maintenance Calendar’ modern calendar view. Go to ‘Maintenance Tasks’ list settings, edit the ‘Preventive Maintenance Calendar’ view created in above steps and update the view fields, filter settings as shown below. Note: Instead of last 60 days to next 30 days shown in screenshot, make it last 90 days to next 90 days. Open ‘Site Pages’ library, Preventive-Maintenance-Calendar.aspx page, delete the existing ‘Maintenance Tasks’ web part and add ‘Preventive Maintenance Calendar’ view using standard Microsoft ‘List’ web part. For On-premises: We need to activate the Crow Canyon Asset Maintenance Timer Job for the site collection. Follow instructions given below: Add and deploy the CrowCanyon.TimerJobs.wsp solution in the SharePoint server. Please refer article to add and deploy the solutions in the SharePoint server. Note : We will send the CrowCanyon.TimerJobs.wsp solution as part of the application installation package. If you are not able find this solution, please contact Crow Canyon support Activate below feature in Site Collection using STSADM command or PowerShell command. Refer instructions from article . CrowCanyon.TimerJobs_CCSAssetsMaintenance 4. Contract Management Application Installation Click Contract Management application tile in NITRO applications page, enter the required details as per details given below and click Ok. Parent Site: Choose the site under which the Contracts site needs to be created. Generally it will be the root site of the site collection Site Title : Title for the new Contract site. This can be changed later from site settings if needed Site Address : URL of the Contract site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires lot of configurations changes if URL has to be changed later. Or site can be reinstalled with different URL License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer article to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license From Address : Contracts application sends email notifications to users, like when a approval task is assigned to them. This address will be set as sender address for outgoing emails sent by the application Reassign Owners Group Name : Specify the required SharePoint group. Members of this group will have the permission to reassign the approval tasks in Contract Management application. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. Lazy Approval Email Address Name : Specify the email address for lazy approval process. This email address will be used for the approve/deny via email feature in the Contract management application. For more details regarding approve via email feature, refer article . Setup will create the site and configure the application. Once the installation is completed it will show the success message. Additional Configurations Below steps are common for both SharePoint online and Onpremises. 1. Enable cache for NITRO forms. Go to Contracts list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Global Settings -&gt; Click &#8220;Enable Cache&#8221; button. 2. Remove Report Center and Approval Tasks sub links in Quick Launch section 3. [Optional] Contracts and Vendors sublinks are added in both Quick Launch and Top link bars, we can remove these links from Quick Launch as required. 4. Define Contract Renewal Options and Approval Levels in Application Administration as required Online: Configure the email sync app settings for the email address which is configured in &#8220;Lazy Approval Email Address Name&#8221; for Emails list. On-premises: Configure incoming email address for Emails list with the email address which is configured in &#8220;Lazy Approval Email Address Name&#8221;. 5. Purchase Order System Application Installation For Online : Click NITRO Purchase V2 application tile in NITRO applications page, enter the required details as per details given below and click Ok. For On-Premises : Click Purchase Order System application tile in NITRO applications page, enter the required details as per details given below and click Ok. Parent Site: Choose the site under which the Purchase application site needs to be created. Generally it will be the root site of the site collection Site Title : Title for the new Contract site. This can be changed later from site settings if needed Site Address : URL of the Purchasing site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires lot of configurations changes if URL has to be changed later. Or site can be reinstalled with different URL License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer article to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license From Address : Purchase application sends email notifications to users, like when a approval task is assigned to them. This address will be set as sender address for outgoing emails sent by the application Reassign Owners Group Name : Specify the required SharePoint group. Members of this group will have the permission to reassign the approval tasks in Purchase Order system application. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. Lazy Approval Email Address Name : Specify the email address for lazy approval process. This email address will be used for the approve/deny/send back via email feature in the Purchase Order system application. For more details regarding approve via email feature, refer article . Setup will create the site and configure the application. Once the installation is completed it will show the success message. Additional Configurations Below steps are common for SharePoint Online and On-premises. 1. Enable cache for NITRO forms. Go to Purchase Request list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Global Settings -&gt; Click &#8220;Enable Cache&#8221; button. 2. Remove Report Center and Approval Tasks sub links in Quick Launch section 3. Define Approval Levels in Application Administration as required Online: 1. Configure the email sync app settings for the email address which is configured in &#8220;Lazy Approval Email Address Name&#8221; for Approver Emails list. 2. Resave Crow Canyon ID Column settings in &#8220;Purchase Requests&#8221; and &#8220;Purchase Orders&#8221; list. Click &#8220;Administration&#8221; link in top links -&gt; Configure Lists -&gt; Click &#8220;Purchase Requests&#8221; tile -&gt; Click Crow Canyon ID column link in list settings -&gt; Edit ID column settings and save the settings. Note: Do the same for Purchase Orders list as well. 3. Make sure &#8220;Contribute without delete&#8221; permission level is selected in all below workflow actions: WF: Manage permissions on approver task reassign Action: Grant contribute without delete for assignee on task WF: Manage permissions on line items Action: Grant contribute without delete permissions for submitted for WF: Manage permissions on purchase orders and line items Action1: Grant contribute without delete permissions for purchase agent on PO Action2: Grant contribute without delete permissions for agent on line items WF: Manage permissions on purchase request and line items Action1: Grant contribute without delete permissions for submitted for Action2: Grant contribute without delete permissions for submitted for on line items WF: Manage permissions when new approver task created Action: Grant contribute without delete permissions for assigned to on approval task 4. Install &#8220;NITRO Purchase Portal&#8221; application. 5. By default, NITRO Purchasing application comes with override settings in Purchase Request list for Portal site. Make sure that portal &#8220;Site URL&#8221; is correct in override settings in Purchase Request list forms. Go to site contents -&gt; Purchase Requests list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced Settings -&gt; edit portal settings and make sure that Site URL is correct. On-premises: 1. Configure incoming email address for Emails list with the email address which is configured in &#8220;Lazy Approval Email Address Name&#8221;. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "465",
    "name": "465 - SharePoint 2013_16_19_ Additional configurations required for Crow Canyon Service Request applicatio.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/465%20-%20SharePoint%202013_16_19_%20Additional%20configurations%20required%20for%20Crow%20Canyon%20Service%20Request%20applicatio.html",
    "title": "SharePoint 2013 16 19 Additional Configurations Required For Crow Canyon Service Request Applicatio",
    "text": "SharePoint 2013/16/19: Additional configurations required for Crow Canyon Service Request application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint 2013/16/19: Additional configurations required for Crow Canyon Service Request application SharePoint 2013/16/19: Additional configurations required for Crow Canyon Service Request application 1920 views 2 min , 42 sec read 0 Applies to : SharePoint On-Premises (2013 / 2016 / 2019/SharePoint Server Subscription Edition) Description This article describes the additional configurations required for the Crow Canyon Service Request Application installation. For installation instructions please refer this article . Pre-requisites Make sure &#8220;CCSSRWorkflows.wsp&#8221; and &#8220;CrowCanyon.TimerJobs.wsp&#8221; solutions are deployed in SharePoint server. If solutions are not deployed, please refer instructions to deploy solutions from this article Summary of steps Activate features CCSSRWorkflows Crow Canyon Timer Jobs Attach Workflow Instances to required lists Create and configure Portal site Other Configurations Detailed instructions 1. Activate features Please make sure that pre-requisites mentioned above in this article are ready before proceeding with below steps. Activate below features in Site Collection 1. CCSSRWorkflows feature Go to Site Collection -&gt; Site Settings -&gt; Site Collection Features and activate &#8220;CCSSRWorkflows&#8221; feature if it is not already activated 2. Activate below Timer Job features Go to SharePoint Central Administration -&gt; Monitoring -&gt; Review Job Definitions and check if the below timer job definitions already there. If not, please follow below instructions. Below features need to be activated using SharePoint Management Shell, Refer instructions below: Feature Name Job Definition Name CrowCanyon.TimerJobs_CCSArchivalJob CrowCanyon Archival Timer Job For ##Site Collection URL## CrowCanyon.TimerJobs_CCSAutoCloseJobFeature CrowCanyon Auto Close Timer Job for ##Site Collection URL## CrowCanyon.TimerJobs_CCSRecurrenceJob CrowCanyon Recurrence Timer Job for ##Site Collection URL## CrowCanyon.TimerJobs_CCSSLATimerJobFeature CrowCanyon SLA Timer Job for ##Site Collection URL## Instructions: Open SharePoint Management Shell (Run as Administrator) and run below commands: Commands: 1. CrowCanyon.TimerJobs_CCSArchivalJob Command: Enable-SPFeature -Identity \"CrowCanyon.TimerJobs_CCSArchivalJob\" -url \"SiteCollectionURL\" 2. CrowCanyon.TimerJobs_CCSAutoCloseJobFeature Command: Enable-SPFeature -Identity \"CrowCanyon.TimerJobs_CCSAutoCloseJobFeature\" -url \"SiteCollectionURL\" 3. CrowCanyon.TimerJobs_CCSRecurrenceJob Command: Enable-SPFeature -Identity \"CrowCanyon.TimerJobs_CCSRecurrenceJob\" -url \"SiteCollectionURL\" 4. CrowCanyon.TimerJobs_CCSSLATimerJobFeature Command: Enable-SPFeature -Identity \"CrowCanyon.TimerJobs_CCSSLATimerJobFeature\" -url \"SiteCollectionURL\" After activating all the above timer job features, please navigate to SharePoint Central Administration -&gt; Monitoring -&gt; Review Job Definitions and make sure that all the timer job definitions mentioned in above table are there now. 2. Attach Workflow Instances in required lists Please make sure that pre-requisites mentioned above in this article are ready before proceeding with below steps. CCSSRWorkflows feature Go to Site Collection -&gt; Site Settings -&gt; Site Collection Features and activate &#8220;CCSSRWorkflows&#8221; feature if it is not already activated Application installer will try attaching the required workflows, please attach workflow instances to below lists if they are not already attached. Note: This article is same for IT Professional, IT Standard, Facilities, Customer Service and Request Management applications and only difference is the name of the main list (Tickets list). Below instructions are given as per Tickets list name, please use the corresponding list name based on the application that you are installing. For IT Professional and IT Standard application &#8211; &#8216;Tickets&#8217; For Facilities application &#8211; &#8216;Work Orders&#8217; For Request Management application &#8211; &#8216;Requests&#8217; For Customer Service &#8211; &#8216;Tickets&#8217; 1. Tickets list Applies to: IT Professional, IT Standard, Facilities, Customer Service and Requests Management Go to Tickets lists -&gt; List Settings -&gt; Workflow Settings and attach workflows as shown below CCSSRTicketCreation workflow instance: CCSSRTicketUpdation workflow instance: 2. Email Tickets list Applies to: IT Professional, IT Standard, Facilities, Customer Service and Requests Management 3. Approval Tasks list Applies to: IT Professional, IT Standard, Facilities, Customer Service and Requests Management 4. Change Requests list Applies to: IT Professional application 5. CR Approval Tasks list Applies to: IT Professional application 6. Problems list Applies to: IT Professional application 3. Create and configure Portal site Refer instructions to create and configure Portal site from this article . 4. Other configurations 1. Enable cache for NITRO forms. Go to Tickets list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Global Settings -&gt; Click “Enable Cache” button if it is not already enabled. 2. Add &#8220;Employee Portal&#8221; top link bar Go to Service Request site -&gt; Site Settings -&gt; Top link bar and add link to Portal site 3. Grant “Everyone” read permissions on the User Information list. Go to Service area Site -&gt; Go to Top Level Site Settings -&gt; People and Groups -&gt; modify the “MembershipGroup” Id to ‘0’ in the URL. It will go to SharePoint User Information list -&gt; Go to List Settings -&gt; Permissions for the list and grant “Everyone” read permissions on this list. Note: Please uncheck the “Send Mail” notification while granting permissions for “Everyone” 4. For SP 2016, modify the User Info filler settings to “Active Directory”, go to Application Administration -&gt; General Configurations -&gt; Modify the “Read Requester Information” from Active Directory and modify the properties accordingly. Next modify the Auto fill settings in Ticket NITRO forms to read information from “User Profile”. Go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Edit New/Edit Forms -&gt; Auto Fill Settings -&gt; Edit auto-fill settings and select settings from “User Profile”. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "466",
    "name": "466 - SharePoint_ Create and configure end user portal site for NITRO applications - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/466%20-%20SharePoint_%20Create%20and%20configure%20end%20user%20portal%20site%20for%20NITRO%20applications%20-%20Crow%20Canyon%20Software.html",
    "title": "SharePoint Create And Configure End User Portal Site For NITRO Applications Crow Canyon Software",
    "text": "SharePoint: Create and configure end user portal site for NITRO applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint: Create and configure end user portal site for NITRO applications SharePoint: Create and configure end user portal site for NITRO applications 3263 views 2 min , 26 sec read 0 Applies to : SharePoint online and On-Premises (2013 / 2016 / 2019/SharePoint Server Subscription Edition) Description This article describes the steps to create and configure Portal site. Portal provides a secure and intuitive user interface to end users to interact with NITRO Applications. Note: For SharePoint Online, portal site can be configured in two ways: Using Crow Canyon ‘Power Portal’ application as described in this article As a NITRO activated site with portal functionality and look and feel. This is a newer method of building portals and gives more flexibility in site configurations. Please refer this article for steps to create and configure portal site Detailed Instructions To create portal site, go to service request application (i.e. IT Professional/IT Standard/Facilities/Request Management sites) -&gt; Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon Power Portal and enter the required details and create a new portal site. Parent Site: Choose the site under which the portal site needs to be created. Generally it will be the corresponding application site (i.e. IT Premium/Facilities/Request Management site) Site Title : Give the Title for the Portal site. This can be changed later from site settings if needed Site Address : Give the URL for the Portal site. Please note that it requires lot of configuration changes if URL has to be changed later License Type : Choose the “Trial” and proceed with the installation, once installation is complete, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer this article to convert the Crow Canyon Trial License to Subscription/Enterprise license. Note: Creation of portal site is same for both SharePoint online and on-premises, only the user interface may differ. After creating the portal site, we need to configure the portal site for the specific application and this is done with portal template files that have the required settings. We will send these portal tempalte files as part of the service request application installation package (i.e. IT Premium/Facilities/Request Management applications). Upload template files to corresponding document libraries Go to Portal Site -&gt; “PortalSettings” document library -&gt; upload “t_PortalSettings.xml” file Go to Portal Site -&gt; Site Assets -&gt; Create folder with name “CCS” -&gt; Create another folder “Forms” with in the “CCS” folder -&gt; Upload “t_forms_[[KnowledgeBaseListID]].xml and t_forms_[[TicketsListID]].xml” files in “Forms” folder Go to Portal Site -&gt; Site Assets -&gt; Create a new folder “LinkContent” and upload the below files in this folder: 566b24f2-57de-4d8f-a26f-b6cc475d88bf.txt 51233f2c-1873-48b6-9e29-93d4390e60f0.txt b23a4b41-fa17-4b69-9088-6c7c528613b7.txt b545bf73-c890-4a9b-9b9e-bba0b13d66b8.txt Process the template files Go to Portal Site -&gt; Site Pages -&gt; Open “Template Settings” page and process portal settings, Work Order list forms and Knowledge base list forms. Configure Portal Settings file 1. Select the “/PortalSetttings” under Folder Url, select “t_PortalSettings.xml” under “Template File” Note: This article is same for IT, Facilities and Request Management applications and only difference is the name of the main list (Tickets list). Below instructions are given as per Tickets list name, please use the corresponding list name based on the application that you are installing. For IT Premium application – ‘Tickets’ For Facilities application – ‘Work Orders’ For Request Management application – ‘Requests’ 2. Configure placeholder values by editing all of them with the appropriate value. Sample screenshots below: Configure Tickets list forms 1 Select the “/SiteAssets/CCS/Forms” under Folder Url, select “t_forms_[[TicketsListID]].xmll” under “Template File”: Configure placeholder values by editing every possible property and choose the appropriate value. Sample screenshot below: Configure Knowledge Base list forms Select the “/SiteAssets/CCS/Forms” under Folder Url, select “t_forms_[[KnowledgeBaseListID]].xml” under “Template File”: Configure placeholder values by editing every possible property and choose the appropriate value. Sample screenshot below: Portal site is ready once these steps are ready. Configure Portal Security Settings Once above configurations are completed, Portal security settings can be configured for end users to auto redirect to the Portal site when they try to login to the main site (i.e. IT/Facilities/Request Management). To configure this portal security settings, refer this article . About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "467",
    "name": "467 - Site URL Change for NITRO Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/467%20-%20Site%20URL%20Change%20for%20NITRO%20Application.html",
    "title": "Site URL Change For NITRO Application",
    "text": "Site URL Change for NITRO Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Site URL Change for NITRO Application Site URL Change for NITRO Application 2747 views 5 min , 46 sec read 7 Applies To : SharePoint On-Premises and NITRO Studio based applications Description This article lists the configurations required when SharePoint site URL is changed for a site using Crow Canyon NITRO Studio. This can be the case when when SSL is configured for a site (http://&#8230; to https://&#8230;) or when alternate access mapping is configured for the web application. There could also be the case of directly changing the site URL after installation of Crow Canyon applications. Case 1: Multiple URLs for site Alternate access mappings are configured to access the sites for the web application with multiple URLs Case 2: Single URL for site Alternate access mappings are configured to change URL, site is accessed only using this single URL Subsite URL is changed manually SSL is applied to the site (http://&#8230; to https://&#8230;) For any of the above cases then URL change configurations have to be done and alternate access mapping URLs need to be specified in the Crow Canyon Site Settings. Case 1: Multiple URLs 1. Upgrade NITRO Studio for the site Go to the Application Site -&gt; Site Settings -&gt; Crow Canyon NITRO Apps -&gt; Click &#8220;UPDATE THIS SITE&#8221; link (if available) to upgrade the NITRO Studio for the site. If link is not visible then site is already updated and no action is required for this step. 2. Configure Alternate Access Mapping URLs in Crow Canyon NITRO Site Settings. Go to Application site -&gt; Site Settings -&gt; Crow Canyon NITRO Site Settings and configure the alternate access mapping URLs. Please enter all valid URLs of the site collection in separate lines as shown below: Note: Ticket links in the auto notifications (Application Administration -&gt; Notification) will point to the &#8220;Default URL Zone&#8221; that is set for the web application in the SharePoint server. To modify these links with alternate access mapping URL, go to SharePoint Central Administration -&gt; System Settings -&gt; Farm Management-&gt; Configure Alternate Access Mappings -&gt; Check and update the default URL as needed. This default URL will be used in the auto notifications. 3. Configure the URLs in the NITRO Apps with server relative URLs Application Administration URL configuration Modify the URL to the server relative URL and configure the Application Administration with new URL in Crow Canyon Branding. Sample URL: http://crowcanyon:3000/sites/Nitro/ITPremimum/Workspaces/Configuration.aspx Server Relative URL: /sites/Nitro/ITPremimum/Workspaces/Configuration.aspx Go to Application Site -&gt; Site Settings -&gt; Crow Canyon Branding (Classic sites) -&gt; General Settings -&gt; Remove the Application Administration URL and reconfigure with new server relative URL: Change URLs in Crow Canyon Tiles and Dials Go to Application Site -&gt; Site Settings -&gt; Crow Canyon Tiles and Dials -&gt; Tiles -&gt; Modify the URLs in Header and Body navigation URLs with server relative URLs (for server relative URL, please refer above section). Similarly modify the URLs in Link Tiles where the &#8220;Tile Type&#8221; is &#8220;URL&#8221;. If there are no Tiles or Link tiles configured then ignore this step. Portal Quick Ticket links Go to the Portal site -&gt; Portal Settings -&gt; Home Page Settings -&gt; Quick Links -&gt; Edit the Tile and modify the navigation URL with server relative URL. Re-save Portal Security Settings Go to Portal Site -&gt; Portal Settings -&gt; Security Settings -&gt; Select the site in the drop-down and re-save the settings Custom JavaScript file link in NITRO forms If the NITRO forms are using any Custom JavaScript file URL from the SharePoint site, modify the URL with server relative URL. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Custom JavaScript and modify the URL with server relative URL and then publish the form. Case 2: Site is using single URL but that URL is changed Crow Canyon applications use the site URL in different places like NITRO forms, Custom Actions, URL Actions etc. These settings need to be updated with new site URL for corresponding functionality to work. Please refer below table for the steps: S.No. Component Description and Steps 1 Crow Canyon Timer Jobs &nbsp; Delete old timer jobs using PowerShell and reactivate the Timer Job features using new site URL 1. Open SharePoint Management Shell and run below command: $Timerjob = Get-SPTimerJob -id &lt;Timer Job's GUID&gt; $Timerjob.Delete() To find the Timer Job&#8217;s GUID, go to SharePoint Central Administration site, Monitoring, Review Job Definition, open the old Crow Canyon Timer Job that is referring to old site URL, copy the timer job id from the address bar of the browser as shown below: 2. Please refer below article to re-activate timer jobs with new URL (Ignore #2 in the below article): https://www.crowcanyon.help/article/418/ 2 Crow Canyon URL Actions &nbsp; Crow Canyon URL Actions are configured for Tickets list in Crow Canyon application. Go to site contents &#8211;&gt; Tickets list &#8211;&gt; list settings &#8211;&gt; Crow Canyon URL Actions &#8211;&gt; edit each URL action and update the URL for the action with new site URL and save the settings as shown below Note: In Asset Management application, URL actions will be configured for the Assets list. 3 Home Tiles &nbsp; For V3.7 without NITRO Studio: Go to site contents &#8211;&gt; Tiles2 list &#8211;&gt; edit each item and update the URLs as shown below. Please ignore if list is not present in the site contents. Similarly go to &#8220;Home Tiles&#8221; list and update the URLs. Ignore if the list does not exist. For NITRO Studio based Application: Go to Crow Canyon NITRO Studio &#8211;&gt; Tiles and Dials &#8211;&gt; Manage Link Tiles &#8211;&gt; edit each tile and update the navigation URLs with new site URLs and save settings as shown below: 4 Quick Launch and Top Link Bar Links Check each link in the Quick Launch, Top Link Bar and ensure all the URLs are pointing to the new site URL 5 Crow Canyon Report Center Go to site contents &#8211;&gt; Report Center document library &#8211;&gt; edit each page present in this library &#8211;&gt; edit “Report Links” web part &#8211;&gt; update the URLs present in the web part settings as shown below and save the settings. 6 Crow Canyon Branding 1. Remove Application Administration: Go to Site settings &#8211;&gt; Crow Canyon Branding &#8211;&gt; General settings &#8211;&gt; Remove application administration button 2. Remove branding: Go to Site settings &#8211;&gt; Crow Canyon Branding &#8211;&gt; Remove branding &#8211;&gt; Click on &#8220;Revert&#8221; button 3. Apply Branding: Go to Site settings &#8211;&gt; Crow Canyon Branding &#8211;&gt; Crow Canyon Themes &#8211;&gt; Apply required branding and select the required type of quick launch as needed. 4. Configure Application administration: Refer the steps from https://www.crowcanyon.info/nitro/appmanual_v2/index.html?general-settings2.html Note: To get the Application Administration URL, go to site contents &#8211;&gt; Administration document library &#8211;&gt; copy the URL for &#8220;Configure Lists&#8221; page. 7 Crow Canyon NITRO Forms In NITRO form settings, we use the site URL in different places and these site urls need to be updated. Go to site contents &#8211;&gt; Site Assets &#8211;&gt; CCS &#8211;&gt; Forms &#8211;&gt; download all the xml files. Now using Notepad++, find and replace the Old Site URL with New Site URL and upload the files to same location. After the files are replaced, go to each list that has the NITRO forms configured &#8211;&gt; list settings &#8211;&gt; Crow Canyon NITRO Forms &#8211;&gt; publish the forms. After all the forms are published, go to site settings &#8211;&gt; Crow Canyon NITRO Site Settings &#8211;&gt; click on “Reset Cache” 8 Crow Canyon Portal Settings and Portal Forms Go to Portal site &#8211;&gt; Site contents &#8211;&gt; Site Assets &#8211;&gt; CCS &#8211;&gt; Forms &#8211;&gt; download the xml files and update with old site URL using notepad++ and upload the files to same location Similarly go to site contents &#8211;&gt; Portal Settings document library &#8211;&gt; download Portal settings.xml and update the old site URL with New site URL using notepad++ and upload the file to same location. Now navigate to Portal site &#8211;&gt; Portal settings &#8211;&gt; Portal forms &#8211;&gt; edit each form and publish the forms again. Also go to Portal settings &#8211;&gt; Security settings &#8211;&gt; reconfigure the Portal security settings. 9 Crow Canyon Custom Actions Go to each list that has Custom Actions &#8211;&gt; list settings &#8211;&gt; Crow Canyon Custom Actions &#8211;&gt; edit each custom action and save the action once 10 Hyperlinks used in Mail Templates It is possible that we use hyperlinks in the mail templates that might refer to old site URL. We need to update the URLs for the hyperlinks in the mail templates accordingly. Crow Canyon Workflow Manager Mail Templates: Go to Site settings &#8211;&gt; Crow Canyon Mail Templates &#8211;&gt; edit each mail template and update the hyperlinks with correct URL and save the settings. Crow Canyon Email Manager: Go to Site contents &#8211;&gt; Tickets list &#8211;&gt; Crow Canyon Email Manager settings &#8211;&gt; edit the mail template &#8211;&gt; update hyperlinks to point to new site URL and save the settings. Notification Utilities: Go to Application Administration &#8211;&gt; Notifications &#8211;&gt; check if any URLs are present in the mail template body and update as needed. Configurations: Go to Application Administration &#8211;&gt; General Configurations &#8211;&gt; update Portal Tickets URL with the updated Portal site URL as needed and save the settings. 11 Crow Canyon Conditional Formatting Re-save all conditional formatting settings. Go to Site contents &#8211;&gt; Tickets list &#8211;&gt; list settings &#8211;&gt; Crow Canyon Conditional formatting &#8211;&gt; edit each setting and save it. We may have to repeat this process for the lists mentioned below Tickets Change Requests Problems Recurring Ticket Templates Archived Tickets Archived Change Requests Archived Problems 12 Crow Canyon License Manager Contact sharepointsupport@crowcanyon.com so we will update the license for the new site URL and you can start using the application with changed URL. Limitations: If there are any associated item settings configured for Enhanced Rich Text field type in NITRO Forms then that column&#8217;s data contains the old URLs in its content and those values will be updated whenever the item is updated next time using NITRO forms manually. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "468",
    "name": "468 - Show KB articles as hyperlinks in the Portal Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/468%20-%20Show%20KB%20articles%20as%20hyperlinks%20in%20the%20Portal%20Forms.html",
    "title": "Show KB Articles As Hyperlinks In The Portal Forms",
    "text": "Show KB articles as hyperlinks in the Portal Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Show KB articles as hyperlinks in the Portal Forms Show KB articles as hyperlinks in the Portal Forms 1380 views 1 min , 22 sec read 0 Applies to: SharePoint online and On-Premises Description In Crow Canyon Service Request application, &#8220;Related KB Articles&#8221; is a multi-lookup column in Tickets list. In portal forms lookup columns are not hyperlinked and so users cannot open them to see the details. Hyperlinks are removed as by default these will refer to backend site links and we cannot navigate the portal users to the backend site. This article describes a solution with custom script to show &#8220;Related KB Articles&#8221; as hyperlinks in the portal Ticket form. These hyperlinks will refer to portal KB forms so that user stays in the portal site while viewing these KB articles. Detailed Steps Note: This articles assumes that &#8220;Related KB Articles&#8221; column is added in Portal Ticket list forms. Go to Portal site -&gt; Portal Settings -&gt; Portal Forms -&gt; Edit Tickets list forms and it will navigate to Tickets list NITRO forms designer settings page. Switch to Tickets display form -&gt; Advanced Section -&gt; Custom JavaScript -&gt; Modify the below script as needed and add the script in Custom Javascript Eval section. Script if ($('#ccs_control_ RelatedKBArticles ').text()) { var lookupValues = currentItem.get_item(\" RelatedKBArticles \"); if (lookupValues != null &amp;&amp; lookupValues.length &gt; 0) { var ccs_KB_Links = \"\"; for (var index = 0; index &lt; lookupValues.length; index++) { var kbLookupId = lookupValues[index].get_lookupId(); var kbLookupValue = lookupValues[index].get_lookupValue() if (kbLookupId &amp;&amp; kbLookupId != '') { kbLookupValue = (!kbLookupValue || kbLookupValue == '') ? kbLookupId : kbLookupValue; ccs_KB_Links += ccs_KB_Links ? \";\" : \"\"; ccs_KB_Links += \"&lt;a target='_blank' href =' https://contoso.sharepoint.com/sites/NITRO/ITPremium/portal/SitePages/DisplayForm.aspx?lfid=8&amp;FormKey=Knowledge%20Base&amp;ItemID= \" + kbLookupId + \"'&gt;\" + kbLookupValue + \"&lt;/a&gt;\"; } } $('#ccs_control_ RelatedKBArticles ').html(ccs_KB_Links); } } functionCallback(); Note: In the above script replace &#8220;RelatedKBArticles&#8221; with internal name of the related KB articles column in the Tickets list Replace the Knowledge Base article link with corresponding Knowledge Base portal display form URL as per below steps: Go to Portal Settings -&gt; Portal Forms -&gt; Edit Knowledge Base list forms -&gt; Click &#8220;Copy Knowledge Base URL&#8221; button, it will copy the New Form URL. After this modify the New Form URL as below Copied New Form URL: https://contoso.sharepoint.com/sites/NITRO/ITPremium/Portal/SitePages/NewForm.aspx?lfid=2&amp;FormKey=Knowledge%20Base Change to Display Form URL: https://contoso.sharepoint.com/sites/NITRO/ITPremium/Portal/SitePages/ DisplayForm .aspx?lfid=2&amp;FormKey=Knowledge%20Base &amp;ItemID= &nbsp; &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "469",
    "name": "469 - How to calculate date value dynamically based on other column value changes in the NITRO form_ - Cro.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/469%20-%20How%20to%20calculate%20date%20value%20dynamically%20based%20on%20other%20column%20value%20changes%20in%20the%20NITRO%20form_%20-%20Cro.html",
    "title": "How To Calculate Date Value Dynamically Based On Other Column Value Changes In The NITRO Form Cro",
    "text": "How to calculate date value dynamically based on other column value changes in the NITRO form? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to calculate date value dynamically based on other column value changes in the NITRO form? How to calculate date value dynamically based on other column value changes in the NITRO form? 2280 views Less than a minute 7 Applies to: SharePoint online and On-Premises Description This article describes the steps to configure Form Event Actions in NITRO Forms to calculate the &#8220;End Time&#8221; date and time column value dynamically based on the &#8220;Start Time&#8221; and &#8220;Duration Hours&#8221; column changes on the form. Detailed Instructions This article assumes that &#8220;End Time&#8221;, &#8220;Start Time&#8221; and &#8220;Duration Hours&#8221; columns are present on the form. Open Form Event Actions: Go to the required list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Edit the required form (New/Edit) -&gt; expand &#8220;Advanced&#8221; section in left panel -&gt; click &#8220;Form Event Actions&#8221; and configure as shown below. Add new configuration: Select &#8220;Execute on column value change&#8221; checkbox, select both &#8220;Start Time&#8221; and &#8220;Duration Hours&#8221; columns in below text box and add “Update Form Control Values” type of action as shown below Configure Update Form Controls Add new mapping, choose “End Time” column, choose “Format Value using JavaScript” option and enter the below script, save settings and publish the form as shown below. This script will add the duration hours to start time column and returns the value. Return value in script will be set to the selected column. Note: We can write different JavaScript logic based on business requirement. var startTime = new Date(_ccs_FormUI.fetchColumnValueUI(\"StartTimeColumnInternalName\")); var duration = _ccs_FormUI.fetchColumnValueUI(\"DurationColumnInternalName\"); if(startTime &amp;&amp; duration){ return startTime.setHours(startTime.getHours() + duration); } About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "47",
    "name": "47 - Query list action configurations in NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/47%20-%20Query%20list%20action%20configurations%20in%20NITRO%20Custom%20Actions.html",
    "title": "Query List Action Configurations In NITRO Custom Actions",
    "text": "Query list action configurations in NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions , NITRO Studio- Workflows / Query list action configurations in NITRO Custom Actions Query list action configurations in NITRO Custom Actions 4825 views 4 min , 24 sec read 1 Applies to: SharePoint Online and On-Premises Introduction Query List action is used to retrieve one or more items of a list as per the defined criteria. For example, get all open Tasks related to a Ticket or get all line items for a Purchase Request. Retrieved list items can then be used in other actions, some examples of this usage are given below: Cancel all open Tasks of the Ticket when Ticket is cancelled Calculate the sum of cost of all line items Create an Asset for each of the line items of a Purchase Request Check if all Tasks related to a Request are &#8216;Closed&#8217; and if so then mark the Request as Completed Custom Actions are used extensively in NITRO based applications and Query List action is indispensable whenever we have to deal with items that are related to each other. Main input for this action is the site and list from which items have to be fetched and the filter criteria for the items. This action is cross-site capable and can fetch items from any site in the site-collection as long as the user executing the action has the required permissions. Below sections explain the various configuration options in more detail. Detailed Description Please note that at most 50 items are fetched for the Query list action due to performance considerations. For end-user based scenarios this should cover most of the cases. Run for Query List action runs in the context of a item and subsequent options depend on this selection. Current Item : It is the item on which user has invoked the custom action from the SharePoint UI. For example, while working with a Purchase Request, we will select this option to get all line items associated with the Purchase Request Lookup : It is the item selected in the lookup column of the item on which user has invoked the custom action from the SharePoint UI. For example, Purchase Request has a lookup column for a Purchase Order item. While invoking custom action on Purchase Request, we can select this lookup column to get items associated with the Purchase Order. That way, we can do operations based on items associated with a lookup list item of the current item Type Whether to get a single item or a collection of items. This depends on the business use case. Query Site Select the site of the list from which items have to be fetched. Items can be fetched from any site within the site collection. Based on site selection, next drop-down for the lists will be populated Query List Select list from which items have to be fetched. Please note that next option depends on this selection. Get Item(s) From Lookup column This option will show a drop-down to select the lookup columns from the list of the item selected in &#8216;Run for&#8217; option. Note that these lookup columns should be for the list selected in the &#8216;Query List&#8217; option above. A lookup column contains (or references) items from another list (lookup list specified in the lookup column settings). This option will read these items from the lookup column of the item selected in the &#8216;Run for&#8217; option: Related Items For this scenario, list selected in the &#8216;Query List&#8217; should have a lookup to the list of the item selected in the &#8216;Run for&#8217; option. For example, Tasks list having a lookup to Request list and action being configured on Request list. This option will fetch all Tasks that are related to Request filtered by the selected view (like only open/closed Tasks as per the view conditions). List View Fetch items from the list selected in the &#8216;Query List&#8217; option based on the selected &#8216;List View&#8217;. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Items will be fetched based on the conditions specified in the View conditions Query Builder Fetch items from the list selected in the &#8216;Query List&#8217; option based on the conditions specified in the Query Builder. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the conditions. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Query Fetch items from the list selected in the &#8216;Query List&#8217; option based on the specified CAML query. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Please refer CAML query syntax from this article . Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the query. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Sample CAML Query: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='RelatedItems' LookupId='TRUE'/&gt; &lt;Value Type='Lookup'&gt;%%[ID|ID])%%&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Allow user to select items If this is checked, then user will be shown the items fetched from the Query List action. User can select one or more items from the grid and selected items will constitute the result of the Query List action. This way, user can refine the result of the Query List action. If this option is not checked then all items returned by the Query list action will be included in result of the action. Continue Custom Action Execution This option can be used to continue or stop the execution of the Custom Action based on whether items are fetched in the Query List action or not. Always : This is the default option and execution of subsequent actions is not dependent on whether any items were fetched in the Query List action or not Only if item(s) found : This option will continue the custom action execution flow only when one or more items are fetched in the Query list action. This is used in common scenario where we are fetching items using Query List action and then there is an Update Item action to update all the items fetched. If there are no items found in Query List then it is not required to run the action to update them. However, note that if there are any other actions after Update Item action then those too will be skipped. So use this option if all subsequent actions should be skipped if no items are found in Query List action Only if no item found : This option will continue the custom action execution flow only when no items are fetched in the Query List action. Consider a Custom Action configured on Task list to set the status of the Task as Closed. And requirement is to Close the related Request of the Task if all Tasks of the Request are closed (Task has a lookup to Request). In this case, after updating the Task status as Closed, we can add a Query List action to check if all Tasks related to the Request are already Closed. Query List action will try to fetch all &#8216;Open&#8217; tasks for the Request and if no such tasks are found then it can continue execution. After this Query List action there will be another task to update the Request status as Closed. And this update action will run only if previous Query List action didn&#8217;t fetch any open Tasks. Note : All subsequent actions will be skipped if execution is stopped at the Query List action. Please refer sample use case of Query list from this article Custom Actions NITRO Studio- Custom Actions NITRO Studio- Workflows About Prakash Arya View all posts by Prakash Arya &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "470",
    "name": "470 - Query list action configurations in NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/470%20-%20Query%20list%20action%20configurations%20in%20NITRO%20Custom%20Actions.html",
    "title": "Query List Action Configurations In NITRO Custom Actions",
    "text": "Query list action configurations in NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions , NITRO Studio- Workflows / Query list action configurations in NITRO Custom Actions Query list action configurations in NITRO Custom Actions 4825 views 4 min , 24 sec read 1 Applies to: SharePoint Online and On-Premises Introduction Query List action is used to retrieve one or more items of a list as per the defined criteria. For example, get all open Tasks related to a Ticket or get all line items for a Purchase Request. Retrieved list items can then be used in other actions, some examples of this usage are given below: Cancel all open Tasks of the Ticket when Ticket is cancelled Calculate the sum of cost of all line items Create an Asset for each of the line items of a Purchase Request Check if all Tasks related to a Request are &#8216;Closed&#8217; and if so then mark the Request as Completed Custom Actions are used extensively in NITRO based applications and Query List action is indispensable whenever we have to deal with items that are related to each other. Main input for this action is the site and list from which items have to be fetched and the filter criteria for the items. This action is cross-site capable and can fetch items from any site in the site-collection as long as the user executing the action has the required permissions. Below sections explain the various configuration options in more detail. Detailed Description Please note that at most 50 items are fetched for the Query list action due to performance considerations. For end-user based scenarios this should cover most of the cases. Run for Query List action runs in the context of a item and subsequent options depend on this selection. Current Item : It is the item on which user has invoked the custom action from the SharePoint UI. For example, while working with a Purchase Request, we will select this option to get all line items associated with the Purchase Request Lookup : It is the item selected in the lookup column of the item on which user has invoked the custom action from the SharePoint UI. For example, Purchase Request has a lookup column for a Purchase Order item. While invoking custom action on Purchase Request, we can select this lookup column to get items associated with the Purchase Order. That way, we can do operations based on items associated with a lookup list item of the current item Type Whether to get a single item or a collection of items. This depends on the business use case. Query Site Select the site of the list from which items have to be fetched. Items can be fetched from any site within the site collection. Based on site selection, next drop-down for the lists will be populated Query List Select list from which items have to be fetched. Please note that next option depends on this selection. Get Item(s) From Lookup column This option will show a drop-down to select the lookup columns from the list of the item selected in &#8216;Run for&#8217; option. Note that these lookup columns should be for the list selected in the &#8216;Query List&#8217; option above. A lookup column contains (or references) items from another list (lookup list specified in the lookup column settings). This option will read these items from the lookup column of the item selected in the &#8216;Run for&#8217; option: Related Items For this scenario, list selected in the &#8216;Query List&#8217; should have a lookup to the list of the item selected in the &#8216;Run for&#8217; option. For example, Tasks list having a lookup to Request list and action being configured on Request list. This option will fetch all Tasks that are related to Request filtered by the selected view (like only open/closed Tasks as per the view conditions). List View Fetch items from the list selected in the &#8216;Query List&#8217; option based on the selected &#8216;List View&#8217;. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Items will be fetched based on the conditions specified in the View conditions Query Builder Fetch items from the list selected in the &#8216;Query List&#8217; option based on the conditions specified in the Query Builder. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the conditions. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Query Fetch items from the list selected in the &#8216;Query List&#8217; option based on the specified CAML query. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Please refer CAML query syntax from this article . Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the query. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Sample CAML Query: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='RelatedItems' LookupId='TRUE'/&gt; &lt;Value Type='Lookup'&gt;%%[ID|ID])%%&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Allow user to select items If this is checked, then user will be shown the items fetched from the Query List action. User can select one or more items from the grid and selected items will constitute the result of the Query List action. This way, user can refine the result of the Query List action. If this option is not checked then all items returned by the Query list action will be included in result of the action. Continue Custom Action Execution This option can be used to continue or stop the execution of the Custom Action based on whether items are fetched in the Query List action or not. Always : This is the default option and execution of subsequent actions is not dependent on whether any items were fetched in the Query List action or not Only if item(s) found : This option will continue the custom action execution flow only when one or more items are fetched in the Query list action. This is used in common scenario where we are fetching items using Query List action and then there is an Update Item action to update all the items fetched. If there are no items found in Query List then it is not required to run the action to update them. However, note that if there are any other actions after Update Item action then those too will be skipped. So use this option if all subsequent actions should be skipped if no items are found in Query List action Only if no item found : This option will continue the custom action execution flow only when no items are fetched in the Query List action. Consider a Custom Action configured on Task list to set the status of the Task as Closed. And requirement is to Close the related Request of the Task if all Tasks of the Request are closed (Task has a lookup to Request). In this case, after updating the Task status as Closed, we can add a Query List action to check if all Tasks related to the Request are already Closed. Query List action will try to fetch all &#8216;Open&#8217; tasks for the Request and if no such tasks are found then it can continue execution. After this Query List action there will be another task to update the Request status as Closed. And this update action will run only if previous Query List action didn&#8217;t fetch any open Tasks. Note : All subsequent actions will be skipped if execution is stopped at the Query List action. Please refer sample use case of Query list from this article Custom Actions NITRO Studio- Custom Actions NITRO Studio- Workflows About Prakash Arya View all posts by Prakash Arya &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "471",
    "name": "471 - How to import Contracts in Crow Canyon Contract Management application_ - Crow Canyon Software Suppo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/471%20-%20How%20to%20import%20Contracts%20in%20Crow%20Canyon%20Contract%20Management%20application_%20-%20Crow%20Canyon%20Software%20Suppo.html",
    "title": "How To Import Contracts In Crow Canyon Contract Management Application Crow Canyon Software Suppo",
    "text": "How to import Contracts in Crow Canyon Contract Management application? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to import Contracts in Crow Canyon Contract Management application? How to import Contracts in Crow Canyon Contract Management application? 1171 views 1 min , 15 sec read 0 Applies to: SharePoint Online and On-Premises Description This article describes how to import Contracts from an Excel Sheet to Contracts list in Contract Management application. This is useful if you have data of existing Contracts in an Excel and want to have it in the application. Prerequisites Before importing the Contracts data, SharePoint list schema should have the possible options that imported Contracts will refer. Lookup Columns Ensure that all possible options exist in the related lists of the Contract. For e.g., if a Contract in Excel has a particular Vendor value, then Vendor item with same name should be present in the Vendor list before importing the Contract. So we need to import all the lookup list items before importing the main Contracts list items. In Contract Management application we have below lookup columns in Contracts list: Vendor Renewal Option Department Choice Columns Ensure that all the possible choice column options are present in the SharePoint list column settings. In Contract Management application we have below choice columns in Contracts list: Type of Contract Payment Terms Currency Type Required Columns Below columns are required columns in the Contracts list, please ensure that the Excel Sheet has some information in these columns. Title Renewal Option Start Date Expiration Date Value Data Import Please refer this article to import the Excel data into the Contracts list. Once all the Contracts are imported, upload the Contracts documents manually in Contract Internal documents list and link them to the corresponding contracts. Approval Process Contract approval can be done before importing the items into SharePoint application. Otherwise, import the Contracts with “Active” status and then initiate the approval process manually for the required contracts. To initiate the approval process manually for multiple Contracts easily, please change the settings of the custom action &#8220;Submit for Renewal&#8221;. You can revert back this setting after initiating the approval as required. Go to Contracts site -&gt; Contracts list -&gt; Custom Actions -&gt; Edit &#8220;Submit for Renewal&#8221; custom action and enable the “List View Ribbon” and check “Enable for multiple items&#8221; as shown below: &nbsp; After above change, navigate to the Contracts list view, select required Contracts and click “Submit for Renewal” action button to initiate the approval process: &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "472",
    "name": "472 - Query list action configurations in NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/472%20-%20Query%20list%20action%20configurations%20in%20NITRO%20Custom%20Actions.html",
    "title": "Query List Action Configurations In NITRO Custom Actions",
    "text": "Query list action configurations in NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions , NITRO Studio- Workflows / Query list action configurations in NITRO Custom Actions Query list action configurations in NITRO Custom Actions 4825 views 4 min , 24 sec read 1 Applies to: SharePoint Online and On-Premises Introduction Query List action is used to retrieve one or more items of a list as per the defined criteria. For example, get all open Tasks related to a Ticket or get all line items for a Purchase Request. Retrieved list items can then be used in other actions, some examples of this usage are given below: Cancel all open Tasks of the Ticket when Ticket is cancelled Calculate the sum of cost of all line items Create an Asset for each of the line items of a Purchase Request Check if all Tasks related to a Request are &#8216;Closed&#8217; and if so then mark the Request as Completed Custom Actions are used extensively in NITRO based applications and Query List action is indispensable whenever we have to deal with items that are related to each other. Main input for this action is the site and list from which items have to be fetched and the filter criteria for the items. This action is cross-site capable and can fetch items from any site in the site-collection as long as the user executing the action has the required permissions. Below sections explain the various configuration options in more detail. Detailed Description Please note that at most 50 items are fetched for the Query list action due to performance considerations. For end-user based scenarios this should cover most of the cases. Run for Query List action runs in the context of a item and subsequent options depend on this selection. Current Item : It is the item on which user has invoked the custom action from the SharePoint UI. For example, while working with a Purchase Request, we will select this option to get all line items associated with the Purchase Request Lookup : It is the item selected in the lookup column of the item on which user has invoked the custom action from the SharePoint UI. For example, Purchase Request has a lookup column for a Purchase Order item. While invoking custom action on Purchase Request, we can select this lookup column to get items associated with the Purchase Order. That way, we can do operations based on items associated with a lookup list item of the current item Type Whether to get a single item or a collection of items. This depends on the business use case. Query Site Select the site of the list from which items have to be fetched. Items can be fetched from any site within the site collection. Based on site selection, next drop-down for the lists will be populated Query List Select list from which items have to be fetched. Please note that next option depends on this selection. Get Item(s) From Lookup column This option will show a drop-down to select the lookup columns from the list of the item selected in &#8216;Run for&#8217; option. Note that these lookup columns should be for the list selected in the &#8216;Query List&#8217; option above. A lookup column contains (or references) items from another list (lookup list specified in the lookup column settings). This option will read these items from the lookup column of the item selected in the &#8216;Run for&#8217; option: Related Items For this scenario, list selected in the &#8216;Query List&#8217; should have a lookup to the list of the item selected in the &#8216;Run for&#8217; option. For example, Tasks list having a lookup to Request list and action being configured on Request list. This option will fetch all Tasks that are related to Request filtered by the selected view (like only open/closed Tasks as per the view conditions). List View Fetch items from the list selected in the &#8216;Query List&#8217; option based on the selected &#8216;List View&#8217;. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Items will be fetched based on the conditions specified in the View conditions Query Builder Fetch items from the list selected in the &#8216;Query List&#8217; option based on the conditions specified in the Query Builder. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the conditions. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Query Fetch items from the list selected in the &#8216;Query List&#8217; option based on the specified CAML query. In this case it is not necessary that there are any lookup column relations between list of the item selected in the &#8216;Run for&#8217; option and the list selected in the &#8216;Query List&#8217; option. Please refer CAML query syntax from this article . Column placeholders from the item selected in the &#8216;Run for&#8217; option can be specified in the query. Placeholder Syntax: %%[Column Display Name|Column Internal Name]%% E.g. %%[ID|ID])%% Sample CAML Query: &lt;View&gt; &lt;Query&gt; &lt;Where&gt; &lt;Eq&gt; &lt;FieldRef Name='RelatedItems' LookupId='TRUE'/&gt; &lt;Value Type='Lookup'&gt;%%[ID|ID])%%&lt;/Value&gt; &lt;/Eq&gt; &lt;/Where&gt; &lt;/Query&gt; &lt;/View&gt; Allow user to select items If this is checked, then user will be shown the items fetched from the Query List action. User can select one or more items from the grid and selected items will constitute the result of the Query List action. This way, user can refine the result of the Query List action. If this option is not checked then all items returned by the Query list action will be included in result of the action. Continue Custom Action Execution This option can be used to continue or stop the execution of the Custom Action based on whether items are fetched in the Query List action or not. Always : This is the default option and execution of subsequent actions is not dependent on whether any items were fetched in the Query List action or not Only if item(s) found : This option will continue the custom action execution flow only when one or more items are fetched in the Query list action. This is used in common scenario where we are fetching items using Query List action and then there is an Update Item action to update all the items fetched. If there are no items found in Query List then it is not required to run the action to update them. However, note that if there are any other actions after Update Item action then those too will be skipped. So use this option if all subsequent actions should be skipped if no items are found in Query List action Only if no item found : This option will continue the custom action execution flow only when no items are fetched in the Query List action. Consider a Custom Action configured on Task list to set the status of the Task as Closed. And requirement is to Close the related Request of the Task if all Tasks of the Request are closed (Task has a lookup to Request). In this case, after updating the Task status as Closed, we can add a Query List action to check if all Tasks related to the Request are already Closed. Query List action will try to fetch all &#8216;Open&#8217; tasks for the Request and if no such tasks are found then it can continue execution. After this Query List action there will be another task to update the Request status as Closed. And this update action will run only if previous Query List action didn&#8217;t fetch any open Tasks. Note : All subsequent actions will be skipped if execution is stopped at the Query List action. Please refer sample use case of Query list from this article Custom Actions NITRO Studio- Custom Actions NITRO Studio- Workflows About Prakash Arya View all posts by Prakash Arya &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "473",
    "name": "473 - Different use cases of Groups in Crow Canyon Service Request (IT Helpdesk_Request Management_Facilit.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/473%20-%20Different%20use%20cases%20of%20Groups%20in%20Crow%20Canyon%20Service%20Request%20%28IT%20Helpdesk_Request%20Management_Facilit.html",
    "title": "Different Use Cases Of Groups In Crow Canyon Service Request (IT Helpdesk Request Management Facilit",
    "text": "Different use cases of Groups in Crow Canyon Service Request (IT Helpdesk/Request Management/Facilities) Application and NITRO Components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Different use cases of Groups in Crow Canyon Service Request (IT Helpdesk/Request Management/Facilities) Application and NITRO Components Different use cases of Groups in Crow Canyon Service Request (IT Helpdesk/Request Management/Facilities) Application and NITRO Components 1074 views 1 min , 15 sec read 0 Applies To SharePoint On-Premises Description This article describes the usage of groups in our Crow Canyon Service Request Applications and other NITRO Components. Crow Canyon Service Request Application &nbsp; S.No Use Case List Column Support 1 Auto Notification to Assigned Team on Assigned Team/Assigned Staff change in Ticket Tickets Assigned Team Assigned Team column allows to select individual users/AD groups/SharePoint groups but auto notifications work only if the selected value is a SharePoint group. Selected SharePoint group can have individual users and AD groups in it. 2 Service Level Agreement: Reassign Ticket to a Team when a Ticket is not responded/closed with in the given time (Response Due/Due Date/Escalation Time) Actions Reassign to Team &#8220;Reassign to Team&#8221; column allows to select to individual users/AD groups/SharePoint groups but auto notifications work only if the selected value is a SharePoint group. Selected SharePoint group can have individual users and AD groups in it. 3 Root Cause/Problem workspace creation and set permissions Configurations Problem Workspace Investigation Team Problem Workspace Investigation Team allows to select a SharePoint group or AD group. SharePoint group can have multiple individual users/ AD groups. Selected group in this column will be granted permissions on Problem workspace during the workspace creation. 4 Portal security settings NA NA Portal security settings are configurable under Portal settings (Portal Settings &#8211;&gt; Security Settings). It supports only SharePoint groups with individual users as members in it. 5 Auto notification to Assigned Staff on Assigned Staff change in Ticket Tickets Assigned Staff &#8220;Assigned Staff&#8221; supports individual/multiple users in our application. Active Directory groups are not supported. NITRO Components S.No NITRO Component Feature Support 1 NITRO Forms Column Permissions Column Validations SharePoint groups that have individual users as members. 2 &#8220;Send Mail&#8221; action in Workflow Manager Recipients SharePoint Groups, AD Groups, SharePoint Groups that have individual users and AD groups as members are supported in recipients. 2 NITRO Email Manager and &#8220;Send Mail&#8221; action in NITRO Custom Actions Recipients SharePoint groups that have individual users as members are supported in recipients. 3 Link Tiles (NITRO Tiles and Arcs) Permissions for Link Tiles SharePoint groups that have individual users are supported. 4 Portal menu links Permissions for Portal Menu bar links SharePoint groups that have individual users are supported. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "474",
    "name": "474 - Upgrade On-Premises Crow Canyon applications to latest NITRO Studio based applications - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/474%20-%20Upgrade%20On-Premises%20Crow%20Canyon%20applications%20to%20latest%20NITRO%20Studio%20based%20applications%20-%20Crow%20Canyon.html",
    "title": "Upgrade On Premises Crow Canyon Applications To Latest NITRO Studio Based Applications Crow Canyon",
    "text": "Upgrade On-Premises Crow Canyon applications to latest NITRO Studio based applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Upgrade / Upgrade On-Premises Crow Canyon applications to latest NITRO Studio based applications Upgrade On-Premises Crow Canyon applications to latest NITRO Studio based applications 3499 views 9 min , 12 sec read 3 Applies To SharePoint On-Premises Description Crow Canyon NITRO Studio has several enhanced capabilities on top of what we have in our older version. There is a first-class forms designer tool, an enhanced Custom Actions tool, various performance improvements, custom list view, advanced printing, and many other improvements and new features. Upgrading to a NITRO Studio based applications involves the following In place upgrade in the same SharePoint site. There is no data migration involved so your existing data remains as is, only the application components that work with that data get updated. The list schema (lists, columns, column settings) largely remain the same. Minor updates are required to some columns without modification of data. Upgrade application settings like Forms, Custom Actions, Print settings etc. Install NITRO Studio solutions as per details in this article. Upgrade &#8220;crowcanyon.cascadedlookup.wsp&#8221;, &#8220;CCSSRWorkflows.wsp&#8221; and &#8220;crowcanyon.timerjobs.wsp&#8221; solutions in the SharePoint server which is a required step before proceeding with the NITRO Upgrade. Downtime: During wsp solutions deployment, there will be a downtime of few minutes. For rest of the configurations, there is no downtime and application can be used with current settings. Solutions to be Added/Removed/Retained as part of this upgrade and related changes in site Solution Name Status Description CCSSREventReceiver.wsp Remove Replaced by NITRO Forms validations: Configure custom validations on &#8220;Tickets&#8221; and &#8220;Change Request&#8221; lists for restricting the close action if item is waiting for approval. Note: This step is required only for upgrading Crow Canyon application sites such as IT Helpdesk, Facilities and Requests Management. CCSSRWorkflows.wsp Retain Continues to provide standard service request business process functionality Note: Applicable to Crow Canyon application sites such as IT Helpdesk, Facilities and Requests Management. CrowCanyon.AdvancedAlerts.wsp Remove Replaced by NITRO Workflow Manager CrowCanyon.AdvancedEmail.wsp Remove Replaced by NITRO Email Manager CrowCanyon.AdvancedForms.wsp Remove Replaced by NITRO Forms CrowCanyon.AdvancedPrint.wsp Remove Replaced by NITRO Print Manager CrowCanyon.BatchTicketEditor.wsp Remove Replaced by NITRO Custom Actions CrowCanyon.CalculatedTable.wsp Remove Replaced by NITRO Reports. This can be removed once dashboard pages are updated to use new NITRO Reports CrowCanyon.CascadedLookup.wsp Remove Replaced by Lookup Settings in NITRO Forms CrowCanyon.ColorChoiceField.wsp Remove Replaced by NITRO Conditional Formatting CrowCanyon.ColorKPI.wsp Remove Replaced by NITRO Conditional Formatting CrowCanyon.CommonUtils.wsp Retain This solution has some common functionality used by other Crow Canyon solutions CrowCanyon.CustomActions.wsp Remove Replaced by NITRO Custom Actions CrowCanyon.Discussion.wsp Remove Will be replaced by standard SharePoint Multiple lines of text column with &#8220;Append Changes to existing text&#8221; option CrowCanyon.FieldManager.wsp Remove Replaced by NITRO Forms. To hide columns on the form, do not add those columns to the forms or configure column permissions as needed CrowCanyon.FormsManager.wsp Remove Replaced by NITRO Forms CrowCanyon.LicenseManager.wsp Remove Provides licensing functionality for Crow Canyon solutions CrowCanyon.ListSearch.wsp Remove Replaced by Crow Canyon List Search. This can be removed once dashboard pages are updated to use new NITRO list search component CrowCanyon.MobileManager.wsp Remove Replaced by NITRO Forms and Power Portal that provide responsive forms functionality CrowCanyon.PurchaseAssetLink.wsp Retain (specific to purchasing application) Used to create Assets from Purchase Order (Applicable only for Non-NITRO Studio based application) CrowCanyon.PurchaseOrderApproverFlow.wsp Remove Replaced by NITRO Workflow Manager and Custom Actions CrowCanyon.TaskManager.wsp Remove Replaced by NITRO Forms Associated Items settings and Linked Items functionality CrowCanyon.TimerJobs.wsp Retain Used for Archival, Recurrence, and SLA features Note: Appliable for only Crow Canyon IT Helpdesk/Facilities/Requests Management/Assets/Equipment/Customer Service application sites. CrowCanyon.URLActions.wsp Remove It was used for creating Change Request or Problem from Ticket form, also invoking Ticket/Assignment Actions, replaced by NITRO Forms &#8220;Allow New Item&#8221; option and NITRO Custom Actions CrowCanyon.WebParts.wsp Remove Used for Tiles and Dials on the home page, current user info filler web part. User info filler will be replaced with NITRO Forms. This can be removed once dashboard pages are updated to use new NITRO Tiles and Dials CrowCanyon.WorkflowManager.wsp Retain This solution is updated with more capabilities and may be upgraded during the process CrowCanyonBranding.wsp Remove Replaced by NITRO Branding EasyTabParts.wsp Remove It is used in Application Administration for tabs interface. NITRO has a new tabs component and this can be removed once new application administration page is created. CrowCanyon.ConfigurablePortal.wsp Remove Replaced by NITRO Power Portal Package Information Component Description NITRO Upgrade Tool Used in upgrading Forms, List Search, Reports, Home Tiles, Home Arcs, Advanced Email and Knowledge Base page Crow Canyon Discussion Data Handler Used to migrate Crow Canyon Discussion column data to multiple lines of rich text column Field Data Copier Used in copying data from one column to other Color Choice converter Used in converting Crow Canyon Color choice to SharePoint choice columns Crow Canyon Solutions CCSSRWorkflows.wsp, crowcanyon.cascadedlookup.wsp and crowcanyon.timerjobs.wsp Please contact sharepointsupport@crowcanyon.com for the package. Summary of Steps &#8211; Upgrade solutions &#8211; Install NITRO Studio &#8211; Activate NITRO Studio &#8211; Run NITRO Upgrade tool &#8211; Additional Processing for Custom Columns (Color choice and Discussion) &#8211; Manual Configurations &#8211; Remove old solutions Detailed Steps Upgrade Solutions Upgrade crowcanyon.cascadedlookup.wsp and crowcanyon.timerjobs.wsp in the SharePoint server which is a required step before proceeding with the NITRO Upgrade. For crowcanyon.cascadedlookup.wsp, please refer https://www.crowcanyon.help/article/381/ For crowcanyon.timerjobs.wsp, please refer https://www.crowcanyon.help/article/418/ Also for Crow Canyon Service Request applications like IT Helpdesk, Request Management, Facilities Management, Customer Service modules, please upgrade CCSSRWorkflows.wsp solution. Refer https://www.crowcanyon.help/article/312/ . Please note that during the CCSSRWorkflows.wsp solution update as defined in the above article, Service Request application will not process the Tickets/Requests/Work Orders/Emails. Install NITRO Studio Install NITRO Studio solutions referring below links: https://www.crowcanyon.help/article/448/#Step1 https://www.crowcanyon.help/article/448/#Step2 https://www.crowcanyon.help/article/448/#Step3 Activate NITRO Studio After activating NITRO Studio feature for the site collection, go to Application site (Service Request Application site) &#8211;&gt; site settings &#8211;&gt; Manage Site Features &#8211;&gt; deactivate below features Crow Canyon Advanced Forms Crow Canyon NITRO Forms Create Library Crow Canyon Custom Actions Crow Canyon Create Library Go to Crow Canyon NITRO Studio &#8211;&gt; click on &#8220;Activate&#8221; button in NITRO Studio for the application site. Run NITRO Upgrade Tool This tool helps automating in-place upgrade from Crow Canyon older version components to latest &#8220;NITRO Studio&#8221; version. Components that are considered in automatic upgrade using the tool: S.No. Non-NITRO Component NITRO Component 1 Crow Canyon Forms Manager Crow Canyon NITRO Forms 2 Crow Canyon Calculated Table Reports Crow Canyon NITRO Reports 3 Home Tiles, Arcs NITRO Tiles and Arcs 4 Crow Canyon List Search NITRO List Search 5 Crow Canyon Advanced Email Crow Canyon Email Manager 6 Knowledge Base Search page New Knowledge Base search page 1. Forms Manager to NITRO Forms Steps: This step is required if the forms are using Forms Manager solution. If the forms are already using advanced forms, please ignore this step. Enter &#8220;Site URL&#8221; in &#8220;Application Site URL&#8221; text box and click on &#8220;Populate Lists&#8221; button. This will show all available lists in the site. Open &#8220;NITRO Forms&#8221; tab in tool, Check &#8220;All Forms Manager Lists&#8221; checkbox and click on &#8220;Forms Manager TO NITRO Forms&#8221; button. Tool will upgrade all the lists form settings to NITRO Forms, however, it will not publish any forms. &#8220;Process Logs&#8221; will show the information including required &#8220;Manual Steps&#8221; if any conflicts found. Go to every list that has Forms Manager configurations, open NITRO Forms, resolve conflicts based on &#8220;Process Log&#8221; if any and publish. Please note that we need publish every list even though there is no conflict as per Process Log. Note: In case if NITRO Forms are not configured due to exceptions/errors we can rerun the tool. We can run the tool for selective lists if required by selecting the required individual lists or we can also select &#8220;All Forms Manager Lists&#8221; and check &#8220;Overwrite NITRO Forms Settings&#8221; option. 2. Crow Canyon Calculated Table Reports to NITRO Reports Calculated Table has two different web part components and both types of components will be upgraded automatically. Report Center Calculated Table (Reports configured in Workspaces, site Pages and Web part pages) Steps: Enter &#8220;Site URL&#8221; in &#8220;Application Site URL&#8221; text box and click on &#8220;Populate Lists&#8221; button. This will show all available libraries in the site in &#8220;NITRO Report&#8221; tab. Upgrade &#8220;Report Center&#8221; web part Select &#8220;Report Center&#8221; and hit &#8220;Upgrade Report Center&#8221; as shown in below screenshot 1 This will create a new page in the Workspaces document library and will configure the &#8220;NITRO Report Center&#8221; web part and will replace &#8220;Report Center&#8221; top link bar with new Page. Upgrade &#8220;Calculated Table&#8221; web part (Reports configured in Workspaces, site Pages and Web part pages) Select all the document libraries like Workspaces, Site Pages etc. where calculated reports are configured and then click on &#8220;Upgrade Report Dashboard&#8221; button as shown in screenshot 2. This step will update the Crow Canyon web parts to NITRO Reports. Screenshot 1: Screenshot 2: 3. Home Tiles, Arcs This will update the Home Tiles, Dials available in the workspace pages to NITRO Tiles and Dials app. Steps: Enter &#8220;Site URL&#8221; in &#8220;Application Site URL” text box and click on &#8220;Populate Lists&#8221; button. This will show all available libraries in the site in &#8220;Tiles and Arc&#8221; tab in the tool. Select the document libraries like Workspaces, Site Pages etc. where Home Tiles, Home Arcs are configured and hit &#8220;Upgrade Tiles and Arc Pages&#8221; button as shown below This will upgrade the web parts to NITRO Tiles and Dials. 4. List Search This will update the Crow Canyon List Search web parts present in the workspace pages to NITRO List Search app. Steps: Enter &#8220;Site URL&#8221; in &#8220;Application Site URL&#8221; text box and click on &#8220;Populate Lists&#8221; button. This will show all available libraries in the site in &#8220;List Search&#8221; tab in the tool. Select the document libraries where Crow Canyon list search web part is present and click on &#8220;Upgrade list Search Pages&#8221; as shown below. This will convert all Crow Canyon list search web parts to NITRO List Search components. 5. Advanced Email This will update the Crow Canyon Advanced Email settings present for the lists to NITRO Email Manager App. Steps: Enter &#8220;Site URL&#8221; in &#8220;Application Site URL&#8221; text box and click on &#8220;Populate Lists&#8221; button. This will show all available libraries in the site in &#8220;Email Manager&#8221; tab in the tool. Select the lists where Crow Canyon Advanced Email settings exist and click on &#8220;Upgrade E-mail Manager&#8221; button as shown below. This will configure NITRO Email Manager Settings for the selected lists. Note: There is no need to consider/select child list like Email Tickets. 6. Knowledge Base Search Page This will update the Crow Canyon KB Group web part present in the workspace pages to NITRO Knowledge base web parts. Steps: Specify full URL of the existing Knowledge Base Page as shown below where Crow Canyon Knowledge base web part is used and click on &#8220;Upgrade KB Search Pages&#8221; as shown below This will convert all Crow Canyon KB Group web parts to NITRO Knowledge Base web part. Additional Processing for Custom Columns (Color choice and Discussion) Crow Canyon Color Choice: Convert all columns of type &#8220;Crow Canyon Color Choice&#8221; field to regular choice using &#8220;CrowCanyon.ConvertToSPFiledTypes.exe&#8221; tool. Before actually converting them, take a screenshot of the column settings which will be used in the configuration of conditional formatting in NITRO Studio. Note: In our standard application sites we have &#8220;Priority&#8221; Color Choice field in Tickets, Archived Tickets, Change Requests, Problems (Root Cause Tickets) and Announcements lists. Configure the color using NITRO Conditional formatting feature referring to the existing color coding in the screenshot. Crow Canyon Discussion column: Crow Canyon Discussion columns need to be converted to multiple lines of text column with version enabled. To perform this, first we will create a temporary rich text column in the list and copy the work log data to this column using CrowCanyon.DiscussionDataHandler.exe tool as shown below. With the above step, discussion column data gets copied to temporary rich text column in the list items. Existing Work log (discussion column) need to be deleted and recreated with same internal name with multiple lines of text column in the list. Now use FieldDataCopier.exe to copy the data from temporary rich text column to Work log multiple lines of text column as shown below. After the above step, validate the Work Log column data and then delete the temporary column created for this process. Out of the box, we have discussion column in Tickets. Archived Tickets, Change Requests, Archived Change Requests, Problems and Recurring Ticket templates in service request application. Manual Configurations Configure custom validations on Tickets and Change Request lists to restrict closing the item if it is awaiting approval. Remove CCS SR Event Receiver solution Go to Tickets list &#8211;&gt; NITRO Forms &#8211;&gt; create a column validation on Request Status column as shown below Crow Canyon Advanced Alerts Configure Workflow Manager Send mail actions for alerts configured using older Advanced Alerts solution. Remove old Advanced Alerts solution Publish NITRO Forms: If the forms are configured using older Forms Manager solution, then this step can be ignored as it is already taken care above using NITRO Upgrade tool. If the forms are configured using &#8220;Crow Canyon Advanced Forms&#8221; solution, then open the NITRO forms for all those lists and publish. Crow Canyon Associated item columns need to be recreated as multiple lines of rich text column with same internal name. Configure Print template on standard lists like &#8220;Purchase Request&#8221;, &#8220;Purchase Order&#8221; lists. We do not have out of the box print templates for Service Request Application. Configure standard Batch Ticket Editor Features on Tickets list using NITRO Custom Actions Convert any Crow Canyon Cascaded Lookup type of column to regular lookup column Edit the existing cascaded lookup column &#8211;&gt; click on advanced settings &#8211;&gt; click on Revert to SharePoint lookup and click on ok as shown below. If the JSON settings are available in the cascaded lookup settings as shown below, reconfigure the auto fill settings using the lookup settings in NITRO Forms. If the Color KPI solution is in use, configure similar settings using NITRO Conditional Formatting and remove old solution If there are Ticket and Assignment actions in use (Site Contents &#8211;&gt; Actions list), configure them using NITRO Custom Actions feature Configure the branding using the NITRO branding. Remove the application administration, remove the branding and re-apply using NITRO Branding app. Install/Upgrade Configurable Portal. Go to Portal site &#8211;&gt; Site settings &#8211;&gt; Manage site features &#8211;&gt; deactivate &#8220;Crow Canyon Configurable Portal&#8221; feature. Go to Crow Canyon Power Portal app &#8211;&gt; click on Upgrade button in the Power portal that updates existing configurable Portal to Power Portal. Important Note: All the above configurations will be done for lists that are part of Crow Canyon standard application. For any custom lists, either customer can do the required configurations or Crow Canyon can do it as part of professional services. This applies to any custom pages created by customer that are not part of standard application. After the above process, below are the application site features to be deactivated CCS SR Event Receiver 3.6 Crow Canyon Batch Ticket Editor Crow Canyon Branding Feature Crow Canyon Conditional Formatting Crow Canyon Mobile Manager CrowCanyon AdvancedEmail CrowCanyon Field Manager Go to root site &#8211;&gt; site settings &#8211;&gt; site collection features &#8211;&gt; deactivate below site collection features Crow Canyon Associated items Crow Canyon Forms Manager Crow Canyon List Search Crow Canyon URL Actions CrowCanyon Calculated Table CrowCanyon Systems WebParts Go to root site &#8211;&gt; Site Settings &#8211;&gt; Web Designer Galleries &#8211;&gt; Web Parts &#8211;&gt; Delete all CrowCanyon web parts present in this page. Remove old solutions Note: Please validate the upgraded application and make sure everything is working as expected before following this section. Retract the solutions that are marked as Remove in the Table of this article. After all the deprecated Crow Canyon solutions are removed, we need to remove Forms manager Safe Control line in the web application. For details, please refer Note #2 from https://www.crowcanyon.help/article/310/ Also, please ensure Ribbon.ascx file is present in C:\\Program Files\\Common Files\\microsoft shared\\Web Server Extensions\\15\\TEMPLATE\\CONTROLTEMPLATES path. If not, please contact Crow Canyon to get this file and upload at the above location. NITROUpgrade NITRO Studio- Upgrade About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "476",
    "name": "476 - How to configure Crow Canyon Mail App for Outlook O365_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/476%20-%20How%20to%20configure%20Crow%20Canyon%20Mail%20App%20for%20Outlook%20O365_.html",
    "title": "How To Configure Crow Canyon Mail App For Outlook O365",
    "text": "How to configure Crow Canyon Mail App for Outlook O365? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Crow Canyon Mail App for Outlook O365? How to configure Crow Canyon Mail App for Outlook O365? 1490 views 1 min , 33 sec read 0 Applies to: SharePoint Online Description Crow Canyon Mail App enables users to access Crow Canyon Service Request application from within their Outlook application. Since Outlook is used extensively and is always open for most users, they can work with SharePoint based Service Request without having to switch to another application. Mail App works both in desktop-based Outlook and also Outlook Web Access from the browser. Users can submit new Tickets based on an email content or can specify their own text. Users can also see the Tickets that they have submitted earlier. If your organization has multiple instances of Crow Canyon Service Request application, then Mail App gives an option in UI to select the service area for submitting and viewing Tickets. Please see the bottom of this article for some images of the Mail App. This article describes the steps to configure Crow Canyon Mail App for Outlook. Permissions An account that has Microsoft Exchange administrator rights Contribute permissions on App Catalog site to add Crow Canyon Mail App Package Information Please contact Crow Canyon support to get the installation package. Package &#8220;CCSMailApp.zip&#8221; contains two files described in below table. File Name Usage CCSMailConversion.app Upload to SharePoint app catalog as described in #2 in Detailed Instructions CrowCanyon.ServiceRequest.xml Upload during the Installation of add-in in O365 Exchange Admin Center as described in #1 in Detailed Instructions Summary of Steps Install Mail App add-in O365 Exchange Admin Center Install the the Mail App (Add-in) in SharePoint site Contact Crow Canyon Support to enable Mail App for your application Detailed Instructions 1. Install Mail App add-in O365 Exchange Admin Center Login to Office 365 Exchange Admin Center using the Exchange Admin account Navigate to https://admin.microsoft.com/AdminPortal/Home#/Settings/ServicesAndAddIns URL Click on “Click on Deploy Add-in” button: Choose &#8220;manifest file (.xml) option, browse the file (CrowCanyon.ServiceRequest.xml, part of the package) and click Next, it will navigate to “Crow Canyon Mail App” screen: Choose “Everyone” under &#8216;Specify who has access&#8217; and click on “(View Options)”: Choose “Available” under Edit deployment method, click on “Deploy now”: Note: It takes around 24 hours for the add-in to be available for the users after above steps. 2. Install the the Mail App (Add-in) in SharePoint site Upload &#8220;CCSMailConversion.app&#8221; from the installation package to to the tenant App Catalog of your SharePoint tenancy. Refer instructions from this article. Install this App in the root site of the site collection where Crow Canyon Service Request application is installed. 3. Contact Crow Canyon Support to enable Mail App for your application Mail App requires some configurations on the server side. Once above steps are completed, please send an email to support with details of your SharePoint site and email domain name to enable the App for your service request. Mail App screenshots About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "477",
    "name": "477 - Generate a custom unique ID for SharePoint list items.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/477%20-%20Generate%20a%20custom%20unique%20ID%20for%20SharePoint%20list%20items.html",
    "title": "Generate A Custom Unique ID For SharePoint List Items",
    "text": "Generate a custom unique ID for SharePoint list items - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Generate a custom unique ID for SharePoint list items Generate a custom unique ID for SharePoint list items 5397 views 1 min , 40 sec read 1 Applies to: SharePoint Online and On-Premises Description SharePoint generates a unique ID for each list item. This Id is numeric that is incremented for each new item. For many business scenarios, it is required to have an alpha-numeric Id. For example, for a Purchase Order it could be PO-&lt;YEAR&gt;-&lt;Id&gt;. Here the Id contains a fixed prefix PO, 4 digit running year and a unique Id. This article describes the steps to generate the custom unique Id for each item in required format. This process uses the SharePoint generated numeric Id as part of the alpha-numeric Id so that it is guaranteed to be unique for each item. These steps take the example where Id is based on values in the list item column &#8216;Department&#8217;, current year (as per item creation time) and the SharePoint generated item Id. Example: &#8220;IT/2019/00001&#8221; &#8220;IT&#8221; represents the Department &#8220;2019&#8221; represents the current year &#8220;0000&#8221; is the prefix for the Item Id &#8220;1&#8221; is the SharePoint generated unique item Id Summary of Steps Configure Execute Script action in Custom Action This action generates the unique ID Invoke custom action in NITRO form Detailed Steps 1. Configure Execute script action in Custom Action to generate unique Id Add a new custom action with an execute script action as shown below. This action generates the unique custom Id for the Purchase Request based on Department Id, Current Year and SharePoint generated unique Item Id. Note: Below action will work for new items. For existing items you can configure a similar action with added conditions so that it is visible only for older items where unique Id is not set. Additional conditions will be to check that &#8220;Purchase Request #&#8221; is empty. More conditions can be added as required such as based on status. Enable this custom action for multiple items by selecting option &#8220;List View Ribbon&#8221; and &#8220;Enable for multiple items&#8221; in the custom action configuration. Custom Action Execute Script action Script if(!currentItem){ window.ccs_g_Utils.writeLog(\"Error accessing the list item\"); functionCallback(true, \"Error accessing the list item\"); return; } var PRNumberFieldInternalName = \"PRNumber\"; var itemCreated = currentItem.get_item(\"Created\"); var departmentCode = currentItem.get_item(\"DeptCode\"); var itemId = currentItem.get_id(); var PRID = departmentCode + \"/\" + (new Date(itemCreated + \"\")).getFullYear() + \"/\" + (\"00000\" + itemId).slice(-5); if (listColumnsInfo.hasOwnProperty(PRNumberFieldInternalName) &amp;&amp; listColumnsInfo[PRNumberFieldInternalName].FieldTypeKind == SP.FieldType.text) { currentItem.set_item(PRNumberFieldInternalName, PRID); currentItem.update(); spContext.executeQueryAsync( function () { functionCallback(); }, function (sender, msg) { functionCallback(true, msg.get_message()); }); } else { functionCallback(true, \"'PRNumber' column does not exist or is not a text type of column\"); } Note: In the above script, modify the “PRNumber” with internal name of the “Purchase Request #” column for which you want to update with unique generate item Id Modify the “DeptCode” with internal name of the Department column 2. Invoke custom action in NITRO form Go to the Purchase Request list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Drag and drop the &#8216;Submit Action&#8217; button and select the custom action configured above (“Generate Purchase Request Id”) About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "479",
    "name": "479 - How to configure column validations in NITRO forms_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/479%20-%20How%20to%20configure%20column%20validations%20in%20NITRO%20forms_.html",
    "title": "How To Configure Column Validations In NITRO Forms",
    "text": "How to configure column validations in NITRO forms? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure column validations in NITRO forms? How to configure column validations in NITRO forms? 1425 views Less than a minute 2 Applies to: SharePoint Online and SharePoint On-Premises Description NITRO Forms has a feature for validating column values. It is used to enforce business rules on the data that is being submitted by users. This article describes column value validation based on the data input in another column. For more details about column validation feature, please refer this article . Detailed Steps Sample scenario Form has a column for selecting the Department. It has another column &#8216;Project Manager&#8217;. It is required that a value should be specified for &#8216;Project Manager&#8217; column if selected department is &#8220;IT&#8221; or &#8220;HR&#8221;. Sample Configuration Navigate to the &#8216;List Setting&#8217; of required list -&gt; click Crow Canyon NITRO Forms link -&gt; Click on &#8216;Project Manager&#8217; column in the designer (column for which validations have to be configured) -&gt; Select &#8216;Validations&#8217; in Column Settings pane on the right. Configure the column validation as shown below, click &#8216;Apply&#8217; button and then Publish the forms. Please note that you may have to refresh the forms a couple of times as NITRO Forms settings may be cached. In above image, conditions can be changed as per business scenario. Different operators are available for condition value check and also you can use &#8216;ALL&#8217; / &#8216;ANY&#8217; to specify if all of the conditions should be met or any for the validation to take effect. &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "48",
    "name": "48 - Revert NITRO Forms of a list to a previously published settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/48%20-%20Revert%20NITRO%20Forms%20of%20a%20list%20to%20a%20previously%20published%20settings.html",
    "title": "Revert NITRO Forms Of A List To A Previously Published Settings",
    "text": "Revert NITRO Forms of a list to a previously published settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Revert NITRO Forms of a list to a previously published settings Revert NITRO Forms of a list to a previously published settings 1299 views 1 min , 28 sec read 4 Applies To : SharePoint Online and SharePoint On-Premises Description NITRO Forms maintain two sets of settings: Draft and Published. When NITRO form settings are saved in designer (&#8216;Save&#8217; button in the designer toolbar), these are saved as draft version and are not automatically applied to the list. These settings are applied to the list only when the settings are published (&#8216;Publish&#8217; button). Publish action overwrites the existing settings and applies the new form settings for the list. NITRO forms settings are saved in files in &#8220;Site Assets&#8221; document library of the list. Every Save/Publish action creates a new version of the corresponding settings file. If there is a need to go back to a previous version, we can restore the required file version from the version history of the corresponding settings file. Steps In this article we have taken Tickets list as an example, same process can be applied for any list using NITRO Forms. Determine the Id of the list: Open the site in Chrome browser -&gt; Go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Note the list id in the URL, refer example below: https://contoso.sharepoint.com/sites/nitro1/ITPremium/_layouts/15/listedit.aspx?List= 00907660-856b-4cb2-8ac7-3fd695dc2f0c Navigate to the NITRO Forms settings file folder: Go to &#8216;Site Assets&#8217; document library from the site contents page and then navigate to folder &#8220;CCS&#8221; and then &#8220;Forms&#8221; folder inside it Search for files with name of the list Id noted in above step. There will be two files: File with name as the list Id only: This is the file that has the current published settings and these are the settings that are used by the list forms File with name as the list Id appended with &#8220;_draft&#8221;: This is the draft settings file. If you have saved the settings in designer but not yet published, then these will be different from published settings. If settings are published then contents in this file will be same as the published file Restore the settings file version: Click on the ECB (3 dots next to file name as shown in UI below) to bring up the menu Click &#8216;Version History&#8217; option to bring up the file versions Select the required version and click &#8216;Restore&#8217; as shown below This process can be done for both draft and the published file Open the NITRO Forms designer for the list and publish the settings again to clear the cache new settings to take effect &nbsp; Images below show how to restore the immediate previous version to current settings of NITRO Forms: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "482",
    "name": "482 - Revert NITRO Forms of a list to a previously published settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/482%20-%20Revert%20NITRO%20Forms%20of%20a%20list%20to%20a%20previously%20published%20settings.html",
    "title": "Revert NITRO Forms Of A List To A Previously Published Settings",
    "text": "Revert NITRO Forms of a list to a previously published settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Revert NITRO Forms of a list to a previously published settings Revert NITRO Forms of a list to a previously published settings 1299 views 1 min , 28 sec read 4 Applies To : SharePoint Online and SharePoint On-Premises Description NITRO Forms maintain two sets of settings: Draft and Published. When NITRO form settings are saved in designer (&#8216;Save&#8217; button in the designer toolbar), these are saved as draft version and are not automatically applied to the list. These settings are applied to the list only when the settings are published (&#8216;Publish&#8217; button). Publish action overwrites the existing settings and applies the new form settings for the list. NITRO forms settings are saved in files in &#8220;Site Assets&#8221; document library of the list. Every Save/Publish action creates a new version of the corresponding settings file. If there is a need to go back to a previous version, we can restore the required file version from the version history of the corresponding settings file. Steps In this article we have taken Tickets list as an example, same process can be applied for any list using NITRO Forms. Determine the Id of the list: Open the site in Chrome browser -&gt; Go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Note the list id in the URL, refer example below: https://contoso.sharepoint.com/sites/nitro1/ITPremium/_layouts/15/listedit.aspx?List= 00907660-856b-4cb2-8ac7-3fd695dc2f0c Navigate to the NITRO Forms settings file folder: Go to &#8216;Site Assets&#8217; document library from the site contents page and then navigate to folder &#8220;CCS&#8221; and then &#8220;Forms&#8221; folder inside it Search for files with name of the list Id noted in above step. There will be two files: File with name as the list Id only: This is the file that has the current published settings and these are the settings that are used by the list forms File with name as the list Id appended with &#8220;_draft&#8221;: This is the draft settings file. If you have saved the settings in designer but not yet published, then these will be different from published settings. If settings are published then contents in this file will be same as the published file Restore the settings file version: Click on the ECB (3 dots next to file name as shown in UI below) to bring up the menu Click &#8216;Version History&#8217; option to bring up the file versions Select the required version and click &#8216;Restore&#8217; as shown below This process can be done for both draft and the published file Open the NITRO Forms designer for the list and publish the settings again to clear the cache new settings to take effect &nbsp; Images below show how to restore the immediate previous version to current settings of NITRO Forms: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "483",
    "name": "483 - Auto-fill logged in user in NITRO Forms on a column value change.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/483%20-%20Auto-fill%20logged%20in%20user%20in%20NITRO%20Forms%20on%20a%20column%20value%20change.html",
    "title": "Auto Fill Logged In User In NITRO Forms On A Column Value Change",
    "text": "Auto-fill logged in user in NITRO Forms on a column value change - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto-fill logged in user in NITRO Forms on a column value change Auto-fill logged in user in NITRO Forms on a column value change 1569 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-Premises Description NITRO Forms has a feature to auto-fill logged in user information in the columns on the form. For example, we can auto-fill the user&#8217;s name, email, department etc. when submitting a request. In some scenarios, there is a requirement to fill the logged-in user in a &#8220;Person or Group&#8221; column when a specific value is entered in a column on the form. In this case, we can use Form Event Actions feature of the NITRO forms. Instructions This article describes Form Event action configurations so that whenever &#8220;Status&#8221; column value is set to &#8216;Active&#8217; and &#8220;Project Manager&#8221; column value is empty, then fill the current logged in user in the &#8220;Project Manager&#8221; column. You can use similar settings with different columns and values as per your business scenario. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO forms -&gt; Advanced Settings pane on the left -&gt; Form Event Actions and configure as shown below. After configuring the Form Event actions publish the NITRO Forms. Please note that you may have to refresh the forms a couple of times as NITRO Forms settings may be cached. Script: return _spPageContextInfo.userEmail; &nbsp; Note: Please ensure that sure that the &#8220;Person Or Group&#8221; column is added to a tab/section on the form. If this column should not be shown to user then we can hide it using column permission configurations in NITRO Forms. You can also refer this article for some sample configurations using form event actions feature in NITRO Forms. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "484",
    "name": "484 - Validation on date column value relative to today’s date.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/484%20-%20Validation%20on%20date%20column%20value%20relative%20to%20today%E2%80%99s%20date.html",
    "title": "Validation On Date Column Value Relative To Today’s Date",
    "text": "Validation on date column value relative to today’s date - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Validation on date column value relative to today&#8217;s date Validation on date column value relative to today&#8217;s date 1656 views 1 min , 27 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description NITRO Forms allow configuration of validations on form data. This can be based on data format (like email, phone etc.), length of entered data, specific values etc. Also, validations can be conditional based on data in other columns and even based on membership of logged-in user. In some cases advanced validations may be required and these can be configured by adding the required script on the form. This article describes the steps to configure validation on a date column such that entered date should be at least 14 days from today (this validation is required only on the new item form). Detailed Steps Go to Site Content -&gt; Navigate to the required list -&gt; Click on List Settings -&gt; Open Crow Canyon NITRO Forms. In NITRO Forms designer left pane, click &#8216;Layouts and Theme&#8217; section. Check &#8220;Hide Save Button” option and set “Bottom Action Panel Button Align” option to &#8216;Right&#8217; as shown below: &nbsp; Note : Form shown above is using separate forms for New / Edit / Display. This validation can be configured with common form as well by adding two separate submit action buttons. Configure permissions on one submit action for &#8216;ID&#8217; as &#8220;is empty&#8221; and this button. With this condition, it will only be shown for new item form and validation script will be configured for this button as described below. For the other submit button, configure permissions for &#8216;ID&#8217; as &#8220;is not empty&#8221; and this button will not have the script since it will be shown for edit and display of the items. &nbsp; Next, drag and drop Submit Action from “Actions” menu in the left panel: Click Submit Action button to show its properties in the right panel. Configure the button title, icon and validation script in the right panel. Date column validation script: var varDate = new Date(); varDate.setDate(varDate.getDate() + 14); var dueDate = formContext.fetchColumnValueUI(\"DueDate\"); var validationPassed = false; if (dueDate) { if (typeof dueDate == \"string\") { dueDate = dueDate.replace(/-/g, \" \"); } validationPassed = Date.parse(dueDate) &gt;= Date.parse(new Date(varDate.toDateString())); } if(validationPassed == false){ functionCallback(true, \"Due Date cannot be less than 14 days from today\"); return; } functionCallback(); Note : In the above script, &#8220;DueDate&#8221; is the internal name of the Date and Time column on the form for which validation is configured. Replace it with the internal name of the column on your form. &nbsp; After adding the script, click Apply as shown above and publish the NITRO Forms. Note that you may have to refresh the actual NITRO form a couple of times as NITRO forms settings are cached to improve performance. &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "485",
    "name": "485 - How to configure permissions for KB articles in Crow Canyon Applications_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/485%20-%20How%20to%20configure%20permissions%20for%20KB%20articles%20in%20Crow%20Canyon%20Applications_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Configure Permissions For KB Articles In Crow Canyon Applications Crow Canyon Software Sup",
    "text": "How to configure permissions for KB articles in Crow Canyon Applications? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure permissions for KB articles in Crow Canyon Applications? How to configure permissions for KB articles in Crow Canyon Applications? 1605 views 1 min , 37 sec read 4 Applies to : SharePoint Online and SharePoint On-Premises Description Knowledge Base (KB) is a repository of information to solve the frequently occurring issues. It also has data from resolved Tickets so that users can refer this information if they are facing the problem that has been solved before. KB articles are organized by Category and Issue Type. KB articles are available in backend site for the staff users and also in portal site for the end users. By default all KB articles are available in portal site for end users. If there is a requirement to have certain KB articles only for staff then these can be restricted from showing in the portal site. For this, item level permissions have to be configured on KB articles. This article describes the steps to configure workflows to manage permissions for Knowledge Base articles using NITRO Workflow Manager component. Instructions Standard application has a column &#8220;Target Audience&#8221; in Knowledge Base list. This article describes permission configurations based on this column. &#8220;Target Audience&#8221; column has two choice options: &#8220;Internal Staff&#8221; and &#8220;External&#8221;. If &#8220;Target Audience&#8221; is set to &#8220;Internal&#8221; for a KB article then it should be shown only to staff users in backend site. In this case we can grant permissions only to the internal staff so that such KBs won&#8217;t appear in portal for end users. If &#8220;Target Audience&#8221; column value is empty or External then no change is required in the permissions and such KBs will be shown to both staff and end users. Note: In this sample article we have configured workflows based on &#8220;Target Audience&#8221; column, we can use similar settings for some other column as required. Workflows Configuration Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and configure the workflow as shown below: Workflow 1: Item Created &#8211; Knowledge Base list If KB is marked as &#8220;Internal Staff&#8221;, then this workflow will grant permissions to KB article only to specific groups: Action: Manage Permissions Configure manage permissions action as shown below: Note: We can select required permission level for the groups based on our business scenario. Workflow 2: Item Updated &#8211; Knowledge Base list Configure workflow on item update event as shown below. This workflow will updates the permissions when the &#8220;Target Audience&#8221; column value is changed: Action 1: Manage Permissions to give access only to staff This action will remove permissions for all users and grant permissions only to the specified groups when &#8220;Target Audience&#8221; column value is changed from &#8220;External&#8221; to &#8220;Internal Staff&#8221;: Note: We can select the required permission level for the groups based on the business scenario. Action 2: Manage Permissions to give access to all users This action will remove unique permissions and revert back to standard permissions as per the KB list so that all users have access to the article. This is done when the &#8220;Target Audience&#8221; column value is changed from &#8220;Internal Staff&#8221; to &#8220;External&#8221;: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "486",
    "name": "486 - Include logged-in user details in mails sent from Crow Canyon Email Manager - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/486%20-%20Include%20logged-in%20user%20details%20in%20mails%20sent%20from%20Crow%20Canyon%20Email%20Manager%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "Include Logged In User Details In Mails Sent From Crow Canyon Email Manager Crow Canyon Software S",
    "text": "Include logged-in user details in mails sent from Crow Canyon Email Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Include logged-in user details in mails sent from Crow Canyon Email Manager Include logged-in user details in mails sent from Crow Canyon Email Manager 1067 views Less than a minute 0 Applies to: SharePoint Online and SharePoint On-Premises Description Email Manager component of NITRO is used to send emails from within the SharePoint. It provides mail template feature so that emails can be quickly composed with details of the list item for which email is being sent. It is also possible to include details of the logged-in user sending the mail like his/her name, phone and email address. This is useful since logged-in user is the email sender and may want to include his details automatically rather than typing the same information for every mail. Instructions To include the logged-in user details in the Mail Template, go to the Tickets list (list for which Email Manager is configured) -&gt; List Settings -&gt; Crow Canyon Mail Templates -&gt; Edit the mail template and add place holders under section &#8220;Logged-in User Info&#8221; to the mail template (e.g. “Display Name” as shown below) and save the settings: Once this template is saved, it will start populating the logged-in user information when it is used for sending the mail. If required, we can set a mail template as the &#8220;Default Mail Template&#8221;. Please refer image below: &nbsp; Note: If &#8220;Logged-in User Info&#8221; is not shown in Mail Templates configuration page then update the NITRO for the site: Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Click on &#8220;UPDATE THE SITE&#8221;. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "49",
    "name": "49 - Configure a report to show Tickets closed within SLA.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/49%20-%20Configure%20a%20report%20to%20show%20Tickets%20closed%20within%20SLA.html",
    "title": "Configure A Report To Show Tickets Closed Within SLA",
    "text": "Configure a report to show Tickets closed within SLA - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a report to show Tickets closed within SLA Configure a report to show Tickets closed within SLA 1158 views Less than a minute 0 Applies to:&nbsp; SharePoint Online and SharePoint On-Premises Description Tickets list has a &#8216;Due Date&#8217; column to capture the date by which it should be closed. This is usually set as per the configured&nbsp;SLAs and can also be set manually.&nbsp;This article describes steps to configure a report to show count of Tickets closed within SLA (&#8216;Not Overdue&#8217;) and those that were closed after due date (&#8216;Overdue&#8217;). Instructions This article assumes that Tickets list has &#8220;Due Date&#8221; and &#8220;Closed Date&#8221; columns. Crow Canyon standard application has features to auto-fill both these dates. 1. Create&nbsp; a calculated column “SLA Status” that has the value “Overdue” or “Not Overdue” based on the Closed Date a nd the Due Date column values. Go to&nbsp; A pplication&nbsp; A dministration -&gt; Configure Lists -&gt; Configure Tickets -&gt; Create&nbsp; a &nbsp;calculated column&nbsp; a s shown below: For mula: IF(ISBLANK([Due Date]),\"Not Overdue\",IF(([Closed Date]&gt;[Due Date]),\"Overdue\",\"Not Overdue\")) Note: We can modify the calculated column name&nbsp; a nd status values&nbsp; a s per our business requirements. 2. To create ‘Completed’ list view, navigate to list settings for the list –&gt; ‘Create view’ –&gt; name the view as &#8216;Completed&#8217; –&gt; configure filter condition as shown below: Note : Skip this step if &#8216;Completed&#8217; list view is already configured for the list. 3. Configure a&nbsp;report on completed Tickets: Below example shows a report for number of “Overdue” and “Not Overdue” completed Tickets by &#8220;Assigned Staff&#8221;. Sample Output For&nbsp;more sample&nbsp;reports, please&nbsp;refer:&nbsp; https://www.crowcanyon.help/article/239/ About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "490",
    "name": "490 - Configure a report to show Tickets closed within SLA.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/490%20-%20Configure%20a%20report%20to%20show%20Tickets%20closed%20within%20SLA.html",
    "title": "Configure A Report To Show Tickets Closed Within SLA",
    "text": "Configure a report to show Tickets closed within SLA - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure a report to show Tickets closed within SLA Configure a report to show Tickets closed within SLA 1158 views Less than a minute 0 Applies to:&nbsp; SharePoint Online and SharePoint On-Premises Description Tickets list has a &#8216;Due Date&#8217; column to capture the date by which it should be closed. This is usually set as per the configured&nbsp;SLAs and can also be set manually.&nbsp;This article describes steps to configure a report to show count of Tickets closed within SLA (&#8216;Not Overdue&#8217;) and those that were closed after due date (&#8216;Overdue&#8217;). Instructions This article assumes that Tickets list has &#8220;Due Date&#8221; and &#8220;Closed Date&#8221; columns. Crow Canyon standard application has features to auto-fill both these dates. 1. Create&nbsp; a calculated column “SLA Status” that has the value “Overdue” or “Not Overdue” based on the Closed Date a nd the Due Date column values. Go to&nbsp; A pplication&nbsp; A dministration -&gt; Configure Lists -&gt; Configure Tickets -&gt; Create&nbsp; a &nbsp;calculated column&nbsp; a s shown below: For mula: IF(ISBLANK([Due Date]),\"Not Overdue\",IF(([Closed Date]&gt;[Due Date]),\"Overdue\",\"Not Overdue\")) Note: We can modify the calculated column name&nbsp; a nd status values&nbsp; a s per our business requirements. 2. To create ‘Completed’ list view, navigate to list settings for the list –&gt; ‘Create view’ –&gt; name the view as &#8216;Completed&#8217; –&gt; configure filter condition as shown below: Note : Skip this step if &#8216;Completed&#8217; list view is already configured for the list. 3. Configure a&nbsp;report on completed Tickets: Below example shows a report for number of “Overdue” and “Not Overdue” completed Tickets by &#8220;Assigned Staff&#8221;. Sample Output For&nbsp;more sample&nbsp;reports, please&nbsp;refer:&nbsp; https://www.crowcanyon.help/article/239/ About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "492",
    "name": "492 - Match incoming Emails with existing Tickets in Crow Canyon Service Request (email threading) - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/492%20-%20Match%20incoming%20Emails%20with%20existing%20Tickets%20in%20Crow%20Canyon%20Service%20Request%20%28email%20threading%29%20-%20Crow.html",
    "title": "Match Incoming Emails With Existing Tickets In Crow Canyon Service Request (email Threading) Crow",
    "text": "Match incoming Emails with existing Tickets in Crow Canyon Service Request (email threading) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Match incoming Emails with existing Tickets in Crow Canyon Service Request (email threading) Match incoming Emails with existing Tickets in Crow Canyon Service Request (email threading) 1567 views 2 min , 26 sec read 6 Applies To SharePoint Online and On-Premises (2013/2016/2019/SharePoint Server Subscription Edition) Description Crow Canyon application checks different parameters to determine if an incoming email is a reply to an existing Ticket. Replies are linked to existing Tickets and if email cannot be matched to an existing Ticket then a new Ticket is created. The matching algorithm is configurable and parameters used are: Case Id : Application generates a unique Case Id for each Ticket. This Id is added to subject of outgoing mails related to the Ticket. If user replies to such emails, then based on this Id email is linked to the existing Ticket having that Id Conversation Id (Message-ID) : Email providers assign a unique identifier to every email. This message Id is available in reply mails and is used by mail clients to show a conversation view of the related emails. We use the same technique if &#8216;Case Id&#8217; is not found in the subject Email Subject : If above two checks do not give a match, application performs additional checks to match based on subject of the email. In addition to subject other parameters like email sender, date of Ticket creation with matching subject, Ticket status and original mail body are matched to find the most appropriate Ticket to link the email Matching based on &#8216;Case Id&#8217; and email subject is part of standard product. Please refer below configuration details to enable matching based on Conversation Id and parameters that control the overall matching behavior. Configuration Details Matching functionality is part of Crow Canyon Product App component and installation is required. Please refer below details to create the columns in lists to enable and control the functionality. Note that you can change the display name of the columns after creating them with the names given below: List Name Column Name and Type Description &#8216;Email Tickets&#8217; and &#8216;Tickets&#8217; CCSConversationId (Single Line of Text) This column stores the Conversation Id (Message-ID) of the email. This column need not be shown in Views and Forms as it is only for internal use by the application. &#8216;Email Tickets&#8217; CCSOriginalTo (Single Line of Text) This column stores the information about the email recipients as received in the original email. It is used in matching sender when subsequent replies are received. This column need not be shown in Views and Forms as it is only for internal use by the application. &#8216;Configurations&#8217; EmailMatchingSettings (Multi-line Plain Text) This column is used to specify options to control the behavior of email matching. Each option is given in a separate line with format as shown below: MatchOption=3 MatchConversationDays=30 MatchSubjectDays=7 DisableMatchForSenders= DisableMatchForStatus=;Closed; Please refer below for more details on each option. Note: This is plain text data and should not contain any HTML tags The values shown above are used as default if this column doesn&#8217;t exist or has invalid or null data This column should be added to the list form so that you can modify the value as required Configuration options S. No. Option Name Option Description 1. MatchOption Numeric values to control the overall matching behavior. Note that &#8216;Case Id&#8217; based matching is always enabled and not affected by this setting. 0 : Set zero value to disable matching by conversation, subject and sender. 1 : Set value of one to enable matching by conversation 2 : Set value of two to enable matching by mail subject 3 : Set value of three to enable matching by conversation Id and subject. Conversation Id based match is tried first and if that doesn&#8217;t give any matching email then subject based matching is tried 2. MatchConversationDays Numeric value that specifies the number of days past today for which Tickets should be checked for conversation Id match. Tickets created in this interval will be matched and Tickets created prior won&#8217;t be matched 3. MatchSubjectDays Numeric value that specifies the number of days past today for which Tickets should be checked for subject match. Tickets created in this interval will be matched and Tickets created prior won&#8217;t be matched 4. DisableMatchForSenders Matching can be disabled for specific senders like in case of emails generated by automated systems. Format for this option is one or more email addresses separated by semicolon. Please keep the value for this as blank in case you don&#8217;t want to disable for any sender. Value format: ;mail1@abc.com;mail2@abc.com; 5. DisableMatchForStatus To disable linking to Tickets having specific status, specify these status values as semicolon separated values: ;Closed;Resolved; About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "493",
    "name": "493 - Tickets list data dictionary in Crow Canyon Service Request Application - Crow Canyon Software Suppo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/493%20-%20Tickets%20list%20data%20dictionary%20in%20Crow%20Canyon%20Service%20Request%20Application%20-%20Crow%20Canyon%20Software%20Suppo.html",
    "title": "Tickets List Data Dictionary In Crow Canyon Service Request Application Crow Canyon Software Suppo",
    "text": "Tickets list data dictionary in Crow Canyon Service Request Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Tickets list data dictionary in Crow Canyon Service Request Application Tickets list data dictionary in Crow Canyon Service Request Application 1508 views 9 min , 28 sec read 0 Applies to: SharePoint Online and On-Premises Description This article describes the columns present in Tickets list in Crow Canyon Service Request applications (i.e. IT Helpdesk, Request Management, Facilities and Customer Service). Most of the columns are same in both SharePoint online and On-Premises, except few that are described separately below. Columns and Purpose 1. Additional Contact A Person or Group column which contains the AD reference for a person or group that should be aware of the SharePoint item. Used in notifications for new Tickets, assigned Tickets, and closed Tickets. Typically only notified when a Ticket is created. 2. Additional Information A Multiple lines of text column which is auto-populated when Issue Type is chosen. The data comes from the Template column on the Issue Type list. 3. Additional Requester Email A Single line of text column to capture a user’s email address when using the Incoming Email feature when the user is not in the company’s Active Directory. Can be used in notifications using NITRO Workflows and standard Notifications. 4. Agent A Person or Group column. Used when the program installed is Customer Support. This captures the user who is creating the Ticket on behalf of the customer. It will auto-populate with the logged-in user when that person is creating the Ticket from the SharePoint UI. 5. Agent Department A Single line of text column. Used when the program installed is Customer Support. Auto-populated with the Agent’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Agent value is changed. 6. Agent Email A Single line of text column. Used when the program installed is Customer Support. Auto-populated with the Agent’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Agent value is changed. 7. Agent Phone A Single line of text column. Used when the program installed is Customer Support. Auto-populated with the Agent’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Agent value is changed. 8. Appointments A Multiple lines of text column. This is converted to an Associated Items column via NITRO Forms settings. It shows all Calendar events that are related to the current Ticket. 9. Approval Status On-Premises: A choice column. It will be shown in Ticket display form. Used in approval workflows and it shows the current approval status of the Ticket. 10. Approver On-Premises: A Person or Group column. Auto populated with the users based on the Approver Definition matched with the selected Category and Issues Type of the Ticket. 11. Assigned Date A Date and Time column which is auto-populated by a Crow Canyon workflow when the SharePoint list item’s Assigned Staff column is populated. 12. Assigned Staff A Person or Group column showing the person or people who is/are assigned to work the SharePoint item. The Assigned Staff column is referenced in Crow Canyon’s notifications workflows and can be auto-populated via Issue Type. 13. Assigned Days On-Premises: A number column, used in &#8220;Assigned Time&#8221; calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 14. Assigned Hours On-Premises: A number column, used in &#8220;Assigned Time&#8221; calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 15. Assigned Minutes On-Premises: A number column, used in &#8220;Assigned Time&#8221; calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 16. Assigned Team A Person or Group column showing the SharePoint Group which is assigned to work the SharePoint item. The Assigned Team column is referenced in Crow Canyon’s notifications workflows and can be auto-populated via Category 17. Assigned Time On-Premises: A Single line of text column, that shows the time taken from Ticket assignment to closure. 18. Associated Tasks A Multiple lines of text column. This is converted to an Associated Items column via the NITRO Forms settings for the column. It shows sub-tasks to the parent item which can each have their own assignees and due dates. 19. Case ID Unique reference number for the SharePoint item 20. Category A Lookup column which references the Category List. The choice of Category will filter the options in Issue Type. This column can drive auto-assignment to a particular Assigned Team. 21. Closed Date A Date and Time column which is auto-populated by a Crow Canyon workflow when the item’s Request Status is changed to Closed. Used to determine when to archive a Ticket. 22. Completed Ticket Online: A Yes/No column. This column is hidden from the user interface. It is used to disable notification workflows in case a completed Ticket is updated in the future. 23. Contact A Lookup column. Used when the program installed is Customer Support. This will populate with the Customer’s related Contacts. 24. Contact Email A Single line of text column. Used when the program installed is Customer Support. This will populate Contact’s email address from the Contacts list. 25. Contact Phone A Single line of text column. Used when the program installed is Customer Support. This will populate Contact’s phone number from the Contacts list. 26. Cost On-Premises: A Currency type column. Technician can specify the cost for the Ticket as part of the Asset Maintenance. 27. Create KB Article A Yes/No column which indicates whether or not to auto-create an item in the Knowledge Base list based on values in the given SharePoint item. A Crow Canyon workflow will initiate when the SharePoint item’s Request Status is set to Closed and this column’s value is Yes. Values in the Knowledge Base item will be set with the following formulas. It is configurable in Configurations utility (KB Mappings column). Ticket Title = Knowledge Base Title Ticket Category = Knowledge Base Category Ticket Issue Type = Knowledge Base Issue Type Ticket Description = Knowledge Base Wiki Content Ticket Resolution = Knowledge Base Resolution Ticket Resolution Notes = Knowledge Base Resolution Notes 28. Created A standard SharePoint Date and Time column which populates with the date and time when the SharePoint item is first saved 29. Created by A standard SharePoint Person or Group column to capture the logged in user who created the SharePoint item 30. Description A Multiple lines of text column which can be used to further describe metadata about the incident or request being reported in the SharePoint item 31. Date of Response On-Premises: A Date and Time column which is auto-populated by Crow Canyon Product workflows as part of SLA feature 31. Due Date Online: A Date and Time column which is auto-populated either by the column’s settings itself, or by an SLA workflow set up in NITRO Workflows On-Premises: A Date and Time column which is auto-populated either by the column’s settings itself, or by an SLA configuration set up in Application Administration 32. Elapsed Days On-Premises: A number column, used in elapsed time calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 33. Elapsed Hours On-Premises: A number column, used in elapsed time calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 34. Elapsed Minutes On-Premises: A number column, used in elapsed time calculation in Crow Canyon Product workflows. It is hidden in Ticket form. 35. Elapsed Time On-Premises: A Single line of text column, used in elapsed time calculation in Crow Canyon Product workflows. It shows the time taken from Ticket creation to closure. 36. Escalation Time On-Premises: A Date and Time column which is auto-populated by Crow Canyon Product workflows as part of SLA feature 37. External Additional Contacts On-Premises: A Multiple lines of text column. For Tickets created via emails, this column will have the email addresses of external users. For any notifications going to requester, these email addresses will be included. 38. Email History A Multiple lines of text column. This is converted to an Associated Items column via NITRO Forms settings. It shows all incoming and outgoing emails that are stored in SharePoint (in the Email Tickets list) that are related to the current Ticket. 39. HiddenCategory Online: A Single line of text column. Typically not visible in the user interface of the Ticket.Used in product app to recognize when a value is changed. On-Premises: A Single line of text column. Typically not visible in the user interface of the Ticket. Used in SLA and Approval workflows to recognize when a value is changed. 40. HiddenPriority Online: A Single line of text column. Typically not visible in the user interface of the Ticket.Used in product app to recognize when a value is changed. On-Premises: A Single line of text column. Typically not visible in the user interface of the Ticket. Used in SLA workflows to recognize when a value is changed. 41. HiddenRequester Online: A Single line of text column. Typically not visible in the user interface of the Ticket.Used in product app to recognize when a value is changed. On-Premises: A Single line of text column. Typically not visible in the user interface of the Ticket. Used in SLA workflows to recognize when a value is changed. 42. HiddenType Online: A Single line of text column. Typically not visible in the user interface of the Ticket.Used in product app to recognize when a value is changed. On-Premises: A Single line of text column. Typically not visible in the user interface of the Ticket. Used in SLA and Approval workflows to recognize when a value is changed. 43. HiddenStatus On-Premises: A Single line of text column. This column is hidden from the user interface. It is used to disable notification workflows in case a completed Ticket is updated in the future. 44. Issue Type A Lookup column referencing the Issue Type list. The choices available are filtered by the choice made in the Category column. 45. Last Calculated Time On-Premises: A Single line of text column, used in elapsed time calculation feature in Crow Canyon Product workflows. It shows when the elapsed/assigned times are last calculated. 46. Modified A standard SharePoint Date and Time column showing the date and time when the SharePoint item was last updated 47. Modified by A standard SharePoint Person or Group column to capture the logged in user who last modified the SharePoint item. 48. Notify Additional Contact Online: A Yes/No column. When Yes, Crow Canyon standard Notifications will also send an email to this address. When No, Crow Canyon standard Notifications will not send an email to this address. On-Premises: A multi Choice column. When &#8220;Do not Include in updates&#8221; option is not selected, Crow Canyon standard notifications will be sent to &#8220;Additional Contact&#8221;. When selected, Crow Canyon standard notifications will not be sent to the &#8220;Additional Contact&#8221;. 49. Previous Assigned Staff A Person or Group column showing the previous value for the Assigned Staff column. The column is auto-populated by a Crow Canyon workflow which kicks off when the Assigned Staff column’s value is changed. 50. Previous Assigned Team A Person or Group column showing the previous value for the Assigned Team column. The column is auto-populated by a Crow Canyon workflow which kicks off when the Assigned Team column’s value is changed. 51. Priority A Choice column. Based on the column’s settings, it can show a different color for each choice option, and display the color both within the SharePoint item, and on the list view which displays the SharePoint item. The color can apply to the entire row, or to just the Priority column itself. 52. Reactivate Date On-Premises: A Date and Time column which is auto-populated by a Crow Canyon workflow when the item’s Request Status is changed from Closed to In Progress (Closed Ticket is reopened). 53. Related Asset Online: A Lookup column that references the Assets list as deployed with Crow Canyon’s Asset Management module. On-Premises: A Lookup column that references the Assets list as deployed with Crow Canyon’s Asset Management module as a separate site. 54. Related Change Request A Multiple lines of text column. This is converted to an Associated Items column via NITRO Forms settings. It shows all Change Requests related to the current Ticket. Only available when using Crow Canyon’s premium module with Problem and Change Management. 55. Related KB Articles A Lookup column which references the Knowledge Base list. When one or more values are selected, Crow Canyon’s Email workflow can reference the values for inclusion in outgoing emails. 56. Related Problem A Multiple lines of text column. This is converted to an Associated Items column via NITRO Forms settings. It shows all Problems related to the current Ticket. Only available when using Crow Canyon’s premium module with Problem and Change Management. 57. Request Status Online: A Choice column which determines the status of the Ticket. The default values are Unassigned, Assigned and Closed. These values are used to kickoff Crow Canyon workflows for notifications and auto-population of values (e.g. Assigned Date and Closed Date). On-Premises: A Choice column which determines the status of the Ticket. The default values are Unassigned, Assigned, Resolved, and Closed. These values are used to kickoff Crow Canyon workflows for notifications and auto-population of values (e.g. Assigned Date and Closed Date). The value of Resolved and/or Closed also kicks off a workflow to create a Knowledge Base item when Create KB Article is Yes. See Create KB Article for more information. 58. Requester A Person or Group column indicating the person requesting the SharePoint item. Auto-populated by Crow Canyon’s User Info Filler settings in NITRO Forms and in Configurations. 59. Requester Department A Single line of text column. Auto-populated with the Requester’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Requester value is changed. 60. Requester Email A Single line of text column. Auto-populated with the Requester’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Requester value is changed. 61. Requester Phone A Single line of text column. Auto-populated with the Requester’s information from either Active Directory or SharePoint User Profile by Crow Canyon’s User Info Filler settings in NITRO Forms. Updated by a Crow Canyon workflow if the Requester value is changed. 62. Resolution A Choice column offering options for how the SharePoint item was resolved. Used in conjunction with Resolution Notes to create a Knowledge Base list item when Create KB Article is Yes and Request Status is Closed. See Create KB Article and Request Status for more information. 63. Resolution Notes A Multiple lines of text column capturing more detail about how the SharePoint item was resolved. Used in conjunction with Resolution to create a Knowledge Base list item when Create KB Article is Yes and Request Status is Closed. See Create KB Article and Request Status for more information. 64. Resolved Date On-Premises: A Date and Time column which is auto-populated by a Crow Canyon workflow when the Ticket Request Status is changed to Resolved. 65. Responded On-Premises: A Yes/No column. Used in SLA functionality to determine whether Ticket is responded or not. 66. Response Due On-Premises: A Date and Time column which is auto-populated by Crow Canyon Product workflows as part of SLA feature. 67. Send for Approval On-Premises: A Yes/No column. Used to trigger the Ticket approval. 68. SLA Applied On-Premises: A Lookup column that references the SLA Definition list. It shows the applied SLA for the Ticket based on the selected Category and Issue Type. 69. Source Email Address On-Premises: A Single line of text column. It is used to capture the incoming email address of Email Tickets list in Email to Ticket conversion feature. 70. Stop Clock On-Premises: An Yes/No column which is used pause the Elapsed/Assigned Time calculation for the time being. 71. Ticket Source A Choice column which can indicate how the SharePoint item’s information was first gathered and created. Default values are Phone Call, Web, Email, and Walk-in. The value is auto-set to Email when the Ticket is created using Crow Canyon’s Email Capture workflow. 72. TicketState A Number column. Used to recognize whether Category or Issue Type or Assigned Staff or Assigned Team is already set on a Ticket or not. This helps to auto assign Ticket whenever a Category/Issue Type values are set first time on a Ticket. 73. Time Tracking A Multiple lines of text column. This is converted to an Associated Items column via NITRO Forms settings. It captures multiple entries for amount of time spent on the Ticket. One or more users working on the Ticket can enter how much time they spent resolving the request or incident. 74. Title A Single line of text column to capture the name of the SharePoint item within the table. 75. Type of Response On-Premises: A Single line of text column which is automatically updated by Crow Canyon Product workflows as part of SLA feature. 76. Work Log A Multiple lines of text column with “Append Changes to Existing Text” enabled to log ongoing work performed on the SharePoint item. &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "494",
    "name": "494 - Crow Canyon List View advanced settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/494%20-%20Crow%20Canyon%20List%20View%20advanced%20settings.html",
    "title": "Crow Canyon List View Advanced Settings",
    "text": "Crow Canyon List View advanced settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- List View / Crow Canyon List View advanced settings Crow Canyon List View advanced settings 3040 views 3 min , 8 sec read 0 Applies to: SharePoint Online and On-premises For additional settings related to this feature, please refer to Crow Canyon List View Advanced Settings &#8211; Crow Canyon Software Support Description Crow Canyon List View is a NITRO component that provides enhanced capabilities to view SharePoint list items. It also provides a host of features to do operations on listed items. This articles lists the advanced features of this component for use in various business applications. Detailed Description Delay loading of items Enabling this option will delay the loading of items in List View web part in page. This will increase the performance of a page in case of multiple web parts exists in a page. Load after Items will load automatically after the specified time in the list view web part. User can also use &#8220;Click to load items&#8221; link to load the items manually. User initiated Items will not load automatically in the list view web part, we need to click &#8220;Click to load items&#8221; link to load the items. Hide Export to Excel Button Use this option to hide the &#8220;Export to Excel&#8221; button from the List View web part. Column Width JSON To have specific width for columns in the List View grid, specify the column internal name along with width in pixels in JSON format. Ex: { \"LinkTitle\": { \"width\": 150 }, \"Title\": { \"width\": 150 }, \"ID\": { \"width\": 80 } } Note: Specify column internal names and not the display names of the columns in the JSON Extended Settings JSON Example configuration: { \"Export\" : { \"AllowedGroups\" : [\"NITRO Members\", \"NITRO Owners\"], \"ColumnsToExport\" : [\"AssetID\",\"Title\",\"AssetCategory\"], \"ExcludeColumns\" : [\"LinkTitle\"] } } 1. Export to Excel feature customization Currently, extended JSON settings can be used for customizing the Excel to Export feature. Please follow the above format, details are given below: a. AllowedGroups &#8220;Export to Excel&#8221; button will be visible only for the users in SharePoint groups specified in this node. Multiple groups can be specified and if logged-in user is not in any of these groups then button will be hidden. This settings is optional, if it is not specified then all users will see the button. Also refer NITRO Site Settings for site level permissions for Export to Excel feature. As per the above sample configuration, &#8220;Export to Excel&#8221; button will be visible only for the users in &#8220;NITRO Owners&#8221; and &#8220;NITRO Members&#8221; groups. b. Columns included in the exported data By default all columns present in the selected view are exported. If advanced settings are specified then below rules are applied: Column has to be present in the selected view If &#8221;ColumnsToExport&#8221; node is present, then only those columns that are specified in this node will be exported If &#8220;ExcludeColumns&#8221; node is present, then columns specified in this node will be excluded As per the above sample configuration, &#8220;AssetID&#8221;, &#8220;Title&#8221; and &#8220;AssetCategory&#8221; columns will be exported provided they are present in the view. &#8220;LinkTitle&#8221; column will be excluded from the export even if it is present in the selected view. Note We need to use the internal name of the column in Extended Settings JSON. List View Example 2. List View Font Size Using this configuration, we can configure the font size for header (columns) in list view and the list item column values using JSON. Example JSON { \"ShowWebpartTitle\": false, \"HideViewVersions\": false, \"Styles\": { \"Header\": { \"FontSize\": \"15px\", //Columns names in header of Crow Canyon list view \"ColumnWidthScale\": 0.5 //value range is 0.1 to 1 }, \"Content\": { \"FontSize\": \"10px\" //column values for items in Crow Canyon List view }, \"Footer\": { \"FontSize\": \"10px\" //aggregates like count, sum used in Crow Canyon list view } } } &#8216;ColumnWidthScale&#8217; parameter in above sample JSON can be used to decrease default column width by specified number. For example, 0.5 will reduce column width to half. This can be used in conjunction with small font size for Header to have more columns in the available width. This can be used to see more content without horizontal scrolling. Example Configuration Sample Output: 3. Disable hyperlinks In NITRO list views, below columns types are shown as hyperlinks. Lookup (single/multi-selection) NITRO attachments column NITRO Attachments column (lookup and NITRO attachments columns in associated list view) If required we can disable the hyperlinks using extended settings. Hyperlinks can be disabled for all the columns or specific columns. To disable hyperlinks for all columns, go to the site -&gt; Site Settings -&gt; Crow Canyon List view -&gt; Create or edit existing list view definition -&gt; Navigate to &#8220;Advanced Settings&#8221; tab -&gt; Extended Settings JSON -&gt; add &#8220;DisableHyperLinks&#8221; property to &#8216;true&#8217; as shown below: To disable hyperlinks for specific columns, provide the column internal names in an array. Syntax : \"DisableHyperLinks\":&#91;\"Column1\",\"Column2\"] Example : \"DisableHyperLinks\":&#91;\"IssueType\",\"RelatedKBArticles\"] Note : This setting is applicable for ‘Single Lookup’ and ‘Multi Lookup’ column types. It is not applicable for ‘Single Lookup (Converted)’ and ‘Multi Lookup (Converted)’ lookup column types. Do not use column display name, use column internal name in the array. Refer this article for to find the column internal name: https://www.crowcanyon.help/article/614/#Post2 To disable hyperlinks only for lookup columns, we can use below property also &#8216;DisableLookupHyperLink&#8217; Add a node for &#8216;DisableLookupHyperLink&#8217; as shown below: Sample JSON: { \"ShowWebpartTitle\": false, \"Styles\": { \"Header\": { \"FontSize\": \"\", \"ColumnWidthScale\": 1 }, \"Content\": { \"FontSize\": \"\" } }, \"ToolTip\": { \"BackGroundColor\": \"rgb(0 0 0 / 90%)\", \"FontColor\": \"#FFF\", \"FontSize\": \"16px\", \"Columns\": &#91;] }, \"DisableLookupHyperLink\": true } Specify &#8220;DisableLookupHyperLink&#8221;:true to disable all lookup columns in list view web part. To disable specific lookup columns in list view web part, it is required to provide lookup columns as an array. Syntax: &#8220;DisableLookupHyperLink&#8221;:[&#8220;Column1&#8243;,&#8221;Column2&#8221;] Example: &#8220;DisableLookupHyperLink&#8221;:[&#8220;IssueType&#8221;,&#8221; RelatedKBArticles&#8221;] Note : We cannot use both the properties &#8220;DisableHyperLinks&#8221; and &#8220;DisableLookupHyperLink&#8221; at a time. It will take precedence for &#8220;DisableHyperLinks&#8221; property. Sample output (for specified columns) Hyperlink is disabled only for ‘Issue Type’ and ‘Related KB Articles’ lookup columns. NITRO Studio- List View About Prakash Arya View all posts by Prakash Arya &rarr; Related Articles NITRO Studio Workshop: Using Query List Actions in NITRO Workflows NITRO Studio Workshop: Using NITRO List Search in SharePoint NITRO Studio Workshop: List Views, List Roll-up, &#038; Reporting Using List Roll-up How to Setup List View in NITRO Studio © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "495",
    "name": "495 - Crow Canyon List Search Extended Settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/495%20-%20Crow%20Canyon%20List%20Search%20Extended%20Settings.html",
    "title": "Crow Canyon List Search Extended Settings",
    "text": "Crow Canyon List Search Extended Settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon List Search Extended Settings Crow Canyon List Search Extended Settings 1775 views 1 min , 12 sec read 0 Applies to: NITRO for SharePoint Online and On-Premises Introduction Crow Canyon List search is a NITRO component that provides simple and advanced search capability on SharePoint list items. It is cross-site component that can search lists in any site in the Site Collection provided user has the permissions to view list items. This article provides details of some of the advanced settings of this component. For more details on list search component, refer this article . Detailed Description Hide Export to Excel Button Use this option to hide the &#8220;Export to Excel&#8221; button from the List Search web part. Extended Settings JSON Example configuration: { \"Export\" : { \"AllowedGroups\" : [\"NITRO Members\", \"NITRO Owners\"], \"ColumnsToExport\" : [\"AssetID\", \"Title\", \"AssetCategory\"], \"ExcludeColumns\" : [\"LinkTitle\"] } } Export to Excel feature customization Currently, extended JSON settings can be used for customizing the Excel to Export feature. Please follow the above format, details are given below: AllowedGroups &#8220;Export to Excel&#8221; button will be visible only for the users in SharePoint groups specified in this node. Multiple groups can be specified and if logged-in user is not in any of these groups then button will be hidden. This setting is optional, if it is not specified then all users will see the button. Also refer NITRO Site Settings for site level permissions for Export to Excel feature. As per the above sample configuration, &#8220;Export to Excel&#8221; button will be visible only for the users in &#8220;NITRO Owners&#8221; and &#8220;NITRO Members&#8221; groups. Columns included in the exported data By default all columns present in the selected view are exported. If advanced settings are specified then below rules are applied: Column has to be present in the selected view If &#8221;ColumnsToExport&#8221; node is present, then only those columns that are specified in this node will be exported If &#8220;ExcludeColumns&#8221; node is present, then columns specified in this node will be excluded As per the above sample configuration, &#8220;AssetID&#8221;, &#8220;Title&#8221; and &#8220;AssetCategory&#8221; columns will be exported provided they are present in the view. &#8220;LinkTitle&#8221; column will be excluded from the export even if it is present in the selected view. Note: We need to use the internal name of the column in Extended Settings JSON. &nbsp; List Search Example &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "496",
    "name": "496 - Site level NITRO configurations.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/496%20-%20Site%20level%20NITRO%20configurations.html",
    "title": "Site Level NITRO Configurations",
    "text": "Site level NITRO configurations - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Site level NITRO configurations Site level NITRO configurations 1859 views 2 min , 1 sec read 0 Applies to: SharePoint Online and On-prem Introduction NITRO Site Settings are the common settings used across various NITRO components in the site. To view and configure these settings, navigate to SharePoint site settings page and then click the site settings link: &lt;Site URL&gt;/_layouts/15/settings.aspx =&gt; &#8220;Crow Canyon NITRO Site Settings&#8221; Details of each option are given below. Regional Time Settings Use this section to configure the date and time format for use in NITRO components. Time zone : This is read-only and shown as per configurations in site regional settings Date Format : Specify the date format to use in NITRO components like Forms and List Views Time Format : Specify the date format to use in NITRO components like Forms and List Views Full Date Format : As per the date and time format specified above &nbsp; Cache Site Metadata This section can be used to enable or disable caching of site metadata. Also, cache can be reset for all users from this section. This includes information about the site lists and columns, list views, Forms settings etc. Note that this does not include data stored in list items which is never cached. To improve the page load speed, it is recommended that this setting is always enabled. This data is frequently used by various NITRO components. For example, NITRO Forms and List Views need the information about columns in lists to draw the appropriate controls and show data in correct format as per the data type of the columns. Instead of fetching this information from SharePoint every time, caching enables NITRO to store this in user&#8217;s browser cache for faster access. If any changes are made to list columns or portal settings etc., users can clear the browser cache to get the updated settings immediately. Or, site administrator can do a &#8216;Reset Cache&#8217; from this section so that NITRO components will fetch the metadata again on next operation by users. Note that users may have to refresh the browser twice to see the updated settings. &nbsp; List Action Remover This section can be used to remove unwanted action buttons from the List ribbon. List Actions Security Settings To have more granular control on specific list actions, specify the SharePoint groups that can perform the operations. Export to Excel Specify site groups allowed to export list items data to Excel. Standard SharePoint List View action to export to Excel Button in SharePoint List Views is hidden if logged-in user is not a member of any of the groups specified in this setting. If no groups are specified then button is shown as per default SharePoint behavior. NITRO Export to Excel feature NITRO List View and List search have an export to Excel feature. This feature is hidden if logged-in user is not a member of any of the groups specified in this setting. Each instance of NITRO List View and List Search have its own settings that can be used to override this behavior. For more details, refer these articles: NITRO List View NITRO List search NITRO List and Item Print In SharePoint List Views, Item Forms and NITRO Forms there is an option to print list item(s). Print is not allowed if logged-in user is not a member of any of the groups specified in this setting. If no groups are specified then print is allowed as per SharePoint permissions of the user on the list and items. In NITRO list view, print button is hidden as per these settings. Each instance of NITRO List View has its own settings that can be used to override this behavior. Please refer this article for more details. About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "498",
    "name": "498 - Crow Canyon Email Sync_ Use Graph API to read emails.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/498%20-%20Crow%20Canyon%20Email%20Sync_%20Use%20Graph%20API%20to%20read%20emails.html",
    "title": "Crow Canyon Email Sync Use Graph API To Read Emails",
    "text": "Crow Canyon Email Sync: Use Graph API to read emails - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon Email Sync: Use Graph API to read emails Crow Canyon Email Sync: Use Graph API to read emails 1522 views 2 min , 4 sec read 1 Applies to: SharePoint Online Description Email Sync app is used to sync emails from a Microsoft Exchange mailbox to a list in SharePoint Online. SharePoint online doesn’t have built-in functionality similar to Announcements Lists in on-premises where emails sent to a particular address are automatically added to the list in SharePoint. You can read more about Email sync here and here . To access the mailbox to read emails, there are two options: Specify the username and password to access the mailbox. UPDATE October 1, 2022 &#8211; This method is now deprecated by Microsoft and Graph API is the preferred option. Enable Microsoft Graph API access so that Crow Canyon App can access the mailbox using OAuth. This article describes the steps to configure Graph API access for Email Sync. Before granting permissions, follow below steps so that API will have access only to the required mailboxes. Steps to grant permissions only to required mailboxes Performing these steps will ensure that Crow Canyon Email API will never have access to all mailboxes in your tenancy. API permission restrictions to specific mailboxes is done before granting permissions to the API. API permissions can be scoped to specific mailboxes as per instructions in this Microsoft article. AppId to be used for this is &#8220;1c4f8870-3aab-4882-a733-f05081a17655&#8221;. Steps are also given below. Create a mail enabled group in your O365 admin center . Note that this steps requires administrator privileges on your O365 subscription. E.g. “ CrowCanyonEmailAPIAccess ” Add the required mailboxes (one or more) to this group Connect to Exchange Online PowerShell. For details, see Connect to Exchange Online PowerShell Run below command, note that changes to application access policies can take up to 30 minutes. Replace CrowCanyonEmailAPIAccess@yourdomain.com below with the email Id of the group created above: New-ApplicationAccessPolicy -AppId 1c4f8870-3aab-4882-a733-f05081a17655 -PolicyScopeGroupId CrowCanyonEmailAPIAccess@yourdomain.com -AccessRight RestrictAccess -Description \"Restrict Crow Canyon Email API app access to members of distribution group CrowCanyonEmailAPIAccess.\" Verify that mailbox accounts added to the group can be accessed by Graph API. Replace &lt;mailbox email&gt; below with email Id of the mailbox: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Verify that any other mailbox account that is not in “ CrowCanyonEmailAPIAccess ” group cannot be accessed by Graph API. Replace &lt;mailbox email&gt; below with email of mailbox that is not in the group: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Steps to grant permissions 1. Navigate to Email Sync app 2. Create a new configuration or edit an existing one for which API access is to be configured 3. Select &#8220;Microsoft Graph API Access&#8221; in &#8220;Connection Settings for Microsoft Exchange Server&#8221; in Email Sync as shown below: 4. Click &#8216;Grant Access&#8217; in &#8220;Connection Settings for Microsoft Exchange Server&#8221; section to allow API access to mailboxes. 5. &#8220;Grant permissions&#8221; link will open a pop-up. Please use an account with admin privileges to grant the required permissions. Click &#8220;Accept&#8221; button to grant permissions. Note that the grant permissions dialog may still say that grant permissions to all mailboxes, but API is already restricted to only the mail enabled security group configured above. 6. Click &#8216;Test Connection&#8217; to verify the access. Please wait for few minutes and try again if it doesn&#8217;t work immediately after granting the permissions: Note: If permissions are not granted, test connection will result in following error: 7. Save the configuration and wait for about 15 minutes. Send a mail to verify that Email Sync is working. Note that only new emails will be moved to SharePoint, existing emails prior to the configurations are not moved 8. Existing configurations that are using mailbox credentials can be moved to new Graph API based access by editing the configuration About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "6",
    "name": "6 - How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/6%20-%20How%20to%20use%20Graph%20API%20for%20sending%20mails%20from%20NITRO%20Workflow%20Manager%20and%20Advanced%20Approval%20apps.html",
    "title": "How To Use Graph API For Sending Mails From NITRO Workflow Manager And Advanced Approval Apps",
    "text": "How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Workflows / How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps 4234 views 2 min , 54 sec read 12 Applies to : SharePoint Online NITRO Workflows and Advanced Approvals Introduction NITRO Workflows and Advanced Approval apps by default uses SendGrid service for outgoing emails. This can sometimes cause mail delivery issues as SendGrid server IPs may not be trusted by receiving server. Also, mails originating outside of receiving server but with sender address of internal domain has chances of being considered a spam mail. To avoid these issues, these apps now have the following options to send mails. Mailbox Settings: Refer instructions in this article for overall mail flow and mailbox configurations Microsoft Graph API: Described in current article In case mail delivery by Mailbox / Graph API fails for any reason then SendGrid is used as backup. This can be configured at the site level in Workflow Manager. All workflows configured in the site will use the same settings for outgoing mails. Steps to grant permissions only to required mailboxes Performing these steps will ensure that Crow Canyon Email API will never have access to all mailboxes in your tenancy. API permission restrictions to specific mailboxes is done before granting permissions to the API. API permissions can be scoped to specific mailboxes as per instructions in this Microsoft article. &nbsp;AppId to be used for this is “1c4f8870-3aab-4882-a733-f05081a17655”. Please find the detailed steps from below. Create a mail enabled group in your&nbsp; O365 admin center &nbsp;. Note that this steps requires administrator privileges on your O365 subscription. E.g. “ CrowCanyonEmailAPIAccess ” Add the required mailboxes (one or more) to this group Connect to Exchange Online PowerShell. For details, see&nbsp; Connect to Exchange Online PowerShell Run below command, note that changes to application access policies can take up to 30 minutes. Replace&nbsp; CrowCanyonEmailAPIAccess@yourdomain.com &nbsp;below with the email Id of the group created above: New-ApplicationAccessPolicy -AppId 1c4f8870-3aab-4882-a733-f05081a17655 -PolicyScopeGroupId CrowCanyonEmailAPIAccess@yourdomain.com -AccessRight RestrictAccess -Description \"Restrict Crow Canyon Email API app access to members of distribution group CrowCanyonEmailAPIAccess.\" Note: For GCC, &#8216;AppId&#8217; will be different for each tenant. To find out the &#8216;AppId&#8217; Sign in to the Azure portal (US Government )&nbsp;as a&nbsp; Global Administrator , go to Microsoft Entra ID, Manage, App registrations, All applications, click on “Crow Canyon Email API”, click “Overview”, copy “Application ID” (see below). Verify that mailbox accounts added to the group can be accessed by Graph API. Replace&nbsp; &lt;mailbox email&gt; &nbsp;below with email Id of the mailbox: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Verify that any other mailbox account that is not in “ CrowCanyonEmailAPIAccess ” group cannot be accessed by Graph API.&nbsp; Replace&nbsp; &lt;mailbox email&gt; &nbsp;below with email of mailbox that is not in the group: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Steps 1.Navigate to site settings &#8211;&gt; site administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; NITRO Workflows app/Advanced Approval app 2. Click gear icon next to the “New Workflow” button to bring up the site settings popup 3. Go to “Microsoft Graph API” tab and enable “Use Graph API” setting as shown below: 4. For commercial tenant, click “Grant Permissions” in “Graph API Settings” section to allow API access to mailboxes. For GCC environment, grant admin consent for API Permissions as described below Sign in to the Azure portal (US Government )&nbsp;as a&nbsp; Global Administrator , go to Microsoft Entra ID, Manage, App registrations, All applications, click on “Crow Canyon Email API”, click “API Permissions”, click “Grant admin consent for tenancy” button (see below). 2. Repeat same steps mentioned in #1 for “Azure AD API”, “Microsoft Teams API” and “NITRO API”. 5. &#8220;Grant Permissions&#8221; link will open a pop-up. Please use an account with administrator privileges for your office 365 subscription to grant the required permissions. Click &#8220;Accept&#8221; button to grant the permissions. Note that the grant permissions dialog may still say that grant permissions to all mailboxes, but API is already restricted to only the mail enabled security group configured above. 6. Enter the email address and click “Test Mail” button. This will send a test mail using the configured email address. Next, click “Save” button to save the configurations. Troubleshooting steps Issue: Despite following all the configuration steps as outlined, below error message appears on clicking ‘Test Mail’ button for the specified email address. Cause: Mail-enabled security group is created with deleted shared mailbox address: &nbsp;The shared mailbox account was deleted and then a mail-enabled security group was created with the same shared mailbox address. Resolution: Delete the existing mail-enabled security group -> Then, create a new mail-enabled security group with a different name and email address -> Create a new shared mailbox with the email address specified as the ‘From’ address (that is, deleted mail-enabled security group address) -> Add the shared mailbox to the newly created mail-enabled security group -> Follow the steps “Steps to grant permissions only to required mailboxes” from the article above. Note: After re-configuring the mail-enabled security group, if the same error is shown on clicking ‘Test Mail’ button, then it is required to wait for at most 24 hours to see the changes. Click the ‘Test Mail’ button again after 24 hours. NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "601",
    "name": "601 - How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps - Crow.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/601%20-%20How%20to%20use%20Graph%20API%20for%20sending%20mails%20from%20NITRO%20Workflow%20Manager%20and%20Advanced%20Approval%20apps%20-%20Crow.html",
    "title": "How To Use Graph API For Sending Mails From NITRO Workflow Manager And Advanced Approval Apps Crow",
    "text": "How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Workflows / How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps How to use Graph API for sending mails from NITRO Workflow Manager and Advanced Approval apps 4234 views 2 min , 54 sec read 12 Applies to : SharePoint Online NITRO Workflows and Advanced Approvals Introduction NITRO Workflows and Advanced Approval apps by default uses SendGrid service for outgoing emails. This can sometimes cause mail delivery issues as SendGrid server IPs may not be trusted by receiving server. Also, mails originating outside of receiving server but with sender address of internal domain has chances of being considered a spam mail. To avoid these issues, these apps now have the following options to send mails. Mailbox Settings: Refer instructions in this article for overall mail flow and mailbox configurations Microsoft Graph API: Described in current article In case mail delivery by Mailbox / Graph API fails for any reason then SendGrid is used as backup. This can be configured at the site level in Workflow Manager. All workflows configured in the site will use the same settings for outgoing mails. Steps to grant permissions only to required mailboxes Performing these steps will ensure that Crow Canyon Email API will never have access to all mailboxes in your tenancy. API permission restrictions to specific mailboxes is done before granting permissions to the API. API permissions can be scoped to specific mailboxes as per instructions in this Microsoft article. &nbsp;AppId to be used for this is “1c4f8870-3aab-4882-a733-f05081a17655”. Please find the detailed steps from below. Create a mail enabled group in your&nbsp; O365 admin center &nbsp;. Note that this steps requires administrator privileges on your O365 subscription. E.g. “ CrowCanyonEmailAPIAccess ” Add the required mailboxes (one or more) to this group Connect to Exchange Online PowerShell. For details, see&nbsp; Connect to Exchange Online PowerShell Run below command, note that changes to application access policies can take up to 30 minutes. Replace&nbsp; CrowCanyonEmailAPIAccess@yourdomain.com &nbsp;below with the email Id of the group created above: New-ApplicationAccessPolicy -AppId 1c4f8870-3aab-4882-a733-f05081a17655 -PolicyScopeGroupId CrowCanyonEmailAPIAccess@yourdomain.com -AccessRight RestrictAccess -Description \"Restrict Crow Canyon Email API app access to members of distribution group CrowCanyonEmailAPIAccess.\" Note: For GCC, &#8216;AppId&#8217; will be different for each tenant. To find out the &#8216;AppId&#8217; Sign in to the Azure portal (US Government )&nbsp;as a&nbsp; Global Administrator , go to Microsoft Entra ID, Manage, App registrations, All applications, click on “Crow Canyon Email API”, click “Overview”, copy “Application ID” (see below). Verify that mailbox accounts added to the group can be accessed by Graph API. Replace&nbsp; &lt;mailbox email&gt; &nbsp;below with email Id of the mailbox: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Verify that any other mailbox account that is not in “ CrowCanyonEmailAPIAccess ” group cannot be accessed by Graph API.&nbsp; Replace&nbsp; &lt;mailbox email&gt; &nbsp;below with email of mailbox that is not in the group: Test-ApplicationAccessPolicy -Identity &lt;mailbox email&gt; -AppId 1c4f8870-3aab-4882-a733-f05081a17655 Steps 1.Navigate to site settings &#8211;&gt; site administration &#8211;&gt; Crow Canyon NITRO Apps &#8211;&gt; NITRO Workflows app/Advanced Approval app 2. Click gear icon next to the “New Workflow” button to bring up the site settings popup 3. Go to “Microsoft Graph API” tab and enable “Use Graph API” setting as shown below: 4. For commercial tenant, click “Grant Permissions” in “Graph API Settings” section to allow API access to mailboxes. For GCC environment, grant admin consent for API Permissions as described below Sign in to the Azure portal (US Government )&nbsp;as a&nbsp; Global Administrator , go to Microsoft Entra ID, Manage, App registrations, All applications, click on “Crow Canyon Email API”, click “API Permissions”, click “Grant admin consent for tenancy” button (see below). 2. Repeat same steps mentioned in #1 for “Azure AD API”, “Microsoft Teams API” and “NITRO API”. 5. &#8220;Grant Permissions&#8221; link will open a pop-up. Please use an account with administrator privileges for your office 365 subscription to grant the required permissions. Click &#8220;Accept&#8221; button to grant the permissions. Note that the grant permissions dialog may still say that grant permissions to all mailboxes, but API is already restricted to only the mail enabled security group configured above. 6. Enter the email address and click “Test Mail” button. This will send a test mail using the configured email address. Next, click “Save” button to save the configurations. Troubleshooting steps Issue: Despite following all the configuration steps as outlined, below error message appears on clicking ‘Test Mail’ button for the specified email address. Cause: Mail-enabled security group is created with deleted shared mailbox address: &nbsp;The shared mailbox account was deleted and then a mail-enabled security group was created with the same shared mailbox address. Resolution: Delete the existing mail-enabled security group -> Then, create a new mail-enabled security group with a different name and email address -> Create a new shared mailbox with the email address specified as the ‘From’ address (that is, deleted mail-enabled security group address) -> Add the shared mailbox to the newly created mail-enabled security group -> Follow the steps “Steps to grant permissions only to required mailboxes” from the article above. Note: After re-configuring the mail-enabled security group, if the same error is shown on clicking ‘Test Mail’ button, then it is required to wait for at most 24 hours to see the changes. Click the ‘Test Mail’ button again after 24 hours. NITRO Studio- Workflows About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited NITRO Studio Workshop: Using NITRO Workflows with Teams NITRO Studio Workshop: Introducing the New Looping Feature for Custom Actions and Workflows NITRO Studio Workshop: Building Workflows with the NITRO Workflow Designer Interface © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "602",
    "name": "602 - Insert and Update records in External data source using NITRO.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/602%20-%20Insert%20and%20Update%20records%20in%20External%20data%20source%20using%20NITRO.html",
    "title": "Insert And Update Records In External Data Source Using NITRO",
    "text": "Insert and Update records in External data source using NITRO - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Insert and Update records in External data source using NITRO Insert and Update records in External data source using NITRO 2083 views 2 min , 38 sec read 0 Applies To: SharePoint Online and On-Premises Description NITRO Forms allow integration of external data with SharePoint list data. Please refer this article for more details on various scenarios of fetching external data and populating in NITRO Forms. We can also write (insert / update) records in SQL server tables using NITRO Forms and Custom Actions. These operations work independently of fetch operations and need to be configured separately. Detailed Instructions Crow Canyon provides an API to perform the write operations Write operation requires connection string to the SQL server and parameters for the data to write We can use JavaScript action in Custom Actions and NITRO forms to invoke this API. API will invoke a stored procedure in DB to do the required update In this article, we take an example to update the status of the employee record in database. NITRO forms are configured to fetch “Employee” data from the database table. This is done using External Data column configurations (refer this article ). Summary of steps Create a stored procedure in database for the write operation Prepare JavaScript: Specify the connection string Specify the parameter values to call the stored procedure NITRO Configurations to update employee record Custom Action Forms 1. Create a stored procedure in database Create a stored procedure in database to update the record as per your requirement. Sample given below updates Employee Status based on the Employee Id. Sample stored procedure: USE [DataBaseName] GO / Object: StoredProcedure [dbo].[CCS_UpdateStatus] / SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[CCS_UpdateStatus] -- Add the parameters for the stored procedure here @EmpID int, @Status nvarchar(128) AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Insert statements for procedure here update [ExData_tblEmployee] set [Status] = @Status Where ID = @EmpId END GO 2. Prepare JavaScript In below script, modify the connection string and stored procedure name. Also pass the values for the parameters used in above stored procedure. Below script is different for SharePoint online and On-Premises. Based on your environment, choose the appropriate script. Sample JavaScript for SharePoint Online var serviceURL = \"https://crowcanyonapps.azurewebsites.net/api/DatabaseUtils\"; var ccWebServiceCall = function (serviceURL, parameters, funcCallback) { var reqdata = parameters; $.ajax({ type: \"POST\", url: serviceURL, data: JSON.stringify(reqdata), headers: { \"Content-Type\": \"text/json\" }, success: function (data) { if (data.Error) { //Error funcCallback(true, data.Error); } else { funcCallback(false, data); } }, error: function (data) { if (data.responseJSON &amp;&amp; data.responseJSON.error &amp;&amp; data.responseJSON.error.message &amp;&amp; data.responseJSON.error.message.value) { funcCallback(true, 'Error Details: \"' + data.responseJSON.error.message.value + '\"'); } else { funcCallback(true, 'Error: \"' + data.statusText + '\", Details: \"' + data.responseText + '\"'); } } }); }; var objApiParams = { \"name\": \"UpdateQuery\", \"parameters\": { \"dbConn\": \"Server= ServerName; Database=Database Name;User ID=UserId;Password=Password;Encrypt=True;Connection Timeout=30\", \"queryText\": \"CCS_UpdateStatus\", \"isSProc\": true, \"params\": {} } }; objApiParams.parameters.params[\"EmpID\"] = currentItem.get_item(\"EmployeeId\"); objApiParams.parameters.params[\"Status\"] = \"Inactive\"; ccWebServiceCall(serviceURL, objApiParams, functionCallback); In the above script, “EmployeeId” is the SharePoint column which stores unique value of the database record. Sample JavaScript for SharePoint On-Premises Make the same changes as described above for On-premises as well. Script: var serviceURL = _spPageContextInfo.webAbsoluteUrl + \"/_layouts/15/CrowCanyon.CommonUtils/SPDataHandler\" + (_spPageContextInfo.siteClientTag.split(\"$$\")[1].split(\".\")[0] == \"16\" ? \"16\" : \"\") + \".aspx/DatabaseUtils\"; var ccWebServiceCall = function (serviceURL, parameters, funcCallback) { var reqdata = { methodInfo: parameters }; $.ajax({ type: \"POST\", url: serviceURL, data: JSON.stringify(reqdata), contentType: \"application/json; charset=utf-8\", headers: { \"Accept\": \"application/json; odata=verbose\" }, dataType: \"json\", success: function (res) { var data = res.d; if (data.Error) { //Error funcCallback(true, data.Error); } else { funcCallback(false, data); } }, error: function (data) { if (data.responseJSON &amp;&amp; data.responseJSON.error &amp;&amp; data.responseJSON.error.message &amp;&amp; data.responseJSON.error.message.value) { funcCallback(true, 'Error Details: \"' + data.responseJSON.error.message.value + '\"'); } else { funcCallback(true, 'Error: \"' + data.statusText + '\", Details: \"' + data.responseText + '\"'); } } }); }; var objApiParams = { \"name\": \"UpdateQuery\", \"parameters\": { \"dbConn\": \"Server=Server Name;Database=Database Name;User ID=User Id;Password=Password;Encrypt=True;Connection Timeout=30\", \"queryText\": \"CCS_UpdateStatus\", \"isSProc\": true, \"params\": {} } }; objApiParams.parameters.params[\"EmpID\"] = currentItem.get_item(\"EmployeeId\"); objApiParams.parameters.params[\"Status\"] = \"Inactive\"; ccWebServiceCall(serviceURL, objApiParams, functionCallback); 3. Configurations to update employee record in database We can update the employee record using Custom Actions and NITRO Forms. Using Custom Actions Go to the list -&gt; List Settings -&gt; Crow Canyon Custom Actions and create execute script action as shown below. Execute Script action: Using NITRO Forms We can invoke the above configured custom action in NITRO forms or we can directly use the script in Submit action on the Form. Invoke Custom action in NITRO form Go to the NITRO form settings page, drag and drop the “Submit” action on to the form and configure the submit action as shown below: Specify script for the action About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "603",
    "name": "603 - Troubleshooting Crow Canyon list view_List Rollup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/603%20-%20Troubleshooting%20Crow%20Canyon%20list%20view_List%20Rollup.html",
    "title": "Troubleshooting Crow Canyon List View List Rollup",
    "text": "Troubleshooting Crow Canyon list view/List Rollup - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- List View / Troubleshooting Crow Canyon list view/List Rollup Troubleshooting Crow Canyon list view/List Rollup 2474 views Less than a minute 0 Applies To: SharePoint Online and On-Premises Description: Crow Canyon list view common issues and solutions Issue 1: Symptom: Crow Canyon list view is never loading in a Workspace page Cause: There are dependency JavaScript files like &#8220;sp.js&#8221; and sometimes it may not be loading in Workspace page for some unknown reason. Resolution: Edit the page that has the issue, add Content Editor Web Part at the top of the page and add below script to it and save. &lt;script&gt;setTimeout(function () { if (!window.SP || !window.SP.ClientContext || !window.SP.ClientContext.get_current) { var script = document.createElement('script'); script.type = 'text/javascript'; script.src = \"/_layouts/15/SP.js\"; var headElement = document.head || document.getElementsByTagName('head')[0]; headElement.appendChild(script); } }, 3000);&lt;/script&gt; Issue 2 Symptom: Crow Canyon List Rollup is never loading Cause (SharePoint Online Only): Modern List Rollup web part is added to classic workspace page Resolution: Remove modern web part and add classic one from NITRO Rollup page from NITRO Apps Another Cause: If the special characters like &#8220;#&#8221; or &#8220;/&#8221; are used in column name in List Rollup settings Resolution: Remove special characters from column names in List Rollup settings, save and reset NITRO cache (Go to site settings, Crow Canyon NITRO Site Settings, Reset Cache). NITRO Studio- List View About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Using Query List Actions in NITRO Workflows NITRO Studio Workshop: Using NITRO List Search in SharePoint NITRO Studio Workshop: List Views, List Roll-up, &#038; Reporting Using List Roll-up How to Setup List View in NITRO Studio © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "604",
    "name": "604 - Service Request NITRO Application for SharePoint Online_ Installation Steps - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/604%20-%20Service%20Request%20NITRO%20Application%20for%20SharePoint%20Online_%20Installation%20Steps%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "Service Request NITRO Application For SharePoint Online Installation Steps Crow Canyon Software S",
    "text": "Service Request NITRO Application for SharePoint Online: Installation Steps - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Service Request NITRO Application for SharePoint Online: Installation Steps Service Request NITRO Application for SharePoint Online: Installation Steps 2183 views 3 min , 44 sec read 2 Applies to : SharePoint Online Description NITRO Application for Crow Canyon Service Request is installed from the applications page in NITRO Studio. Post that there are some additional steps to configure the site. Please ensure that you have installed the application as per details in this article before performing these steps. Summary of steps Install and Activate Crow Canyon Product App Create and configure Portal site Other configurations Detailed instructions 1. Install and Activate Crow Canyon Product App Crow Canyon Service Request application requires Crow Canyon Product App to be installed and activated in the SharePoint site. Installation file for this App is sent as part of the installation package. Please contact sharepointsupport@crowcanyon.com in case you have not received it. Go to tenant App Catalog site &#8211;&gt; Apps for SharePoint &#8211;&gt; upload &#8216;CrowCanyon.Product.app&#8217; file to the library. Add Product App to the site: Go to the service request application site -&gt; Site Contents -&gt; Add an app -&gt; switch to classic page of add an app -&gt; search for &#8216;Crow Canyon Product App&#8217; and add the app in the site. This will prompt for app request for Global administrator for approval. Global Administrator can navigate to tenant app catalog site &#8211;&gt; App Requests &#8211;&gt; approve Crow Canyon Product App request. After the approval, go to the service request application &#8211;&gt; site contents &#8211;&gt; add an app &#8211;&gt; add &#8216;Crow Canyon Product App&#8217; to the site. After adding app to the site, go to site contents &#8211;&gt; open Crow Canyon Product App, click &#8220;Activate App Feature&#8221; button as shown below: 2. Create and configure Portal site Go to site contents -&gt; open Crow Canyon NITRO Studio app -&gt; click on NITRO Applications -&gt; Search &#8220;NITRO Help Desk Portal&#8221; application -&gt; Click Install link -&gt; Provide the input for creating Portal site as shown in sample screenshot below.&nbsp; Wait for the setup to finish successfully and click Ok on completion. Add all the administrators of the Helpdesk application to the above-mentioned Owners group (SharePoint group). 3. Other Configurations 1. Add &#8220;Employee Portal&#8221; top link bar Go to Service Request site -&gt; Site Settings -&gt; Top link bar and add link to Portal site URL 2. Recommended : We can configure the internal mailbox account for sending outgoing mails from send mail actions of Crow Canyon NITRO Workflows. Refer article for detailed steps 3. OPTIONAL: Configure incoming email address in Crow Canyon Email Sync app for Email to Ticket conversion functionality. Refer instructions from this article For Applications &#8211; IT Professional (2020), IT Standard (2020), and Request Management (2020) Note: If you have installed the site using older applications, please refer next section &#8216;For Other Applications&#8217;. 1. Update the Crow Canyon Product app tile link in Crow Canyon NITRO Apps Link Tiles. Go to Application Administration -&gt; Advanced section-&gt; Crow Canyon NITRO Apps-&gt;Crow Canyon NITRO Studio-&gt;Tiles and Dials -&gt; Link Tiles -&gt; Edit Crow Canyon NITRO Apps -&gt; Edit Crow Canyon Product app and update the URL. To find the Product App link URL, go to Site Contents, navigate to classic experience of site contents, right click on the &#8220;Crow Canyon Product App&#8221;, copy shortcut. If the length of the URL is greater than 225 characters, we can use the server relative URL. Sample URL looks like below: /sites/sitecollection/subsite/_layouts/15/appredirect.aspx?instance_id={6CC40AC6-2DB5-4E9B-A1A9-746BD7B026B5} 2. Reset cache in NITRO Workflows Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and click refresh button beside the site dropdown to reset the cache. 3. Go to site settings -&gt; Users and Permissions -&gt; Site Permissions -&gt; delete unique permissions for the site and configure the permissions as required. 4. By default, service request application comes with override settings in Tickets/Requests list for Portal site. Make sure that portal &#8220;Site URL&#8221; is correct in override settings in Tickets/Requests list forms. Go to site contents -&gt; Tickets/Requests/Work Orders list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced Settings -&gt; edit portal settings and make sure that Site URL is correct. For NITRO Help Desk and NITRO Request Management Applications Along with above configurations, below additional steps are required: 1. Add &#8220;Employee Portal&#8221; top link bar Go to Service Request site -&gt; click Administration link in top link bar -&gt; Site Settings under Advanced section -&gt; SharePoint Site Settings -&gt; Crow Canyon Branding (Modern Sites) under Site Administration -&gt; Add portal link in &#8220;Custom Menu Links&#8221; under &#8220;Header&#8221; section. 2. In Knowledge Base list form, modify the list Ids in &#8220;Auto redirect to KB revision new form&#8221; form event actions Go to Application Administration -&gt; Advanced -&gt; Configure Lists -&gt; Configure Knowledge Base -&gt; Crow Canyon NITRO Forms -&gt; go to Form event action -&gt; Edit “Auto redirect to KB revision new form” action To get Knowledge Base list id, go to Application Administration -&gt; Advanced Section -&gt; Configure Lists -&gt; Click &#8220;Configure Knowledge Base&#8221; tile and find the URL in the browser. To get &#8220;Knowledge Base Revision&#8221; list id, go to Application Administration -&gt; Advanced section -&gt; Configure Lists -&gt; Click &#8220;Configure Knowledge Base Revision&#8221; link tile and find the URL in the browser (see screenshot above). 2. Ensure the portal site URL is correct in below places: Configuration Item Go to Application Administration -&gt; Advanced section -&gt; General Configurations -&gt; Click General Configurations tile -&gt; modify the portal URL in &#8220;Portal Ticket Link URL&#8221; column as shown below: 2. Modify the portal URL in survey notification workflow: Go to Application Administration -&gt; Advanced section -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows -&gt; Edit workflow &#8220;Survey notification and update Ticket with time to resolve and close&#8221;. Edit action: &#8220;Send mail to requester with survey link&#8221; -&gt; Edit mail template and modify the portal URLs in &#8220;Satisfied&#8221; and &#8220;Not Satisfied&#8221; links as shown below: Edit Mail Template: 4. Ensure that “Contribute without delete” permission is selected in below workflow actions. Workflow 1: Process KB Updates Action: Grant backend staff permissions Workflow 2: Process published KB Articles Action: Grant backend staff permissions 5. Go to site contents -&gt; Tickets/Requests/Work Orders list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; edit &#8216;Tickets&#8217; form -&gt; select &#8216;Work Log&#8217; column -&gt; click on Edit in column settings and update &#8216;Permission Groups&#8217; setting with the Site Owners SharePoint group, click on Ok and publish the forms. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "605",
    "name": "605 - Reconfigure NITRO Site after URL change.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/605%20-%20Reconfigure%20NITRO%20Site%20after%20URL%20change.html",
    "title": "Reconfigure NITRO Site After URL Change",
    "text": "Reconfigure NITRO Site after URL change - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Reconfigure NITRO Site after URL change Reconfigure NITRO Site after URL change 2235 views 4 min , 36 sec read 21 Applies To : SharePoint Online and On-Premises Introduction NITRO Studio is installed at Site Collection level. NITRO can be activated in any sub-site in the site collection including the root site. SharePoint allows changing the Site Collection/Site URL. Also, a site URL can get changed if URL of its parent site is changed. If NITRO is already activated on a site when its URL is changed, then some updates are required as site URL is used in NITRO configurations. Reconfiguration Steps NITRO has built-in feature to update most of the NITRO site settings after URL change. Only few manual steps are required. Please follow the steps as listed below. Step 1 &#8211; NITRO Site Repair feature 1. Navigate to Crow Canyon NITRO Apps page for the site Go to the root site of site collection -&gt; Open Crow Canyon NITRO Studio app -&gt; Search for the site whose URL has changed -&gt; Click &#8220;Manage&#8221; to navigate to the NITRO Apps page for the site. 2. Click &#8220;REPAIR SITE&#8221; at the right bottom of the page 3. Add mappings of old to new site URLs Example: Old Web URL: https://contoso.sharepoint.com/sites/NITRO/IT New Web URL: https://contoso.sharepoint.com/sites/NITRO/helpdesk Note: If you only want to run NITRO Repair for the site and there is no change in site URL, then you can leave this section blank. 4. This will re-install the NITRO and update the URL&#8217;s in the NITRO settings files. Please note that this step will also update the NITRO Studio in the site to the latest version. 5. Please wait until the process completes. Once done, it will show link to a page that has additional steps for URL change scenario. Note that this is not required if you are only running NITRO Repair for the site and there is no URL change. Step 2 &#8211; Update NITRO Configurations from NITRO URL Change page After above step, &#8220;Update NITRO Apps for site URL change&#8221; page will be opened automatically. You can also navigate to this page by clicking &#8220;this page&#8221; link as shown below: Click &#8220;Repair&#8221; button for &#8220;Custom Actions&#8221;, &#8220;Email Manager&#8221;, &#8220;Conditional Formatting&#8221;, &#8220;Linked Items&#8221; and &#8220;NITRO Forms&#8221; as shown below. These steps will do the additional updates required for these NITRO components. Step 3 &#8211; Manual Steps There are some manual steps required after doing the above updates. When NITRO components are added to pages in site, URL is referenced in code added to page. For some components this is updated automatically but for others few manual steps are needed as listed below. Component SharePoint On-Premises SharePoint Online &#8211; Classic UI SharePoint Online &#8211; Modern UI NITRO Reports No changes are required Update the URL in the Crow Canyon NITRO Report web parts in the pages. Go to all the pages in site where NITRO Reports are added -&gt; Edit the Page -&gt; Edit the web part and modify the URL with new URL as shown below: Note: In the content link, only modify the part of URL that has changed. Keep rest of the URL same as earlier. No changes are required Advanced Lookup No changes are required Note: This change is required only if you are using Standard SharePoint List Forms for a list. This is not required if you are using NITRO Forms. Go to the list where advanced lookup settings are configured -&gt;Edit default SharePoint New and Edit forms from the list ribbon -&gt; Edit the web part &#8220;(Hidden)CCSAdvancedLookupContentEditor&#8221; and modify the URL which is changed in the content link. Ex: /sites/NITRO/IT/SiteAssets/CCS/AdvancedLookup/CrowCanyonAdvancedLookupContent.txt In the above example, only modify the part of URL that has changed. Keep rest of the URL same as earlier. No changes are required Branding No changes are required No changes are required Update &#8220;Application Administration&#8221; links in Modern UI based applications. Go to the site -&gt; Site Settings -&gt; Click &#8220;Crow Canyon Branding (Modern Sites)&#8221; -&gt; Expand &#8220;Application Administration&#8221; section -&gt; Modify the URL and click &#8220;Save Settings&#8221; . Custom Actions Same as SharePoint Online – Classic UI Update the hyperlinks which are using the site URL in mail templates in send mail actions. Go to the app (Custom Actions) -&gt; Edit send mail actions -&gt; Edit mail template and update the URL in the hyperlinks Same as SharePoint Online – Classic UI NITRO Workflows Same as Custom Actions Same as Custom Actions Same as Custom Actions Advanced Approvals Not Applicable Go to the Advanced Approval app -&gt; Edit the advanced approval configuration -&gt; Edit mail templates and modify the site URLs in hyperlinks. Same as online List Rollup No changes are required Go to all the pages in site where List Roll-ups are added -&gt; Edit the page -&gt; Edit the web part and modify the URL with new URL. Note: In the content link, only modify the part of URL that has changed. Keep rest of the URL same as earlier. No changes are required List Search No changes are required Go to all the pages in site where list search web part is added and reconfigure the search settings Same as SharePoint Online List View No changes are required Go to all the pages in site where Crow Canyon list view web parts are added -&gt; Edit the page -&gt; Edit the list view web part and modify the URL with new URL Note: In the content link, only modify the part of URL that has changed. Keep rest of the URL same as earlier. Go to all the pages in site where list view web parts are added -&gt; Edit the page and reconfigure the list view web part Tiles and Dials No changes are required Update URLs in &#8220;Crow Canyon NITRO Apps&#8221; link tiles. Go to the site -&gt; Site Settings -&gt; Crow Canyon Tiles and Dials -&gt; Edit &#8220;Crow Canyon NITRO Apps &#8221; -&gt; Edit each link tile and modify the URL Same as SharePoint online SharePoint Online Modern UI based application For SharePoint Modern UI based applications, please follow the steps same as &#8220;NITRO Site Repair Feature&#8221;. Additionally, go to &#8216;Site Pages&#8217; document library in the site and verify that web parts are loading correctly in each page. If any web part is not working then edit the page and then edit the web part properties. Specify the updated URL and save the page. Note: If NITRO branding is being used, edit the site page in Modern UI by appending &#8220; ?CCSMode=1 &#8221; at the end of the URL in browser. Ex: https://contoso.sharepoint.com/sites/NITRO/IT/SitePages/Home.aspx?CCSMode=1 Power Portal Applies to: SharePoint Online (Classic UI) and On-Premises Portal site repair is required for following cases: Portal site URL or URL of parent site has changed Site Collection URL has changed Portal site shows data from one or more back end sites. If URL for any of these sites has changed then reconfiguration of portal site is required (regardless of whether portal site URL has changed or not) Go to NITRO Apps page -&gt;Power Portal -&gt; Click &#8220;Repair Site&#8221; at the left bottom of the page as shown below Additional steps 1. Check top links and quick links to verify they are pointing to new URL 2. If any custom JavaScript is used in NITRO Forms / Actions / Tiles etc. and if script is using any URLs then update them as per new site URLs 3. Modify the redirect URLs in the “New Item” quick links. Ex: “New Ticket”, &#8220;New Problem&#8221; etc. 4. Update the Ticket and Portal Ticket link URLs in the notifications for Service Request and other applications. Go to Application Administration -> Notifications -> Edit all the auto notifications (Notification on Ticket Creation/Assignment/Completion) and modify the URLs in “Ticket Link URL” and “Portal Ticket Link URL”. 5. For SharePoint Online (Classic UI) and On-Premises: For document libraries &#8216;Workspaces&#8217; and &#8216;Software Workspaces&#8217;, for each page check if web parts are loading correctly. If any web part is not working then edit the page and then edit the web part properties. Specify the updated URL and save the page . Note: Ignore &#8216;Software Workspaces&#8217; document library if your application doesn&#8217;t contain Crow Canyon Assets module. About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "606",
    "name": "606 - Upgrade NITRO Secure.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/606%20-%20Upgrade%20NITRO%20Secure.html",
    "title": "Upgrade NITRO Secure",
    "text": "Upgrade NITRO Secure - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Upgrade NITRO Secure Upgrade NITRO Secure 1533 views 3 min , 20 sec read 0 Applies To SharePoint On-Premises 2013/2016/2019 Prerequisites SharePoint should be installed and configured (SharePoint 2013/2016/2019) and server should be in stable state. To install/upgrade SharePoint wsp solutions, logged in user account should have following privileges: – Domain User – Local Administrator – SharePoint Farm Administrator – Owner rights on SharePoint configuration database, Central Administration content database and Web Application content database – User should have Site Collection Administrator rights on the Site Collection Microsoft .NET Framework 4.7 or above should be installed on the SharePoint server. Make sure that SharePoint Administration and SharePoint Timer services are running in all SharePoint servers in SharePoint Farm. Summary of Steps This article has the steps to upgrade NITRO Secure solutions in SharePoint Server and update NITRO Studio for the activated sites. Download latest NITRO Secure package Update NITRO Secure Solutions Install NITRO Secure Latest Package Update NITRO Studio for the site(s) Install NITRO Workflow debugging service Install NITRO Office API document generation Detailed Steps Download latest NITRO Secure package Please contact Crow Canyon Support ( sharepointsupport@crowcanyon.com ) for the latest NITRO Secure Package. Package contains &#8216;NITROStudioSetup.zip&#8217; file. Update NITRO Secure Solutions Copy the downloaded &#8220;NITROStudioSetup.zip&#8221; file to the SharePoint Server. Note : If there are multiple SharePoint servers in the farm, copy the “NITROStudioSetup.zip” file to one of the servers in the SharePoint farm that is running “Microsoft SharePoint Foundation Web Application” service. Open Command Prompt (Run as Administrator) &#8211;&gt; navigate to the Package location &#8211;&gt; enter the below command to verify MD5 signature for the package. CertUtil -hashfile NITROStudioSetup.zip MD5 In this example, package download link is like &#8220;https://&#8230;/MD5_de609b2210c24edd9d40b691613a7574/NITROStudioSetup.zip&#8221; and the command output is matching with checksum in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this checksum is not matching. Note : MD5 signature is to be verified for the downloaded &#8216;NITROStudioSetup.zip&#8217; file and not the &#8216;NITROStudioSetup.msi&#8217; file extracted from the zip file. After MD5 signature is validated, right click on zip file and extract &#8216;NITROStudioSetup.msi&#8217; file. Right click on the .msi file, go to properties and unblock the file as shown below. We can safely ignore if the file is not blocked. Right click on the NITROStudioSetup.msi file, open properties panel, and click on ‘Unblock’ button if it is there. Run the setup (right click and then click Install). It will open the NITRO Studio Setup Wizard and click next to continue the installation. Note If we use a different install location during the original installation, please use the same path in the wizard for this install. Install latest NITRO solutions using “C:\\Program Files\\Crow Canyon\\NITRO Studio\\CrowCanyon.NITROStudioSetup.exe” (Run as administrator) Note There will be around 5 minutes downtime to SharePoint sites during the solution upgrade After this step, please wait until all the solutions (CrowCanyon.CommonUtils.wsp, CrowCanyon.NITROStudio.wsp and CrowCanyon.WorkflowManager.wsp) status is changed to “Deployed” in Central Administration, System Settings, Manage farm solutions. If there are multiple servers in SharePoint farm, we need to wait until the solution status is changed to Deployed in all servers. After the solutions were successfully deployed, go to Services.msc &#8211;&gt; restart &#8216;SharePoint Timer Service&#8217; in all SharePoint servers Install NITRO Secure Latest Package Install NITRO Secure package using “C:\\Program Files\\Crow Canyon\\NITRO Studio\\CrowCanyon.NITROHelper.exe” (Run as administrator), click &#8220;Install&#8221; button as shown below. Please repeat this for all site collections that had NITRO Studio activated already. Note: If this step is missed then it shows different Package versions in the tool shown below. Update NITRO Studio for the site(s) Open the required site collection in browser &#8211;&gt; site gear icon &#8211;&gt; Crow Canyon NITRO Studio &#8211;&gt; click “UPDATE ALL ACTIVATED SITES” button as shown below. Note Repeat this step for all the site collections that has the NITRO Studio activated already. In case of any queries/assistance regarding this, please contact sharepointsupport@crowcanyon.com Install NITRO Workflow debugging service This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to debug NITRO workflows. Please refer to this article to install this component in your SharePoint farm. Install NITRO Office API document generation This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to generate documents using Office API method in Custom Actions and NITRO workflows. Please refer to&nbsp; this &nbsp;article to install this component in your SharePoint farm. Troubleshooting Steps Symptom NITRO Apps like NITRO Workflows, NITRO Forms keep loading forever. Cause Sometimes it is possible that solutions update will be missed from one or more servers in SharePoint farm. To confirm that this is related to solution deployment issue, go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Manage Servers in this farm&#8211;&gt; note the servers that has &#8216;Microsoft SharePoint Foundation Web Application&#8217; service running as shown below. Go to SharePoint Central Administration &#8211;&gt; System Settings &#8211;&gt; Farm Management &#8211;&gt; Manage Farm Solutions &#8211;&gt; ensure the NITRO Studio solutions (crowcanyon.commonutils.wsp, crowcanyon.nitrostudio.wsp and crowcanyon.workflowmanager.wsp) are deployed to all the servers that has &#8216;Microsoft SharePoint Foundation Web Application&#8217; service running on them. Resolution If the solution(s) are not deploy for all SharePoint servers, then we need to update solutions again in the SharePoint server. Solutions to be updated are available at installation location used in the NITRO Studio Setup wizard (C:\\Program Files\\Crow Canyon\\NITRO Studio\\SP2013 or C:\\Program Files\\Crow Canyon\\NITRO Studio\\SP2016). Refer https://www.crowcanyon.help/article/381/ for the steps to update NITRO Studio solutions in SharePoint server. After this step, please wait for the solutions to deploy in all SharePoint servers and check the result. If you continue to have issues, please contact sharepointsupport@crowcanyon.com . About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "607",
    "name": "607 - Add custom validations in NITRO Forms using JavaScript.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/607%20-%20Add%20custom%20validations%20in%20NITRO%20Forms%20using%20JavaScript.html",
    "title": "Add Custom Validations In NITRO Forms Using JavaScript",
    "text": "Add custom validations in NITRO Forms using JavaScript - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Add custom validations in NITRO Forms using JavaScript Add custom validations in NITRO Forms using JavaScript 1966 views 1 min , 21 sec read 0 Applies To: &nbsp;SharePoint Online and On-premises Description NITRO Forms column validation feature supports validating column values based on: Pattern: Like phone number, email and custom regular expression based patterns Length: To check if amount of data entered in column is equal to/less than/more than the required length Value: To check if data entered in columns is matched with specified value based on the selected operator Script: For custom validation cases like to check column value based on data entered in other columns This article describes the sample use cases for custom script validations. For more details regarding validations, please refer this article . Use Case 1 Configure validation on a date column so that entered date should be at least 14 days from today. In this example we have considered &#8216;Due Date&#8217; column in Tickets list. Go to Site Contents -&gt; Tickets -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select &#8220;Due Date&#8221; column -&gt; Column Settings panel (on the right) -&gt; Add Validation. Select &#8216;Script&#8217; option and configure the custom script given below. Script: var minDate = new Date(); minDate.setDate(minDate.getDate() + 14); var DueDate = new Date(objData.ColumnValue); if(minDate > DueDate){ objData.Status = false; objData.Message = \"Due Date cannot be less than 14 days from today\"; } return objData; Sample Output: Use Case 2 Configure validation on Due Date column based on Priority column. Priority Column value Validation High Due Date &lt; Today + 7 (Due Date should not be beyond 7 days from Today) Other Due Date &lt; Today + 14 (Due Date should not be beyond 14 days from Today) Go to Tickets -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Due Date column and configure the validation as shown below. Go to Site Contents -&gt; Tickets -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select &#8220;Due Date&#8221; column -&gt; Column Settings panel (on the right) -&gt; Add Validation. Script: var DueDate = new Date(objData.ColumnValue); var Priority = objData.FormContext.fetchColumnValueUI(\"Priority1\"); if(Priority == \"High\") { var maxDate = new Date(); maxDate.setDate(maxDate.getDate() + 7); if(maxDate &lt; DueDate) { objData.Status = false; objData.Message = \"Due Date should be less than 7 days from today for high priority Tickets\"; } } if(Priority != \"High\") { var maxDate = new Date(); maxDate.setDate(maxDate.getDate() + 14); if(maxDate &lt; DueDate) { objData.Status = false; objData.Message = \"Due Date can be less than 14 days from today\"; } } return objData; In the above script, replace &#8220;Priority1&#8221; column with internal name of the column as per our requirement. About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "608",
    "name": "608 - Convert SharePoint classic site to modern site experience.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/608%20-%20Convert%20SharePoint%20classic%20site%20to%20modern%20site%20experience.html",
    "title": "Convert SharePoint Classic Site To Modern Site Experience",
    "text": "Convert SharePoint classic site to modern site experience - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Convert SharePoint classic site to modern site experience Convert SharePoint classic site to modern site experience 1727 views 1 min , 25 sec read 0 Applies to: SharePoint Online Description It is possible to convert a classic SharePoint site to modern experience. It has multiple steps involved and this article has outlined the high level steps. We can assist in converting your classic site to modern site as part of professional services. Please contact sales@crowncanyon.com for more details. Steps Switch the default experience of all lists in the classic site to modern Refer this article for steps Publish NITRO Forms in &#8220;Modern&#8221; form experience. Go to the list that has NITRO Form configured, go to list settings, open &#8220;Crow Canyon NITRO Forms&#8221;, click &#8220;Manage Forms&#8221; in ribbon, choose &#8220;Modern&#8221; under &#8220;Form Experience&#8221;, click close and then Publish the form. Repeat this for all lists that have the NITRO Forms already configured. Branding Remove the classic branding and apply modern branding Steps to remove classic branding : Go to Site settings, open &#8220;Crow Canyon Branding (Classic sites)&#8221;, go to &#8220;General Settings&#8221;, disable &#8220;Crow Canyon Application Administration&#8221; and click apply. Next go to &#8220;Remove Branding&#8221; tab and click on &#8220;Revert&#8221; button. Steps to apply modern branding: Go to Site settings, open &#8220;Crow Canyon Branding (Modern sites)&#8221;, configure as needed and save. Workspaces Any web part page that is configured in the site needs to be recreated as Site Page and reconfigure the components of that page with modern web parts. For example, in Crow Canyon applications like IT/Facilities/Requests Management/etc. classic application sites we have &#8220;Workspaces&#8221; document library that has different pages configured with list views, reports etc. All these pages need to be recreated. Also, we have another library &#8220;Administration&#8221;, all the pages in this library also need to be recreated. Quick Launch/Top Link Bar If there are any classic page URLs used in quick launch/top link bar links, replace them with corresponding modern page URLs. Steps : Go to site settings, open &#8220;quick launch&#8221;/&#8221;Top link bar&#8221; (&#8220;Navigation&#8221; if publishing feature is activated) and reconfigure the links as required. Portal Leave the current classic potral as it is. Create new modern Portal using Crow Canyon NITRO Studio. Once the modern portal is ready, update the quick launch/top link bar links in main site. Please note that this will require additional license, please contact sales@crowcanyon.com for additional license. Disclaimer: Microsoft SharePoint modern experience is not supported for the &#8220;Tasks&#8221; list type so we have to keep using classic experience for this list type. We have seen some issues like &#8220;Title&#8221; column shows some strange value in modern view and downloads an invalid file when clicked instead of opening the form. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "609",
    "name": "609 - How to insert version history button in NITRO Forms_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/609%20-%20How%20to%20insert%20version%20history%20button%20in%20NITRO%20Forms_.html",
    "title": "How To Insert Version History Button In NITRO Forms",
    "text": "How to insert version history button in NITRO Forms? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to insert version history button in NITRO Forms? How to insert version history button in NITRO Forms? 1030 views Less than a minute 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description If version history in enabled for a list, then Version history button is available in the display form by default. If users want to open version history from the item edit form, then it can be done with custom script feature of NITRO Forms. On the button click, version history for that item will open in new tab. To enable version history for a list, please go to the list -&gt; List Settings -&gt; Versioning settings -&gt; Enable item version history. Detailed Steps Version history button will be added on the edit form of the item using ‘Script Action’ feature of NITRO Forms. Detailed steps are given below. Go to the required list –&gt; List Settings -&gt;&nbsp;Crow Canyon NITRO Forms -&gt; Add a new script action button to the form at the required position: Edit the script function and set script as shown below: Script: var itemID = formContext.listItem.get_id ? formContext.listItem.get_id() : formContext.listItem.get_item('ID'); var versionHistoryURL = formContext.formSetting.WebURL + \"/_layouts/15/Versions.aspx?list=\" + formContext.formSetting.ListID + \"&amp;ID=\"+itemID; window.open(versionHistoryURL,\"_blank\"); functionCallback(); Configure permissions for script action to show “Version History” button only in Edit form: Sample Output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "610",
    "name": "610 - Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/610%20-%20Use%20%E2%80%98Form%20Event%20Actions%E2%80%99%20feature%20of%20NITRO%20Forms%20to%20add%20custom%20functionality%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality Crow Canyon Software S",
    "text": "Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality 2936 views 2 min , 45 sec read 6 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019 Description NITRO Forms have lot of built-in functionality to customize layout, design and functionality as required in common business applications. For any specific cases not covered directly by the configurations, custom JavaScript and CSS can be added. These custom scripts can be invoked on form load, on column values change and before/after item submit. For all these cases, scripts can be invoked conditionally based on values entered in the form. This article describes some sample use cases to configure form event actions in NITRO forms. Use Case 1 &#8211; Whenever value of a column changes, take part of the value entered in column and put it in another column As an example, we will read value from ‘Requester Email’ column in Tickets list and take first six characters and put it in another column ‘Email Name’. As per your use case you can use different columns and update the script to extract the required value. Detailed Steps Go to Ticket list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced section in left panel -&gt; Form Event Actions and configure new form event action as shown below. Configure Update Form Controls as shown below: Script: var str = _ccs_FormUI.fetchColumnValueUI(\"RequesterEmail\"); if (str &amp;&amp; str.length &gt;= 6) { &nbsp; &nbsp;return str.substring(0, 6); } else if (str) { &nbsp; &nbsp;return str; } return ‘’; Note: In the above script replace “RequesterEmail” with internal name of the required column on which you want to configure this action. To know the internal name of the column, go to list settings -&gt; Edit the required column -&gt; Get the internal name of the URL in the browser as shown below. Sample Output Use Case 2 &#8211; Concatenate values in two columns using Form Event Actions We have taken example to concatenate ‘First Name’ and ‘Last Name’ column values and put the concatenated value in ‘Full Name’ column using form event actions. Detailed Steps Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (in ‘Advanced’ section) and configure as shown below: Script: var FirstName = _ccs_FormUI.fetchColumnValueUI(\"FirstName\"); var LastName = _ccs_FormUI.fetchColumnValueUI(\"LastName\"); if(FirstName &amp;&amp; LastName){ return FirstName+\" \"+LastName; } else if(FirstName) { return FirstName; } else if (LastName) { return LastName; } else { return \"\"; } In above script, replace ‘FirstName’ and ‘LastName’ with internal names of the respective columns. Sample Output Use Case 3 &#8211; Show/Hide ‘Edit’ button dynamically in item display form In this sample use case, we have configured form event action to show/hide ‘Edit’ button dynamically in item display form. In this example, &#8216;Edit&#8217; button will be hidden when &#8216;Status&#8217; is done, otherwise, it will be visible. Detailed Steps 1. Configure form event action as shown below. Below action will be executed in display form when status is &#8216;done&#8217;. Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (in ‘Advanced’ section) and configure form event action as shown below: Configure ‘Execute Script’ action with the below script. Script: setTimeout(function(){$(\"#btnEdit\").hide(); $('&#91;buttontype=\"edit\"]').parent().hide(); }, 100); Sample Output: Use Case 4 &#8211; Open the edit form of lookup item Sample list schema and use case Standard SharePoint list. ‘Category’: Single selection enabled NITRO lookup column ‘Edit’ link will open edit form of selected category in new tab. Steps to configure Add ‘Line/HTML’ control below the lookup column. Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Add ‘Line/HTML’ control (under ‘Form Controls’ section) below the lookup column. 2. Update the ‘Line/HTML’ control code with below script in ‘Line/HTML Settings’. Script: &lt;div align=\"right\" id=\"editCategory\" style=\"padding-right:10px;\"&gt;&lt;/div&gt; 3. Configure form event actions as shown below: Configure execute script action: Script: var CategoryID = _ccs_FormUI.fetchColumnValueForLookup(\"Category\"); if(CategoryID &amp;&amp; CategoryID != 0){ var editLink = \"&lt;a target='_blank' href='https://contoso.sharepoint.com/sites/helpdesk/it/SitePages/CCSEditForm.aspx?ListID=c5223fe0-157f-4729-8f22-9d68b8128bea&amp;ItemID=\" + CategoryID +\"'>Edit&lt;/a>\"; $('#editCategory').html(editLink); } else{ $('#editCategory').html(\"\"); } functionCallback(); Note : Replace ‘Category’ with NITRO lookup column internal name. Replace the URL with lookup list edit form URL. Use Case 5 &#8211; Auto set default value for date column Sample list schema and use case Standard SharePoint list ‘Due Date’: Date column Auto set ‘Due Date’ column value seven days from today on form load Steps to configure 1. Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in left-hand panel) and configure FEA on load as shown below: Configure script function: Script : var now = new Date(); var DueDate = now.setDate(now.getDate() + 7); return DueDate; Note: In this sample, we are setting ‘Due Date’ column value seven days from today. It is possible to set number of days from today as per requirement by replacing ‘7’ in the above script. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "611",
    "name": "611 - NITRO Print – Advanced formatting using JavaScript.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/611%20-%20NITRO%20Print%20%E2%80%93%20Advanced%20formatting%20using%20JavaScript.html",
    "title": "NITRO Print – Advanced Formatting Using JavaScript",
    "text": "NITRO Print – Advanced formatting using JavaScript - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Print &#8211; Advanced formatting using JavaScript NITRO Print &#8211; Advanced formatting using JavaScript 2608 views 3 min , 57 sec read 3 Applies To: SharePoint Online and On-premises NITRO activated sites Introduction NITRO Print supports standard print with table layout for list item columns. It also supports rich text based templates with column placeholders to create the required print format. For more information on rich text templates, please refer this article . Additionally, JavaScript can be used to format print content for advanced requirements. Print process follows this flow: Define the print template with required format in NITRO print app settings List Print (multiple items from the view) or Item print (single item) Table type or Rich text template Specify the JavaScript for custom formatting User invokes List or Item print in SharePoint UI NITRO print generates the printable content by using the template and replacing the column placeholders with data from the list item(s) NITRO print executes the custom JavaScript on generated printable content to get the final printable content User can directly print or generate PDF/image or send mail using the final content Configuration To configure custom JavaScript, navigate to list settings -&gt; Crow Canyon Print Manager Settings -&gt; Edit existing list/item print template or create new print template -&gt; &#8216;Advanced&#8217; tab -&gt; Custom Script How to get column element in JavaScript Column placeholders in print template are replaced by column label and column value in printable content. Column element in HTML has a &#8216;name&#8217; attribute with a specific syntax so that it can be queried easily in JavaScript. // Format for column name attribute value: ccs_control_&lt;Column Internal Name&gt;_&lt;List Item Id&gt; // Example HTML: &lt;td style=\"width:82.2526%;\"&gt; &lt;span name=\"ccs_control_Priority1_1\"&gt;Normal&lt;/span&gt; &lt;/td&gt; Sample JavaScript code to get the HTML element of column label with internal name &#8216;Category1&#8217;: // get element for column with internal name Category1 var colElement = $('&#91;name=\"ccs_control_Category1_' + objData.CurrentItem.get_id() +'\"]'); To get multiple column elements: var arrColumns = &#91;\"Category1\",\"IssueType\",\"DueDate1\",\"Priority1\"]; for (var i = 0; i &lt; arrColumns.length; i++) { var colElement = $('&#91;name=\"ccs_control_'+arrColumns&#91;i]+'_'+objData.CurrentItem.get_id()+'\"]'); // do something with column element } To get value of a column from item (not from HTML). The value can be used for some checks like in case of permissions check: // Use column internal name to get the value from the current item var columnValue = objData.CurrentItem.get_item(&lt;Column Internal Name&gt;); JavaScript Examples 1. Item Print: Remove column label from print content if column value is blank Some column values may be entered later in the business process. If item is printed before the values are filled, then column label will be in the print but not the value. One option is to have separate print templates for different stages. Instead of managing multiple templates, custom JavaScript can be used to remove rows of columns that do not yet have a value. In this example, script checks for value of &#8216;Category1&#8217;, &#8216;IssueType&#8217;, &#8216;DueDate1&#8217; and &#8216;Priority1&#8217; columns and removes the column row if column value is blank. Print Template: Custom Script: Script used in above: var arrColumns = &#91;\"Category1\",\"IssueType\",\"DueDate1\",\"Priority1\"]; for (var i = 0; i &lt; arrColumns.length; i++) { var ColumnValueElement = $('&#91;name=\"ccs_control_'+arrColumns&#91;i]+'_'+objData.CurrentItem.get_id()+'\"]'); if(ColumnValueElement.text().trim() == \"\"){ ColumnValueElement.parent().parent().hide(); } } functionCallback(); Note: In above script modify the column internal names as per columns in your list 2. Item Print: Show multi-choice column as check boxes Multi-choice column has the text of selected options and that is what gets printed by default. Options that are not selected are not shown in print. Frequently it is required to print these as check boxes with selected values as checked, same way as it appears on NITRO Forms. Below example script changes the print content of a multi-choice column with name &#8216;Tags&#8217; by replacing the text value with check boxes. Script used in above: var columnInternalName = \"Tags\"; // get column choice options var arrAllPossibleValues = objData.Dic_ListColumns&#91;columnInternalName].Choices.results; // get column value in current item var columnValue = objData.CurrentItem.get_item(columnInternalName); // build check boxes html based on options and column value var buildColumnValue = \"\"; for (var i = 0; i &lt; arrAllPossibleValues.length; i++) { var val = arrAllPossibleValues&#91;i]; var selectedText = \"\"; if (columnValue &amp;&amp; columnValue.indexOf(val) &gt;= 0) { // Check the box if value is in item, otherwise not selectedText = 'checked=\"checked\"'; } buildColumnValue += '&lt;div&gt;&lt;input disabled=\"disabled\" type=\"checkbox\" value=\"' + val + '\" ' + selectedText + '&gt;&lt;label&gt;' + val + '&lt;/label&gt;&lt;/div&gt;'; } // Get column value document element var columnElement = $('&#91;name=\"ccs_control_' + columnInternalName + '_' + objData.CurrentItem.get_id() + '\"]'); columnElement.empty(); columnElement.append(buildColumnValue); functionCallback(); Sample Output: 3. Item Print: Custom permission checks to disallow item printing Custom script can be used to disallow printing based on permissions that logged-in user has, item column values etc. If permissions are not matched then print content can be replaced with a custom message. Below script checks if logged-in user is a member of &#8216;Managers&#8217; group, if not then a message is shown instead of print content. The script can be updated to check item column values if required. Custom Script: Script used in above: var groupName = \"Managers\"; var errorMessage = \"Access denied.\"; var oUser = objData.SPContext.get_web().get_currentUser(); var oGroups = oUser.get_groups(); objData.SPContext.load(oGroups); objData.SPContext.executeQueryAsync( function() { var flagUserIsMember = false; var groupsInfo = ''; var groupsEnumerator = oGroups.getEnumerator(); while (groupsEnumerator.moveNext()) { var oGroup = groupsEnumerator.get_current(); if(oGroup.get_title().toLowerCase() == groupName.toLowerCase()){ flagUserIsMember = true; } } if(!flagUserIsMember){ $(\"#\" + objData.ControlId ).empty(); $(\"#\" + objData.ControlId ).append('&lt;div style=\"Font-size: 14pt; color: #ff0000; padding: 10px;\"&gt;'+errorMessage+'&lt;/div&gt;'); } functionCallback(); }, function() { functionCallback(); }); 4. List Print: How to show images for choice column values In this sample we have a table of list items in print content. For a column with internal name &#8216;Priority1&#8217; and having values &#8216;High&#8217;, &#8216;Normal&#8217; and &#8216;Low&#8217;, we want to replace priority text in each row with corresponding image. Images corresponding to each priority value are are uploaded in &#8216;Site Assets&#8217; document library in same SharePoint site. Custom Script: Script used in above: var columnInternalName = \"Priority1\"; var objIconValue= {\"High\" : '/SiteAssets/High.png', \"Normal\":'/SiteAssets/Normal.png', \"Low\": '/SiteAssets/Low.png'}; $('&#91;name^=\"ccs_control_'+columnInternalName+'_\"]').each( function(index){ var element = $('&#91;name^=\"ccs_control_'+columnInternalName+'_\"]')&#91;index]; var val = $(element).text(); if(objIconValue&#91;val]){ $(element).empty(); $(element).append(\"&lt;img src='\" + _spPageContextInfo.webAbsoluteUrl + \"/\" + objIconValue&#91;val] + \"' /&gt;\"); } }); functionCallback(); Sample Output: 5. Item Print: Show fixed image size in the PDF In this sample use case, we have to add a table and insert images in table cells in the item print template, that is, add ‘Picture’ type column placeholders in table cells. It is required to scale down images to display fixed image size in the PDF file. Custom Script: The script used above: $(\"head\").append(\"&lt;style>#templateresults img {width: 100%;height: 100%;}&lt;/style>\") functionCallback(); Sample Output About Prakash Arya View all posts by Prakash Arya &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "612",
    "name": "612 - NITRO Print App – Remove border for rich text print templates.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/612%20-%20NITRO%20Print%20App%20%E2%80%93%20Remove%20border%20for%20rich%20text%20print%20templates.html",
    "title": "NITRO Print App – Remove Border For Rich Text Print Templates",
    "text": "NITRO Print App – Remove border for rich text print templates - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Print App – Remove border for rich text print templates NITRO Print App – Remove border for rich text print templates 1374 views Less than a minute 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes how to remove border from the printable content for ‘Rich text’ type print templates. It is applicable for both item print templates and list print templates. Detailed Steps Go to List Settings -&gt; Crow Canyon Print Manager Settings -&gt; Edit the Print settings and add the below style to HTML source code at the top of the Print template. Configure as shown below: Style: &lt;style&gt;#results{border-style: none !important;}&lt;/style For more details on rich text based print templates, please refer below article: https://www.crowcanyon.help/article/378/ About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "613",
    "name": "613 - Invoke REST APIs from NITRO Components.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/613%20-%20Invoke%20REST%20APIs%20from%20NITRO%20Components.html",
    "title": "Invoke REST APIs From NITRO Components",
    "text": "Invoke REST APIs from NITRO Components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Invoke REST APIs from NITRO Components Invoke REST APIs from NITRO Components 3091 views 12 min , 32 sec read 27 Applies To: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Introduction Most modern cloud-based software provides APIs to enable integration between different systems. Crow Canyon NITRO Studio components can connect to REST based APIs to fetch and update the data in external systems. REST integration can be added in following components: NITRO Custom Actions: Call REST APIs with and without authentication to fetch/update data in external systems NITRO Workflows: Call REST APIs with and without authentication to fetch/update data in external systems NITRO Forms: Using custom JavaScript option, invoke the required REST API and process the response. Response can be used to populate data on the form or update data in SharePoint list items Web service call can be used to create/update records in external system. Or the response returned by the web service can be used to create/update records in SharePoint (list items). Note: This document shows images from NITRO Custom Actions. Functionality is mostly similar in NITRO Workflows and document mentions wherever there is any difference. &nbsp;‘Invoke Web Service’ feature in NITRO Workflows and Custom Actions Call web services requiring different types of authentication Insert/Update data in external systems as per the business flow in SharePoint. E.g., if Purchase Order is created in SharePoint application, then create/update a record in Salesforce Fetch data from external system and create/update records in SharePoint. For e.g., fetch details corresponding to a Purchase Order in SharePoint and update its status as per the value in external system. If response contains multiple records, then those can be created in SharePoint as separate list items with mapping of response elements to SharePoint list columns Placeholder support in URL, headers and data of the request. These placeholders are replaced with actual values from the SharePoint item at the time of execution Sensitive information like username, password, client secret etc. is encrypted using AES encryption and is never available in client side as plain text. For OAuth 2.0 authentication, initial call to get access token is made from server side only so that Client Id and Client Secret are never accessible to end users on client side For custom authentication scenarios, request to get access token can be done as a separate action. Pass the required data to the web service and obtain the access token. Then use this token as a placeholder in second call to perform the required web service operation Pre-requisites to configuring web service action in NITRO components URL of the web service Authentication mechanism and corresponding details like username and password for basic authentication and Client Id/Secret etc. for Auth 2.0 Headers required by the API (e.g. ‘Accept’ header with value ‘application/json;odata=verbose’) Request body syntax Mapping of placeholders of SharePoint data to URL, Headers, Body and Authentication settings Cross-origin HTTP requests are permitted for your scenario. That is, your API supports calls from SharePoint pages if using client-side execution. Refer this article for more details Ensure that HTTP Request can be made from the postman application with above details Structure of the response and how to map it to SharePoint for insert/update If REST service call is done from SharePoint pages (NITRO Forms and client-side option in Custom Actions), only https services can be invoked. If REST is invoked from server side (NITRO Workflows and server-side option in Custom Actions), both http and https services can be invoked Invoke Web Service Action Web Service Settings Execute on Client: HTTP request will be made using JavaScript code running in the browser. In this case it is mandatory to have an SSL enabled (https) service as SharePoint pages do not allow calling non-secure services. Also, cross-origin calls should be allowed (refer this article ) Server: HTTP Request will be made from server-side code running in Crow Canyon subscription of Microsoft Azure Select the execution based on web service request URL accessibility. URL Specify the web service request URL. We can also use column placeholders in the URL Syntax: https://serviceURL/%%[Column Display Name|Column Internal Name]%% Ex: https://reqres.in/api/users/%%[ID|ID]%% Http Method Select the required http method GET POST PUT DELETE JSONP Headers Headers are an important part of the API request and response as they represent the associated meta-data. Specify the required headers for the web service as per your API documentation. Column placeholders can be used for the headers if required. Syntax : %%[Column Display Name|Column Internal Name]%% Ex : %%[Title|Title]%% Authentication Select required authentication method used by your API: No Authentication For web services that doesn’t require any authentication Basic Authentication Username and password based authentication OAuth 2.0 Specify the required details i.e. Grant Type, Access Token URL, Client ID, Client Secret and other auth params as required by the API. Please refer your API documentation for more details Examples given below use OAuth 2.0 for SharePoint Online REST API. Note that parameters can be different for other APIs. Bearer Token Specify Bearer Token in format given below. This token can be obtained with a separate call as explained in sample cases below: Bearer &lt;token&gt; Sample configurations for invoking REST APIs Below samples consider different cases of authentication and response types. You can refer these to configure as per the authentication required by your API and then use the response as per your use case. Invoke OAuth 2.0 API to update a record In this sample we invoke REST API on a SharePoint Online tenancy (different from the tenancy in which this custom action is configured). SharePoint REST API requires OAuth 2.0 authentication. API will update a list item in target tenancy. Response of the API is not used to create/update any record in source tenancy. In below example, item in Tickets list is updated in target SharePoint tenancy. We need the Client Id and Client Secret of an app that is installed in target site that has the required app only access permissions to update the item in Tickets list. URL SharePoint Web API URL that will be similar to below, replace the highlighted parts as per your site and list: https:// contoso .sharepoint.com/sites/ Team /_api/web/lists/getbytitle(&#8216; Tickets &#8216;)/Items(%%[ID|ID]%%) This URL will access the item in Tickets list with the required Id. Placeholder “%%[ID|ID]%%” in the above URL will be replaced by the current item Id in source SharePoint site. You can use the required placeholder column/variable or a hard-coded value as per your use case. Http Method Http Method: “Post” Headers Note that your API may require different headers, please refer the documentation of your API Keys Values Accept application/json;odata=verbose content-type application/json;odata=verbose IF-MATCH * X-HTTP-Method MERGE Authentication Select OAuth 2.0 as authentication type and then specify Grant Type, Access Token URL, Client ID, Client Secret Grant Type API may require a username and password along with client Id and secret for authentication. Some APIs can be invoked without user credentials (as in this example) and do not require a username and password Access Token URL Access Token URL will be like https://accounts.accesscontrol.windows.net/ {{realm}} /OAuth2/V2.0/token {{realm}} is your SharePoint environment tenant Id. Please refer this link for details on how to get it. Client ID Client Id of the SharePoint add-in (app) that is installed in target site Client Secret Client secret of the SharePoint add-in (app) that is installed in target site Resource Syntax for resource parameter is: {{principal}}/{{targetHost}}@{{realm}} {{principal}}: “00000003-0000-0ff1-ce00-000000000000” is the identifier for SharePoint {{targetHost}}: yourtenantname .sharepoint.com Ex: contoso.sharepoint.com {{realm}}: your SharePoint environment tenant Id. Refer this link for details on how to get it Data In this example we used data as required by SharePoint REST API to update a list item. Data can contain placeholders that will be replaced by actual values during execution. {__metadata:{'type':'SP.Data.TicketsListItem'},'RequestStatus':'Closed','WorkLog':'%%&#91;Work Log|Work Log]%%','Priority':'%%&#91;Priority|Priority1]%%' } Syntax for column placeholders: [Column Display Name|Column Internal Name] Example: %%[Work Log|Work Log]%% Bearer Token Authentication This example uses a separate action to get the access token from the API and then use it in next action to make the actual API call for the business process. This can be used if your API authentication follows a model not yet supported in NITRO. You can pass the required authentication parameters in the header and body of first action and obtain the access token. In next action this token can be used to make the required API call. This case is similar to above case as we are updating a list item in a different SharePoint tenancy. Only difference is in terms of how the access token is obtained and used in the second action that calls the API. Custom Action: Action 1: Get API access token This action will get the access token in the response to be used in next action for the API call. Note that this action doesn’t use any authentication. Please refer your API documentation for the header and body parameters required for this call. URL : Specify the URL to get the access token: E.g. for SharePoint Online: https://accounts.accesscontrol.windows.net/ {{realm}} /OAuth2/V2.0/token In the above URL, replace {{realm}} with your SharePoint tenant Id. HTTP Method : POST Headers : Key Value ContentType application/x-www-form-urlencoded Data : grant_type=client_credentials&amp;client_id=&lt;Client Id&gt;&amp;client_secret=&lt;Client Secret&gt;&amp;resource= Specify the ResourceID parameter Note: Replace the replaceable text values with actual values from your environment. Please refer OAuth2.0 documentation for more details about the Client Id, Client Secret, resource and grant type. Action 2: Close Ticket This action will use the access token response from above action to invoke the actual REST API. This action will update the Tickets list item in target SharePoint tenancy as an example: URL : https://contoso.sharepoint.com/sites/Team/_api/web/lists/getbytitle(&#8216;Tickets&#8217;)/Items(%%[ID|ID]%%) Placeholder “%%[ID|ID]%%” in the above URL will be replaced by the current item id. Http Method : Post Headers: Keys Values Accept application/json;odata=verbose content-type application/json;odata=verbose IF-MATCH * X-HTTP-Method MERGE Authentication: Authentication Type: Bearer Token Token : %%$jsonpath2(Get API access token##Value,@$.token_type)%% %%$jsonpath2(Get API access token##Value,@$.access_token)%% In the above, &nbsp;“%%$jsonpath2(Get API access token##Value,@$.token_type)%%” will return the token type from “GetAuth” action response. “%%$jsonpath2(Get API access token##Value,@$.access_token)%%” will return the access token from “GetAuth” action response. Note: We can also pass the access token in Headers by specifying the “Authorization” parameter in headers as shown below. For this case select authentication as “No Authentication”. Key Value Authorization %%$jsonpath2(Get API access token##Value,@$.token_type)%% %%$jsonpath2(Get API access token##Value,@$.access_token)%% Data: {__metadata:{'type':'SP.Data.TicketsListItem'},'RequestStatus':'Closed','WorkLog':'%%&#91;Work Log|Work Log]%%','Priority':'%%&#91;Priority|Priority1]%%' } In the above example, we can directly specify the column value or we can use the column placeholders. Syntax for column placeholders: [Column Display Name|Column Internal Name] Ex: %%[Work Log|Work Log]%% Basic Authentication In this configuration we will invoke a Web API that requires username and password for authentication. API response is not used to create/update any record in SharePoint. Example API used here invokes an Azure web job Custom Action : Authentication : How to use web service response in Create/Update item action for single and multiple records Examples given below use the response returned from the REST API calls to create/update list items in SharePoint. API response may contain a single record or a record set with multiple records. For illustration we are using a publicly available REST API that doesn’t require authentication: https://reqres.in/api/users/ If your API requires authentication, then refer earlier examples in this article to add authentication parameters to the call. Using $jsonpath() function JSONpath2 function is used to parse REST API response that is in JSON format. It requires the response and JSON path as input and extracts the required information from the response for use in subsequent actions. Syntax : $JSONPath2(Value/placeholder,@JSONPath) Single Record In this sample we invoke REST API that doesn’t require any authentication and returns a single record. Returned response is used to update SharePoint list item. Invoke Web Service action is used to read details of a user from an external service. User details are then updated in SharePoint list item by mapping response elements like first name, last name and email to corresponding columns of the SharePoint list item using the create/update list item actions. Web Service URL used in this example is a publicly available free REST API: https://reqres.in/api/users/%%[UserId|UserId]%% During execution, placeholder part in &nbsp;URL (“%%[UserId|UserId]%%”) will be replaced by the value of “UserId” column of the item on which custom action is invoked. To configure this, go to the list -&gt; List Settings -&gt; Crow Canyon Custom Actions and configure an Invoke Web Service action as shown below. For this custom action configuration, we have defined two variables: UserEmail and UserFirstName. These variables will be used to store specific values extracted from the web service JSON response using the JSONpath2 function. These variables will then be used to set these values in columns of a list item. Configure Invoke Web Service action as shown below. Please note the “Define Variable Mappings” section at the bottom. Service response is a JSON and we need to extract the values as per the structure of the JSON and put it in variables for subsequent usage: Web Service Response: This API call returns below response. This response is available in Custom Actions as &lt; Invoke Web Service Action Name &gt;##Value (e.g. User##Value). We can save the entire response to a column in list by using this expression. We can parse it to extract specific values and store in variables for later use. Please note that JSON path will be different as per the response format of your API. Response: { \"data\": { \"id\": 2, \"email\": \"janet.weaver@reqres.in\", \"first_name\": \"Janet\", \"last_name\": \"Weaver\", \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\" } } Values stored in the variables using JSONPath function based on above response: UserEmail Expression configured: $JSONPath2(User##Value,@$.data.email) Value extracted: janet.weaver@reqres.in UserFirstName Expression configured: $JSONPath2(User##Value,@$.data.first_name) Value extracted: Janet These variable values can now be used in other actions. For example, to use the email address value, we can use expression: UserEmail##Value Please refer below image for the usage of variables in update item action: Multiple Records In this sample we invoke REST API that doesn’t require any authentication and returns multiple records. Returned response is used to create multiple list items in SharePoint. Invoke Web Service action is used to read details of all users from an external service. User details from the response are used to create multiple list items in SharePoint by mapping response elements like first name, last name and email to corresponding columns of the SharePoint list item in the create item action. Web Service used in this example is a publicly available REST API: https://reqres.in/api/users To configure this, go to the list -&gt; List Settings -&gt; Crow Canyon Custom Actions and configure an Invoke Web Service action as shown below. For this example, we have defined a variable: “AllUsersData”. This variable will be used to store the user records from the web service response. This variable is then to create items in a list. Configure Invoke Web Service action as shown below. Please note “Define Variable Mappings” section at the bottom. Service response is a JSON and we need to extract the values as per the structure of the JSON and put it in variables for subsequent usage: Web Service Response: This API call returns below response. This response is available in Custom Actions as &lt; Invoke Web Service Action Name &gt;##Value (e.g. GetAllUsersData##Value). We can save the entire response to a column in list by using this expression. We can parse it to extract specific values and store in variables for later use. Please note that JSON path will be different as per the response format of your API. Response (truncated) is shown below. ‘GetAllUsersData’ variable will have the highlighted part from response as it is the extracted ‘data’ element from the response: { \"page\": 1, \"per_page\": 6, \"total\": 12, \"total_pages\": 2, \"data\": &#91; { \"id\": 1, \"email\": \"george.bluth@reqres.in\", \"first_name\": \"George\", \"last_name\": \"Bluth\", \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/calebogden/128.jpg\" }, { \"id\": 2, \"email\": \"janet.weaver@reqres.in\", \"first_name\": \"Janet\", \"last_name\": \"Weaver\", \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/josephstein/128.jpg\" }, { \"id\": 3, \"email\": \"emma.wong@reqres.in\", \"first_name\": \"Emma\", \"last_name\": \"Wong\", \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/olegpogodaev/128.jpg\" } ] } Use Add List Item action to create items in SharePoint list for each of the user records in above JSON response. Column Mappings: Column Name Value FirstName @{CollectionValue}first_name LastName @{CollectionValue}last_name Email @{CollectionValue}email UserID @{CollectionValue}id Result: Using $xpath() function Xpath function can be used when the web service response is in Xml format. It requires the response and Xpath as input and extracts the required information from the response for use in subsequent actions. Syntax: $xpath(InvokeWebServiceActionName##Value,xpath) In this example, we have configured an Invoke Web Service custom action to read the city temperature, humidity, pressure and then use these details in column mappings of Create/Update list item actions. Xpath is analogous to JSONPath2 function as it parses the response to extract the required data for subsequent usage. Xpath function syntax is same for both NITRO Workflows and Custom Actions. Single Record In this sample, we invoke REST API that doesn’t require any authentication and returns a single record. Returned response is used to update SharePoint list item. Invoke Web Service custom action is to read the weather details like temperature, humidity, pressure etc. and use these details in column mappings of create/update list item actions. Web service URL used in this example is publicly available free REST API: https://samples.openweathermap.org/data/2.5/weather?q=London&#038;mode=xml&#038;appid=b6907d289e10d714a6e88b30761fae22 To configure this, go to the list -&gt; List Settings -&gt; Crow Canyon Custom Actions and configure an Invoke Web Service action as shown below. Sample Response XML: &lt;current&gt; &lt;city id=\"2643743\" name=\"London\"&gt; &lt;coord lon=\"-0.13\" lat=\"51.51\"/&gt; &lt;country&gt;GB&lt;/country&gt; &lt;sun rise=\"2017-01-30T07:40:36\" set=\"2017-01-30T16:47:56\"/&gt; &lt;/city&gt; &lt;temperature value=\"280.15\" min=\"278.15\" max=\"281.15\" unit=\"kelvin\"/&gt; &lt;humidity value=\"81\" unit=\"%\"/&gt; &lt;pressure value=\"1012\" unit=\"hPa\"/&gt; &lt;wind&gt; &lt;speed value=\"4.6\" name=\"Gentle Breeze\"/&gt; &lt;gusts/&gt; &lt;direction value=\"90\" code=\"E\" name=\"East\"/&gt; &lt;/wind&gt; &lt;clouds value=\"90\" name=\"overcast clouds\"/&gt; &lt;visibility value=\"10000\"/&gt; &lt;precipitation mode=\"no\"/&gt; &lt;weather number=\"701\" value=\"mist\" icon=\"50d\"/&gt; &lt;lastupdate value=\"2017-01-30T15:50:00\"/&gt; &lt;/current&gt; In the above example, City##Value is reference to the response of the Invoke Web Service action. So, it will contain the entire XML listed above. Xpath function will extract the specific values from this Xml as per the Xml node path given in second parameter. Column Mappings: Column Name Value Title $xpath(City##Value,@current/city/@name) &nbsp; Country $xpath(City##Value,@current/city/country) &nbsp; Humidity $xpath(City##Value,@current/humidity/@value) &nbsp; Pressure $xpath(City##Value,@current/pressure/@value) &nbsp; Multiple Records: If Xml contains a collection of nodes, then those can be used to create multiple list items in SharePoint. To use the update/create item action for attribute/element collection, save the web service Xml response in a variable with item collection and use later in field mappings of create item action by using the below syntax: @{CollectionValue}tag/attributename Invoke Dropbox API Dropbox API allows users to work with files in Dropbox. In this article, we have given examples to create a folder and a file in Dropbox. This is done by using Dropbox REST API in Crow Canyon Invoke Web Service custom action. To work with Dropbox API, we need to generate the access token for the Dropbox API. Please follow below steps to generate access token. Generate Access Token for Dropbox API Login to the Dropbox in the browser and navigate to this page: https://www.dropbox.com/developers/apps/create Select “Dropbox API” =&gt; “Full Dropbox”, specify a name for the App and create it On next page, click “Generate Access Token”. Note down the token as it is required for configurations For more details on Dropbox API, please refer this article: https://www.dropbox.com/developers/documentation/http/documentation Create a File in Dropbox Below example shows how to create a file with content from the ‘Description’ and ‘Worklog’ column of the Ticket item and upload the file in “Ticket” folder. Note that Tickets is a list, and these are multi-line text columns in that list. URL: https://content.dropboxapi.com/2/files/upload HTTP Method: POST Headers: Key Value Content-Type application/octet-stream Dropbox-API-Arg {\"path\": \"/Tickets/%%[ID|ID]%%.txt\",\"mode\": \"add\",\"autorename\": true,\"mute\": false,\"strict_conflict\": false} In the above, “Path”: “/Tickets/%%[ID|ID]%%.txt” “Tickets”&nbsp;&nbsp; &#8211; Name of the folder “%%[ID|ID]%%” – Name of the file (ID placeholder will be replaced with Id of the SharePoint list item on which this action is invoked) Authentication: Enter the access token generated above. Data: %%[Description|Description]%% %%[WorkLog|WorkLog]%% Create a folder in Dropbox using Dropbox API Below example shows how to create a folder in Dropbox URL: https://api.dropboxapi.com/2/files/create_folder_v2 HTTP Method : POST Headers: Key Value Content-Type application/json Authentication: Select “Bearer Token” and enter the access token generated above. Data: {&#8220;path&#8221;: &#8220;/Ticket_%%[ID|ID]%%&#8221;,&#8221;autorename&#8221;: true} Here: “Tickets_%%[ID|ID]%%” is the name of folder to create. ID placeholder will be replaced with Id of the SharePoint list item on which this action is invoked. “autorename” parameter is used to rename the folder if a folder with same name already exists. More details of this and other parameters can be found in Dropbox documentation. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "614",
    "name": "614 - Common Steps In NITRO Apps Configurations.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/614%20-%20Common%20Steps%20In%20NITRO%20Apps%20Configurations.html",
    "title": "Common Steps In NITRO Apps Configurations",
    "text": "Common Steps In NITRO Apps Configurations - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Common Steps In NITRO Apps Configurations Common Steps In NITRO Apps Configurations 1496 views 1 min , 49 sec read 0 Applies To : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description There are some common steps that we perform while configuring NITRO Apps such as extracting list ID from the URL, enable version history, etc. We might perform these steps to change some list settings or these steps can be the part of main configurations. This article lists some of the use cases for common steps in NITRO Apps configurations: How to navigate to list settings page How to get the internal name of a list column How to get the Id of a SharePoint list How to enable version history for list How to open list forms in a dialog How to create a column with internal name How to navigate to list settings page To navigate to the list settings page, please go to Site Contents -&gt; Navigate to the required list -&gt; List settings from the list ribbon. How to get the internal name of a list column To get internal name of the column, please go to Site Contents -&gt; Navigate to the required list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select the required column on the form and find the column internal name in column settings Alternatively, go to the list settings -&gt; Edit the column and find the internal name of the column at the end of the URL in the browser. How to get the Id of a SharePoint list To know the SharePoint list ID, please go to Site Contents -&gt; Navigate to the required list -&gt; List settings and find the list Id at the end of the URL. How to enable version history for list The SharePoint Version History feature makes it possible to see and restore earlier version of list items. To enable version history, please go to Site Contents -&gt; Navigate to the required list -&gt; List settings -&gt; Versioning settings under General settings and enable item version history. How to open list forms in a dialog SharePoint list forms (new, edit and display) can be opened in a dialog box instead of navigating to the full page. Please go to Site Contents -&gt; Navigate to the required list -&gt; List settings -&gt; Advanced settings under General settings and enable Launch forms in a dialog. How to create a column with specific internal name SharePoint list columns have a display name and an internal name. Once created, display name can be changed but internal name is not editable. SharePoint automatically generates internal name of the column from its display name. Internal name cannot have spaces and special characters so it can be different from display name. For example, if we create a column with name &#8216;Task Status&#8217;, SharePoint will generate its internal name as &#8216;Task_x0020_Status&#8217;. Here space is replaced with equivalent Unicode character value. To create a column with specific internal name, during column creation we need to specify the display name without any special characters and whitespace characters. For example, in this case we will create the column with display name as &#8216;TaskStatus&#8217;. After creating the column, we can edit the column from list settings page and modify the display name (&#8216;Task Status&#8217;). About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "615",
    "name": "615 - How to configure Teams connection in NITRO_.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/615%20-%20How%20to%20configure%20Teams%20connection%20in%20NITRO_.html",
    "title": "How To Configure Teams Connection In NITRO",
    "text": "How to configure Teams connection in NITRO? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to configure Teams connection in NITRO? How to configure Teams connection in NITRO? 2082 views 1 min , 53 sec read 0 Applies To Crow Canyon NITRO activated sites in SharePoint Online Description Crow Canyon NITRO components like Bots, Workflows and Custom Actions can connect to Microsoft Teams for various operations. For these operations NITRO components need to connect to Teams and this article describes the steps for the same. There are two options for Teams connection: Crow Canyon Teams API : This API is created by Crow Canyon and you can grant the required permissions so that it can be used by NITRO components. This API is only used for Teams operations configured in NITRO components in your SharePoint sites and not used in any other way Custom API : If you cannot use Crow Canyon Teams API then you can create your own Azure AD app with required permissions. You can refer Microsoft documentation for creating the app. Crow Canyon can also assist in this process as part of professional services. After creating the app note the required information like Id and secret and configure it as described below Currently supported operations for Microsoft Teams from NITRO components are given below: Send an adaptive card to: Notify user with custom message having placeholders from SharePoint list item Update an item Invoke a NITRO Workflow Create a new channel under an existing Team Send an email message to a channel Post a message to a channel Note that new operations for Teams are being added to NITRO components continuously. Detailed Steps Setup Teams connection in NITRO Navigate to Site Settings -&gt; Crow Canyon NITRO Site Settings. Under Site Administration -&gt; expand ‘Teams Connection Settings’ section. Select the required connection type. Crow Canyon Teams API: 2. Clicking &#8220;Grant Permissions&#8221; button will open a pop-up. Please use an account with administrator privileges for your Office 365 subscription to grant the required permissions. Click “Accept” button to grant permissions. 3. Click “Test Connection” to check the Teams connection. 4. Save the settings. API Access Click “API Access” to allow NITRO SPFx components to call Teams API. This will open the SharePoint admin page. Refer image below for approving the API access. If this is already approved then you can ignore this step. If you do not see the highlighted item below, please refer the steps given after image. Pre-requisites for API Access: NITRO Modern UI components should be installed in site and up to date. Navigate to root site -&gt; Site Contents -&gt; Crow Canyon NITRO Studio -&gt; Click ‘Setup’ button in the NITRO Studio panel 2. NITRO Studio should be up to date in site. From the NITRO Studio Admin page, click on “Update” button for the activated sites to get the latest NITRO Studio features in the site. 3. If you still do not see the highlighted item on admin page, please perform below steps. Navigate to the app catalog site of your SharePoint tenancy E.g. https://contoso.sharepoint.com/sites/Apps/ Navigate to “Apps for SharePoint” library Search for ‘Crow Canyon NITRO Web Parts II’ component (CrowCanyonNITROWebPartsII.sppkg) If you do not have this component, then contact Crow Canyon support Do the Check-out and Check-in for ‘Crow Canyon NITRO Web Parts II’ component Check Out: Check-In: 6. After this operation, refresh the API access page in SharePoint admin and then approve the request Specify your own API Credentials Specify the ‘Client ID’, ‘Client Secret’ and ‘Redirect URL’ as per your custom Azure AD app. Rest of the steps are same as above. Please refer this article for sample use case. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "616",
    "name": "616 - How to approve requests from Crow Canyon self-service bot in Microsoft Teams - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/616%20-%20How%20to%20approve%20requests%20from%20Crow%20Canyon%20self-service%20bot%20in%20Microsoft%20Teams%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Approve Requests From Crow Canyon Self Service Bot In Microsoft Teams Crow Canyon Software",
    "text": "How to approve requests from Crow Canyon self-service bot in Microsoft Teams - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to approve requests from Crow Canyon self-service bot in Microsoft Teams How to approve requests from Crow Canyon self-service bot in Microsoft Teams 1823 views 1 min , 5 sec read 0 Applies To Crow Canyon NITRO activated sites in SharePoint Online Description In this article we have described a use case where employee can submit a leave request for Manager and Manager will take the appropriate decision (i.e. approve or deny) from Teams channel. When user submits a leave request, manager will receive a message with approve and deny actions in teams. When manager takes the approval decision, requester will be notified via teams. Summary of Steps Configure Teams connection in NITRO Configure Bot application in Teams channel Configure Workflows Workflow 1: Send leave approval card to Manager Workflow 2: Notify user on leave request approve or deny Detailed Steps This article assumes that you have a Requests list with below columns: Title Category Issue Type Requester Requester Email Requester Phone Manager Leave Type Leave Status Start Date End Date Approval Comments Configure Teams connection in NITRO Please refer this article to configure Teams connection in NITRO site settings Configure Bot application in Teams channel Please refer this article to configure bot in Teams channel. Configure Workflows Workflow 1: Send leave approval card to Manager This workflow will send an adaptive card to the manager in Teams when the requester submits a leave request. Action: Microsoft Teams – Post an adaptive card Card Actions Approve This action will set the leave status to ‘Approved’. Manager can add comments during the operation. Deny This action will set the leave status as ‘Denied’. In this case comments are mandatory. Workflow 2: Notify user on leave request approve or deny Configure a workflow on item modified event based on the change in ‘Leave Status’ column value. This workflow will send an adaptive card to the user in Teams informing him of the approval/denial of the leave request. Action: Microsoft Teams – Post an adaptive card action Sample Output Manager Manager will receive a card when requester submits a leave request. Manager can take the required action by clicking the “Approve” or “Deny” buttons. Requester Requester will receive a message in teams when manager approves or denies the leave request. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "617",
    "name": "617 - Install Crow Canyon NITRO Secure for SharePoint On-Premises.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/617%20-%20Install%20Crow%20Canyon%20NITRO%20Secure%20for%20SharePoint%20On-Premises.html",
    "title": "Install Crow Canyon NITRO Secure For SharePoint On Premises",
    "text": "Install Crow Canyon NITRO Secure for SharePoint On-Premises - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Install Crow Canyon NITRO Secure for SharePoint On-Premises Install Crow Canyon NITRO Secure for SharePoint On-Premises 3420 views 3 min , 55 sec read 3 Applies to: SharePoint On-Premises 2013, 2016, 2019, SharePoint Server Subscription Edition Description This article describes the steps to install Crow Canyon NITRO Secure solution for SharePoint On-Premises (2013 / 2016 / 2019). This will deploy all solutions and services to your internal SharePoint server farm. NITRO updates are applied manually giving more control to administrators to decide when to apply updates and to which site collections. For NITRO Secure installation package, please contact Crow Canyon sales or support team. Prerequisites SharePoint should be installed and configured (SharePoint 2013/2016/2019) and server should be in stable state. Site Collection &#8211; To install in a new site collection, Administrator should create a new site collection with team site template. &#8211; Or installation can be done in an existing site collection created with team site template. To install/upgrade SharePoint wsp solutions, logged in user account should have following privileges: &#8211; Domain User &#8211; Local Administrator &#8211; SharePoint Farm Administrator &#8211; Owner rights on SharePoint configuration database, Central Administration content database and Web Application content database &#8211; User should have Site Collection Administrator rights on the Site Collection Microsoft .NET Framework 4.7.2 or above should be installed on the SharePoint server. Make sure that SharePoint Administration and SharePoint Timer services are running in all servers in SharePoint Farm. Install Package NITRO Secure installation package contains one file &#8220;NITROStudioSetup.zip&#8221; Summary of Steps Extract and run NITROStudioSetup.msi Run Crow Canyon NITRO Studio Helper Install NITRO Secure in the Site Collection Activate NITRO Secure for a site Register License Install NITRO Workflow debugging service Install NITRO Office API for document generation Detailed Steps Extract and run NITROStudioSetup.msi 1. Copy the downloaded &#8220;NITROStudioSetup.zip&#8221; file to the SharePoint Server. Note : If there are multiple SharePoint servers in the farm, copy the “NITROStudioSetup.zip” file to one of the servers in the SharePoint farm that is running “Microsoft SharePoint Foundation Web Application” service. 2. Open Command Prompt (Run as Administrator) &#8211;&gt; navigate to the Package location &#8211;&gt; enter the below command to verify MD5 signature for the package. CertUtil -hashfile NITROStudioSetup.zip MD5 In this example, package download link is like &#8220;https://&#8230;/MD5_de609b2210c24edd9d40b691613a7574/NITROStudioSetup.zip&#8221; and the command output is matching with checksum in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this checksum is not matching. Note : MD5 signature is to be verified for the downloaded &#8216;NITROStudioSetup.zip&#8217; file and not the &#8216;NITROStudioSetup.msi&#8217; file extracted from the zip file. After MD5 signature is validated, right click on zip file and extract &#8216;NITROStudioSetup.msi&#8217; file. 3. Right click on the NITROStudioSetup.msi file, open properties panel, and click on ‘Unblock’ button if it is there. 4. Run the setup (right click and then click Install). It will open the NITRO Studio Setup Wizard and click next to continue the installation. 5. By default, this setup will install the NITRO Studio helper in below location. We can also change this location if required. Once the installation is completed, it will add “Crow Canyon NITRO Studio Helper” in the desktop. Run Crow Canyon NITRO Studio Helper Navigate to desktop and run “Crow Canyon NITRO Studio Helper” utility. This will open below screen. Click “Install NITRO Studio” button. This will open “Crow Canyon NITRO Studio Installation Wizard”. This will add and deploy NITRO Studio solutions in the SharePoint server. For first time installation of NITRO in the SharePoint farm, go with default option &#8211; &#8220;First time installation of NITRO Studio in this farm&#8221;. If there are already NITRO activated sites in the farm, then go with second option. &nbsp; Click Finish button, this will open the Crow Canyon NITRO Studio Helper tool. Note: After finishing the installation, please verify that all the below solutions are added in SharePoint server and deployed in the SharePoint server except Workflow Manager solution. Go to Central Administration -&gt; System Settings -&gt; Manage Farm Solutions and check the below solutions. CrowCanyon.CommonUtils.wsp CrowCanyon.NITROStudio.wsp CrowCanyon.WorkflowManager.wsp Note: If the installer finishes very quickly and the Crow Canyon NITRO Studio Helper tool does not open after clicking the Finish button, navigate to the installation directory (default: C:\\Program Files\\Crow Canyon\\NITRO Studio). Locate the CrowCanyon.NITROStudioSetup.exe file, right-click it, and select Run as administrator . Install NITRO Secure in the Site Collection Follow below steps to install and activate NITRO Secure for a site collection. Select the required web application and site collection in the NITRO Studio Helper tool for activating NITRO for that site collection. This will automatically open the &#8220;Manage NITRO Features&#8221; tab. Click “Activate” button to activate Workflow Manager, NITRO Studio and Mail Templates Administration features for the site collection. Note: Activating Workflow Manager feature will deploy the Workflow Manager solution to the selected web application and will activate the workflow manager feature for the selected site collection. After activating the features, switch to the “Settings/Upload Package” tab. It will automatically show &#8220;NITRO Secure Status&#8221; as &#8220;Farm &#8211; Activated&#8221; as shown below. In case if we are not seeing this status as &#8216;Farm &#8211; Activated&#8217;, click &#8220;Activate&#8221; button. After the status is shown as &#8216;Farm &#8211; Activated&#8217;, click “Install” button to Install the NITRO Secure. This will create required lists/libraries in the root site for the NITRO functionality: Note: if you have installed the NITRO Studio in a different location, please browse to the “CrowCanyonNITRO.zip” folder and click “Install” button. Activate NITRO for a site Go to Site Collection where NITRO Secure is installed and go to gear icon (cog) in the top right corner as shown below: Click on Crow Canyon NITRO Studio to navigate to the NITRO Studio Admin page. This page lists all the sub-sites along with root site of the site collection: To activate NITRO Studio, click on “Activate” link for the corresponding site: Activation process will begin and show the progress: Wait until success message appears and then click on Ok. Go to Site Collection –&gt; Site settings –&gt; Site Collection Administration –&gt; Site collection features and ensure below site collection features are activated: With the above step, NITRO is activated for the site. Refer https://www.crowcanyon.info/nitro/appmanual_v2/ for user manual of NITRO Apps. To install pre-built Crow Canyon NITRO Applications, contact sharepointsupport@crowcanyon.com Register License By default, the NITRO Studio comes with a 45-day trial license. Please refer to this article to get the required license and to apply the same in your environment. Install NITRO Workflow debugging service This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to debug NITRO workflows. Please refer to this article to install this component in your SharePoint farm. Install NITRO Office API for document generation This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to generate documents using Office API method in Custom Actions and NITRO workflows. Please refer to this article to install this component in your SharePoint farm. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "618",
    "name": "618 - How to revert Custom Actions settings of a list to previously saved settings_ - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/618%20-%20How%20to%20revert%20Custom%20Actions%20settings%20of%20a%20list%20to%20previously%20saved%20settings_%20-%20Crow%20Canyon%20Software.html",
    "title": "How To Revert Custom Actions Settings Of A List To Previously Saved Settings Crow Canyon Software",
    "text": "How to revert Custom Actions settings of a list to previously saved settings? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to revert Custom Actions settings of a list to previously saved settings? How to revert Custom Actions settings of a list to previously saved settings? 1100 views 1 min , 43 sec read 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description Custom Actions settings are stored in ‘Site Assets’ document library. There is a separate settings file for each list. This file contains configurations for all the custom actions configured on that list. These files are stored in below locations: Site Assets -&gt; CCS -&gt; CustomActions Site Assets -&gt; CCS -&gt; Backup -&gt; CustomActions Any update to custom action settings for a list creates a new version of the corresponding settings file in both ‘CustomActions’ and ‘Backup’ folder. ‘CustomActions’ folder: This is the primary location and Custom Actions are executed as per configurations stored in this folder. A new version of settings file is created for every update to the custom actions. That is, when an action is added, updated, or deleted for a list, file corresponding to that list is modified and that creates a new version of that file. ‘Backup\\CustomActions’ folder: This folder is maintained as a backup of settings and is not actively used. Settings file for the list is updated in this folder on add or update of custom actions in the list. When an action is deleted, this file is not updated. It is possible to restore custom action settings from the file in either of the folders. This could be for a deleted action or a modification that needs to be undone. Backup folder is useful if the file in primary folder gets deleted by mistake resulting in loss of all versions. In this case, the settings can be downloaded from backup folder and uploaded to primary folder. This article describes the steps to restore custom actions settings from these two folders. Detailed Steps In this article we have taken Tickets list as an example, same process can be applied to any list. Determine the Id of the list: Open the site in chrome browser -&gt; go to Site Contents -&gt; Tickets list -&gt; List Settings -&gt; Note the list Id in the URL. Restore settings from ‘CustomActions’ (primary) folder Navigate to the Custom Actions settings file folder: Go to site contents -&gt; Site Assets document library -&gt; CCS -&gt; CustomActions -&gt; Search for file with the list Id noted in above step. Restore the settings file version: &#8211; Click on the ECB (3 dots next to the file name as shown in UI below) to bring up the menu. &#8211; Click ‘Version History’ option -&gt; Select the required version and click ‘Restore’ as shown below. Restore settings from ‘Backup\\CustomActions’ folder Navigate to the Custom Actions settings file in Backup folder: Go to site contents -&gt; Site Assets document library -&gt; CCS -&gt; Backup -&gt; CustomActions -&gt; Search for file with the list Id noted in above step. Download the backup file from Backup folder: Upload the file to primary CustomActions folder: Navigate to Site Assets document library -&gt; CCS -&gt; CustomActions folder and upload the downloaded file in this folder. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "62",
    "name": "62 - Create End User Portal Site For Service Request Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/62%20-%20Create%20End%20User%20Portal%20Site%20For%20Service%20Request%20Applications.html",
    "title": "Create End User Portal Site For Service Request Applications",
    "text": "Create End User Portal Site For Service Request Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create End User Portal Site For Service Request Applications Create End User Portal Site For Service Request Applications 1997 views 2 min , 4 sec read 0 Applies to: SharePoint Online and On-premises (2013, 2016, 2019/SharePoint Server Subscription Edition) Application Type: Service Request Applications (IT Professional, IT Standard, Facilities, Request Management and Customer Service) Description A portal provides a secure and intuitive user interface to end users to interact with NITRO Applications. Portal sites can be configured in two ways: Using Crow Canyon&#8217;s &#8216;Power Portal&#8217; application. Please refer to this article for steps to create and configure a portal site As a NITRO activated site with portal functionality and look and feel. This is a newer method of building portals and gives more flexibility in site configurations. This article provides the details to create portal using this newer method. Detailed Instructions Navigate to NITRO Studio Online: Navigate to the Site Collection where we to install the NITRO applications -&gt; Site Contents -&gt; Click Crow Canyon NITRO Studio On-premises: Navigate to the Site collection where we want to install the NITRO application -&gt; Site Settings (click gear icon) -&gt; Crow Canyon NITRO Studio Navigate to NITRO Studio: After navigating to NITRO Studio page -&gt; Click &#8216;NITRO Applications&#8217; Note: SharePoint online supports Modern UI based applications and older Classic UI applications. For installing Modern UI based applications, switch to &#8220;Modern&#8221; tab and select the application that you want to install. Click on the Portal application that you want to install: Below are the portal application names for the corresponding application types. Classic Applications Application Type Portal Application Name IT Professional (2020) IT Portal (2020) IT Standard (2020) IT Portal (2020) Customer Service (2020) Customer Service Portal (2020) Facilities (2020) Facilities Portal (2020) Request Management (2020) Request Management Portal (2020) Modern Applications Application Type Portal Application Name IT Professional (2020) IT Portal (2020) IT Standard (2020) IT Portal (2020) Facilities (2020) Facilities Portal (2020) Request Management (2020) Request Management Portal (2020) Customer Service (2020) Customer Service Portal (2020) Portal Installation Steps Note: Portal installation steps are same for all of the above mentioned applications. Click corresponding Portal tile in NITRO Applications page, enter the required details as described below and click Ok. Parent Site: &nbsp;Choose the site under which the Portal site needs to be created. Generally it will be the back-end site (i.e. Helpdesk application site). Site Title : Title for the new Portal site. This can be changed later from site settings if needed. Site Address : URL of the Portal site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires several configuration changes if URL is to be changed later. Or site can be reinstalled with different URL. License Type : Choose the “Trial” and proceed with the installation. Once installation is done, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer this&nbsp; article &nbsp;to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license. Reassign Owners Group Name : Specify the required SharePoint group. Members of this group will have the permissions for portal administration. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. IT Site URL: Select the back-end site URL (i.e. Helpdesk application site). Portal application will use the configurations from back-end site. Additional Configurations 1. Delete unique permissions for the site and configure the permissions as required. Go to Portal Site -&gt; Portal Administration -&gt; Security Settings -&gt; click &#8220;Portal Permissions&#8221; and configure the permissions as required. 2. For Portal Classic applications: Navigate to below Administration page, by modifying the Portal Site URL in below. URL: https://Portal Site URL/Workspaces/Administration.aspx Click &#8220;Branding&#8221; tile in &#8220;Home Page and Theme&#8221; tab Go to Apply Theme tab in NITRO Branding, select &#8220;Helpdesk Portal Theme&#8221; under Custom Theme section and Click &#8220;Apply Theme&#8221;. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "620",
    "name": "620 - Create End User Portal Site For Service Request Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/620%20-%20Create%20End%20User%20Portal%20Site%20For%20Service%20Request%20Applications.html",
    "title": "Create End User Portal Site For Service Request Applications",
    "text": "Create End User Portal Site For Service Request Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create End User Portal Site For Service Request Applications Create End User Portal Site For Service Request Applications 1997 views 2 min , 4 sec read 0 Applies to: SharePoint Online and On-premises (2013, 2016, 2019/SharePoint Server Subscription Edition) Application Type: Service Request Applications (IT Professional, IT Standard, Facilities, Request Management and Customer Service) Description A portal provides a secure and intuitive user interface to end users to interact with NITRO Applications. Portal sites can be configured in two ways: Using Crow Canyon&#8217;s &#8216;Power Portal&#8217; application. Please refer to this article for steps to create and configure a portal site As a NITRO activated site with portal functionality and look and feel. This is a newer method of building portals and gives more flexibility in site configurations. This article provides the details to create portal using this newer method. Detailed Instructions Navigate to NITRO Studio Online: Navigate to the Site Collection where we to install the NITRO applications -&gt; Site Contents -&gt; Click Crow Canyon NITRO Studio On-premises: Navigate to the Site collection where we want to install the NITRO application -&gt; Site Settings (click gear icon) -&gt; Crow Canyon NITRO Studio Navigate to NITRO Studio: After navigating to NITRO Studio page -&gt; Click &#8216;NITRO Applications&#8217; Note: SharePoint online supports Modern UI based applications and older Classic UI applications. For installing Modern UI based applications, switch to &#8220;Modern&#8221; tab and select the application that you want to install. Click on the Portal application that you want to install: Below are the portal application names for the corresponding application types. Classic Applications Application Type Portal Application Name IT Professional (2020) IT Portal (2020) IT Standard (2020) IT Portal (2020) Customer Service (2020) Customer Service Portal (2020) Facilities (2020) Facilities Portal (2020) Request Management (2020) Request Management Portal (2020) Modern Applications Application Type Portal Application Name IT Professional (2020) IT Portal (2020) IT Standard (2020) IT Portal (2020) Facilities (2020) Facilities Portal (2020) Request Management (2020) Request Management Portal (2020) Customer Service (2020) Customer Service Portal (2020) Portal Installation Steps Note: Portal installation steps are same for all of the above mentioned applications. Click corresponding Portal tile in NITRO Applications page, enter the required details as described below and click Ok. Parent Site: &nbsp;Choose the site under which the Portal site needs to be created. Generally it will be the back-end site (i.e. Helpdesk application site). Site Title : Title for the new Portal site. This can be changed later from site settings if needed. Site Address : URL of the Portal site. We recommend to use alpha-numeric URL name without spaces. Please note that it requires several configuration changes if URL is to be changed later. Or site can be reinstalled with different URL. License Type : Choose the “Trial” and proceed with the installation. Once installation is done, contact Crow Canyon for permanent license. If no option is available under License Type, please contact Crow Canyon Support. Refer this&nbsp; article &nbsp;to convert the Crow Canyon NITRO Trial License to Subscription/Enterprise license. Reassign Owners Group Name : Specify the required SharePoint group. Members of this group will have the permissions for portal administration. Any SharePoint site is created with 3 default SharePoint groups (Owners, Members, Visitors) prefixed with the site name. We can use these groups or some other custom group name that can be created after site is created. IT Site URL: Select the back-end site URL (i.e. Helpdesk application site). Portal application will use the configurations from back-end site. Additional Configurations 1. Delete unique permissions for the site and configure the permissions as required. Go to Portal Site -&gt; Portal Administration -&gt; Security Settings -&gt; click &#8220;Portal Permissions&#8221; and configure the permissions as required. 2. For Portal Classic applications: Navigate to below Administration page, by modifying the Portal Site URL in below. URL: https://Portal Site URL/Workspaces/Administration.aspx Click &#8220;Branding&#8221; tile in &#8220;Home Page and Theme&#8221; tab Go to Apply Theme tab in NITRO Branding, select &#8220;Helpdesk Portal Theme&#8221; under Custom Theme section and Click &#8220;Apply Theme&#8221;. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "621",
    "name": "621 - Filtering options in NITRO Forms for items shown in lookup columns.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/621%20-%20Filtering%20options%20in%20NITRO%20Forms%20for%20items%20shown%20in%20lookup%20columns.html",
    "title": "Filtering Options In NITRO Forms For Items Shown In Lookup Columns",
    "text": "Filtering options in NITRO Forms for items shown in lookup columns - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Filtering options in NITRO Forms for items shown in lookup columns Filtering options in NITRO Forms for items shown in lookup columns 1421 views 2 min , 5 sec read 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO Forms have several features for lookup columns: Cascaded lookup: Filter items in a child lookup based on selection in parent Searching and sorting of items Delay load to speed up form load Cross-site lookup Also, it supports filtering of items in lookup column based on the selected view. This article describes below use cases to sort and filter values in the lookup columns:&nbsp;&nbsp;&nbsp;&nbsp; Filter items in lookup dropdown by specifying the required view Show different sets of lookup items to end users (who use NITRO Portal site) and staff users (who use the NITRO forms in the main/backend site) Show different items in lookup column based on logged-in user In this article, we have taken example of ‘Issue Type’ lookup column in Tickets list. Use Case 1: Filter items in lookup dropdown by specifying the required view It is likely that over time certain items in lookup list get deprecated and should no longer be selected as lookup values in new items. However, they should continue to be valid for existing items. In this case, we can create a new column in lookup list to indicate if the item is active or deprecated. Based on this column a view can be created to list only the active items. This view can then be used in NITRO Forms lookup column configurations to show only active items in the dropdown of the lookup column. To filter lookup items in forms, first we can create a view with required filter conditions and then use the view in lookup column settings as shown below: In below use case, Issue Type lookup column will show all the items that are in ‘Active Items’ view. Use Case 2: Show different set of lookup items to end users and staff NITRO applications typically have two sites. Backend site for the staff users and the simplified portal site for the end users. In some cases, it is required to show a limited set of Issue Types to end users in portal site. Staff users in backend sites should see all issue types. We can configure this by creating different views for Staff and End Users in the lookup list (In this case ‘Issue Type’ list). Create a column ‘Type of Users’ in Issue Type list (i.e. in lookup list) Column Internal Name: TypeofUsers Column Display Name: Type of Users Column Type: Choice (Multi-Checkbox) Options: Staff End Users Create filtered views for Staff and End Users based on ‘Type of Users’ column. Below filtered view will show all the Issue Types where ‘Type of Users’ column value is equal to ‘Staff’. Similarly, we can create other views. Configure filtered views in backend site and portal site. Backend Site: Navigate to NITRO forms -&gt; Edit Issue Type lookup column settings and configure ‘Staff’ view in lookup settings as shown below: Portal Site: Go to Portal site -&gt; Portal Settings -&gt; Portal Forms -&gt; Edit Tickets list forms and configure ‘End Users’ view in lookup settings as shown below: Use Case 3: Show different items in lookup column based on logged-in user In some cases, it is required to filter items in lookup dropdown based on logged in user. This can be done using SharePoint item level permissions. SharePoint list items can be permissioned individually. Based on logged-in user, lookup drop-down will show only those items that user has access to. For more on item level permissions, please refer SharePoint documentation. With NITRO Workflows, item level permissions can be assigned to items based on the required business scenario. Please refer this article for more details. For sample configurations, refer this FAQ . About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "622",
    "name": "622 - How to customize NITRO Reports using Script.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/622%20-%20How%20to%20customize%20NITRO%20Reports%20using%20Script.html",
    "title": "How To Customize NITRO Reports Using Script",
    "text": "How to customize NITRO Reports using Script - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Reports / How to customize NITRO Reports using Script How to customize NITRO Reports using Script 2505 views 5 min , 15 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description This article describes the process of configuring NITRO Reports data using JavaScript in the configuration. Below are some use cases that require script in NITRO Reports How to put currency symbol in Report for currency column values in Table report. How to scale the actual values in Millions or hundreds to avoid getting zeroes in Report Overall Aging report Make legend selection one at a time How to display bar values on the top of bar in the NITRO Reports? Use Case 1: How to put currency symbol in Report for currency column values in Table report. Go to NITRO Report configured for the list &#8211;&gt; Advanced settings &#8211;&gt; Customize Report &#8211;&gt; Add/Edit Script &#8211;&gt; set the below script. Script used below: var scriptManager = {}; //Modify the chart properties. This is applicable for updating Charts like bar, column etc. scriptManager.PreRenderCharts = function(objKendoChart, functionCallback){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Modify objKendoChart properties. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; functionCallback(objKendoChart); }; //Render table report values. Val is the actual cell value in the below script. We need to configure JavaScript to set updated value depending on the requirement. In this case, we are setting the currency symbol $ before the cell value. scriptManager.tableValueRender = function(val){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \"$\"+val; }; //Render table report Total X-axis values scriptManager.tableTotalXRender = function(val){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \"$\"+val; }; //Render table report Total Y-axis values scriptManager.tableTotalYRender = function(val){ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \"$\"+val; }; return scriptManager; Sample Report: Use Case 2: How to scale the actual values in Millions or hundreds to avoid getting zeroes in Report Script below is referring to reduce the actual value divided by 100 in this use case. scriptManager.tableValueRender = function(val){ if(val === 0 || (val &amp;&amp;&nbsp; !isNaN(val))){ &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \"$\" + ((Number(val))/100); &nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return \"$\"+val; }; Use case 3: Overall Aging report If you need this report in List Rollup, then refer to How To Customize NITRO Reports Using Script in List Rollup &#8211; Crow Canyon Software Support Age of an item refers to the difference between a date column value in the item and the current date. In this report, we want to see the number of items for different age values. In this report, age value is on X axis and Tickets count is on Y axis. “Age” is a single line of text column in ‘Tickets’ list. Age will be calculated dynamically based on the ‘Created’ date of the Ticket when rendering the report using custom script. Sample output: Report Configuration: Script used in above: var scriptManager = {}; scriptManager.UpdateListItemsValues = function(listItems){ var itemsTotalCount = listItems.get_count(); for (var i = 0; i &lt; itemsTotalCount; i++) { var itemCreated = listItems.getItemAtIndex(i).get_item(\"Created\"); var todayNewDate = new Date(); const diffTime = Math.abs(todayNewDate - itemCreated); const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); var ageFieldName = \"Age\"; if (diffDays &lt;= 0) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"Same Day\"); } else if (diffDays &lt;= 2) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"2 Days\"); } else if (diffDays &lt;= 5) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"2 - 5 Days\"); } else if (diffDays &lt;= 7) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"5 - 7 Days\"); } else if (diffDays &lt;= 14) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"1 - 2 Weeks\"); } else if (diffDays &lt;= 28) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"2 - 4 Weeks\"); } else if (diffDays &lt;= 60) { listItems.getItemAtIndex(i).set_item(ageFieldName, \"1 - 2 Months\"); } else { listItems.getItemAtIndex(i).set_item(ageFieldName, \"&gt; 2 Months\"); } } return listItems; }; scriptManager.GetColumnsToFetch = function(loadingFieds){ var loadFieldNames = &#91;\"Created\"]; return loadFieldNames; }; //Modify the chart properties. scriptManager.PreRenderCharts = function(objKendoChart, functionCallback){ //Modify objKendoChart properties. functionCallback(objKendoChart); }; //Render table report values scriptManager.tableValueRender = function(val){ return val; }; //Render table report Total X-axis values scriptManager.tableTotalXRender = function(val){ return val; }; //Render table report Total Y-axis values scriptManager.tableTotalYRender = function(val){ return val; }; //Sort chart values scriptManager.sortChartData = function(data){ debugger; if (data &amp;&amp; data.length &gt; 0) { var OrderdCategories = &#91;\"Same Day\", \"2 Days\", \"2 - 5 Days\", \"5 - 7 Days\", \"1 - 2 Weeks\", \"2 - 4 Weeks\", \"1 - 2 Months\", \"&gt; 2 Months\"]; for (var i = 0; i &lt; data.length; i++) { var objItem = data&#91;i]; var arrayCategories = &#91;]; var arrayYValues = &#91;]; for (var j = 0; j &lt; OrderdCategories.length; j++) { if (objItem.categories &amp;&amp; objItem.categories.indexOf(OrderdCategories&#91;j]) &gt; -1) { arrayCategories.push(OrderdCategories&#91;j]); var indexYValue = objItem.categories.indexOf(OrderdCategories&#91;j]); arrayYValues.push(objItem.yvalues&#91;indexYValue]); } } data&#91;i].categories = arrayCategories; data&#91;i].yvalues = arrayYValues; } } return data; }; return scriptManager; Script details: scriptManager.GetColumnsToFetch: Use this function to load the columns that are not used in the report configuration but are required in the script for custom functionality. In this report, &#8220;Created&#8221; column value is required to calculate the text value for age of the Ticket. However, &#8220;Created&#8221; column is not used in report configuration so its value will not get loaded (it is not used in the report X and Y axis settings). It is required in the script function &#8220;scriptManager.UpdateListItemsValues&#8221; to calculate the age of Ticket and hence it is added to code in GetColumnsToFetch function. We can load the additional columns as required if we want to use these columns in &#8220;scriptManager.UpdateListItemsValues&#8221;. scriptManager.UpdateListItemsValues: This function is used to calculate the &#8220;Age&#8221; of Ticket. Note : This will not update the column value in the Ticket list item, it only uses this dynamically calculated value for the report. This function will iterate through each list item that is used in the report generation. Calculate the time difference between the created date of the Ticket and current date. Convert the time difference into number of days. Based on the number of days, assign a text value to the &#8220;Age&#8221; column that is used in the report. Use case 3: Overall Aging report (for &#8216;Large List&#8217;) Report configuration is same as above except is large list will be checked and the custom script. Script used in report for large lists: var scriptManager = {}; scriptManager.UpdateListItemsValues = function(listItems){ var itemsTotalCount = listItems.length; for (var i = 0; i &lt; itemsTotalCount; i++) { var itemCreated = listItems&#91;i]&#91;\"Created\"]; var todayNewDate = new Date(); const diffTime = Math.abs(todayNewDate - new Date(itemCreated)); const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); var ageFieldName = \"Age\"; if (diffDays &lt;= 0) { listItems&#91;i]&#91;ageFieldName] = \"Same Day\"; } else if (diffDays &lt;= 2) { listItems&#91;i]&#91;ageFieldName] = \"2 Days\"; } else if (diffDays &lt;= 5) { listItems&#91;i]&#91;ageFieldName] = \"2 - 5 Days\"; } else if (diffDays &lt;= 7) { listItems&#91;i]&#91;ageFieldName] = \"5 - 7 Days\"; } else if (diffDays &lt;= 14) { listItems&#91;i]&#91;ageFieldName] = \"1 - 2 Weeks\"; } else if (diffDays &lt;= 28) { listItems&#91;i]&#91;ageFieldName] = \"2 - 4 Weeks\"; } else if (diffDays &lt;= 60) { listItems&#91;i]&#91;ageFieldName] = \"1 - 2 Months\"; } else { listItems&#91;i]&#91;ageFieldName] = \"&gt; 2 Months\"; } } return listItems; }; scriptManager.GetColumnsToFetch = function(loadingFieds){ var loadFieldNames = &#91;\"Created\"]; return loadFieldNames; }; //Modify the chart properties. scriptManager.PreRenderCharts = function(objKendoChart, functionCallback){ //Modify objKendoChart properties. functionCallback(objKendoChart); }; //Render table report values scriptManager.tableValueRender = function(val){ return val; }; //Render table report Total X-axis values scriptManager.tableTotalXRender = function(val){ return val; }; //Render table report Total Y-axis values scriptManager.tableTotalYRender = function(val){ return val; }; //Sort chart values scriptManager.sortChartData = function(data){ debugger; if (data &amp;&amp; data.length &gt; 0) { var OrderdCategories = &#91;\"Same Day\", \"2 Days\", \"2 - 5 Days\", \"5 - 7 Days\", \"1 - 2 Weeks\", \"2 - 4 Weeks\", \"1 - 2 Months\", \"&gt; 2 Months\"]; for (var i = 0; i &lt; data.length; i++) { var objItem = data&#91;i]; var arrayCategories = &#91;]; var arrayYValues = &#91;]; for (var j = 0; j &lt; OrderdCategories.length; j++) { if (objItem.categories &amp;&amp; objItem.categories.indexOf(OrderdCategories&#91;j]) &gt; -1) { arrayCategories.push(OrderdCategories&#91;j]); var indexYValue = objItem.categories.indexOf(OrderdCategories&#91;j]); arrayYValues.push(objItem.yvalues&#91;indexYValue]); } } data&#91;i].categories = arrayCategories; data&#91;i].yvalues = arrayYValues; } } return data; }; return scriptManager; Use Case 4: Make selection of legend one at a time In this use case, NITRO Report is configured on a list and have multiple legends to show. We will make the first legend active while disabling other legends. Upon selection of each legend, we render the report only specific to the selected legend. Go to NITRO Report configured for the list &#8211;&gt; Advanced Settings &#8211;&gt; Customize Report &#8211;&gt; Add/Edit Script &#8211;&gt; set the below script. Please refer to the script code added in &#8216;PreRenderCharts&#8217; function from below. Script used in the report var scriptManager = {}; //Modify the chart properties. scriptManager.PreRenderCharts = function(objKendoChart, functionCallback){ //Modify objKendoChart properties. var SetVisibleLegend = function (index, objKChart) { var arraySeries = objKChart.series; for (var i = 0; i &lt; arraySeries.length; i++) { arraySeries&#91;i].visible = index == i; } // objChart.redraw(); }; SetVisibleLegend(0, objKendoChart); objKendoChart.legendItemClick = function (e) { e.preventDefault(); SetVisibleLegend(e.seriesIndex, e.sender.options); e.sender.redraw(); }; functionCallback(objKendoChart); }; //Render table report values scriptManager.tableValueRender = function(val){ return val; }; //Render table report Total X-axis values scriptManager.tableTotalXRender = function(val){ return val; }; //Render table report Total Y-axis values scriptManager.tableTotalYRender = function(val){ return val; }; return scriptManager; After the report is loaded, we can select each legend at a time so that previous selection will be toggled. Use Case 5: How to display bar values on the top of bar in the NITRO Reports? Go to NITRO Report configured for the list -&gt; Advanced settings -&gt; Customize Report -&gt; Click ‘Add/Edit Script’ button -&gt; Specify the below script: Script: var scriptManager = {}; //Modify the chart properties. scriptManager.PreRenderCharts = function(objKendoChart, functionCallback){ //Modify objKendoChart properties. objKendoChart&#91;\"seriesDefaults\"]&#91;\"labels\"] = {\"visible\":true}; functionCallback(objKendoChart); }; return scriptManager; NITRO Studio- Reports About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Deep Dive into NITRO Reports NITRO Studio Workshop: Build a Dashboard with Tiles &#038; Dials, and Reports Introduction to Report Manager in NITRO Studio Show time taken to close the Ticket (from time it is created to closed) in Crow Canyon applications © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "623",
    "name": "623 - Switch to Modern version of NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/623%20-%20Switch%20to%20Modern%20version%20of%20NITRO%20Forms.html",
    "title": "Switch To Modern Version Of NITRO Forms",
    "text": "Switch to Modern version of NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Switch to Modern version of NITRO Forms Switch to Modern version of NITRO Forms 1166 views Less than a minute 1 Applies to: SharePoint Online Starting around July 29, 2020, Microsoft rolled out changes to SharePoint Online in M365 that changed the way NITRO Forms are rendered. If you are accessing a SharePoint list item from the Modern UI list view, you may get the standard SharePoint form, which opens in a panel on the right side of the page: Here&#8217;s how to fix it: Navigate to NITRO Forms for the list in the list ribbon: If you have multiple forms, you&#8217;ll get the below screen. Make sure to click the Modern option as for the Form Experience. Then edit any form for the list: If you have a single form for the list, click on the Manage Forms link in the upper right to get to the above screen: Once you&#8217;ve selected Modern for the Form Experience and are editing any form, simply hit &#8220;Publish&#8221; in the upper left of the screen: You only need to do this once per list, regardless of the number of forms you have for the list. The Form Experience option applies to all forms automatically. About James Restivo View all posts by James Restivo &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "626",
    "name": "626 - How to read user properties using Microsoft Graph API in NITRO Workflows_ - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/626%20-%20How%20to%20read%20user%20properties%20using%20Microsoft%20Graph%20API%20in%20NITRO%20Workflows_%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "How To Read User Properties Using Microsoft Graph API In NITRO Workflows Crow Canyon Software Sup",
    "text": "How to read user properties using Microsoft Graph API in NITRO Workflows? - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to read user properties using Microsoft Graph API in NITRO Workflows? How to read user properties using Microsoft Graph API in NITRO Workflows? 7656 views 2 min , 30 sec read 0 Applies to: SharePoint Online Description This article describes the steps to read user profile properties using Microsoft Graph API in NITRO Workflows using Invoke Web Service action. For more details regarding Invoke Web Service action in NITRO Workflows, please refer this article . Pre-requisites: User should be an administrator of O365 subscription Should have full control permission on the site where we want to configure the NITRO Workflow to read user properties Summary of steps App Registration in Azure Active Directory (Azure AD) Create new app registration Grant API permissions Generate client secret Configuration of NITRO Workflow Detailed Instructions 1. App Registration in Azure Active Directory Create new app registration Create app registration in Azure AD Go to Admin Centre -&gt; Azure Active Directory -&gt; App Registrations -&gt; New registration Direct URL: https://aad.portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps For more details regarding app registration in Azure AD, please refer this article . &nbsp; Please copy Client Id and Tenant Id after registering the App as shown in image below. These will be used later in the NITRO Workflow. Grant API permissions As shown in image above, click ‘API permissions’ link. Click Add a permission -&gt; Microsoft Graph -&gt; Application Permissions -&gt; Search permission level for “User.Read.All” and click add permission level button. After adding permission level, click “Grant admin consent for &lt; your company name &gt;” Generate client secret Id Go to Certificates and secrets -&gt; New client secret -&gt; Add a client secret. You can give any description for the secret. After adding client secret, copy the client secret. 2. Configuration of NITRO Workflows Go to the site where we want to read user profile properties -&gt; Go to Site Settings -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and configure the workflow as shown below. In this article, we have given example to read requester user profile properties and then create record in Users list. Action1: Get Access Token Configure invoke web service action to get access token as shown below: URL : https://login.microsoftonline.com/{{tenantId}}/OAuth2/V2.0/token In the above URL, replace “{{tenantId}}” with your tenant id that we have copied in “Create new app registration” section above. HTTP Method: POST Headers: Key Value Content-Type application/x-www-form-urlencoded Data: grant_type=client_credentials&amp;client_id={{ClientId}}&amp;client_secret={{ClientSecretId}}&amp;scope=https://graph.microsoft.com/.default In the above, replace {{ClientId}} and {{ ClientSecretId}} that we have copied earlier. Action2: GetUserProperties Create invoke web service action to get the user property values for Requester. URL: https://graph.microsoft.com/v1.0/users/?$filter=mail eq &#8216;%%$getspuserproperty(email,;,[Requester|Requester])%%&#8217;&amp;$select=id,displayName,jobTitle,mail,officeLocation,Department,faxNumber,mobilePhone In the above URL, replace [Requester|Requester] placeholder based on column name in your list. The above URL will give the user property values of the user present in the “Requester” column. The response will return the specified attributes of the user: Id displayName jobTitle mail officeLocation Department faxNumber mobilePhone For more attributes, please refer properties section in this article . Authentication: Select Bearer Token authentication %%$jsonpath2(GetAccessToken##Value,@$.access_token)%% In the above, replace “GetAccessToken##Value” with “Action1 Name##Value” Sample Output response: { \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#users(id,displayName,jobTitle,mail,officeLocation,department,faxNumber,mobilePhone)\", \"value\":[ { \"id\":\"339dbef6-b33d-40fd-8985-XXXXXXXXXX\", \"displayName\":\"Pavan Kumar\", \"jobTitle\":\"Developer\", \"mail\":\"pavan@crowcanyon365.com\", \"officeLocation\":null, \"department\":\"IT\", \"faxNumber\":null, \"mobilePhone\":\"XXXXXXXXX\" } ] } Action3: GetManager To get the manager property value, we need to use different URL. URL: https://graph.microsoft.com/v1.0/users/%%$jsonpath2(GetUserProperties##Value,@$.value[0].id)%%/manager?$select=displayName “ $jsonpath2(GetUserProperties##Value,@$.value[0].id)”: This will return the requester user id value from the response of “ Action 2: GetUserProperties ”. Sample output response: { \"@odata.context\":\"https://graph.microsoft.com/v1.0/$metadata#directoryObjects(displayName)/$entity\", \"@odata.type\":\"#microsoft.graph.user\", \"displayName\":\"Scott Restivo\" } Action4: Manager Create WF variable action to save the manager value. This can be used in column mappings of add or update item actions. Value used in above: $jsonpath2(GetManager##Value,@$.displayName) “ GetManager##Value ”: Invoke web service action name to get the manager property value. Action5: Create user record Create an add item action to create a user record in Users list. Column Mappings: Column Name Value Department $jsonpath2(GetUserProperties##Value,@$.value[0].department) Employee [Requester|Requester] Fax $jsonpath2(GetUserProperties##Value,@$.value[0].faxNumber) Manager $parseuservalue(Manager##Value) WorkLocation $jsonpath2(GetUserProperties##Value,@$.value[0].officeLocation) Mobile $jsonpath2(GetUserProperties##Value,@$.value[0].mobilePhone) About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "627",
    "name": "627 - Additional configurations required for web application or site collection backup_restore using stand.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/627%20-%20Additional%20configurations%20required%20for%20web%20application%20or%20site%20collection%20backup_restore%20using%20stand.html",
    "title": "Additional Configurations Required For Web Application Or Site Collection Backup Restore Using Stand",
    "text": "Additional configurations required for web application or site collection backup/restore using standard Microsoft methods - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Additional configurations required for web application or site collection backup/restore using standard Microsoft methods Additional configurations required for web application or site collection backup/restore using standard Microsoft methods 1254 views 2 min , 26 sec read 0 Applies To SharePoint On-Premises Description This article describes the additional configurations required after web application or site collection backup/restore operation using standard Microsoft methods. This will be applicable to both NITRO Studio activated sites and NITRO pre-built application sites. Summary of Steps Pre-requisites Backup and Restore Activate NITRO Studio and Apply License Post Configurations Detailed Steps Pre-Requisites We need to ensure all the Crow Canyon Solutions are already deployed in the target SharePoint environment prior to the restore process. Install Crow Canyon NITRO Studio solutions (CrowCanyon.NITROStudio.wsp, CrowCanyon.WorkflowManager.wsp and CrowCanyon.CommonUtils.wsp) in target SharePoint on-premises environment. If the web application has one of the below Crow Canyon pre-built applications then we need install two additional solutions (CCSSRWorkflows.wsp and CrowCanyon.TimerJobs.wsp) Pre-built Crow Canyon Applications IT Help Desk Facilities Management Request Management Customer Service Asset Management Equipment Management If source environment is using NITRO Secure version: Refer https://www.crowcanyon.help/article/617 to install Crow Canyon NITRO Studio Secure. If source environment is using NITRO Studio version: Refer https://www.crowcanyon.help/article/448 to install Crow Canyon NITRO Studio. Note: This step needs to be performed before the restore operation. Backup and Restore Web Application Backup and Restore Backup process reference: https://docs.microsoft.com/en-us/sharepoint/administration/back-up-a-web-application#use-sql-server-tools-to-back-up-a-databases-that-are-associated-with-a-web-application Restore process reference: https://docs.microsoft.com/en-us/sharepoint/administration/restore-a-web-application#using-sql-server-tools-to-restore-databases-associated-with-a-web-application-in-sharepoint-server Please note that after the content database is restored, there are other steps like &#8220;Mount-SPContentDatabase&#8221; etc. and we are not covering those steps here as this article intention is to describe the NITRO specific steps after the restore is done. Site Collection Backup and Restore Backup process reference: https://docs.microsoft.com/en-us/powershell/module/sharepoint-server/backup-spsite?view=sharepoint-ps Restore process reference: https://docs.microsoft.com/en-us/powershell/module/sharepoint-server/restore-spsite?view=sharepoint-ps Activate NITRO Studio and Apply License After the Web Application/Site Collection is restored in target environment, we need to go to Crow Canyon NITRO Studio &#8211;&gt; Activate NITRO Studio for all the sites in target environment, for the sites that use NITRO in source environment. Please refer the steps from &#8216;Activate NITRO for a site&#8217; section to activate NITRO from https://www.crowcanyon.help/article/617/ Please contact sharepointsupport@crowcanyon.com for the license in target environment and the steps to register the NITRO license. Post Configurations 1. Reconfigure NITRO site for URL Change Refer https://www.crowcanyon.help/article/605 for the steps to perform for the NITRO Studio activated sites. 2. Crow Canyon Timer Jobs This step can be skipped if we are not using Crow Canyon prebuilt application except Onboarding, Contracts Management and Project Management applications. Reactivate Crow Canyon Timer Job Features for the site collection and ensure timer jobs are created in SharePoint Central Administration. Refer #1 and #3 steps in https://www.crowcanyon.help/article/418 . 3. Recreate Crow Canyon Product workflow instances Refer https://www.crowcanyon.help/article/312 for the steps. Note: This step is applicable for only Crow Canyon prebuilt applications like IT Help Desk, Facilities, Requests Management and Customer Service. 4. Navigation Links Review every link in Top Link and quick launch menu links and update the link as required. Please refer the steps from https://support.microsoft.com/en-us/office/customize-the-navigation-on-your-sharepoint-site-3cd61ae7-a9ed-4e1e-bf6d-4655f0bf25ca 5. Reset NITRO Cache Go to site settings -&gt; Site Administration -&gt; Crow Canyon NITRO Site settings -&gt; Cache site metadata -&gt; click on ‘Reset Cache’ 6. Update hyperlinks in Mail Template Go to site settings -&gt; Site Administration -&gt; Crow Canyon Mail Templates -&gt; edit each mail template -&gt; replace any link that refers to source site URL with corresponding target site URL Go to Crow Canyon Workflow Manager -&gt; edit each workflow -&gt; edit each send mail action -&gt; edit the mail template -&gt; replace any link that refers to source site URL with corresponding target site URL For Crow Canyon prebuilt applications like IT Helpdesk, Facilities, Requests Management and Customer Service, go to Application Administration, Notifications, update standard auto notification mail templates if there are any links referring to source environment. 7. Portal Ticket Link in Configurations For Crow Canyon prebuilt applications: IT Helpdesk, Facilities, Requests Management and Customer Service sites; go to Application Administration -&gt; General Configurations -&gt; replace source portal Ticket link URL with corresponding target site URL. 8. Portal Site Refer &#8220;Power Portal section from https://www.crowcanyon.help/article/605 About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "628",
    "name": "628 - Automatically capture the name of user closing the Ticket in a separate column - Crow Canyon Softwar.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/628%20-%20Automatically%20capture%20the%20name%20of%20user%20closing%20the%20Ticket%20in%20a%20separate%20column%20-%20Crow%20Canyon%20Softwar.html",
    "title": "Automatically Capture The Name Of User Closing The Ticket In A Separate Column Crow Canyon Softwar",
    "text": "Automatically capture the name of user closing the Ticket in a separate column - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Automatically capture the name of user closing the Ticket in a separate column Automatically capture the name of user closing the Ticket in a separate column 1035 views 1 min , 4 sec read 1 Applies To: Crow Canyon Service Request applications for SharePoint Online Description In Crow Canyon Service Request application, when a Ticket is closed by a user, application will update the Ticket to set the Closed Date and some hidden columns (for Ticket state management). During this Ticket update operation, ‘Modified By’ column is set to ‘SharePoint app’. In some cases, it is required to capture the logged-in user who closed the Ticket. In Crow Canyon Service Request application, Ticket can be closed in two ways: Ticket closed directly from the edit form Use ‘Close’ custom action in Tickets list This article describes steps to capture the user who closed the Ticket for both cases. Detailed Steps Create a &#8216;Person or Group&#8217; column and add it to NITRO Forms Navigate to NITRO Forms of Tickets list -&gt; ‘Create Column’. Create a ‘Person or Group’ column ‘ClosedBy’. Add ‘ClosedBy’ column in the form from ‘Form Controls’ section (in left-hand panel). Edit the column settings and modify its name from ‘ClosedBy’ to ‘Closed By’. We can configure permissions on ‘Closed By’ column to make it read-only or hidden as required. Since this column value will be set automatically, users do not need to update value. Please refer this article for permissions configuration details. Case 1: Ticket closed directly from the edit form In this case, ‘Closed By’ is set using Form Event Actions whenever the ‘Request Status’ column value is changed to ‘Closed’. Navigate to &#8216;Form Event Actions&#8217; under Advanced section and configure as shown below: Please refer this article for Form Event Action configuration details. Case 2: Ticket closed using ‘Close’ custom action Ticket can be closed using ‘Close’ custom action. This action is available in Tickets display form. To capture the actual user in ‘Closed By’ column, add column mapping in ‘Close’ custom action. Navigate to Crow Canyon Custom Actions -&gt; Edit ‘Close’ custom action. Add column mapping for ‘Closed By’ column as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "629",
    "name": "629 - NITRO Studio and NITRO Applications License Registration.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/629%20-%20NITRO%20Studio%20and%20NITRO%20Applications%20License%20Registration.html",
    "title": "NITRO Studio And NITRO Applications License Registration",
    "text": "NITRO Studio and NITRO Applications License Registration - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio and NITRO Applications License Registration NITRO Studio and NITRO Applications License Registration 2126 views 2 min , 29 sec read 0 Applies To SharePoint 2013/2016/2019/SharePoint Server Subscription Edition and SharePoint Online Description This article describes the steps to generate information required to obtain the NITRO Studio and application license for SharePoint On-Premises and Online versions. NITRO Studio (Secure) for SharePoint On-Premises NITRO Studio (Azure) for SharePoint On-Premises NITRO Studio for SharePoint Online NITRO Studio (Secure) for SharePoint On-Premises Steps to generate information for NITRO Secure License Login to one of the SharePoint servers in the farm and run CrowCanyon.NITROHelper.exe as administrator (file can be found at &#8220;C:\\Program Files\\Crow Canyon\\NITRO Studio&#8221; in the SharePoint server), go to &#8220;License Information&#8221; tab, click &#8220;Site information for license key&#8221; sub tab, enter the SharePoint site URL and click &#8220;Generate License Info&#8221; button shown below, copy the whole text generated in below text box and send us at sharepointsupport@crowcanyon.com . If we purchase NITRO Studio Enterprise license then we can enter any site collection URL in &#8220;SharePoint Site URL&#8221; text box. If we purchase NITRO for a particular site collection then enter the required site collection URL in &#8220;SharePoint Site URL&#8221; text box If we purchase NITRO application, then enter application site URL (if the application is installed in a sub site then we need to enter sub site URL) If we are not seeing the &#8220;Site information for license key&#8221; tab mentioned above, open SharePoint Management Shell as administrator from one of the SharePoint servers in the farm, run the required PowerShell commands, and send the details to sharepointsupport@crowcanyon.com in a notepad file. URL/ID Information Applicable to SharePoint Version SharePoint 2013/2016/2019 SharePoint Farm ID Enterprise/Subscription/Application SharePoint Web Application URL Subscription/Application SharePoint Web Application ID Subscription/Application Site Collection URL Subscription/Application Site Collection ID Subscription/Application Application Site URL Application Application Site ID Application Portal Site URL Application (Only for IT Helpdesk, Facilities, Request Management and Custom Service applications) Portal Site ID Application (Only for IT Helpdesk, Facilities, Request Management and Custom Service applications) PowerShell commands to get above details 1.SharePoint Farm ID: (Get-SPFarm).Id 2. Web Application ID: Write-Host &#8220;Web Application ID:&#8221; (Get-SPWebApplication &#8220;WebApplicationURL&#8221;).id 3. Site Collection ID: Write-Host &#8220;Site Collection ID:&#8221; (Get-SPSite &#8220;SiteCollectionURL&#8221;).id 4. Site ID: Write-Host &#8220;Site ID:&#8221; (Get-SPWeb &#8220;ApplicationSiteURL&#8221;).id Steps to apply NITRO Secure License After receiving the required license keys, login to one of the SharePoint servers in the farm and run CrowCanyon.NITROHelper.exe as administrator (file can be found at &#8220;C:\\Program Files\\Crow Canyon\\NITRO Studio&#8221; in the SharePoint server), and follow below steps as per the purchased license. If there are multiple SharePoint servers in the farm (Application Servers and Web Front End servers), then please login to the Server where NITRO Secure is installed or recently updated to find the latest NITRO Secure installation package (CrowCanyon.NITROHelper.exe) to apply the license. Enterprise license registration We will have two license keys. One for NITRO Studio and another for Power Portal. Choose any web application, site collection and apply the license. Send us the output screenshot for our reference. For Power Portal sites, please choose Power Portal in License Information section and apply Portal license. We do not need to repeat this for every site. Sample output for Enterprise NITRO Studio License registration Sample Output for Enterprise Power Portal license registration Subscription license registration Select the right web application, right site collection where NITRO is installed, apply license for NITRO Studio as shown below. For applying Power Portal license, please choose Power Portal option in License Information section and apply license. Application license Select the right web application, right site collection where NITRO is installed, apply license for NITRO Studio as shown below. For applying Power Portal license, please choose Power Portal option in License Information section and apply license. Note that Power Portal license is not required for 2020 applications installed. Sample output for Application License registration NITRO Studio (Azure) for SharePoint On-Premises Please send the Site URL where NITRO Studio is activated along with SharePoint version (2013/2016/2019) to sharepointsupport@crowcanyon.com and we will apply the required license from our side. To convert existing trial NITRO Studio sites to subscription, please refer https://www.crowcanyon.help/article/385/ To convert existing Power Portal trial sites to subscription, please refer https://www.crowcanyon.help/article/386/ NITRO Studio for SharePoint Online Please send the Site URL where NITRO Studio is activated to sharepointsupport@crowcanyon.com and we will apply the required license from our side. To convert existing trial NITRO Studio sites to subscription, please refer https://www.crowcanyon.help/article/385/ To convert existing Portal trial sites to subscription, please refer https://www.crowcanyon.help/article/386/ About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "63",
    "name": "63 - Configure Save and Continue functionality in NITRO Forms and Portal Forms - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/63%20-%20Configure%20Save%20and%20Continue%20functionality%20in%20NITRO%20Forms%20and%20Portal%20Forms%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Configure Save And Continue Functionality In NITRO Forms And Portal Forms Crow Canyon Software Sup",
    "text": "Configure Save and Continue functionality in NITRO Forms and Portal Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Save and Continue functionality in NITRO Forms and Portal Forms Configure Save and Continue functionality in NITRO Forms and Portal Forms 1162 views Less than a minute 0 Applies to: Share Point Online and On-premises Description For forms having a large number of input columns, it is desirable to have the ability to save the item after filling some data and then continue entering more data. This article describes the steps to configure “Save and Continue” functionality in NITRO and Portal Forms. This feature allows users to save the item without closing the NITRO Form. This feature is configured using post save action in “Submit Actions” in NITRO Forms. Detailed Steps 1.Navigate to NITRO Forms Back end site (Helpdesk site or any site where NITRO is activated): Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms Power Portal: Go to Portal Settings -&gt; Portal Forms -&gt; Edit Portal list forms NITRO-based Portal: If you are using NITRO activated site with portal functionality and look and feel, go to the list -&gt; List Settings -&gt; Edit list portal form 2. Hide “Save” button in “Layouts and Theme” section 3. Drag and drop “Submit Action” button on to the form 4. Configure below script in “Pre Save Script Function” Script: functionCallback(); 5. Select “Redirect to Edit Form” option in post save actions and click “Apply” as shown below: Note: In this article we have selected “Redirect to Edit Form” feature, we can also navigate to custom URL as per the requirement 6. After configuring the “Save and Continue” button, Publish the NITRO Form 7. Behavior in New Form: “Save and Continue” action will create the new item and then show the edit form of the item for user to continue entering data 8. Behavior in Edit Form: Item will be saved and edit form will remain open for user to continue editing the item About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "630",
    "name": "630 - Configure Save and Continue functionality in NITRO Forms and Portal Forms - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/630%20-%20Configure%20Save%20and%20Continue%20functionality%20in%20NITRO%20Forms%20and%20Portal%20Forms%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Configure Save And Continue Functionality In NITRO Forms And Portal Forms Crow Canyon Software Sup",
    "text": "Configure Save and Continue functionality in NITRO Forms and Portal Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Save and Continue functionality in NITRO Forms and Portal Forms Configure Save and Continue functionality in NITRO Forms and Portal Forms 1162 views Less than a minute 0 Applies to: Share Point Online and On-premises Description For forms having a large number of input columns, it is desirable to have the ability to save the item after filling some data and then continue entering more data. This article describes the steps to configure “Save and Continue” functionality in NITRO and Portal Forms. This feature allows users to save the item without closing the NITRO Form. This feature is configured using post save action in “Submit Actions” in NITRO Forms. Detailed Steps 1.Navigate to NITRO Forms Back end site (Helpdesk site or any site where NITRO is activated): Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms Power Portal: Go to Portal Settings -&gt; Portal Forms -&gt; Edit Portal list forms NITRO-based Portal: If you are using NITRO activated site with portal functionality and look and feel, go to the list -&gt; List Settings -&gt; Edit list portal form 2. Hide “Save” button in “Layouts and Theme” section 3. Drag and drop “Submit Action” button on to the form 4. Configure below script in “Pre Save Script Function” Script: functionCallback(); 5. Select “Redirect to Edit Form” option in post save actions and click “Apply” as shown below: Note: In this article we have selected “Redirect to Edit Form” feature, we can also navigate to custom URL as per the requirement 6. After configuring the “Save and Continue” button, Publish the NITRO Form 7. Behavior in New Form: “Save and Continue” action will create the new item and then show the edit form of the item for user to continue entering data 8. Behavior in Edit Form: Item will be saved and edit form will remain open for user to continue editing the item About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "631",
    "name": "631 - Install Crow Canyon NITRO Secure for SharePoint SE and SharePoint 2019 (Modern UI) - Crow Canyon Sof.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/631%20-%20Install%20Crow%20Canyon%20NITRO%20Secure%20for%20SharePoint%20SE%20and%20SharePoint%202019%20%28Modern%20UI%29%20-%20Crow%20Canyon%20Sof.html",
    "title": "Install Crow Canyon NITRO Secure For SharePoint SE And SharePoint 2019 (Modern UI) Crow Canyon Sof",
    "text": "Install Crow Canyon NITRO Secure for SharePoint SE and SharePoint 2019 (Modern UI) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Install Crow Canyon NITRO Secure for SharePoint SE and SharePoint 2019 (Modern UI) Install Crow Canyon NITRO Secure for SharePoint SE and SharePoint 2019 (Modern UI) 1575 views 5 min , 17 sec read 1 Applies to: SharePoint SE and SharePoint 2019 (Modern UI) Description This article describes the steps to install Crow Canyon NITRO Secure solution for SharePoint On-Premises 2019 and SE for SharePoint Modern UI. NITRO Secure solution works entirely from within your SharePoint network and does not need to connect to Crow Canyon services running in Azure. Also, all file references (JavaScript, CSS etc.) are local to site collection and not from Crow Canyon CDN. NITRO updates are applied manually giving more control to administrators to decide when to apply updates and to which site collections. If you are looking for NITRO Secure, please contact Crow Canyon sales or support team for the installation package. Prerequisites SharePoint should be installed and configured (SharePoint 2019 and SharePoint SE) and server should be in stable state. App Catalog To install Crow Canyon Modern UI apps, Administrator should create app catalog site for the web application. Note: Please refer below article to install and manage apps in SharePoint server URL: https://docs.microsoft.com/en-us/sharepoint/administration/install-and-manage-apps-for-sharepoint-server Site collection To install in a new site collection, administrator should create a new site collection with team site template. Or installation can be done in an existing site collection created with team site template. To install/upgrade SharePoint wsp solutions, logged in user account should have following privileges: Domain user Local administrator SharePoint farm administrator Owner rights on SharePoint configuration database, central administration content database and web application content database User should have site collection administrator rights on the site collection User should have full control permissions on the app catalog site Microsoft .NET Framework 4.7.2 or above should be installed on the SharePoint server. Make sure that SharePoint administration and SharePoint timer services are running in all servers in the farm. Install Package NITRO Secure installation package contains one file &#8220;NITROStudioSetup.msi&#8221;. Summary of Steps Extract and run NITROStudioSetup.msi Run Crow Canyon NITRO Studio Helper Install Modern UI Apps Install NITRO Secure in the Site collection Activate NITRO Secure for a site Register License Install NITRO Workflow debugging service Install NITRO Office API for document generation Detailed Steps Extract and run NITROStudioSetup.msi Copy the downloaded &#8220;NITROStudioSetup.zip&#8221; file to the SharePoint Server. Note: If there are multiple SharePoint servers in the farm, copy the “NITROStudioSetup.zip” file to one of the servers in the SharePoint farm that is running “Microsoft SharePoint Foundation Web Application” service. Open Command Prompt (Run as Administrator) &#8211;&gt; navigate to the Package location &#8211;&gt; enter the below command to verify MD5 signature for the package. CertUtil -hashfile NITROStudioSetup.zip MD5 In this example, package download link is like &#8220;https://…/MD5_de609b2210c24edd9d40b691613a7574/NITROStudioSetup.zip&#8221; and the command output is matching with checksum in the download link as expected. Please contact sharepointsupport@crowcanyon.com if this checksum is not matching. Note : MD5 signature is to be verified for the downloaded &#8216;NITROStudioSetup.zip&#8217; file and not the &#8216;NITROStudioSetup.msi&#8217; file extracted from the zip file. After MD5 signature is validated, right click on zip file and extract &#8216;NITROStudioSetup.msi&#8217; file. Copy “NITROStudioSetup.msi” installer to your SharePoint server. Right click on the file, open properties panel, and click on ‘Unblock’ button if it is there. Note : If there are multiple SharePoint servers in the farm, copy the “NITROStudioSetup.msi” installer to one of the servers that is running service “Microsoft SharePoint Foundation Web Application”. Run the setup (right click and then click Install). It will open the NITRO Studio Setup Wizard and click next to continue the installation. 3. By default, this setup will install the NITRO Studio helper in below location. We can also change this location if required. Once the installation is done, “Crow Canyon NITRO Studio Helper” shortcut will be added to the desktop. This application will prompt for NITRO Secure solutions installation on first run, after that it will be used to configure NITRO Secure in site collections. Run Crow Canyon NITRO Studio Helper Navigate to desktop and run “Crow Canyon NITRO Studio Helper” utility. This will open below screen. If NITRO Studio solutions are not installed on server then it will show a button to install solutions. Click “Install NITRO Studio” button. This will open “Crow Canyon NITRO Studio Installation Wizard”. This will add and deploy NITRO Studio solutions in the SharePoint server. Click ‘Finish’ button to open NITRO Secure configuration tool. Note: After finishing the installation, please verify that solutions are added to SharePoint server. Go to Central Administration -&gt; System Settings -&gt; Manage Farm Solutions to check solutions. Below solutions should be added and deployed in the server: CrowCanyon.CommonUtils.wsp CrowCanyon.NITROStudio.wsp Below solution should be added but not deployed. It will be activated using NITRO Secure tool in individual site collections: CrowCanyon.WorkflowManager.wsp Install Modern UI Apps Follow below steps to install NITRO Modern UI apps to the app catalog site. Note: App catalog must be configured for the web application to install the Modern UI Apps.If app catalog site is not setup then below message is shown. Please refer below article to install and manage apps in SharePoint server. Once app catalog is setup you can resume the installation. URL: https://docs.microsoft.com/en-us/sharepoint/administration/install-and-manage-apps-for-sharepoint-server Specify credentials of a user having permissions on the selected site collection and the app catalog site and click “Reload Modern UI Apps”. Click “ADD IT” button to add and deploy “Crow Canyon Modern UI Extension I” and “Crow Canyon Modern UI Extension II” apps to app catalog site. Once the apps are installed, success message will be shown. Also, you can verify these apps in the app catalog site. Apps deployed in app catalog site: Install NITRO Secure in the Site Collection Follow below steps to install and activate NITRO secure for a site collection. Click “Activate” button to activate NITRO Studio, Workflow Manager and Mail Templates features for the site collection. Note: Activating Workflow Manager feature will deploy the Workflow Manager solution to selected web application and will activate the workflow manager feature for the selected site collection. After activating the features, switch to “Settings/Upload Package” tab. Important note on NITRO Secure settings: If you do not have any activated sites with regular version of NITRO (Azure), then select level as ‘Farm’ and click ‘Activate’ button. This will normally be the case for new customers and after this all sites will consider NITRO Secure version only. However, if you are an existing customer and using regular NITRO in any site collection for historical reasons, please select ‘SiteCollection’ option below. Please refer this article to move to NITRO Secure in existing site collections as well. After activating the NITRO, “NITRO Secure Status” will be shown as “Farm – Activated” in the tool. Next step is to install NITRO Secure files in the site collection. Please refer image below. Package file path will be auto-filled, however, if you have installed NITRO Studio in a different location then browse to the file path of “CrowCanyonNITRO.zip” and then click “Install” button. This will create required lists/libraries in the root site for the NITRO functionality: Activate NITRO for a site Navigate to the site collection where NITRO Secure is installed and click gear icon (cog) in the top right corner as shown below: Click Crow Canyon NITRO Studio to navigate to the NITRO Studio admin page. This page lists all the sub-sites in the site collection: To activate NITRO Studio, click “Activate” link for the corresponding site: Activation process will begin, and progress will be shown: Wait until success message appears and then click Ok. Go to Site collection –&gt; Site settings –&gt; Site collection administration –&gt; Site collection features and ensure below site collection features are activated: With above step, NITRO is activated for the site. Refer https://www.crowcanyon.info/nitro/appmanual_v2/ for user manual of NITRO Apps. To install pre-built Crow Canyon NITRO Applications, contact sharepointsupport@crowcanyon.com Register License By default, the NITRO Studio comes with 45 days trial license. To get the subscription farm licenses, please generate license info for the site using “CrowCanyon.NITROHelper.exe” tool as shown below and send it to sharepointsupport@crowcanyon.com . Crow Canyon team will generate and send the license keys. After receiving the license keys, register the license key with “CrowCanyon.NITROHelper.exe” tool: Similarly register the Portal license key and check the license status by selecting the “Power Portal” option in License Information section. Install NITRO Workflow debugging service This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to debug NITRO workflows. Please refer to this article to install this component in your SharePoint farm. Install NITRO Office API for document generation This component is common across all NITRO activated site collections in the farm and has to be installed only once. This is an optional component that can be used to generate documents using Office API method in Custom Actions and NITRO workflows. Please refer to this article to install this component in your SharePoint farm. Troubleshooting Steps Case 1: 401 Unauthorized error When we try to connect to Modern UI components in &#8216;Modern UI Apps&#8217; tab, after entering credentials and clicking connect, NITRO Helper Tool throws an exception of &#8216;(401) Unauthorized&#8217; as shown below Resolution Please login to the SharePoint server &#8211;&gt; Ensure ‘DisableLoopbackCheck’ key is set as ‘1’ in Registry (Path: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa) as shown below. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "632",
    "name": "632 - Clear a list column value in NITRO Forms and Workflows.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/632%20-%20Clear%20a%20list%20column%20value%20in%20NITRO%20Forms%20and%20Workflows.html",
    "title": "Clear A List Column Value In NITRO Forms And Workflows",
    "text": "Clear a list column value in NITRO Forms and Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Clear a list column value in NITRO Forms and Workflows Clear a list column value in NITRO Forms and Workflows 1139 views Less than a minute 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description/SharePoint Server Subscription Edition This article describes syntax to clear a column value in NITRO Forms, Custom Actions and NITRO Workflows. Same syntax applies to different types of columns like text, number, lookup etc. Case 1: NITRO Forms ‘Form Event Actions’ In this example, we have configured ‘Form Event Action’ to clear ‘Available Budget’ column value when ‘Department’ column value is set to ‘None’ by the user. We have used ‘Update Form Controls’ action to clear column value using following options: Value : Configure empty column mapping Format Value using JavaScript: Use return statement with empty single quotes in the function body to clear the column value using script: return &#8221;; Case 2: Crow Canyon Custom Actions and NITRO Workflows To clear column values in Custom Actions or NITRO Workflows in Add/Update list item actions, use blank value in column mapping: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "64",
    "name": "64 - Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/64%20-%20Hide%20%E2%80%98Delete%E2%80%99%20button%20from%20%E2%80%98Attachments%E2%80%99%20section%20in%20NITRO%20Forms%20based%20on%20user%20permissions%20-%20Crow%20Cany.html",
    "title": "Hide ‘Delete’ Button From ‘Attachments’ Section In NITRO Forms Based On User Permissions Crow Cany",
    "text": "Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions 1119 views Less than a minute 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description Users who can edit the items can also delete item attachments. Sometimes it is required that users should be able to edit items but should not be able to remove attachments. This article has the steps to hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on logged in user group membership. Detailed Steps Identify the SharePoint groups that will have permissions to delete attachments. For all other users delete button will be hidden. Navigate to NITRO Forms of the list. Expand ‘Advanced’ section (in the left-hand panel) -&gt; add CSS in ‘Custom CSS’ as shown below: Script : .SPUserNotInGroup div#divAttachments table td:last-child { display: none; } Add below script in ‘Custom JavaScript’ section. Note: Please replace “group 1” and “group2” names highlighted in below script with required SharePoint groups. Users who are members of any of the specified groups will be able to see the “Delete” button in NITRO Forms. For all other users, it will be hidden. Script : var userInGroup = false; var deleteAllowedGroups = &#91;\"group1\", \"group2\"]; // specify group names in lowercase if (formContext.conditionEvalUtility.CurrentUser.Groups &amp;&amp; formContext.conditionEvalUtility.CurrentUser.Groups.length &gt; 0) { for (var i = 0; i &lt; formContext.conditionEvalUtility.CurrentUser.Groups.length; i++) { if (deleteAllowedGroups.indexOf(formContext.conditionEvalUtility.CurrentUser.Groups&#91;i].toLowerCase()) &gt; -1) { userInGroup = true; break; } } } if (!userInGroup) { $(\"body\").addClass(\"SPUserNotInGroup\"); } Sample Output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "640",
    "name": "640 - Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/640%20-%20Hide%20%E2%80%98Delete%E2%80%99%20button%20from%20%E2%80%98Attachments%E2%80%99%20section%20in%20NITRO%20Forms%20based%20on%20user%20permissions%20-%20Crow%20Cany.html",
    "title": "Hide ‘Delete’ Button From ‘Attachments’ Section In NITRO Forms Based On User Permissions Crow Cany",
    "text": "Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions Hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on user permissions 1119 views Less than a minute 0 Applies To Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description Users who can edit the items can also delete item attachments. Sometimes it is required that users should be able to edit items but should not be able to remove attachments. This article has the steps to hide ‘Delete’ button from ‘Attachments’ section in NITRO Forms based on logged in user group membership. Detailed Steps Identify the SharePoint groups that will have permissions to delete attachments. For all other users delete button will be hidden. Navigate to NITRO Forms of the list. Expand ‘Advanced’ section (in the left-hand panel) -&gt; add CSS in ‘Custom CSS’ as shown below: Script : .SPUserNotInGroup div#divAttachments table td:last-child { display: none; } Add below script in ‘Custom JavaScript’ section. Note: Please replace “group 1” and “group2” names highlighted in below script with required SharePoint groups. Users who are members of any of the specified groups will be able to see the “Delete” button in NITRO Forms. For all other users, it will be hidden. Script : var userInGroup = false; var deleteAllowedGroups = &#91;\"group1\", \"group2\"]; // specify group names in lowercase if (formContext.conditionEvalUtility.CurrentUser.Groups &amp;&amp; formContext.conditionEvalUtility.CurrentUser.Groups.length &gt; 0) { for (var i = 0; i &lt; formContext.conditionEvalUtility.CurrentUser.Groups.length; i++) { if (deleteAllowedGroups.indexOf(formContext.conditionEvalUtility.CurrentUser.Groups&#91;i].toLowerCase()) &gt; -1) { userInGroup = true; break; } } } if (!userInGroup) { $(\"body\").addClass(\"SPUserNotInGroup\"); } Sample Output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "641",
    "name": "641 - Configure Text Pattern-Based Validations In NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/641%20-%20Configure%20Text%20Pattern-Based%20Validations%20In%20NITRO%20Forms.html",
    "title": "Configure Text Pattern Based Validations In NITRO Forms",
    "text": "Configure Text Pattern-Based Validations In NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Text Pattern-Based Validations In NITRO Forms Configure Text Pattern-Based Validations In NITRO Forms 1055 views 1 min , 37 sec read 0 Applies To : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO Forms column validation feature supports several built-in ways to ensure that entered column values follow the required rules. Predefined patterns include validating format for phone number, email, and number. For any custom patterns, regular expression can be used for validation. This article lists sample use cases for regular expression-based validations. Use Case 1 Configure validation such that specified value in the single line of text column should not have space(s) at the end of line. In this sample, validation is configured on ‘Employee Name’ column. This is a single line of text column; validation will also work on multiple lines of plain text column. Navigate to NITRO Forms designer settings. Go to List -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select the required column -&gt; Expand ‘Validations’ section on the right -&gt; Click ‘Add’ button to configure a new validation. Configure the column validation as shown below: Note that validation type is ‘Pattern’ and pattern value is ‘Custom’. Regular expression used in ‘Validation Value’ is [^\\s]+$ After configuring this validation, publish the NITRO Forms. Sample output Use Case 2 Configure validation such that the entered email address in single line of text column should be of a specific domain. Email addresses are validated on the bases of specific but case insensitive domain. In this sample, validation is configured on ‘Email Address’ column. Only the first email address specified in this single line of text column is validated. Navigate to NITRO Forms designer for the list. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select the required column -&gt; Expand ‘Validations’ section on the right -&gt; Click ‘Add’ button to configure a new validation. Configure column validation as shown below: Click ‘Edit’ button to specify custom script. Script: var reExpr = new RegExp(/((\\w+).?)+@contoso\\.com/i); objData.Status = reExpr.test(objData.ColumnValue); if(!objData.Status){ objData.Message = \"This domain is not allowed\"; } return objData; Note: Replace ‘contoso’ with required domain. Replace ‘This domain is not allowed’ with required validation message. After configuring this validation, publish the NITRO Forms. Sample output Use Case 3 Configure validation such that specified value in a column should not have any special characters. Navigate to NITRO Forms designer settings. Go to List -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select the required column -&gt; Expand ‘Validations’ section on the right -&gt; Click ‘Add’ button to configure a new validation. Configure the column validation as shown below: Note that validation type is ‘Pattern’ and pattern value is ‘Custom’. Regular expression used in ‘Validation Value’ is ^[a-zA-Z0-9-\\s]*$ Above regular expression allows alpha numeric characters, space and hyphen. Regular expression can be modified as needed. After configuring this validation, publish the NITRO Forms. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "642",
    "name": "642 - How to change sender address for outgoing emails in Crow Canyon NITRO activated sites and Service re.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/642%20-%20How%20to%20change%20sender%20address%20for%20outgoing%20emails%20in%20Crow%20Canyon%20NITRO%20activated%20sites%20and%20Service%20re.html",
    "title": "How To Change Sender Address For Outgoing Emails In Crow Canyon NITRO Activated Sites And Service Re",
    "text": "How to change sender address for outgoing emails in Crow Canyon NITRO activated sites and Service request application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How to change sender address for outgoing emails in Crow Canyon NITRO activated sites and Service request application How to change sender address for outgoing emails in Crow Canyon NITRO activated sites and Service request application 1087 views 1 min , 18 sec read 0 Applies to : SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In Crow Canyon NITRO activated sites, outgoing emails are sent in following ways: Email Manager (user-initiated emails) NITRO Workflows (if any send mail actions are configured) Custom Actions (if any send mail actions are configured) For service request application (IT Help Desk, Facilities, Request Management etc.), emails are also sent for standard product notifications. That is, on Ticket creation/assignment/completion/resolution and notification on incoming email. This article lists the steps to modify the sender or ‘from’ address in outgoing emails for all the above cases. Please refer ‘Example Scenario’ section in this article for configuring required ‘Send As’ permissions for outgoing emails. Detailed steps Email Manager Technicians can send mail from the Ticket using ‘Crow Canyon Email’ button. To modify the sender in Email Manager, go to Tickets list -&gt; List Settings -&gt; Crow Canyon Email Manager settings and modify the sender. Note that Email Manager can also be activated on any list in the site. Same set of steps can be used for any list to change the sender address. NITRO Workflows If there is are any workflows that send mails, go to the site -&gt; Application Administration&nbsp;-&gt; Crow Canyon NITRO Apps&nbsp;-&gt; NITRO Workflows&nbsp;-&gt;&nbsp;edit all the workflows that have send mail actions -&gt; edit the Send mail action and modify sender in ‘Recipients’ section: Similarly, sender can be changed for all other workflows that have send mail actions. Custom Actions send mail actions If there is any custom action that send mails, go to the list -&gt; List Settings -&gt; ‘Crow Canyon Custom Actions’&nbsp;-&gt; edit all the custom actions that have send mail actions -&gt; edit the send mail action and modify sender in ‘Email Settings’ section: Standard product notifications in Service Request application These notifications are sent to Ticket requester, staff, and team when a Ticket is created, assigned, resolved, and closed. To modify the sender address of these emails, go to the service request application site -&gt; Application Administration -&gt; Notifications&nbsp;-&gt; Edit ‘Notification on Ticket Creation’ and modify the sender as shown below: Similarly, edit notification on Ticket assignment/resolution/completion/incoming email/Ticket reactivation and modify the sender address. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "643",
    "name": "643 - Show images along with choice options in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/643%20-%20Show%20images%20along%20with%20choice%20options%20in%20NITRO%20Forms.html",
    "title": "Show Images Along With Choice Options In NITRO Forms",
    "text": "Show images along with choice options in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Show images along with choice options in NITRO Forms Show images along with choice options in NITRO Forms 946 views 2 min , 47 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description Standard SharePoint choice columns show options as text only. Adding an image/icon next to each choice option enhances the form look and feel and makes the choice column easier to use. This can be configured using ‘Form Event Actions’ in NITRO Forms. In this article, we have taken example of ‘Office Application’ column with below choice options and added images for each option. Microsoft Word Microsoft Excel Microsoft Access Microsoft PowerPoint Note : This article has script for both multi-select and single-select choice columns. For single-select columns, the script is written for columns configured to show options as ‘Radio Buttons’. Script is not designed to work in new and edit forms for columns configured to show options as ‘Drop-Down Menu’. Summary of steps Upload required images in ‘Site Assets’ document library. Configure ‘Form Event Action’ to show images for a choice column on the form. Detailed steps 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Upload required images in document library. Go to Site Contents -&gt; Site Assets and upload images for each of the choice column options 2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure ‘Form Event Action’ to show images for a choice column on the form. Navigate to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Advanced section (in left-hand panel) -&gt; Form Event Actions. Configure a new form event action on form load with an ‘Execute Script’ script action as shown below: Script for multi-choice column (‘Checkboxes’): var optionsMappings = { ‘Microsoft Word’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Word.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft Excel’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Excel.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft Access’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Access.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft PowerPoint’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/PowerPoint.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle } } var fieldName = ‘OfficeApplication’; if (window.ccs_g_FormUI.isDisplayForm) { var result = ‘‘; var objVal = window.ccs_g_FormUI.listItem.get_item(fieldName); if (objVal &amp;&amp; objVal.length &gt; 0) { for (var i = 0; i &lt; objVal.length; i++) { debugger; if (optionsMappings.hasOwnProperty(objVal&#91;i])) { var objSett = optionsMappings&#91;objVal&#91;i]]; var imgSrc = ‘&lt;img src='‘ + objSett.Image + ‘' style='margin-right: 3px;margin-bottom: 3px;width:’ + objSett.Width + ‘;height:’ + objSett.Height + ‘'&gt;&lt;/img&gt;‘; result = (result == ‘‘ ? ‘‘ : result + ‘; ‘) + imgSrc + objVal&#91;i]; } else { result = (result == ‘‘ ? ‘‘ : result + ‘; ‘) + objVal&#91;i]; } } } $(‘#ccs_control_’ + fieldName).html(result); } else { for (var value in optionsMappings) { var selCheckBox = $(‘#ccs_control_’ + fieldName + ‘ input&#91;value='‘ + value + ‘']’); if (selCheckBox.length &gt; 0) { var objSett = optionsMappings&#91;value]; selCheckBox.next().prepend(‘&lt;img src='‘ + objSett.Image + ‘' style='margin-right: 3px;margin-bottom: 3px;width:’ + objSett.Width + ‘;height:’ + objSett.Height + ‘'&gt;&lt;/img&gt;‘); } } } In above script, modify choice values (example, ‘Microsoft Word’), column internal name (that is, ‘OfficeApplication’) and image URLs as per image shown below. Also, please ensure that all users have at least read permissions on choice option images. Script for single select choice column: Refer above image for replacing choice options text, image URLs and column internal name in the script given below. Note : For single-select columns, the script is written for columns configured to show options as ‘Radio Buttons’. Script is not designed to work in new and edit forms for columns configured to show options as ‘Drop-Down Menu’. var optionsMappings = { ‘Microsoft Word’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Word.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft Excel’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Excel.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft Access’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/MS Access.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle }, ‘Microsoft PowerPoint’: { Image: ‘https://contoso.sharepoint.com/sites/NITRO/IT/SiteAssets/PowerPoint.png’, Width: ‘25px’, Height: ‘25px’, ImagePlacement: ‘left’,//left/right VerticalAlignment: ‘middle’,//top/bottom/middle } } var fieldName = \"SingleChoice\"; if (window.ccs_g_FormUI.isDisplayForm) { var result = \"\"; var objVal = window.ccs_g_FormUI.listItem.get_item(fieldName); if (objVal) { if (optionsMappings.hasOwnProperty(objVal)) { var objSett = optionsMappings&#91;objVal]; var imgSrc = \"&lt;img src='\" + objSett.Image + \"' style='margin-right: 3px;margin-bottom: 3px;width:\" + objSett.Width + \";height:\" + objSett.Height + \"'&gt;&lt;/img&gt;\"; result = (result == \"\" ? \"\" : result + \"; \") + imgSrc + objVal; } else { result = (result == \"\" ? \"\" : result + \"; \") + objVal; } } $(\"#ccs_control_\" + fieldName).html(result); } else { for (var value in optionsMappings) { var selCheckBox = $(\"#ccs_control_\" + fieldName + \" input&#91;value='\" + value + \"']\"); if (selCheckBox.length &gt; 0) { var objSett = optionsMappings&#91;value]; selCheckBox.next().prepend(\"&lt;img src='\" + objSett.Image + \"' style='margin-right: 3px;margin-bottom: 3px;width:\" + objSett.Width + \";height:\" + objSett.Height + \"'&gt;&lt;/img&gt;\"); } } } About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "644",
    "name": "644 - Frequently asked questions regarding NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/644%20-%20Frequently%20asked%20questions%20regarding%20NITRO%20Forms.html",
    "title": "Frequently Asked Questions Regarding NITRO Forms",
    "text": "Frequently asked questions regarding NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions regarding NITRO Forms Frequently asked questions regarding NITRO Forms 935 views Less than a minute 0 Applies To : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes some of the common issues in NITRO Forms and steps to fix them. Case 1 Issue : New options added to a ‘Choice’ type of column from SharePoint column settings page are not showing up in the column dropdown in NITRO Forms. Resolution: &nbsp; Reset cache so that latest column information will be picked up by forms. NITRO forms cache list and columns related information to speed up the loading of forms. Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Global Settings -&gt; ‘Reset Cache’. After that, reload the NITRO form two to three times to see changes. Note that cache is stored in user’s browser, so every user will have to perform this step. Case 2 After marking a column as required in SharePoint column settings, it still showing up as not required in NITRO Forms. Issue : Some of the column changes done from SP list settings are not carried over to the NITRO Forms. Resolution: Enable ‘Require that this column contains information’ from column settings in NITRO Forms and publish the form. Navigate to Crow Canyon NITRO Forms designer for the list. Select the column and check ‘Require that this column contains information’ under ‘General Settings’. ‘Apply’ settings and publish the form. Refresh the NITRO Forms two to three times afterwards. In case of multiple forms, ensure the column settings are updated in both New and Edit forms as needed. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "645",
    "name": "645 - Frequently asked questions regarding Crow Canyon NITRO Engage.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/645%20-%20Frequently%20asked%20questions%20regarding%20Crow%20Canyon%20NITRO%20Engage.html",
    "title": "Frequently Asked Questions Regarding Crow Canyon NITRO Engage",
    "text": "Frequently asked questions regarding Crow Canyon NITRO Engage - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions regarding Crow Canyon NITRO Engage Frequently asked questions regarding Crow Canyon NITRO Engage 1152 views 2 min , 28 sec read 0 Applies To: SharePoint Online Overview This article covers following cases: Change logo and rename Crow Canyon NITRO Engage Configure &#8220;Create IT Ticket&#8221; action in Teams chat 1. Change logo and rename Crow Canyon NITRO Engage Below instructions describes the steps to change the bot logo and also rename Crow Canyon NITRO Engage default name i.e. &#8220;NITRO Engage&#8221; to the required name. In this example, we are renaming the BOT to “Service Desk BOT” Detailed Instructions: 1. To modify the bot name and logo, we need to make some changes in &#8216;NITROEngage.zip&#8217; file. Go to the location where &#8216;NITROEngage.zip&#8217; file already saved as part of bot installation. if this file is not available, please contact crowcanyonsupport@crowcanyon.com to get the latest bot package. 2. Extract the &#8216;NITROEngage.zip&#8217; file and the extracted folder will contains below files. 3. To modify the logo, we need to replace below files with the logos that we want to change. color.png outline.png Please note that logo file names and format should be same as above and size for each file should be like below: color.png: 192 x 192 outline.png: 32 x 32 4. Next, edit the &#8216;manifest.json&#8217; file in notepad and modify the version number and rename the bot needed and save the file. After modification, the &#8216;manifest.json&#8217; will be like: 5. After all above changes, select the three files and make it as zip file with name as &#8216;NITROEngage.zip&#8217; 6. Next, go to teams admin center in the browser (URL: https://admin.teams.microsoft.com /) -&gt; Expand Teams apps -&gt; Click &#8216;Manage apps&#8217; -&gt; Search with NITRO under manage apps as shown below and click &#8216;NITRO Engage&#8217; app After deleting the app, it will go back to &#8216;Manage apps&#8217; page, now upload the new package (zip file) that we have prepared in above. After uploading the package, below message will be shown: 7. Now go to the teams in the browser (URL: https://teams.microsoft.com/ ), -&gt; Click ellipses to add apps to the teams. Note : If you not find the bot with latest name then reopen the teams again. 8. This will update the bot logo and change the name from &#8216;NITRO Engage&#8217; to &#8216;Service Desk Bot&#8217; as shown below. If you still seeing the old name in the bot, sign out and sign in again to the teams. 2. Configure &#8220;Create IT Ticket&#8221; action in Teams chat To configure &#8220;Create IT Ticket&#8221; action in Teams chat, follow below instructions: For this, go to Helpdesk site -> Application Administration -> Crow Canyon NITRO Apps -> Crow Canyon NITRO Studio -> BOTS -> Click &#8220;Configure NITRO Engage Settings (Global)&#8221; Configure NITRO HelpDesk Settings as shown below: Sample Ticket Form URL: [[SiteURL]]/SitePages/CCSDisplayForm.aspx?ListID=[[Tickets List ID]]&amp;ItemID={ItemID} Example : https://contoso.sharepoint.com/sites/NITRO/Helpdesk/SitePages/CCSDisplayForm.aspx?ListID=3d1c4396-ed18-4278-aea2-82d62b6efc79&amp;ItemID={ItemID} In above sample URL, replace below placeholders with actual values: [[SiteURL]]: Replace this with helpdesk site URL [[Tickets List ID]]: Replace this placeholder with Tickets list Id. To know the Tickets list Id, go to helpdesk site -> Application Administration -> Configure Lists -> Configure Tickets -> find the list id in the browser URL as shown below: After configuring the action, &#8220;Create IT Ticket&#8221; action will be shown in Teams chat as shown below: Click &#8220;Create IT Ticket&#8221; action to create Ticket. This will open Ticket form as shown below: Specify the required Ticket details, and click &#8220;Submit&#8221; button, this will create item in the Tickets list. After creating the Ticket, success message will be shown like below: How to modify the name of &#8220;Create IT Ticket&#8221; action? 1.To modify the &#8220;Create IT Ticket&#8221; action name, we need to make some changes in &#8216;NITROEngage.zip&#8217; file. Go to the location where &#8216;NITROEngage.zip&#8217; file already saved as part of bot installation. If this file is not available, please contact crowcanyonsupport@crowcanyon.com to get the latest bot package. 2. Extract the &#8216;NITROEngage.zip&#8217; file and the extracted folder will contain below files. 3. Edit the &#8216;manifest.json&#8217; file in notepad and modify the version number and rename the &#8220;Create IT Ticket&#8221; action name as needed and save the file. 4. After above changes, select the three files and make it as zip file with name as &#8216;NITROEngage.zip&#8217; 5. Next, update the NITRO Engage app in teams Refer instructions from #6 in &#8220;Change logo and rename Crow Canyon NITRO Engage&#8221; section above in this article. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "646",
    "name": "646 - Steps to convert NITRO Studio based sites to NITRO Secure.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/646%20-%20Steps%20to%20convert%20NITRO%20Studio%20based%20sites%20to%20NITRO%20Secure.html",
    "title": "Steps To Convert NITRO Studio Based Sites To NITRO Secure",
    "text": "Steps to convert NITRO Studio based sites to NITRO Secure - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps to convert NITRO Studio based sites to NITRO Secure Steps to convert NITRO Studio based sites to NITRO Secure 1409 views 5 min , 48 sec read 0 Applies to: SharePoint On-premises (2013, 2016, 2019, SharePoint Server Subscription Edition) Introduction Crow Canyon NITRO Studio for SharePoint on-premises (2013/16/19) has two versions. Regular version (Azure) connects to Crow Canyon components hosted in Microsoft Azure. This includes checks for licensing and referring JavaScript and CSS files. Note that no SharePoint data is sent outside of customer network. NITRO Secure version (Non-Azure) does not refer to any component outside of customer network and everything is installed within the SharePoint farm. This document has steps to move from Azure version to Non-Azure version. It is possible to have some sites on Azure version while transitioning to Non-Azure versions so both can co-exist. However, it is recommended to move all sites in the farm to same version for ease of maintenance and support. NITRO Secure Installation Refer instructions to install NITRO Secure from this article NITRO Secure Conversion Open &#8220;Crow Canyon NITRO Studio Helper&#8221; shortcut from the desktop and click &#8220;Show all sites status&#8221; link in the NITRO Secure utility tool as shown below: This will open a page that shows status of NITRO activation for all the sites in the SharePoint farm. User should have the required privileges to see status for all sites. NITRO Studio status page: Activate NITRO Studio Activate NITRO Studio for the site where NITRO Studio Azure is originally activated. Note that after NITRO Secure installation, &#8216;Activate&#8217; button will be shown for the site instead of &#8216;Manage&#8217; button. And NITRO has to be re-activated on the site. Navigate to the site collection where NITRO Secure is installed and click gear icon (cog) in the top right corner as shown below: refer &#8220;Activate NITRO for a site&#8221; section in this article to activate NITRO Studio for a site. Save NITRO components settings NITRO Apps configurations need to be resaved after activating the Non-Azure version in site. Go to site where NITRO Studio is activated -&gt; Site settings -&gt; Crow Canyon NITRO Apps -&gt; navigate to each app listed below to save the configurations. Email Manager Select each list that is configured for this app and save settings. No changes are required in the settings, just open the settings, and save. NITRO Forms For every list that is using NITRO Forms, open the NITRO Forms designer and then publish NITRO forms. Advanced Lookup Save each configuration in Advanced Lookup settings page. Branding Remove branding and reapply the same branding: Remove branding: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?removing-branding.html Apply branding: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?crow-canyon-themes.html Cascaded Lookup Note: This step can be safely ignored if the lists are already using NITRO Forms. This is required only if there are some lists that use cascaded lookup feature on standard SharePoint forms (not NITRO Forms). 1.Remove &#8220;CCSCascadedLookupScriptWP&#8221; webpart from default new and edit forms (standard SharePoint list item forms). Go to the list that is using cascaded lookup settings -&gt; List ribbon -&gt; click on &#8220;Default New Form&#8221; as shown below, delete the web part names &#8220;CCSCascadedLookupScriptWP&#8221; and stop editing the page. Repeat the same for Default Edit Form. 2. After deleting the &#8220;CCSCascadedLookupScriptWP&#8221; webpart from both default New and Edit forms, go to the list settings -&gt; Crow Canyon Cascaded Lookup -&gt; Edit the cascaded lookup settings and save the settings. This step will add the web parts back with new references to forms. 3. Repeat the same for every list using cascaded lookup on SharePoint forms Custom Actions For each list having Custom Actions configured, navigate to Custom Actions for the list and resave each custom action. List Rollup Edit each list rollup configuration and save settings Remove and add web parts in pages: List rollup web parts needs to be removed and re-added to each page using this web part Navigate to each workspace page (each quick launch link and top link bar link in case of pre-defined applications) à edit the page, remove the web part of List Rollup. Note : For standard libraries where pages are saved, navigate to below locations for removing the webparts from workspace pages. If pages are saved in other libraries then navigate to those libraries as well: Classic experience (2013, 2016 and 2019 classic UI): Site Contents -&gt; Workspaces Modern experience (2019 Modern UI): Site Contents -&gt; Site Pages Re-add web part to the page from List rollup app page as shown below: List Search Remove and add web parts in pages List search web parts needs to be removed and re-added to each page using this web part Navigate to each workspace page (each quick launch link and top link bar link in case of pre-defined applications) à edit the page, remove the List Search web part. Note : For standard libraries where pages are saved, navigate to below locations for removing the webparts from workspace pages. If pages are saved in other libraries then navigate to those libraries as well: Classic experience (2013, 2016 and 2019 classic UI): Site Contents -&gt; Workspaces Modern experience (2019 Modern UI): Site Contents -&gt; Site Pages Re-add web part to the page from List Search app page as shown below: List View Edit each list view configuration and save settings. Remove and add web parts in pages: List view web parts needs to be removed and re-added to each page using this web part Navigate to each workspace page (each quick launch link and top link bar link in case of pre-defined applications) à edit the page, remove the list view web part. Note : For standard libraries where pages are saved, navigate to below locations for removing the webparts from workspace pages. If pages are saved in other libraries then navigate to those libraries as well: Classic experience (2013, 2016 and 2019 classic UI): Site Contents -&gt; Workspaces Modern experience (2019 Modern UI): Site Contents -&gt; Site Pages Re-add web part to the page from List View app page as shown below: Reports Edit each report settings and save settings. Remove and add report web parts in pages: NITRO Reports web parts needs to be removed and re-added to each page using this web part Navigate to each workspace page (each quick launch link and top link bar link in case of pre-defined applications) à edit the page, remove the list view web part. Note : For standard libraries where pages are saved, navigate to below locations for removing the webparts from workspace pages. If pages are saved in other libraries then navigate to those libraries as well: Classic experience (2013, 2016 and 2019 classic UI): Site Contents -&gt; Workspaces Modern experience (2019 Modern UI): Site Contents -&gt; Site Pages Re-add web part to the page from NITRO Reports app page as shown below: TilesArc Edit each Tiles, Dials and Link Tiles settings and save settings. Remove and add Tiles, Dials and Link Tiles web parts in pages: Tiles, Dials and Link Tiles web parts needs to be removed and re-added to each page using this web part Navigate to each workspace page (each quick launch link and top link bar link in case of pre-defined applications) à edit the page, remove the list view web part. Note : For standard libraries where pages are saved, navigate to below locations for removing the webparts from workspace pages. If pages are saved in other libraries then navigate to those libraries as well: Classic experience (2013, 2016 and 2019 classic UI): Site Contents -&gt; Workspaces Modern experience (2019 Modern UI): Site Contents -&gt; Site Pages Re-add web part to the page from “Tiles and Dials” app page as shown below: User Info Filler Re-save settings Print Manager No changes required ColorKPI No changes required LinkedItems No changes required MailTemps No changes required Application Specific pages In Crow Canyon pre-built applications there is a tabs component in &#8216;Application Administration&#8217;, &#8220;Onboarding Dashboard&#8221; pages. There is a content editor web parts that has link referring to a text file located in Site Assets library of the site. These files need to be downloaded to local computer and then below changes need to be done in the links. The hyperlinks (href) and source (src) URLs that are referencing to Crow Canyon Azure need to be replaced with local files in the site Below table lists old URL that need to be replaced with corresponding NITRO Secure URL. Considering example site collection URL as http://contoso/sites/ServiceDesk , links are given below. Please change this as per the URL of your site collection. Azure URL Non-Azure URL https://kendo.cdn.telerik.com/2017.2.621 /sites/ServiceDesk/CrowCanyonNITRO/Libs/V2 https://kendo.cdn.telerik.com/2017.3.1026 /sites/ServiceDesk/CrowCanyonNITRO/Libs/V2 https://kendo.cdn.telerik.com/2018.3.1017 /sites/ServiceDesk/CrowCanyonNITRO/Libs/V2 https://kendo.cdn.telerik.com/2019.1.115 /sites/ServiceDesk/CrowCanyonNITRO/Libs/V2 https://cdnjs.cloudflare.com/ajax/libs /sites/ServiceDesk/CrowCanyonNITRO/Libs https://code.jquery.com/ui/1.12.1/themes/base /sites/ServiceDesk/CrowCanyonNITRO/Libs/JQuery https://nitrostudio.azurewebsites.net /sites/ServiceDesk/CrowCanyonNITRO/Nitro https://cdn.crowcanyon.com/ /sites/ServiceDesk/CrowCanyonNITRO/CDN https://ccsportal.azurewebsites.net /sites/ServiceDesk/CrowCanyonNITRO/Portal Portal sites There are two versions of portal sites: Power Portal NITRO Studio based portal Power Portal Recreate the Portal site with same as existing portal site URL. Steps : Rename the existing portal site URL Go to the existing portal site -&gt; Portal Administration -&gt; Click &#8220;Site Title, Description, and Logo&#8221; -&gt; Rename URL to old Direct URL: Portal Site URL/_layouts/15/prjsetng.aspx Create new portal site with URL of existing Portal site URL Go to Crow Canyon Power Portal site -&gt; create a new Portal site with existing Portal site URL (after rename) Please refer &#8220;NITRO Secure License&#8221; section below to generate the license information for the Portal site. NITRO Studio based Portal These portals are built with NITRO Studio apps so steps are same as any NITRO site Follow same steps mentioned in &#8220;NITRO Secure Conversion&#8221;, &#8220;NITRO Secure License&#8221; sections described above. After this step, resave the Portal security settings. Steps: Go to portal site settings, Crow Canyon NITRO Site Settings, expand “Security Settings” section, select the site and click “Save Settings”. NITRO Secure License By default, the NITRO Studio comes with 45 days trial license. To get the subscription farm licenses, please generate license info for the site using &#8220;CrowCanyon.NITROHelper.exe&#8221; tool as shown below and send it to sharepointsupport@crowcanyon.com . Crow Canyon team will generate and send the license keys. After receiving the license keys, register the license key with &#8220;CrowCanyon.NITROHelper.exe&#8221; tool: Similarly register the Portal license key and check the license status by selecting the &#8220;Power Portal&#8221; option in License Information section. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "647",
    "name": "647 - Troubleshooting steps for Crow Canyon Workflow Manager.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/647%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20Workflow%20Manager.html",
    "title": "Troubleshooting Steps For Crow Canyon Workflow Manager",
    "text": "Troubleshooting steps for Crow Canyon Workflow Manager - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Crow Canyon Workflow Manager Troubleshooting steps for Crow Canyon Workflow Manager 983 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes the fixes for common issues in Crow Canyon NITRO Workflows. Symptom 1: Unable to edit a workflow. Or column in workflow condition is blank. Root Cause This can happen if a list column used in the workflow conditions has been deleted. Or column has been recreated after deletion but with a different internal name. Fix: Recreate the column with same internal name. To find the internal name of deleted column, export workflow settings and find the column used in workflow conditions. Go to Site Settings -&gt; Crow Canyon NITRO Apps under Site Administration -&gt; NITRO Workflows -&gt; Export the workflow settings as shown below: This will download the workflow settings file. Open the file and format the JSON using notepad++ and find the column that is having this issue at workflow level or action level as per the workflow configuration. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "648",
    "name": "648 - Sample use cases for Execute Script action in Crow Canyon Custom Actions - Crow Canyon Software Supp.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/648%20-%20Sample%20use%20cases%20for%20Execute%20Script%20action%20in%20Crow%20Canyon%20Custom%20Actions%20-%20Crow%20Canyon%20Software%20Supp.html",
    "title": "Sample Use Cases For Execute Script Action In Crow Canyon Custom Actions Crow Canyon Software Supp",
    "text": "Sample use cases for Execute Script action in Crow Canyon Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Sample use cases for Execute Script action in Crow Canyon Custom Actions Sample use cases for Execute Script action in Crow Canyon Custom Actions 1559 views 2 min , 12 sec read 0 Applies to: SharePoint Online and On-Premises Description NITRO Custom Actions have several built-in actions to implement business process automation. For example, actions to create, update, and delete SharePoint list items. Also, actions to query list items, generate document based on template and invoke a web service etc. For any custom functionality not covered directly by these actions, JavaScript code can be written as part of “Execute Script” action. This action provides access to SharePoint and NITRO APIs to implement custom business process. This article lists some of the use cases with detailed steps for Execute Script action: Generate a custom unique ID for SharePoint list items Download document generated using “Generate Document” action Set value for a variable in Execute Script action Detailed Description 1. Generate a custom unique ID for SharePoint list items Please refer this article for steps to generate custom unique ID for SharePoint list items. 2. Download document generated using “Generate Document” action Please refer this manual for usage of this action. In this sample use case, we have a Custom Action to generate Ticket information document using “Generate Document” action. This action uploads the document to the configured document library. With custom script we can auto-download this document after it is generated. This article assumes that file name has syntax like “&lt;Ticket Title&gt;_&lt;Ticket ID&gt;” example, “Printer is Not Working_12.docx” Instructions: Navigate to NITRO Custom Actions configured for the list. Edit the custom action that generates the required document. In this example we are editing ‘Generate Ticket Information’ custom action. Action 1: Generate Ticket Information Configure generate document action as shown below: Action 2: Open generated document Configure ‘Execute Script’ action to download the generated document as shown below: Below script builds the URL of the document using library URL, current item Title and ID. It will then open the document. Script: var currentItemId = currentItem.get_id(); var currentItemTitle = currentItem.get_item(\"Title\") window.open(\"https://contoso.sharepoint.com/sites/NITRO/ITProfessional/Documents/\" + currentItemTitle + \"_\" + currentItemId + \".docx\", \"_blank\"); functionCallback(); Note : Replace the URL with document library URL used in the generated document action Replace “.docx” as per the document template type In Google Chrome browser, if you get any popup-blockers, choose “Always allow..” option 3. Set value for Custom Action variable using Execute Script action Variables can be used in several places including conditions and column mappings in custom actions. For custom business logic, variable value can be accessed and updated in JavaScript. Variable can then be used in subsequent actions. In this sample use case, value of a variable is set in JavaScript based on some conditions and then it is used in create item action to set a column value of new item. So, depending on conditions, different value can be set. Custom action details: Action is configured in CRM application Action is triggered on ‘Lead’ item Its purpose is to create an ‘Opportunity’ item based on details in ‘Lead’ item Opportunity has a column for type of account and it can be: Partner: If lead indicates that it is for a potential partner Customer: For all other cases Custom action uses a variable ‘VarAccountType’ that is set to ‘Partner’ or ‘Customer’ depending on the value of “Potential Partner” column in the lead item ‘VarAccountType’ is then used in opportunity creation action to set value of account type column Instructions: ‘Generate Opportunity’ custom action configuration details are given below: Define variable: Action 1: Update Lead status to closed This action will update the “Lead Status” to “Closed”. Action 2: Set Account Type Script: var partner = currentItem.get_item(\"PotentialPartner\"); if(partner){ ccs_setwfvariablevalue(\"VarAccountType\", \"Partner\"); } else{ ccs_setwfvariablevalue(\"VarAccountType\", \"Customer\"); } functionCallback(); Note : In above script replace “PotentialPartner” with required column internal name. Note that we are using ccs_setwfvariablevalue function to set the value of variable. First parameter is the variable name and second parameter is the value to set for the variable. Action 3: Create Opportunity This action will create Opportunity for the Lead. ‘AccountType’ column value is set to variable value using expression: VarAccountType##Value About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "65",
    "name": "65 - Expressions in various NITRO components.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/65%20-%20Expressions%20in%20various%20NITRO%20components.html",
    "title": "Expressions In Various NITRO Components",
    "text": "Expressions in various NITRO components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Expressions in various NITRO components Expressions in various NITRO components 1007 views Less than a minute 2 Applies to: SharePoint Online and On-premises Introduction This article describes the syntax used for column placeholders, functions, variables etc. in various NITRO Studio apps. Details NITRO Forms Refer this article for syntax used in Crow Canyon NITRO Forms. NITRO Workflows Refer this article for syntax used in Crow Canyon NITRO Workflows. Custom Actions Refer this article for syntax used in Crow Canyon Custom Actions. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "650",
    "name": "650 - Expressions in various NITRO components.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/650%20-%20Expressions%20in%20various%20NITRO%20components.html",
    "title": "Expressions In Various NITRO Components",
    "text": "Expressions in various NITRO components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Expressions in various NITRO components Expressions in various NITRO components 1007 views Less than a minute 2 Applies to: SharePoint Online and On-premises Introduction This article describes the syntax used for column placeholders, functions, variables etc. in various NITRO Studio apps. Details NITRO Forms Refer this article for syntax used in Crow Canyon NITRO Forms. NITRO Workflows Refer this article for syntax used in Crow Canyon NITRO Workflows. Custom Actions Refer this article for syntax used in Crow Canyon Custom Actions. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "651",
    "name": "651 - Syntax for expressions in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/651%20-%20Syntax%20for%20expressions%20in%20NITRO%20Forms.html",
    "title": "Syntax For Expressions In NITRO Forms",
    "text": "Syntax for expressions in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Syntax for expressions in NITRO Forms Syntax for expressions in NITRO Forms 2654 views 2 min , 30 sec read 3 Applied to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019 Introduction This article describes the syntax used for column placeholders, functions, variables etc. in NITRO Forms. Summary: Condition Builder Control Line/HTML Control Form Event Actions Update Form Controls Fetch Items Use fetch items results in update form controls Use fetch items results in condition builder Detailed steps Condition Builder Control Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Me}, {today}, {now}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No JavaScript variables on page Yes Syntax: [Column Internal Name] or [Column Display Name|Column Internal Name] Ex: [RequestStatus] or [Request Status|RequestStatus] Syntax for functions: Ex : $add([Cost|Cost],[Tax Amount|TaxAmount]) Note : Please refer this article for example functions Anyone of above syntax is used in all of the below mentioned features in NITRO Forms: Tab/Section permissions Column permissions Column validations Group permissions Group validations Form event actions Condition builder Update form controls Action button permissions (Submit Action, Custom Action, Script Action) Attachment column permissions Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed Value Display Name of User i.e. James Restivo Person or Group {Me} For logged-in user Person or Group [Column Internal Name] [Requester] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {today} Current date Date and Time {now} Current date and time as per site regional time settings Date and Time [Column Internal Name] [DueDate] All other columns Fixed value Closed, Not Started etc.. All other columns [Column Internal Name] [RequestStatus] Functions strcat(column placeholder 1, column placeholder2) $strcat([First Name|FirstName], &#8211; ,[Last Name|LastName]) Line/HTML Control Supported placeholders: Column value/Placeholder Supported Fixed value Yes Contextual placeholders ({Me}, {today},{now}) No Item column value placeholder Yes Functions Yes URL Query string parameters No JavaScript variables on page No Syntax to show column value in Line/HTML control in edit and display forms. Syntax : [Column Internal Name] or [Column Display Name|Column Internal Name] Ex : [AvailableBudget] or [Available Budget|AvailableBudget] Note : To show the dynamic column value in Line/HTML control in new and edit forms, follow below syntax. Syntax : %%[Column Internal Name]%% or %%[Column Display Name|Column Internal Name]%% Function : %%$strcat([First Name|FirstName], &#8211; ,[Last Name|LastName])%% Form Event Actions Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Me}, {today},{now}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No JavaScript variables on page Yes Update Form Controls Syntax to update form control with value of a column on the form as follows: Syntax : [Column Internal Name] or [Column Display Name|Column Internal Name] Ex : [RequestStatus] or [Request Status|RequestStatus] Syntax to use functions : $strcat([First Name|FirstName], &#8211; ,[Last Name|LastName]) Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed value Display name or Email Address of user Ex : James Restivo james@contoso.com Person or Group {Me} For logged in User Person or Group [Column Internal Name] [Requester] Lookup Fixed value 1. Display name of lookup item value Ex : Calendar 2. ID of lookup item Ex : 5 Lookup [Column Internal Name] [Category] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {today} Current date Date and Time {now} Current date and time as per site regional time settings Date and Time [Column Internal Name] [DueDate] All other columns Fixed value Not Started, In Progress etc.. All other columns [Column Internal Name] [RequestStatus] Functions strcat(column placeholder 1, column placeholder2) $strcat([First Name|FirstName], &#8211; ,[Last Name|LastName]) Note : Please refer this article for example functions Fetch Items Syntax for using column placeholder in ‘Query’ and ‘Query Builder’ in “Fetch Items” action Syntax : %%[Column Display Name|Column Internal Name]%% Ex : %%[Request Status|RequestStatus]%% Query: Query Builder: Use fetch items results in update form controls Item (Single): Syntax to use fetch items result in update form control actions. Syntax: Fetch Items Action Variable Name##column Internal Name Ex: CCSQLGetProductRates##DividendRate Using JavaScript: Use below functions to get the value from fetch results 1. window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLLookupItem\", \"ID\") – Output is ID value 2. window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLLookupItem\", [\"ID\", \"Title\"]) – Output is object. Ex: {&#8220;ID&#8221;: &#8220;23&#8221;,&#8221;Title&#8221;: &#8220;Category Title&#8221;} Note : In above script replace “CCSQLLookupItem” with “Fetch Items Action Variable Name”. Sample script: var CategoryId = window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLLookupItem\", \"ID\"); return CategoryId; Items (Multiple): Use execute script action to update the column controls on the form. Below function will return the results from items (multiple). 1. window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLLookupItem\", \"ID\", true) – Output is array Ex: [&#8220;23&#8243;,&#8221;24&#8221;] 2. window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLLookupItem\", [\"ID\", \"Title\"], true) – Output is array object Ex: [{&#8220;ID&#8221;: &#8220;23&#8221;,&#8221;Title&#8221;: &#8220;Category Title&#8221;},{&#8220;ID&#8221;: &#8220;24&#8221;,&#8221;Title&#8221;: &#8220;Category Title2&#8221;}] Note : In above script replace “CCSQLLookupItem” with “Fetch Items Action Variable Name”. Use fetch items results in condition builder control Below is the syntax for using “Fetch Item” (single) result in advanced conditions: Syntax : $QL(Fetch Items Action Variable Name##Column Internal Name,Value) Ex: $QL(CCSQLGetConfiguration##Approver,Supervisor) About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "652",
    "name": "652 - Syntax for Expressions in NITRO Workflows.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/652%20-%20Syntax%20for%20Expressions%20in%20NITRO%20Workflows.html",
    "title": "Syntax For Expressions In NITRO Workflows",
    "text": "Syntax for Expressions in NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Syntax for Expressions in NITRO Workflows Syntax for Expressions in NITRO Workflows 2957 views 6 min , 15 sec read 4 Applied to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Introduction This article describes the syntax used for column placeholders, functions, variables etc. in NITRO Workflows. Summary of syntax used in features: Condition Builder Control Column Mappings Mail Templates Query List Actions Query Query builder Use of query list action result Variables Detailed steps Condition Builder Control Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now},{UtcNow}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No WF variables Yes Below is the syntax for using column placeholder in condition builder control in NITRO Workflows: Syntax: [Column Display Name|Column Internal Name] Ex: [Request Status|RequestStatus] Below table describes placeholders that can be used in condition builder. Placeholders Example/Scenario [Column Display Name|Column Internal Name] Syntax to compare value between two columns with different type of operators. Ex: [Request Status|RequestStatus] &nbsp; Variable##Value Syntax to compare column with a variable value. The variable value can be updated at run time using query list actions and create item actions and this updated variable values can be used in conditions, column mappings in further actions. Ex: VarStatus##Value Query list action name##[Column Display Name|Column Internal Name] Syntax to compare a column value with query list item column value. Ex: GetConfiguration##[Approver|Approver] afterchange: Used in conditions to check if the value of a column has been changed as part of the current update process. Possible values: 1. afterchange:Fixed value 2. afterchange:[Column Display Name|Column Internal Name] 3. afterchange:[[Any]] 4. afterchange:[[None]] beforechange: Used in conditions to check the value of a column before it was updated to another value by the current update process. Possible values: 1. beforechange:Fixed value 2. beforechange:[Column Display Name|Column Internal Name] 3. beforechange:[[Any]] 4. beforechange:[[None]] &nbsp; Contextual placeholders &nbsp; {Today} {Now} {UtcNow} Advanced Condition In normal conditions, left side operand is always a column from the list. Sometimes we need to compare values other than list columns. For example, the count of items fetched in a query list action. Or, value of a single query list item column. Or, value of a Workflow variable. Ex : QL_GetApprovalLevels##$count([ID|ID]),,0 Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed Value Display Name or email address of User i.e. James Restivo/james@contoso.com Person or Group [Column Display Name|Column Internal Name] [Requester|Requester] Lookup Fixed Value Calendar Lookup [Column Display Name|Column Internal Name] [Category|Category] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {Today} Current date Date and Time {Now} Current date and time as per Utc Date and Time {UtcNow} Current date and time as per site regional time settings Date and Time [Column Display Name|Column Internal Name] [Due Date|DueDate] All other columns Fixed value Closed, Not Started etc.. All other columns [Column Display Name|Column Internal Name] [Request Status|RequestStatus] Column Mappings Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now},{UtcNow}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No WF variables Yes Below is the syntax for using column placeholder in column mappings of add list item and update list item actions Syntax : [Column Display Name|Column Internal Name] Ex: [Request Status|RequestStatus] Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed value $parseuservalue(Display name/email address) • $parseuservalue(James Restivo) • $parseuservalue(james@contoso.com) Person or Group [Column Display Name|Column Internal Name] [Requester|Requester] Lookup Fixed Value 1. $parselookupvalue(Display name of lookup item value) Ex : $parselookupvalue(Email) 2. ID of lookup item Ex : 5 Lookup [Column Display Name|Column Internal Name] [Category|Category] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {Today} Current date Date and Time {Now} Current date and time in UTC Date and Time {UtcNow} Current date and time as per site regional time settings Date and Time [Column Display Name|Column Internal Name] [Due Date|DueDate] All other columns Fixed value All other columns [Column Display Name|Column Internal Name] [Request Status|RequestStatus] Below placeholders can be used in Microsoft Teams action in NITRO workflows Contextual placeholders used in &#8216;Post an Adaptive Card&#8217; action: Placeholder Use case {UserEmail} Email of the user who has triggered the workflow from NITRO Bot. This placeholder can be used to send adaptive card for the user who has triggered the workflow from NITRO Bot. &nbsp; {UserId} Id of the user who has triggered the workflow from NITRO bot. This placeholder can be used to update person or group column from Bot. Mail Template in Send Mail actions Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now}) Yes Item column value placeholder Yes Functions No URL Query string parameters No WF variables Yes Syntax Example/Scenario [[Column Internal Name||Column Display Name]] [[FirstName||First Name]] [[view:View ID||View Name]] To print list view items in the email. Note : This should be used only for scheduled reports workflows Ex : [[view:113619f5-40e9-4336-85b2-57b457b6673e||All Open Tasks]] &nbsp; To find view id, navigate to the list -&gt; list settings -&gt; Edit the view and find the view Id in the browser URL [[VersionHistory:ColumnInternalName||ColumnDisplayName]] To print item version history from a version enabled multiple lines of text column. Ex : [[VersionHistory:WorkLog||Work Log]] %%Query list action name##[Column Display Name|Column Internal Name]%% To print query list action result in mail template. Ex : %%QLItem##[Modified By|Editor]%% %%Variable name##Value%% To print variable value in mail template. Ex : %%VarManager##value%% %%Placeholder%% To print placeholder in mail template. Ex: %%AssignedStaff%% Refer below table for syntax used in mail templates. Query List Action Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now},{UtcNow}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No WF variables Yes Syntax for using column placeholder in “Query” and “Query Builder”. Query Supported column placeholder’s syntax in Query container. Syntax 1: %%[Column Display Name|Column Internal Name]%% Below placeholders are also supported for backward compatibility. Syntax 2: ##Column Internal Name## Syntax 3: %%[Column Internal Name]%% Ex 1: Ex 2: Ex 3: Query Builder Syntax for using column placeholder in query builder is: Syntax : %%[Column Display Name|Column Internal Name]%% Ex: %%[Request Status|RequestStatus]%% Special type of syntax needs to be used for lookup, person or group and date and time column types in query builder. Refer below table. In this table, to know query list column types and current list column types in Query builder, refer above image Query list column Type Current list column Type Syntax Single line of text &nbsp; Lookup %%[Column Display Name|Column Internal Name]%% Ex : %%[Category|Category]%% Lookup Single line of text %%[Column Display Name|Column Internal Name]%% Ex : %%[Category|Category]%% Lookup Lookup lookupid:%%$lookupid([Column Display Name|Column Internal Name])%% Ex : lookupid:%%$lookupid([Category|Category])%% ID Lookup lookupid:%%$lookupid([Column Display Name|Column Internal Name])%% Lookup ID lookupid:%%[ID|ID]%% Person or Group Person or Group userId:%%$lookupid([ColumnDisplayName|ColumnInternalName])%% &nbsp; Date and Time Fixed days OffsetDays:+/-Number of days &nbsp; All other columns All other columns %%[Column Display Name|Column Internal Name]%% &nbsp; Example for Date and Time: Use of query list action result Syntax Use cases {CurrentAction}##Column Internal Name This syntax is used to update the variable value with Query list action result (Single item) Query list action name##Column Internal Name OR Query list action name##[Column Display Name|Column Internal Name] &nbsp; This syntax is used to get the column value from a query list action result. This can be used in workflow conditions and column mappings of Add/Update list item actions Item: Variable Mappings: To update the variable value using query list item result Syntax : {CurrentAction}##[Column Display Name|Column Internal Name] Query list action name##[Column Display Name|Column Internal Name] Below syntaxes are also supported as backward compatibility. {CurrentAction}##Column Internal Name Query list action name##Column Internal Name Column Mappings/Conditions: Below syntax can be used in condition builder control and column mappings in NITRO Workflows. This syntax can be used for same type of columns in both source and target lists in column mappings and conditions. Syntax : Query list action name##[Column Display Name|Column Internal Name] Below table describes some of the use cases and syntax for different type of columns in source and target list column mappings and conditions. Target column type Query list item column type Example/Scenario Person or Group Text columns that have value of user display name or email address &nbsp; &nbsp; Get query list item from Ticket’s list and update ‘Assigned Staff’ person or group column with “Requester Email” (single line of text) from query list item. Ex : $parseuservalue(Query list action name##[Requester Email|RequesterEmail]) &nbsp; ‘Requester Email’ placeholder can contain below values: James Restivo james@contoso.com Lookup Text columns that have the value of a lookup item &nbsp; &nbsp; Get query list item from ‘Category’ list and update the ‘Category’ lookup column in Ticket’s list with query list item title. $parselookupvalue(GetCategory##[Title|Title]) ‘Title’ column placeholder will have ‘Email’ value Single line of text Lookup Person or Group Get query list item from ‘Tickets’ and update ‘Staff Email’ single line of text column with ‘Assigned Staff’ (Person or Group) from query list item. Ex: $formatvalue(GetTicket##[Assigned Staff|AssignedStaff]) &nbsp; $formatvalue(GetTicket##[Category|Category]) &nbsp; Advanced Conditions: Below syntax can be used in advanced conditions. Syntax : Query list action name##[Column Display Name|Column Internal Name],,Value Ex 1 : QL_GetApprovalLevel##$count([ID|ID]),,0 This example is used to check whether items found for the query list action or not. Ex 2: QL_GetApprovalLevel##[Approvers| Approvers],,@ This example is used to validate the query list item column value empty or not empty Item Collection Variable Mappings, Column Mappings and Conditions Only certain functions are supported for query list items (item collection) like $variablecollection, $count, $sum. $ variablecollection : This function is used to get the collection of column values from query list items. Syntax SharePoint Online : Query List Action Name##$variablecollection(separator,[ColumnDisplayName|ColumnInternalName]) SharePoint On-Premises : Query List Action Name##$variablecollection([ColumnDisplayName|ColumnInternalName],separator) Ex: Combine “Approver” and “Owner” column values in a multi selection enabled person or group column from query list items and create tasks for each user. SharePoint Online : GetApprovers##$variablecollection(;#,[Approver|Approver],[Owner|Owner]) SharePoint On-Premises: GetApprovers##$variablecollection([Approver|Approver],[Owner|Owner],;#) Select run for as “Variable” and use ‘@{CollectionValue}’ for “Assigned To” column mappings in create item action in NITR Workflows (see screenshot below). $ sum : This function performs the sum operation on values returned from parameters. This can only be used on query list action to sum the values from multiple items. Syntax : QuerylistActionName##$sum([FieldDisplayName|FieldInternalName]) Ex : GetPurchaseItem##$sum([Cost|Cost]) $ Count : This function performs the count operation on values returned from parameters. This can only be used on query list action to count the values from multiple items. Syntax QuerylistActionName##$count([ColumnDisplayName|ColumnInternalName]) Ex : GetApprovalLevel##$count([ID|ID]) Syntax to read column value from create Item action Create item action can be act as query list action. We can use below syntax to update the created item values in further actions. Ex : We have a workflow that will run on Purchase Requests list, it will create Purchase Order when Purchase request is approved. In this case, we can use below syntax and update the created Purchase Order Id in Purchase Request item. Syntax : Create item action name##column placeholder Variables Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now},{UtcNow}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No WF variables Yes Column Mappings and Conditions To read value from a variable use below syntax: Syntax : Variable Name##Value Ex : VarAccountType##Value Column Mappings (Run for variable collection) Below syntax is used to create items for variable collection. Syntax : @{CollectionValue} About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "653",
    "name": "653 - Syntax for Expressions in Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/653%20-%20Syntax%20for%20Expressions%20in%20Custom%20Actions.html",
    "title": "Syntax For Expressions In Custom Actions",
    "text": "Syntax for Expressions in Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Syntax for Expressions in Custom Actions Syntax for Expressions in Custom Actions 2333 views 5 min , 38 sec read 4 Applied to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Introduction This article describes the syntax used for column placeholders, functions, variables etc. in Custom Actions. Summary: Condition Builder Control Column Mappings Mail Templates Query List Actions Query Query builder Use of query list action result Variables Detailed steps Condition Builder Control Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now}, {Me}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No Custom Action variables Yes Below is the syntax for using column placeholder in condition builder control in Custom Actions. Syntax: [Column Internal Name] Ex: [RequestStatus] Below table describes placeholders syntax that can be used in condition builder. Placeholders Example/Scenario [Column Internal Name] Syntax to compare value between two columns with different type of operators. Ex: [RequestStatus] &nbsp; Variable##Value Syntax to compare column with a variable value. The variable value can be updated at run time using query list actions, execute script action and this updated variable values can be used in conditions, column mappings in further actions. Ex: VarStatus##Value Query list action name##[Column Display Name|Column Internal Name] Syntax to compare a column value with query list item column value. Ex: GetConfiguration##[Approver|Approver] Contextual placeholders &nbsp; {Today} {Me} Advanced Condition In normal conditions, left side operand is always a column from the list. Sometimes we need to compare values other than list columns. For example, the count of items fetched in a query list action. Or, value of a single query list item column. Or, value of a Workflow variable. QL_GetApprovalLevels##$count([ID|ID]),,0 , Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed Value Display Name or email address of User i.e. James Restivo/james@contoso.com Person or Group [Column Internal Name] [Requester] Lookup Fixed Value Calendar Lookup [Column Internal Name] [Category] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {Today} Current date Date and Time {Now} Current date and time Date and Time [Column Internal Name] [DueDate] All other columns Fixed value Closed, Not Started etc.. All other columns [Column Internal Name] [RequestStatus] Column Mappings Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No Custom Action variables Yes Below is the syntax for using column placeholder in column mappings of different actions. Syntax : [Column Display Name|Column Internal Name] Ex: [Request Status|RequestStatus] Column Type Syntax/Placeholder Example/Scenario Person or Group Fixed value $parseuservalue(Display name/email address) • $parseuservalue(James Restivo) • $parseuservalue(james@contoso.com) Person or Group [Column Display Name|Column Internal Name] [Requester|Requester] Lookup Fixed Value 1. $parselookupvalue(Display name of lookup item value) Ex : $parselookupvalue(Email) 2. ID of lookup item Ex : 5 Lookup [Column Display Name|Column Internal Name] [Category|Category] Date and Time Fixed value i.e. MM/DD/Year 03/20/2021 Date and Time {Today} Current date Date and Time {Now} Current date and time in UTC Date and Time [Column Display Name|Column Internal Name] [Due Date|DueDate] All other columns Fixed value All other columns [Column Display Name|Column Internal Name] [Request Status|RequestStatus] Mail Template in Send Mail actions Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now}) Yes Item column value placeholder Yes Functions No URL Query string parameters No Custom Action variables Yes Syntax for using column placeholder in mail templates in Send Mail action Syntax 1: [[Column Internal Name||Column Display Name]] Ex : [[FirstName||First Name]] Syntax 2: [Column Display Name|Column Internal Name] Ex : %%[Assigned Staff|AssignedStaff]%% Contextual placeholders supported in mail templates: Syntax Description [[Today Site||Today]] Date as per site regional settings [[view:View ID||View Name]] To print list view items in the email. Note : This should be used only for scheduled reports workflows Ex : [[view:113619f5-40e9-4336-85b2-57b457b6673e||All Open Tasks]] &nbsp; To find view id, navigate to the list -&gt; list settings -&gt; Edit the view and find the view Id in the browser URL [[VersionHistory:ColumnInternalName||ColumnDisplayName]] To print item version history from a version enabled multiple lines of text column. Ex : [[VersionHistory:WorkLog||Work Log]] %%Query list action name##[Column Display Name|Column Internal Name]%% To print query list action result in mail template. Ex : %%QLItem##[Modified By|Editor]%% %%Variable name##Value%% %%Variable name##Value%% To print variable value in mail template. Ex : %%VarManager##value%% %%Column Placeholder%% To print column placeholder value in mail template. Ex: %%[Assigned Staff|AssignedStaff]%% To print functions with column placeholders value in mail template, use below syntax: Syntax : %%Function Name([Column Display Name|Column Internal Name])%% Ex : %%$formatvalue([Category|Category])%% Query List Action Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No Custom Action variables Yes Syntax for using column placeholder in “Query” and “Query Builder”. Query Supported column place holder’s syntax in Query container. Syntax 1: %%[Column Display Name|Column Internal Name]%% Below placeholder is also supported for backward compatibility. Syntax 2: %%[Column Internal Name]%% Ex 1: Ex 2: Query Builder Syntax for using column placeholder in query builder is: Syntax : %%[Column Display Name|Column Internal Name]%% Ex: %%[Request Status|RequestStatus]%% Special type of syntax needs to be used for lookup, person or group and date and time column types in query builder. Refer below table. In this table, to know query list column types and current list column types in Query builder, refer above image Query list column Type Current list column Type Syntax Single line of text &nbsp; Lookup %%$parsefieldvalue([Column Display Name|Column Internal Name],Value)%% Ex : %%$parsefieldvalue([Category|Category],Value)%% Lookup Single line of text %%[Column Display Name|Column Internal Name]%% Ex : %%[Category|Category]%% Lookup Lookup lookupid:%%$lookupid([Column Display Name|Column Internal Name])%% Ex : lookupid:%%$lookupid([Category|Category])%% ID Lookup lookupid:%%$lookupid([Column Display Name|Column Internal Name])%% Lookup ID lookupid:%%[ID|ID]%% Person or Group Person or Group userId:%%$lookupid([ColumnDisplayName|ColumnInternalName])%% Date and Time Fixed days OffsetDays:+/-Number of days &nbsp; All other columns All other columns %%[Column Display Name|Column Internal Name]%% &nbsp; Example for Date and Time with fixed days: Use of query list action result Syntax Use cases {CurrentAction}##Column Internal Name This syntax is used to update the variable value with Query list action result (Single item) Query list action name##Column Internal Name OR Query list action name##[Column Display Name|Column Internal Name] &nbsp; This syntax is used to get the column value from a query list action result. This can be used in workflow conditions and column mappings of Add/Update list item actions Item: Variable Mappings: To update the variable value with query list item result, use below syntax Syntax : {CurrentAction}##[Column Display Name|Column Internal Name] Query list action name##[Column Display Name|Column Internal Name] Below syntaxes are also supported as backward compatibility. {CurrentAction}##Column Internal Name Query list action name##Column Internal Name Column Mappings/Conditions: Below syntax can be used in condition builder control and column mappings of Custom Actions. Syntax : Query list action name##[Column Display Name|Column Internal Name] This syntax can be used for same type of columns in both source and target lists in column mappings and conditions. Below table describes some of the use cases and syntax for different type of columns in source and target list column mappings and conditions. Target column type Query list item column type Example/Scenario Person or Group Text columns that have value of user display name or email address &nbsp; &nbsp; Get query list item from Ticket’s list and update ‘Assigned Staff’ person or group column with “Requester Email” (single line of text) from query list item. Ex : $parseuservalue(Query list action name##[Requester Email|RequesterEmail]) &nbsp; ‘Requester Email’ placeholder can contain below values: James Restivo james@contoso.com Lookup Text columns that have the value of a lookup item &nbsp; &nbsp; Get query list item from ‘Category’ list and update the ‘Category’ lookup column in Ticket’s list with query list item title. $parselookupvalue(GetCategory##[Title|Title]) ‘Title’ column placeholder will have ‘Email’ value Single line of text Lookup Person or Group Get query list item from ‘Tickets’ and update ‘Staff Email’ single line of text column with ‘Assigned Staff’ (Person or Group) from query list item. Ex: $formatvalue(GetTicket##[Assigned Staff|AssignedStaff]) &nbsp; $formatvalue(GetTicket##[Category|Category]) &nbsp; Advanced Conditions: Below syntax can be used in advanced condition: Syntax : Query list action name##[Column Display Name|Column Internal Name],,Value Ex 1 : QL_GetApprovalLevel##$count([ID|ID]),,0 This example will check whether the items found for the query list action or not. Ex 2: QL_GetApprovalLevel##[Approvers| Approvers],, This example is used to validate the query list item column value empty or not empty Item Collection Variable Mappings, Column Mappings and Conditions Only certain functions are supported for query list items (item collection) like $variablecollection, $count, $sum. $variablecollection: This function is used to get the collection of column values from query list items. Syntax: Query List Action Name##$variablecollection(separator,[ColumnDisplayName|ColumnInternalName]) Ex: Combine “Approver” and “Owner” column values in multi selection enabled person or group from Query list items and create tasks for each user. GetApprovers##$variablecollection(;#,[Approver|Approver],[Owner|Owner]) Select run for as “Variable” and use ‘@{CollectionValue}’ for “Assigned To” column mappings in create item action in Custom Actions (see screenshot below). $sum: This function performs the sum operation on values returned from parameters. This can only be used on query list action to sum the values from multiple items. Syntax: QuerylistActionName##$sum([FieldDisplayName|FieldInternalName]) Ex: GetPurchaseItem##$sum([Cost|Cost]) $ Count: This function performs the count operation on values returned from parameters. This can only be used on query list action to count the values from multiple items. Syntax QuerylistActionName##$count([ColumnDisplayName|ColumnInternalName]) Ex : GetApprovalLevel##$count([ID|ID]) Syntax to read column value from create Item action Create item action can be act as query list action. We can use below syntax to update the created item values in further actions. Ex : We have a workflow that will run on Purchase Requests list, it will create Purchase Order when Purchase request is approved. In this case, we can use below syntax and update the Purchase Order Id in Purchase Request item in the same action Syntax : Create item action name##column placeholder Variables Supported placeholders: Column value/Placeholder Supported Fixed values Yes Contextual placeholders ({Today}, {Now},{UtcNow}) Yes Item column value placeholder Yes Functions Yes URL Query string parameters No WF variables Yes Column Mappings and Conditions To read value from a variable use below syntax: Syntax : Variable Name##Value Ex : VarAccountType##Value Column Mappings (Run for variable collection) Below syntax is used to create items for variable collection. Syntax : @{CollectionValue} About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "66",
    "name": "66 - Grant access to services using SharePoint App permissions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/66%20-%20Grant%20access%20to%20services%20using%20SharePoint%20App%20permissions.html",
    "title": "Grant Access To Services Using SharePoint App Permissions",
    "text": "Grant access to services using SharePoint App permissions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Grant access to services using SharePoint App permissions Grant access to services using SharePoint App permissions 1170 views 1 min , 19 sec read 0 Applies to: SharePoint Online Description Crow Canyon services like Crow Canyon Data Sync Service and Data Sync (Auditing For SharePoint) accept legacy authentication where we need to enter user name and password in configuration. For this, legacy authentication needs be enabled at tenancy level. As an alternative to legacy authentication, we can grant access using SharePoint app-only method described in this article. Pre-requisites Site Collection Administrator Summary of Steps Register new app Grant permissions to the registered app Detailed Steps Register new app Go to SitecollectionURL/_layouts/15/AppRegNew.aspx by using a web browser. SitecollectionURL: Target site collection that this application is supposed to access and perform required operations through the Crow Canyon service. Example: https://contoso.sharepoint.com/sites/nitro/_layouts/15/AppRegNew.aspx Enter values for the following form fields and then click “Create”. Client Id : Click “Generate” button and that will generate a unique value. Client Secret : Click “Generate” button and that will generate a unique value. Title : A user-friendly title; for example, Crow Canyon Data Sync Service. Users are prompted to grant or deny the add-in the permissions that the add-in is requesting. This title appears as the name of the add-in on the consent prompt. App Domain : Enter your tenant domain. Do not include protocol (&#8220;https:&#8221;) or &#8220;/&#8221; characters in this value. Please note that in the sample screenshot below, we use yourcompanyname as just example and do not use it as it is. Redirect URI : Enter redirect URL including the protocol, which must be HTTPS. Again, sample screenshot has just an example and do not use as it is. After we click “Create” button, it will show the summary of information as shown below. Important : Store the retrieved information (client id and client secret) since you&#8217;ll need this in the next step! 2. Grant permissions to the registered app Go to SiteCollectionUrl/_layouts/15/appinv.aspx. Once the page is loaded, enter client id generated in above step and click “Lookup” button. This will auto populate the title, app domain and redirect URL as shown below: To grant permissions, you&#8217;ll need to provide the permission XML that describes the needed permissions. For Crow Canyon services it needs below permissions: &lt;AppPermissionRequests AllowAppOnlyPolicy=\"true\" &gt; &lt;AppPermissionRequest Scope=\"http://sharepoint/content/sitecollection\" Right=\"FullControl\" /&gt; &lt;/AppPermissionRequests&gt; When you click on Create you&#8217;ll be presented with a permission consent dialog. Press &#8216;Trust It&#8217; to grant the permissions: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "661",
    "name": "661 - Grant access to services using SharePoint App permissions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/661%20-%20Grant%20access%20to%20services%20using%20SharePoint%20App%20permissions.html",
    "title": "Grant Access To Services Using SharePoint App Permissions",
    "text": "Grant access to services using SharePoint App permissions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Grant access to services using SharePoint App permissions Grant access to services using SharePoint App permissions 1170 views 1 min , 19 sec read 0 Applies to: SharePoint Online Description Crow Canyon services like Crow Canyon Data Sync Service and Data Sync (Auditing For SharePoint) accept legacy authentication where we need to enter user name and password in configuration. For this, legacy authentication needs be enabled at tenancy level. As an alternative to legacy authentication, we can grant access using SharePoint app-only method described in this article. Pre-requisites Site Collection Administrator Summary of Steps Register new app Grant permissions to the registered app Detailed Steps Register new app Go to SitecollectionURL/_layouts/15/AppRegNew.aspx by using a web browser. SitecollectionURL: Target site collection that this application is supposed to access and perform required operations through the Crow Canyon service. Example: https://contoso.sharepoint.com/sites/nitro/_layouts/15/AppRegNew.aspx Enter values for the following form fields and then click “Create”. Client Id : Click “Generate” button and that will generate a unique value. Client Secret : Click “Generate” button and that will generate a unique value. Title : A user-friendly title; for example, Crow Canyon Data Sync Service. Users are prompted to grant or deny the add-in the permissions that the add-in is requesting. This title appears as the name of the add-in on the consent prompt. App Domain : Enter your tenant domain. Do not include protocol (&#8220;https:&#8221;) or &#8220;/&#8221; characters in this value. Please note that in the sample screenshot below, we use yourcompanyname as just example and do not use it as it is. Redirect URI : Enter redirect URL including the protocol, which must be HTTPS. Again, sample screenshot has just an example and do not use as it is. After we click “Create” button, it will show the summary of information as shown below. Important : Store the retrieved information (client id and client secret) since you&#8217;ll need this in the next step! 2. Grant permissions to the registered app Go to SiteCollectionUrl/_layouts/15/appinv.aspx. Once the page is loaded, enter client id generated in above step and click “Lookup” button. This will auto populate the title, app domain and redirect URL as shown below: To grant permissions, you&#8217;ll need to provide the permission XML that describes the needed permissions. For Crow Canyon services it needs below permissions: &lt;AppPermissionRequests AllowAppOnlyPolicy=\"true\" &gt; &lt;AppPermissionRequest Scope=\"http://sharepoint/content/sitecollection\" Right=\"FullControl\" /&gt; &lt;/AppPermissionRequests&gt; When you click on Create you&#8217;ll be presented with a permission consent dialog. Press &#8216;Trust It&#8217; to grant the permissions: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "662",
    "name": "662 - Custom Actions – Send Mail – Custom JavaScript.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/662%20-%20Custom%20Actions%20%E2%80%93%20Send%20Mail%20%E2%80%93%20Custom%20JavaScript.html",
    "title": "Custom Actions – Send Mail – Custom JavaScript",
    "text": "Custom Actions – Send Mail – Custom JavaScript - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions / Custom Actions &#8211; Send Mail &#8211; Custom JavaScript Custom Actions &#8211; Send Mail &#8211; Custom JavaScript 1454 views Less than a minute 0 Applies To SharePoint On-Premises and Office 365 Description This article describes sample use cases for using custom JavaScript in Send Mail action in Custom Actions. Use Case 1 How to remove rows with column placeholders that do not have any value set. In this use case, we define a mail template with table format that has column name and column placeholder from the list columns in mail template as shown below. In the above example, columns and column placeholders are used in table cells and we can use below custom script to check for empty column placeholder from the table and then remove the entire row from the mail template dynamically. update Script with below in the JavaScript code for this use case. for (var columnName in objData.Dic_ListColumns) { var ColumnValueElement = $('[name=\"ccs_control_'+columnName+'_'+objData.CurrentItem.get_id()+'\"]'); if(ColumnValueElement &amp;&amp; ColumnValueElement.length &gt; 0 &amp;&amp; ColumnValueElement.text().trim() == \"\"){ ColumnValueElement.parent().parent().hide(); } } functionCallback(); Sample Ticket with &#8216;Category&#8217; and &#8216;Issue Type&#8217; column values are not set: Sample output when &#8216;Category&#8217; and &#8216;Issue Type&#8217; column values are not set: NITRO Studio- Custom Actions About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API Active Directory Groups integration with NITRO Import Tickets using NITRO Custom Actions © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "663",
    "name": "663 - Configure other lists in NITRO based Portal site.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/663%20-%20Configure%20other%20lists%20in%20NITRO%20based%20Portal%20site.html",
    "title": "Configure Other Lists In NITRO Based Portal Site",
    "text": "Configure other lists in NITRO based Portal site - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure other lists in NITRO based Portal site Configure other lists in NITRO based Portal site 1144 views 3 min , 54 sec read 0 Applies to: NITRO based portal applications SharePoint Online and On-premises (2013, 2016, 2019/SharePoint Server Subscription Edition) Application Type: &nbsp;End user portal site for service request applications (IT Professional, IT Standard, Facilities, Request Management and Customer Service) Description NITRO based portal applications are created after validating a predefined site schema. For example, ‘IT Portal (2020)’ is a portal application for IT applications, that refers to the backend site&#8217;s ‘Tickets’ list. Portal pages and webparts such as ‘View My Tickets’, ‘Quick Tickets’, etc. are configured based on this list. In some cases, it is required for the portal site to refer to additional lists along with the pre-defined list. This requires some modifications in the existing NITRO Portal application. This article has steps to achieve this functionality. In this sample use case, the ‘IT Portal (2020)’ application is modified to refer to the ‘Time Tracking’ list along with the existing Tickets list. The same steps can be followed to add other backend lists to the NITRO portal applications. Summary of steps Create NITRO forms for portal site Configure list views Add menu links Configurations in ‘Application Administration’ Detailed steps Create NITRO forms for portal site Navigate to the backend site&nbsp;-&gt;&nbsp;‘Site Contents’&nbsp;-&gt;&nbsp;‘Time Tracking’ list&nbsp;-&gt;&nbsp;‘List Settings’ from ‘LIST’ ribbon&nbsp;-&gt;&nbsp;Crow Canyon NITRO Forms. Create a new form for the portal site as needed. Note : If no changes are required on the item form for the portal site, then use the same form. Otherwise, create a new form. A new form is useful to show limited columns to the end user in the portal site. ‘PortalTimeTracking’ is the new form created for the portal site in this example. The buttons that are not required on the portal forms can be hidden from the ‘Layouts and Theme’ section (in left-hand panel) -&gt; ‘Buttons’. Check the buttons that are not required on the form. Similarly, hide any custom actions that shouldn&#8217;t be visible to portal users. Configure override form settings. Click ‘Manage Forms’ from ‘FORM’ ribbon&nbsp;-&gt;&nbsp;‘Advanced Settings’ -&gt; ‘Configure Override Forms’ settings for the backend site and the&nbsp;portal&nbsp;site. Syntax: ‘Source Form’ =&gt; ‘Target Form’&nbsp; Override settings for back-end site : With this override settings, items created from ‘PortalTimeTracking’ form will open with ‘Time Tracking’ form in the backend site. Override settings for portal site: With these override settings, items created from ‘Time Tracking’ form will open with ‘PortalTimeTracking’ form in the portal site. Configure list views Navigate to the&nbsp;portal&nbsp;site&nbsp;-&gt;&nbsp;‘Portal&nbsp;Administration’&nbsp;-&gt;&nbsp;‘Configure Apps and Pages’&nbsp;-&gt;&nbsp;List Views. Configure new list view for ‘Time Tracking’ list. &nbsp;Specify back-end site URL. Specify ‘Page Actions’ as shown below: Add a new workspace page and add the configured list view web part to this page. For Classic UI Portal : Go to&nbsp;‘Portal&nbsp;Administration’&nbsp;-&gt;&nbsp;‘Configure Apps and Pages’&nbsp;-&gt;&nbsp;‘Add Workspace Page’ and create new workspace page by specifying the name, layout and location as needed. Add the configured list view web part to this page from the Crow Canyon ‘List Views’ app. For Modern UI Portal : Add a new site page and add the configured list view web part to this page. Go to&nbsp;‘Portal&nbsp;Administration’&nbsp;-&gt;&nbsp;‘Configure Apps and Pages’&nbsp;-&gt;&nbsp;‘Add Workspace Page’ and create a new site page by specifying the name. Add the configured list view web part to this page as shown below: Note : If the page needs to be edited after it is published, then append the page URL with ‘?CCSMode=1’ -&gt; ‘Edit’ the page and add the webpart as shown above. Add menu links Note : URL is different for classic UI and modern UI. For modern UI, refer to ‘For Modern UI Portal’ section. For Classic UI Portal: Submit New&nbsp;Item: Modify the URL as shown below: URL: &nbsp;##Portal&nbsp;Site URL##/CrowCanyonAppsLib/AdvForms/CCSNewForm.aspx?&amp;FormKey=##Portal&nbsp;Form Key##&amp;WebURL=##Backend site URL##&amp;ListID={##List ID##} Example: https://contoso.sharepoint.com/sites/helpdesk/IT/Portal/CrowCanyonAppsLib/AdvForms/CCSNewForm.aspx?&amp;FormKey=PortalTicket&amp;WebURL=https://contoso.sharepoint.com/sites/helpdesk/IT&amp;ListID={bf3c153c-c8bb-482f-841d-047e875b64ee} In the above URL,&nbsp;replace placeholders as described below: Placeholder Value ##Portal&nbsp;Site URL## Specify portal&nbsp;site URL ##Portal&nbsp;Form Key## Specify form key of newly created form in backend site ##Backend site URL## Specify technician site URL ##List ID## Specify list Id View Time Tracking: Copy the URL of the workspace page created in #2. Add menu links in ‘Branding’. Go to&nbsp;‘Portal&nbsp;Administration’&nbsp;-&gt;&nbsp;‘Home Page and Theme’&nbsp;-&gt;&nbsp;‘Branding’&nbsp;-&gt;&nbsp;Select ‘Helpdesk&nbsp;Portal&nbsp;Theme’ under ‘Theme Builder’ section&nbsp;as the base theme. Expand ‘Header’ section -&gt; ‘New Menu Item’ -&gt; Configure ‘Submit New&nbsp;Item’ and ‘View Time Tracking’ links and save the theme. ‘New Menu Item’ for ‘View Time Tracking’. Similarly, configure a new menu item for ‘Submit New Item’ by specifying new form URL modified above. Navigate to ‘Apply Theme’ section&nbsp;-&gt;&nbsp;Select ‘Helpdesk&nbsp;Portal&nbsp;Theme’ under ‘Custom Themes’ section and apply the theme. For Modern UI Portal Configure menu links for ‘Submit New&nbsp;Item’, ‘View My&nbsp;Items’ in&nbsp;the portal&nbsp;site. Submit New&nbsp;Item: Modify the URL as shown below: URL: &nbsp;##Portal Site URL##/SitePages/CCSNewForm.aspx?&amp;FormKey=##Portal Form Key##&amp;WebURL=##Backend site URL##&amp;ListID=##List ID## Example: https://contoso.sharepoint.com/sites/helpdesk/IT/Portal/SitePages/CCSNewForm.aspx?FormKey=PortalTicket&amp;WebURL=https://https://contoso.sharepoint.com/sites/helpdesk/IT&amp;ListID=fb995f9a-3295-46c1-8770-a43fc432256d In the above URL,&nbsp;replace placeholders as described below: Placeholder Value ##Portal&nbsp;Site URL## Specify&nbsp;portal&nbsp;site URL ##Portal&nbsp;Form Key## Specify form key of newly created form in backend site ##Backend site URL## Specify technician site URL ##List ID## Specify list Id View My&nbsp;Items: Copy the URL of the site page created in #2. Add menu links in ‘Crow Canyon Site Settings’. Navigate to ‘Portal Administration’ -&gt; ‘NITRO Site Settings’ -&gt; ‘Menu Links’ -&gt; ‘New Menu Item’. Configure ‘Submit New&nbsp;Item’ and ‘View Time Tracking’ links and save settings. Similarly, configure the new menu item for ‘Submit New Item’ by specifying the new form URL modified above. Configurations in ‘Application Administration’ Navigate to ‘Application Administration’ -&gt; ‘Configure Apps and Pages’ -&gt; ‘Tiles &amp; Dials’ -&gt; ‘Manage Link Tiles’ -&gt; Edit ‘Portal Forms and Pages’ link tiles group -&gt; Configure ‘New Link Tile’. Copy ‘PortalTimeTracking’ NITRO forms designer URL and paste in the link tile as shown: Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "664",
    "name": "664 - Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – II - Crow Canyon Softw.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/664%20-%20Use%20%E2%80%98Form%20Event%20Actions%E2%80%99%20Feature%20Of%20NITRO%20Forms%20To%20Add%20Custom%20Functionality%20%E2%80%93%20II%20-%20Crow%20Canyon%20Softw.html",
    "title": "Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – II Crow Canyon Softw",
    "text": "Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – II - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality &#8211; II Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality &#8211; II 2047 views 3 min , 12 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO Forms have a lot of built-in functionality to customize the layout, design and functionality as required in common business applications. For any specific cases not covered directly by the configurations, custom JavaScript and CSS can be added. These custom scripts can be invoked on form load, on column values change and before/after an item is submitted. For all these cases, scripts can be invoked conditionally based on various values entered in the form. Please refer to this article for form event actions&#8217; basic usage and configurations. This article describes some sample use cases to configure form event actions in NITRO forms. Use Case 1: Clear the attachments column based on a change in the value of another column Sample list schema and use case Standard SharePoint list ‘Category’: Single selection choice: Choice options: ‘Emails’ ‘Internet’ Based on the selected value, retain attachments in corresponding column and clear others ‘Email Files’: NITRO attachments column If selected category is not ‘Emails’, then clear attachments from this column ‘Internet Files’: NITRO attachments column If selected category is not ‘Internet’, then clear attachments from this column Steps to configure Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in the left-hand panel) and configure FEA on column value change as shown below: Clear ‘Email Files’: Clear ‘Internet Files’: Note: In this sample we have cleared the NITRO attachments column. We can use this same syntax to clear the values for all other column types as well. Sample Output Use Case 2: Append multiple users in a multi-selection enabled person or group column Sample list schema and use case Standard SharePoint list ‘Approval Notification’: Multiple selections enabled person or group column Populate multiple users in this column in new form Steps to configure Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in the left-hand panel) and configure FEA on form load as shown below: Update the form controls action: Script: var users = &#91;\"james@contoso.com\", \"scott@contoso.com\"]; return users; Note: Specify the email ID of users as required. Use Case 3: Show a popup message when number column value is greater than some value Sample list schema and use case Standard SharePoint list ‘Number of Employees’: Number column Show a popup message if the ‘Number of Employees’ column value is greater than 1. Steps to configure: Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in left-hand panel) and configure FEA on column value change as shown below: Configure execute script action: Script: window.alert(\"Please attach spreadsheet with employee data\"); Note: Replace the message as required. Use Case 4: Show/hide a column based on entered date being less than 28 days from today or not Sample list schema and use case Standard SharePoint list ‘Due Date’: Date column ‘Show Rush Notification’: Yes/No column (default value is ‘No’) This is a hidden column that will be updated using FEA based on ‘Due Date’ column value. ‘Rush Justification’: Single line of text column Show this column only if ‘Due Date’ column value is less than 28 days from today. Steps to configure Navigate to Crow Canyon NITRO forms designer for the list -&gt; Select ‘Show Rush Notification’ column -&gt; Configure hide permission on this column from the column settings (in the right-hand panel). Configure FEA to update ‘Show Rush Notification’ column value based on ‘Due Date’ column value. Click ‘Form Event Actions’ (under Advanced section in left-hand panel) and configure FEA on column value change as shown below: Configure update form controls action: Script: var varDate = new Date(); varDate.setDate(varDate.getDate() + 28); var DateNeeded = _ccs_FormUI.fetchColumnValueUI(\"Column Internal Name\"); var validation = false; if (DateNeeded) { if (typeof DateNeeded == \"string\") { DateNeeded = DateNeeded.replace(/-/g, \" \"); } validation = Date.parse(DateNeeded) &gt;= Date.parse(new Date(varDate.toDateString())); } if (validation == true){ return \"No\"; } if(validation == false){ return \"Yes\"; } Note : Replace highlighted text with ‘Due Date’ column internal name. Configure show/hide column permissions on ‘Rush Justification’ column. Hide for everyone: Show if ‘Show Rush Notification’ column value is ‘Yes’: Use case 5: Disable non-working calendar days or enable specific days in date and time controls Sample list schema and use case Standard SharePoint list ‘Date’: Date and time column Disable non-working days, i.e., Saturday and Sunday from ‘Date’ column date picker Enable only second and fourth Tuesday of the month Steps to configure Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in left-hand panel) and configure FEA on load as shown below: Configure execute script action: Script &#8211; Disable all Saturdays and Sundays: var objControl = $(\"#ccs_control_Date\").data(\"kendoDateTimePicker\"); var oldOptions = objControl.options; oldOptions.disableDates = &#91;\"su\", \"sa\"]; objControl.setOptions(oldOptions); Script &#8211; Enable only second and fourth Tuesday of the month: var objControl = $(\"#ccs_control_Date\").data(\"kendoDateTimePicker\"); var oldOptions = objControl.options; oldOptions.disableDates = function (date) { date = new Date(date); const dayOfWeek = date.getDay(); var firstWeekday = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1; if (firstWeekday &lt; 0) { firstWeekday = 6; } var offsetDate = date.getDate() + firstWeekday - 1; const weekOfMonth = Math.floor(offsetDate / 7); return !(dayOfWeek === 2 &amp;&amp; (weekOfMonth === 2 || weekOfMonth === 4)); } objControl.setOptions(oldOptions); Note: Replace ‘Date’ in the above script with the internal name of ‘Date &amp; Time’ column. For example, change ccs_control_Date to ccs_control_DateAndTime if the column internal name is DateAndTime. “kendoDateTimePicker” is for ‘Date &amp; Time’ column. Replace this with “kendoDatePicker” for ‘Date Only’ column. Disable weekdays from date picker as required using the syntax: su, mo, tu, we, th, fr, sa for Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, respectively. Sample Output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "666",
    "name": "666 - Features of Knowledge Base Articles.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/666%20-%20Features%20of%20Knowledge%20Base%20Articles.html",
    "title": "Features Of Knowledge Base Articles",
    "text": "Features of Knowledge Base Articles - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Features of Knowledge Base Articles Features of Knowledge Base Articles 973 views 2 min , 20 sec read 0 Applies to: SharePoint Online and On-Premises 2013/2016/2019 Service Request Applications/SharePoint Server Subscription Edition Description Knowledge Base (KB) is a repository of information to solve the frequently occurring issues.&nbsp; It also has data from resolved Tickets so that users can refer to this information if they are facing a problem that has been solved before. KB articles are available in the backend site for the staff users and in the portal site for the end users. This article describes features of KB articles in Crow Canyon service request applications, that is, IT Help Desk, Facilities, Request Management and Customer Service applications. Detailed description KB articles in Ticket’s list: 1. KB suggestions are based on Issue Type selection in Ticket’s list forms: KB articles are organized based on Category and Issue Type. In new Ticket/Request form, KB articles are shown based on selected category and issue type. Users can see the relevant articles and their issue may get resolved without even filing the Ticket. Tickets: Portal Ticket: 2. ‘‘Related KB Articles’ in Tickets form: Related KB Articles : In Tickets form, KB articles are shown in “Related KB Articles” listing in “Knowledge Base” tab. These articles are for the technicians in the backend site. When resolving the Ticket, staff members can select the relevant articles as per the resolution of the Ticket. This creates an association between the problem listed in the Ticket and the article that was used to resolve it. This increases the rating for the article in “Knowledge Base” list when the Ticket gets closed. And this association is used by NITRO bot to show the most relevant and rated articles for the issues mentioned by users in the bot chat. Create KB Article : If there are no existing articles matching with the issue in the Ticket, the technician can check “Create KB Article” box to indicate that a KB article is required for this Ticket. When a Ticket is closed, the article is automatically created with information in the Ticket. Note : The KB article gets created as a list item in “Knowledge Base” list based on the mappings specified in “Configuration” list. To know more details about KB mappings, refer: “General Configuration” link in Application Administration workspace. Knowledge Base list KB articles can be created directly using “New KB Article” quick launch link under Tickets. Below is the KB form. Columns used in the KB form: Category : This column is used to group the articles in “Articles by Category” section on “Search Knowledge Base Articles” page. Issue Type : This column is used to filter the articles based on the issue type selection in Tickets form. Rating : This column is used to show “Top Rated Articles” in “Search Knowledge Base Articles” page. Show in frequently used KB Articles : This column is used to show the articles in “Frequently Used Article” section in the “Search Knowledge Base Article” page Target Audience : This column is useful to separate the articles based on the target audience (external/internal). There can be a requirement to have certain KB articles only for staff and not to show them to end users. This can be done by restricting these articles from appearing in the portal site. For this, item level permissions can be configured on KB articles based on target audience. Refer to this article to configure item level permissions on KB Articles using NITRO Workflows. Search Knowledge Base Articles Page ‘Knowledge Base’ is a quick way to search KB Articles. This is configured as a top navigation link in the site as shown below: We can search articles directly by entering a keyword, category, issue type or title in the search box. Frequently Used Articles : This section is useful for articles that are relevant for frequently occurring issues. Enabling “Show in frequently used KB Articles” will show the KB articles in this section. Top Rated Articles : Articles are rated automatically according to their usage in resolving Tickets. The top-rated articles are those that are frequently used in resolving Tickets. KB articles will be shown on page based on the KB rating. Articles by Category : KB articles will be grouped based on category. In this section we find count of articles under each category. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "667",
    "name": "667 - Capture total of associated item currency column dynamically in parent item - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/667%20-%20Capture%20total%20of%20associated%20item%20currency%20column%20dynamically%20in%20parent%20item%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "Capture Total Of Associated Item Currency Column Dynamically In Parent Item Crow Canyon Software S",
    "text": "Capture total of associated item currency column dynamically in parent item - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Capture total of associated item currency column dynamically in parent item Capture total of associated item currency column dynamically in parent item 972 views 1 min , 5 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description The associated items column in NITRO forms has a feature that show aggregate values from the child items. For example, it can show sum/min/max/count of child items in the associated items grid. There is also an option to use JavaScript for advanced calculations for aggregates. However, this value is in a grid and not in any column in the main item. If this is required, then the form event action feature of NITRO forms can be used to update aggregate value in a column in the main item on addition of a new child item or a change of any value in any child item. Sample list schema and use case Standard SharePoint list ‘Time Tracking’: NITRO associated items column in the main list ‘Cost’: Currency column in the associated items grid ‘Total Cost’: Currency column in the main list The aggregate of ‘Cost’ column is updated in ‘Total Cost’ column in the main item. That is, the sum of the cost value in the child items is set in total cost column on the main item. Steps to configure Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Form Event Actions (under Advanced section in the left-hand panel) and configure FEA on column value change as shown below: Update form controls action: Script: var linkedColumnName = \"AssociatedColumnInternalName\"; var itemCost = \"Cost\"; var objLinkedColumn = _ccs_FormUI.linkItemsColumnSettings&#91;linkedColumnName]; var grid = $(\"#\" + objLinkedColumn.ControlID).data(\"kendoGrid\"); var gridData = grid.dataSource.data(); var itemCount = gridData.length; var TotalCost = 0; for (var i = 0; i &lt; itemCount; i++) { var objRow = gridData&#91;i]; var rating = Number(objRow&#91;itemCost]); TotalCost = TotalCost + rating; } return TotalCost; Note : Replace ‘AssociatedColumnInternalName’ with the internal name of ‘NITRO Associated Items’ column in the main list. Replace ‘Cost’ with the internal name of the column from the associated list that is to be used for calculating the aggregate. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "668",
    "name": "668 - Export _ Import Themes in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/668%20-%20Export%20_%20Import%20Themes%20in%20NITRO%20Forms.html",
    "title": "Export Import Themes In NITRO Forms",
    "text": "Export / Import Themes in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Export / Import Themes in NITRO Forms Export / Import Themes in NITRO Forms 956 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description The themes for NITRO forms are stored at the site level, that is, if any custom theme is created in NITRO forms designer, then that theme is available for all the lists in that site. For NITRO forms for any list, the theme can be applied from ‘Layouts and Theme’ section in the left-hand panel. If we need to apply the same theme for NITRO forms in some other site, then we can export the theme from the source site and import it in the target site. This article describes the steps to export and import a theme in NITRO Forms designer and to apply the imported theme. Detailed steps 1. Export Theme Navigate to NITRO Forms designer for the list -&gt; Click “Manage Forms” button from ‘FORM’ ribbon -&gt; Advanced Settings -&gt; Select the required custom theme from ‘Export theme’ dropdown and click ‘Export’ button. An xml file will be downloaded. 2. Import Theme To import the theme, navigate to the list in target site -&gt; List settings -&gt; ‘Crow Canyon NITRO Forms’ -&gt; Manage Forms -&gt; Advanced Settings -&gt; Click “Choose File” under “Export / Import Theme” section -&gt; Select the theme settings xml file exported in the above step and click “Import”. Click ‘OK’ to save the settings. The imported custom theme will be shown in ‘Select Theme for Form’ dropdown under ‘Layouts and Theme’ section. Refer to the instructions below to apply the custom theme. Steps to apply the imported theme: 1. Navigate to ‘Layouts and Theme’ section (in left-hand panel of NITRO forms designer) -&gt; ‘Select Theme for Form’. Select the custom theme from the drop-down and publish the NITRO Forms. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "669",
    "name": "669 - Move Ticket to a different service area_site using Crow Canyon Custom Actions - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/669%20-%20Move%20Ticket%20to%20a%20different%20service%20area_site%20using%20Crow%20Canyon%20Custom%20Actions%20-%20Crow%20Canyon%20Software.html",
    "title": "Move Ticket To A Different Service Area Site Using Crow Canyon Custom Actions Crow Canyon Software",
    "text": "Move Ticket to a different service area/site using Crow Canyon Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Move Ticket to a different service area/site using Crow Canyon Custom Actions Move Ticket to a different service area/site using Crow Canyon Custom Actions 909 views 1 min , 33 sec read 0 Applies to: SharePoint Online and On-Premises 2013/2016/2019 Service Request Applications/SharePoint Server Subscription Edition Description It is a common scenario where multiple service areas are installed in a site collection and each of these applications is for Tickets of a particular department. In some cases, a Ticket needs to be transferred from one department to the other.&nbsp;This can be done using ‘Crow Canyon Custom Actions’ without having to manually copy the Ticket data. This article describes transferring a Ticket from IT help desk to HR help desk using custom actions. Note that a separate custom action should be configured for each source and destination site combination for transferring the Ticket. Summary of steps List schema Configure custom actions Detailed steps List schema Create a column “TransferredTo” in Tickets list (source list). Navigate to Tickets list (source list) -&gt; List settings -&gt; Create a single line of text column. Column internal name: TransferredTo Column display name: Transferred To Create four ‘Single line of text’ columns in Tickets list of the target site. Column 1: Source Site Name Column 2: Source List Name Column 3: Source Item Id Column 4: Source Ticket URL These columns will have details of the source item if the Ticket has been created via transfer and will be blank for the Tickets directly created in the site. Configure custom action This action will copy the Ticket from the source site to the target site and close the transferred Ticket in the source site. Create a custom action in the Tickets list of the source site. Navigate to the Tickets list -&gt; List settings -&gt; Crow Canyon Custom Actions -&gt; Configure a new custom action as shown below: Configure ‘Add List Item’ action Configure ‘Add List Item’ action to copy the Ticket data from the source list to the target list. Column mappings: Column Name Value Expression Source Item Id&nbsp;&nbsp; [ID|ID] Source Site Name&nbsp;&nbsp;&nbsp; IT help desk Source List Name&nbsp;&nbsp;&nbsp; Tickets Requester [Requester|Requester] Priority [Priority|Priority1] Title&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Title|Title] Additional Contact [Additional Contact|AdditionalContact] Additional Information [Additional Information|AdditionalInformation] Additional Requester Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Additional Requester Email|AdditionalRequesterEmail] Description [Description|Description1] Request Status&nbsp; Unassigned Requester Department&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Requester Department|RequesterDepartment] &nbsp; Requester Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [Requester Email|RequesterEmail]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure ‘Update List Item’ action Configure update list item action to close the transferred Ticket in the source site. Note : If it is required to send the notification on Ticket transfer, then configure ‘Send Mail’ action in the same custom action. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "67",
    "name": "67 - Parse CSV action in NITRO Workflows and Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/67%20-%20Parse%20CSV%20action%20in%20NITRO%20Workflows%20and%20Custom%20Actions.html",
    "title": "Parse CSV Action In NITRO Workflows And Custom Actions",
    "text": "Parse CSV action in NITRO Workflows and Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Parse CSV action in NITRO Workflows and Custom Actions Parse CSV action in NITRO Workflows and Custom Actions 1827 views 3 min , 41 sec read 2 Description A CSV (Comma-separated values) file is a delimited text file that uses a comma to separate values. Each line of the file is a data record. Each record consists of one or more columns, separated by commas. Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. The parse CSV action is used to create items in a SharePoint list using the records from CSV data. It can also be used to update existing items in the list using a matching criterion. CSV data can come from a SharePoint list item attachment or an item column that has the data in CSV format. Run for: This specifies the source for CSV data. Current Item: Read the CSV data from current item. Query List: Read the CSV data from one or more items fetched as part of a query list action. Variable : Read the CSV data from a workflow variable. Get CSV data from: Select one of the options to read CSV data. Attachments: Select this option if CSV data is in one or more item attachments. We can filter the files by specifying the type of the file. For example, we can enter file extension as .csv. Note that all matching attachment files will be processed if there are multiple attachments in the item. Column: Select this option if CSV data is in a column in the list item. Multiple lines of text type columns are listed for this purpose. Target List Settings Select target site and list to create or update the items. Column Mappings This section is used to map data from columns in CSV data to SharePoint list item columns. CSV column names are specified in square brackets. A fixed value is specified directly. A mapping can consist of both fixed value and one or more CSV columns. Please refer to below examples. Column value: Specify the column name from CSV data/Fixed value. Value type Example CSV column [Invoice Number] Custom Value Ordered Concatenation of one or more CSV columns/custom values [Invoice Number] _[ID] Advanced Settings Update item if it already exists: Check this option to update existing items. This can be used if the SharePoint list already has the items and the requirement is to add or update column data for these existing items. In this case, the first step is to find the matching item in SharePoint. If the item is found then it is updated, else a new item is created. If this option is not checked then a new list item is always created for every record in CSV data. Item fetch query: To identify the specific SharePoint list item to update for each CSV record, a CAML query needs to be specified. Include the required columns in query to fetch the item to update. CSV column data is specified in square brackets as shown in the example below. &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name='AssetID' /&gt;&lt;Value Type='Text'&gt;&#91;Asset ID]&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; In this case, each CSV record has the Id of the Asset and this Id is also there in ‘AssetID’ column of the SharePoint list. For each CSV record, it will try to fetch the item with the matching Asset Id in the SharePoint list and update the item if it is found. If the list item with Asset Id is not found, a new item will be created in SharePoint list. Note that the query can have more than one condition and we can include more than one column from the CSV in the query. Advanced Settings: DateValType: By default, date time values in CSV are assumed to be in UTC. If these are in some other time zone, then specify the time zone name, for example – ‘Eastern Standard Time’. For a list of the time zone names, please refer to this article . MaxCSVRowstoProcess: Specify the max number of rows to process from the CSV data. Default maximum rows to be processed for event-based (item added/updated) and async workflows is 200, and for timer based and scheduled workflows it is 500. Batch Settings: These settings are considered if ‘ Update item if it already exists ’ is checked. For every row in CSV data, a call is made to SharePoint to find the list item that needs to be updated. If there are several rows in CSV data then it involves numerous calls to SharePoint. It can also result in calls being rejected by SharePoint (HTTP 429 error). Batch settings can be used to reduce calls to SharePoint by querying multiple items in one call. EnableBatch : Default value for this property is false. Set this to true to enable querying items in batches. BatchSize : Specify the number of items to fetch in one call (default value is 50). Normally, there is no need to change this value. BatchQuery : Specify the batch query. Please refer to the example below for these settings. ValueType: Specify the data type of the SharePoint column that is used in the batch query. Normally this will have value ‘Text’. UniqueColumnPlaceholder: Specify the column name from CSV data that contains the unique Id to find the items in the SharePoint list. SPUniqueColumnPlaceholder: Specify the column internal name in the SharePoint list that has the matching unique Id value. Batch Settings Sample: CSV data format: Title AssetID AssetType Created Date Dell Vostro K342356 Computer 10/26/2021 HP Laser Jet Printer H456456 Printer 10/26/2021 SharePoint list columns Id – Auto-generated Id of the item. Not used in mapping from CSV as it is handled by SharePoint. Title – This will contain the name of the Asset. Column type is a single line of text. AssetID – Text type column that has the unique Id of asset. CreationDate – Date on which the Asset was acquired. Column type is date and time. AssetType – Type of the asset. Column type is choice. { \"DateValType\": \"Eastern Standard Time\", \"MaxCSVRowstoProcess\": 500, \"BatchSettings\": { \"EnableBatch\": true, \"BatchSize\": 50, \"BatchQuery\": \"&lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;In&gt;&lt;FieldRef Name='AssetID' /&gt;&lt;Values&gt;{values}&lt;/Values&gt;&lt;/In&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt;\", \"ValueType\": \"Text\", \"UniqueColumnPlaceholder\": \"&#91;AssetID]\", \"SPUniqueColumnPlaceholder\": \"&#91;AssetID]\" } } Use Case Create invoice records in a SharePoint list Description: On Asset creation, workflow will read CSV file from the item attachments and create records in “Invoice” list. Workflow: Create a workflow on the Assets list item added event. Action 1: Configure parse CSV action to create records in “Invoice” list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "670",
    "name": "670 - Parse CSV action in NITRO Workflows and Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/670%20-%20Parse%20CSV%20action%20in%20NITRO%20Workflows%20and%20Custom%20Actions.html",
    "title": "Parse CSV Action In NITRO Workflows And Custom Actions",
    "text": "Parse CSV action in NITRO Workflows and Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Parse CSV action in NITRO Workflows and Custom Actions Parse CSV action in NITRO Workflows and Custom Actions 1827 views 3 min , 41 sec read 2 Description A CSV (Comma-separated values) file is a delimited text file that uses a comma to separate values. Each line of the file is a data record. Each record consists of one or more columns, separated by commas. Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. The parse CSV action is used to create items in a SharePoint list using the records from CSV data. It can also be used to update existing items in the list using a matching criterion. CSV data can come from a SharePoint list item attachment or an item column that has the data in CSV format. Run for: This specifies the source for CSV data. Current Item: Read the CSV data from current item. Query List: Read the CSV data from one or more items fetched as part of a query list action. Variable : Read the CSV data from a workflow variable. Get CSV data from: Select one of the options to read CSV data. Attachments: Select this option if CSV data is in one or more item attachments. We can filter the files by specifying the type of the file. For example, we can enter file extension as .csv. Note that all matching attachment files will be processed if there are multiple attachments in the item. Column: Select this option if CSV data is in a column in the list item. Multiple lines of text type columns are listed for this purpose. Target List Settings Select target site and list to create or update the items. Column Mappings This section is used to map data from columns in CSV data to SharePoint list item columns. CSV column names are specified in square brackets. A fixed value is specified directly. A mapping can consist of both fixed value and one or more CSV columns. Please refer to below examples. Column value: Specify the column name from CSV data/Fixed value. Value type Example CSV column [Invoice Number] Custom Value Ordered Concatenation of one or more CSV columns/custom values [Invoice Number] _[ID] Advanced Settings Update item if it already exists: Check this option to update existing items. This can be used if the SharePoint list already has the items and the requirement is to add or update column data for these existing items. In this case, the first step is to find the matching item in SharePoint. If the item is found then it is updated, else a new item is created. If this option is not checked then a new list item is always created for every record in CSV data. Item fetch query: To identify the specific SharePoint list item to update for each CSV record, a CAML query needs to be specified. Include the required columns in query to fetch the item to update. CSV column data is specified in square brackets as shown in the example below. &lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;Eq&gt;&lt;FieldRef Name='AssetID' /&gt;&lt;Value Type='Text'&gt;&#91;Asset ID]&lt;/Value&gt;&lt;/Eq&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt; In this case, each CSV record has the Id of the Asset and this Id is also there in ‘AssetID’ column of the SharePoint list. For each CSV record, it will try to fetch the item with the matching Asset Id in the SharePoint list and update the item if it is found. If the list item with Asset Id is not found, a new item will be created in SharePoint list. Note that the query can have more than one condition and we can include more than one column from the CSV in the query. Advanced Settings: DateValType: By default, date time values in CSV are assumed to be in UTC. If these are in some other time zone, then specify the time zone name, for example – ‘Eastern Standard Time’. For a list of the time zone names, please refer to this article . MaxCSVRowstoProcess: Specify the max number of rows to process from the CSV data. Default maximum rows to be processed for event-based (item added/updated) and async workflows is 200, and for timer based and scheduled workflows it is 500. Batch Settings: These settings are considered if ‘ Update item if it already exists ’ is checked. For every row in CSV data, a call is made to SharePoint to find the list item that needs to be updated. If there are several rows in CSV data then it involves numerous calls to SharePoint. It can also result in calls being rejected by SharePoint (HTTP 429 error). Batch settings can be used to reduce calls to SharePoint by querying multiple items in one call. EnableBatch : Default value for this property is false. Set this to true to enable querying items in batches. BatchSize : Specify the number of items to fetch in one call (default value is 50). Normally, there is no need to change this value. BatchQuery : Specify the batch query. Please refer to the example below for these settings. ValueType: Specify the data type of the SharePoint column that is used in the batch query. Normally this will have value ‘Text’. UniqueColumnPlaceholder: Specify the column name from CSV data that contains the unique Id to find the items in the SharePoint list. SPUniqueColumnPlaceholder: Specify the column internal name in the SharePoint list that has the matching unique Id value. Batch Settings Sample: CSV data format: Title AssetID AssetType Created Date Dell Vostro K342356 Computer 10/26/2021 HP Laser Jet Printer H456456 Printer 10/26/2021 SharePoint list columns Id – Auto-generated Id of the item. Not used in mapping from CSV as it is handled by SharePoint. Title – This will contain the name of the Asset. Column type is a single line of text. AssetID – Text type column that has the unique Id of asset. CreationDate – Date on which the Asset was acquired. Column type is date and time. AssetType – Type of the asset. Column type is choice. { \"DateValType\": \"Eastern Standard Time\", \"MaxCSVRowstoProcess\": 500, \"BatchSettings\": { \"EnableBatch\": true, \"BatchSize\": 50, \"BatchQuery\": \"&lt;View&gt;&lt;Query&gt;&lt;Where&gt;&lt;In&gt;&lt;FieldRef Name='AssetID' /&gt;&lt;Values&gt;{values}&lt;/Values&gt;&lt;/In&gt;&lt;/Where&gt;&lt;/Query&gt;&lt;/View&gt;\", \"ValueType\": \"Text\", \"UniqueColumnPlaceholder\": \"&#91;AssetID]\", \"SPUniqueColumnPlaceholder\": \"&#91;AssetID]\" } } Use Case Create invoice records in a SharePoint list Description: On Asset creation, workflow will read CSV file from the item attachments and create records in “Invoice” list. Workflow: Create a workflow on the Assets list item added event. Action 1: Configure parse CSV action to create records in “Invoice” list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "671",
    "name": "671 - Dashboard Configuration in NITRO Application.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/671%20-%20Dashboard%20Configuration%20in%20NITRO%20Application.html",
    "title": "Dashboard Configuration In NITRO Application",
    "text": "Dashboard Configuration in NITRO Application - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Dashboard Configuration in NITRO Application Dashboard Configuration in NITRO Application 1150 views 1 min , 7 sec read 0 Applies To SharePoint Online Description This article describes the steps to configure Dashboard page in NITRO Applications to show related items and progress of them. See sample output from below image. There is no direct app or UI to configure above dashboard web part and it needs to be done using an xml file. Summary of steps List Schema Create Dashboard page XML Configuration Detailed Steps List Schema We need a Parent list and Child lists related to Parent for the dashboard configuration. In this example, we are considering Crow Canyon Purchase Order System application dashboard page. Parent List: Purchase Requests Child List: Approval Tasks Create Dashboard Page Go to Site contents &#8211;&gt; site Pages &#8211;&gt; create a new site page with required name Edit the page &#8211;&gt; add web part &#8211;&gt; add &#8216;Dashboard &#8211; Crow Canyon&#8217; web part and specify a name for web part as shown below. The name we used in above web part will be the xml file name that we will be configuring in further steps. XML Configuration Look and Feel of the dashboard page is configured using this xml file. Below is the link to get the sample xml file. UserDashBoard Download Extract the zip file to find &#8216;UserDashBoard.xml&#8217; file &#8211;&gt; right click on the file &#8211;&gt; Properties &#8211;&gt; Unblock the file if it is blocked. In the XML file, we take the input of the Parent list and child list related configurations as shown below. For the parent list item column values to shown in dashboard page like below, we take the input in XML file which is further explained below. Below is configuration XML related to this. Similarly, when we consider Child list item values to show in dashboard like below, related configuration is explained. XML Configuration After the XML is configured, go to site assets &#8211;&gt; CCS folder &#8211;&gt; Dashboard Folder &#8211;&gt; add the xml file at this location. Please create &#8216;Dashboard&#8217; folder if it is not already existing. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "672",
    "name": "672 - Notify task assignee daily if there is any open task.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/672%20-%20Notify%20task%20assignee%20daily%20if%20there%20is%20any%20open%20task.html",
    "title": "Notify Task Assignee Daily If There Is Any Open Task",
    "text": "Notify task assignee daily if there is any open task - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Notify task assignee daily if there is any open task Notify task assignee daily if there is any open task 959 views 1 min , 43 sec read 0 Applies to: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes steps to configure a workflow to send daily notification to task assignees regarding their open tasks. There could be multiple open tasks for a technician and the instructions in this article will send single email with a link to his/her open tasks list view. Summary of steps Create a custom list ‘Site Workflows’. Configure ‘Open Tasks’ list view in tasks list. Configure ‘My open tasks’ list view in tasks list. Configure scheduled workflow. Detailed steps 1. Create a custom list ‘Site Workflows’. Navigate to the site -&gt; Site Contents -&gt; create a custom list ‘Site Workflows’. Create a new list item in “Site Workflows” list with &#8216;Title&#8217; column value as “Notify Task assignee if there is any open task”. Note: Title can be anything. We will use this title in scheduled workflow configurations later in this article. 2. Configure ‘Open Tasks’ list view in tasks list. In this example, “Approver Tasks” is the tasks list, “Assigned To” is the person or group column and “Task Status” is the choice column in this list. Navigate to Site Contents -&gt; ‘Approver Tasks’ list -&gt; List Settings -&gt; ‘Create View’ and configure ‘Open Tasks’ filtered view as shown below: 3. Configure ‘My open tasks’ list view in tasks list. Configure ‘My open tasks’ filtered view in tasks list as shown below: Copy ‘My Open Tasks’ list view URL. After configuring ‘My Open Tasks’ list view, go to the list -&gt; Select ‘My Open Tasks’ list view -&gt; Copy the view URL from browser window and paste it in notepad. We will use this URL to add a link in mail body in NITRO workflow later in this article. Sample URL: https://contoso.sharepoint.com/sites/IT/Helpdesk/Lists/ApproverTasks/My%20Open%20Tasks.aspx 4. Configure a scheduled workflow. Navigate to Site Settings -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows. Configure a scheduled workflow on ‘Site Workflows’ list with “Get Item(s) from”, query builder setting (‘Title’ equal ‘Notify Task assignee if there is any open task’) as shown below: Define an empty variable ‘OpenTasks’. Configure a query list action to query open tasks from ‘Approver Tasks’ list. Define variable mapping for ‘OpenTasks’ variable as shown below: Variable value: Query open tasks##$variablecollection(;#,[Assigned To|AssignedTo]) With this, task assignees of all the open tasks are mapped to ‘OpenTasks’ variable. We will use this to send email in the next step. Configure send mail action to notify all open tasks assignees as shown below: Note: We are adding all assignees to “BCC”, so they won’t know who all are included in this email. Since “To” address is mandatory, add an email address to it, we have added ‘Managers’ person or group column in this example. Syntax to use variable value in recipients: VariableName##Value Example: OpenTasks##Value Configure the mail template as needed and save settings. Insert ‘My Open Tasks’ list view link of ‘Approvers Tasks’ list in the mail template from notepad that was copied above in #3.b. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "673",
    "name": "673 - Steps to Install NITRO BOT.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/673%20-%20Steps%20to%20Install%20NITRO%20BOT.html",
    "title": "Steps To Install NITRO BOT",
    "text": "Steps to Install NITRO BOT - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps to Install NITRO BOT Steps to Install NITRO BOT 1456 views 4 min , 50 sec read 0 Applicable to : SharePoint Online This article describes the steps to install the NITRO BOT including LUIS application configurations and search schema settings to configure Knowledge Base Search functionality. This article will also describe the steps to import default BOT commands for Crow Canyon IT Helpdesk pre-built application. Pre-requisites Microsoft Teams Admin rights Enable Custom Apps at tenancy level Steps: Go to Teams Admin Center -&gt; Teams apps -&gt; Setup policies -&gt; Click Global (Org-wide default) policy -&gt; in that policy, enable &#8220;Upload custom apps&#8221; (this may take 24 hours to take effect) Reference: https://docs.microsoft.com/en-us/microsoftteams/teams-custom-app-policies-and-settings#set-a-user-custom-app-policy Site Collection Administrator access on the SharePoint site collection Install NITRO Studio in the SharePoint site collection Reference : https://www.crowcanyon.help/article/424/ Summary of steps Upload NITRO BOT Package Add/Pin NITRO BOT into users MS Teams NITRO BOT Configurations (for IT Helpdesk application) Import default BOT commands Create Resource Group in Azure Create and configure LUIS application Knowledge Base Seach configurations Email Domains BOT Analytics Configurations Detailed Steps Upload NITRO BOT Package Open MS Teams, click &#8220;Apps&#8221;, click &#8220;Upload a custom app&#8221; as shown below. Please contact sharepointsupport@crowcanyon.com for NITRO BOT package download link. Add/Pin NITRO BOT into users MS Teams Follow the steps described in https://www.crowcanyon.info/nitro/botmanual_v2/index.html?accessing-and-pinning-the-nitr.html NITRO BOT Configurations (for IT Helpdesk application) Import default BOT commands Go to application site, open NITRO Studio -> BOTS -> click &#8220;Configure NITRO Bot Commands (Site Collection)&#8221; -> NITRO BOT, import BOT settings, choose “IT Help Desk” and import as shown below. Create Resource Group in Azure If you have do not already have an existing resource group in Azure for the below LUIS application, please create this prior to following the steps below. Manage resource groups &#8211; Azure portal &#8211; Azure Resource Manager | Microsoft Docs Create and configure LUIS application Create LUIS application Refer below articles to create and configure LUIS application https://docs.microsoft.com/en-us/azure/cognitive-services/luis/sign-in-luis-portal https://docs.microsoft.com/en-us/azure/cognitive-services/luis/luis-how-to-start-new-app In this article, we use the LUIS application “CrowCanyonITPNITRO2” created using above reference links. Configure LUIS application Find LUIS application id, authoring key and host name After the LUIS application is created, follow below steps to know the LUIS application id, authoring key and host name that are required to configure NITRO BOT: Open https://www.luis.ai in browser and sign in It may prompt to switch to a different azure active directory if the logged in account has multiple Azure AD subscriptions Select the right subscription and then click “Select or create an authoring resource”. This will open a page to select right authoring resource. Azure directory and Azure subscription will be pre-populated, select the authoring resource and click “Confirm” as show below. This will open a page that will show all available conversation apps. Open the right conversation app and this will open the LUIS app settings page. Click on “Manage”, Settings, Application Settings, copy the “App ID”. This will be used in NITRO BOT configurations in next steps in this article Click on “Manage”, Azure Resources, Authoring Resource, copy the “Primary Key”. This is the authoring key that will be used in NITRO BOT configurations in next steps in this article Find Host Name Host Name: Based on the location used to create our resource that used to create our LUIS application, use the corresponding host name from below list. E.g.: If the resource is created in “West US” then use “westus.api.cognitive.microsoft.com” as host name in our BOT configurations. Australia East &#8211; australiaeast.api.cognitive.microsoft.com Brazil South &#8211; brazilsouth.api.cognitive.microsoft.com Canada Central &#8211; canadacentral.api.cognitive.microsoft.com Central India &#8211; centralindia.api.cognitive.microsoft.com Central US &#8211; centralus.api.cognitive.microsoft.com East Asia &#8211; eastasia.api.cognitive.microsoft.com East US &#8211; eastus.api.cognitive.microsoft.com East US 2 &#8211; eastus2.api.cognitive.microsoft.com France Central &#8211; francecentral.api.cognitive.microsoft.com Japan East &#8211; japaneast.api.cognitive.microsoft.com Japan West &#8211; japanwest.api.cognitive.microsoft.com Korea Central &#8211; koreacentral.api.cognitive.microsoft.com North Central US &#8211; northcentralus.api.cognitive.microsoft.com North Europe &#8211; northeurope.api.cognitive.microsoft.com South Africa North &#8211; southafricanorth.api.cognitive.microsoft.com South Central US &#8211; southcentralus.api.cognitive.microsoft.com Southeast Asia &#8211; southeastasia.api.cognitive.microsoft.com UK South &#8211; uksouth.api.cognitive.microsoft.com West Central US &#8211; westcentralus.api.cognitive.microsoft.com West Europe &#8211; westeurope.api.cognitive.microsoft.com West US &#8211; westus.api.cognitive.microsoft.com West US 2 &#8211; westus2.api.cognitive.microsoft.com Create LUIS entity, train and publish LUIS application Next, train the LUIS application with Knowledge Base categories. Download the categories.json from NITRO BOT’s Knowledge Base Search command Go to application site, open NITRO Studio -&gt; BOTS -&gt; edit the imported NITRO BOT, edit “Search KB Article” command (command type: Knowledge Base Search) as shown below. Choose “Custom” in “LUIS Application” setting, and then click “category.json” link as shown below. This will download the category.json file. Create Entity in LUIS application created in above steps (“CrowCanyonITPNITRO2” LUIS application in this example) Open the LUIS application in browser, click on “BUILD”, Entities, click “+ Create”, enter name and choose “List” type as shown below. Click “Import values”, upload the “category.json” downloaded in previous steps. After the categories are imported, click “Train” (Initially Train button has red dot indication and once we clicked, it changes to green dot indication) and then click “Publish” Note this entity name (“KBCategories” in this example) and we will use this in next steps. Configure LUIS application in NITRO BOT Go to the SharePoint site that we are configuring the NITRO BOT (IT Helpdesk site in this example), site settings, Crow Canyon NITRO Apps, open “BOTS” under “Advanced” section, edit the BOT application, go to BOT Settings section, select “Custom” under “LUIS Application” and enter the application key, authoring key, host name prepared in the above steps and save. Knowledge Base Search configurations One of the commands in standard IT Helpdesk NITRO BOT commands is, “Knowledge Base Search” that require additional configurations after importing the default commands. This command has five different sections in its configurations: General command details Knowledge Base list Tickets list LUIS application Search Schema Managed Properties Section #4 and #5 need special configurations. LUIS application Enter the application key, authoring key, host name and entity name prepared in above steps and save. Search Schema Managed Properties Enter the managed property alias of “Related KB Articles” lookup column of “Tickets” list, “Category” and “Issue Type” lookup columns aliases of “Knowledge Base Articles” list and save. To create the search schema managed property alias for these columns, refer below “Search Configurations in site” section. Search Configurations in site To create search schema managed properties, please follow below steps: Go to Root Site, site settings, under “Site Collection Administration”, click on “Search Schema” Filter “RefinableString” Managed Property, edit unused RefinableStringXX property as shown below: Specify alias name for property. This will be used in the NITRO BOT’s knowledge base search command settings. Scroll to “Mappings to crawled properties” section, click on Add a Mapping button Search crawled property with column internal Name for which we want to create manage property. Then select the property (starts with ows_[Column Internal Name]) and click Ok. Note : If we do not find the crawled property to map (for example, ows_Categoty1), go the list that has this column, list settings, advanced settings, click “Reindex List”. We can continue with other configurations as SharePoint may take time to get the re-indexing done for the list. Re-index Lists: Go to Tickets list, list settings, Advanced Settings and click on Re-index Button. Repeat the same for Knowledge Base Articles list. Note: If we are unable to find crawled property for list columns then re-index the list. It takes about an hour to re-index the list Email Domains Bot prompts user to login with their Microsoft O365 account. It uses the domain of logged in user to identify the bot applications that user can access. It is mandatory to specify all the required domains in this section. If no domains are added, then BOT won’t respond for anyone. Go to the SharePoint site that we are configuring the NITRO BOT (IT Helpdesk site in this example), site settings, Crow Canyon NITRO Apps, open “BOTS” under “Advanced” section, click “New Email Domain”, enter value and save. BOT Analytics Configurations Go to Crow Canyon NITRO Studio, NITRO Admin Home, Nitro Applications, Updates, click on “BOT ANALYTICS”, select the site and click OK. It will create the “Chat Bot Admin Dashboard” and “Performance Reports”. This helps administrators recognizing the area of improvements to Knowledge Base system so Bot “learns” more at solving user problems over time. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "674",
    "name": "674 - Installation of NITRO Workflows Designer Debugger service.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/674%20-%20Installation%20of%20NITRO%20Workflows%20Designer%20Debugger%20service.html",
    "title": "Installation Of NITRO Workflows Designer Debugger Service",
    "text": "Installation of NITRO Workflows Designer Debugger service - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Installation of NITRO Workflows Designer Debugger service Installation of NITRO Workflows Designer Debugger service 1724 views 2 min , 16 sec read 0 Applies To: SharePoint On-premises (2013, 2016 and 2019/SharePoint Server Subscription Edition) Description This article describes the instructions to install NITRO Workflows debugger service. This article assumes that NITRO Studio is already installed in your SharePoint environment. You can refer to this article for NITRO Studio installation. Debugging service needs to be installed on one of the SharePoint servers in the farm. This installation will enable workflow debugging feature that can be used to develop and troubleshoot NITRO workflows. Summary of steps: Install NITRO Workflows Debugger Service Install NITRO Web API Update NITRO Workflows farm properties Instructions Install NITRO Workflows Debugger Service 1.Download and copy the NITRO Workflows debugger service package into the SharePoint server. 2. Unblock the “WFDebuggerService.zip” file 3. Extract the folder and move it to NITRO Studio installation folder on your SharePoint server. For example, if NITRO Studio is installed in “C:\\Program Files\\Crow Canyon\\NITRO Studio” folder, then copy WFDebuggerService folder to a sub-folder so that it will be located at path “C:\\Program Files\\Crow Canyon\\NITRO Studio\\WFDebuggerService” 4. Open command prompt and navigate to below path and then run the command to install the debugging service. Path : C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319 Command : installutil &lt;&lt;Path&gt;&gt;\\CrowCanyon.WFDebuggerService.exe Ex : installutil C:\\Program Files\\Crow Canyon\\NITRO Studio\\WFDebuggerService\\CrowCanyon.WFDebuggerService.exe 5. Open Windows Services Manager on the server. Press the Win + R keys on your keyboard, to open the Run window. Then, type &#8220;services. msc&#8221; and press OK. 6. Verify that “CrowCanyonWFDebuggerService” is there in the services listing 7. Modify the service account of “CrowCanyonWFDebuggerService” to administrator account: Select “CrowCanyonWFDebuggerService” in the services listing -&gt; Right click -&gt; Properties -&gt; Navigate to “LogOn” tab and specify the administrator account that is a domain user and local administrator and SharePoint farm administrator. 8. Start the service Install NITRO Web API This component is used by workflow debugger service. Debugger service uses a list (“NITROWFDebugSessions”) to manage debugging sessions and this list is automatically created by this API. Debugger service and this list is common across the farm and is required to be created only once in any of the site collections in the farm. You can select the site collection where you are currently deploying NITRO Studio or any of the existing site collections. Please note the URL of the site collection where you want this list to be created. Also note the web application of this site collection and the application pool of that web application. This API will be installed in the same application pool. Below are the steps to install NITRO Web API component. 1. Download and copy the “NITROWebAPI” package to the SharePoint server 2. Extract the folder and unblock it 3. Paste the “NITROWebAPI” folder in below location 4. Location: C:\\inetpub\\wwwroot 5. Open IIS Manager 6. Select Sites and create a new site as shown below: 7. After creating the site, select the site and click “Browse website” 8. This will open the site in the browser, copy the URL of the site: Example URL: http://localhost:1100/api/rest Modify the URL by replacing “localhost” with the server name and port number used while creating the “NITROWebAPI” site: For example, modified URL will be like: http://WIN12SP2019:1100/api/rest Update NITRO Workflows farm properties In this step we will create two farm level properties so that debugging service can access the NITRO Web API component and the list to manage the debugging sessions. For this we need the site collection URL noted above for hosting the list “NITROWFDebugSessions”. And we need the URL of the NITRO Web API site (step #7 above). Open SharePoint Management Shell and run the below script: Script : $farm=Get-SPFarm $farm.Properties.Add(&#8220;NITROWFDebugSessionSite&#8221;, &#8220;&lt;&lt; URL of the site collection where list ‘’ is to be created. &gt;&gt;&#8221;) $farm.Properties[&#8220;NITROWebAPIURL&#8221;] = &#8220;&lt;&lt; NITRO Web API site URL &gt;&gt;&#8221;; $farm.Update() Note: In above script, specify the site collection URL in second line, example: $farm.Properties.Add(&#8220;NITROWFDebugSessionSite&#8221;, &#8220;http:// WIN12SP2019:1000/sites/helpdesk&#8221;) And in third line, specify the NITRO Web API URL, example: $farm.Properties[&#8220;NITROWebAPIURL&#8221;] = &#8220;http:// WIN12SP2019:1100/api/rest&#8221;; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "676",
    "name": "676 - Migration of NITRO site from one O365 site to another.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/676%20-%20Migration%20of%20NITRO%20site%20from%20one%20O365%20site%20to%20another.html",
    "title": "Migration Of NITRO Site From One O365 Site To Another",
    "text": "Migration of NITRO site from one O365 site to another - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Migration of NITRO site from one O365 site to another Migration of NITRO site from one O365 site to another 935 views 1 min , 16 sec read 0 Applies to: SharePoint Online Description This article describes the steps to migrate NITRO configurations from one site to another site. Summary of steps Create site and lists schema Validate site schema Install NITRO Studio Export and import NITRO configurations (Forms, Custom Actions and Workflows) Reconfigure other NITRO components Configure workspace/site pages Register License Detailed steps Create site and lists schema In SharePoint Online, we cannot take source site collection backup and restore it in target site collection like SharePoint on-premises. We must take the list templates from source site manually and create lists using these list templates in target site. When doing this, lookup columns will be broken in target site. We need to recreate those columns manually with same internal name along with other column settings and update the required views. Validate site schema Go to site contents and make sure that list names match in both source and target sites. Go to the list that has NITRO Forms/Workflows/Custom Actions configured, go to list settings, open a column, check the internal name and column settings, they all should match with corresponding source list column settings. If we create list using list template, then we only need to check this for the columns that we recreate as mentioned in #1 above. We can find the internal name of the column as shown in address bar of browser when we open a column: Install NITRO Studio Reference:&nbsp; https://www.crowcanyon.help/article/424/ Note: If any custom migration tool is used, then skip “Site Assets” library from the data migration if there are no other files except NITRO configurations in “CCS” folder, because these files will be created after we import/reconfigure NITRO configurations. If the “CCS” folder data in “Site Assets” library is already migrated, then delete “CCS” folder manually in target site. Export and import NITRO configurations (Forms, Custom Actions and Workflows) Reference:&nbsp; https://www.crowcanyon.help/article/445/ Note: This article does not indicate custom actions, but we do support NITRO custom action export/import. Reconfigure other NITRO components If other NITRO components like list views, reports, print templates, list formatting, ID column, linked items etc. are used in source environment, then configure them manually in target site. Configure workspace/site pages Contact&nbsp; sharepointsupport@crowcanyon.com &nbsp;for licensing target site. We need source site and target site URLs. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "677",
    "name": "677 - Customize header with Crow Canyon Branding (Modern Sites).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/677%20-%20Customize%20header%20with%20Crow%20Canyon%20Branding%20%28Modern%20Sites%29.html",
    "title": "Customize Header With Crow Canyon Branding (Modern Sites)",
    "text": "Customize header with Crow Canyon Branding (Modern Sites) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customize header with Crow Canyon Branding (Modern Sites) Customize header with Crow Canyon Branding (Modern Sites) 1088 views 6 min , 49 sec read 0 Applies To : SharePoint Online (Modern) Description This article describes the steps to customize the site header using Crow Canyon Branding (Modern Sites). This article has sample configuration for a customized header. As per your use case you can change the CSS and script code to get a different look and feel. Modern site with customized header: Detailed Steps: &nbsp;Configure the header settings and CSS in Crow Canyon Modern Branding Navigate to Site Settings -&gt; Crow Canyon Branding (Modern sites) under Site Administration and configure the custom CSS and Header HTML as shown below. Custom CSS .ccs_LogoArea{float:left;width:160px;height:160px;padding:0;margin:0;box-sizing:border-box;padding:5px}.ccs_Logo&gt;img{width:150px;height:150px;display:block}.ccs_HeaderArea{margin-left:160px;height:160px;vertical-align:top;box-sizing:border-box;width:calc(100% - 160px)}.ccs_HeaderArea &gt;.ccs_HeaderRightTableArea {display:table;width:100%;} .ccs_topHeader{height:115px;display:table-row}.ccs_Header_PageTitleArea{padding:5px;display:table-cell}.ccs_Header_PageTitleArea&gt;.css_PortalHeading{font-size:32px;color:#fff;font-weight:400}.ccs_Header_PageTitleArea&gt;.css_PortalHeadtingDescription{font-size:14px;height:60px;font-family:'Segoe UI',Tahoma,Helvetica,Sans-Serif;color:#fff}.ccs_Header_RightSideArea{display:table-cell;padding:2px}.ccs_Header_HomeLink{text-align:right;padding-right:20px;color:#fff}.ccs_Header_RightSideArea .ccs_Header_UserName{color:#fff; vertical-align: middle;}.ccs_Header_RightSideArea .ccs_Header_LogoutButton{vertical-align:middle;padding-left:5px;color:#fff}.ccs_Header_RightSideArea .ccs_Header_LogoutButton&gt;a{color:#fff}.ccs_Header_RightSideArea .ccs_Header_TimeStamp{font-family:'Segoe UI',Tahoma,Helvetica,Sans-Serif;color:#fff;line-height:18px;font-size:11pt;text-align:right!important;padding-top:5px;padding-right:15px}.ms-core-listMenu-root{padding-left:5px}.ccs_Header_MenuArea{height:40px;vertical-align:middle}.ccs_Clear{clear:both}@media only screen and (max-width:1023px){.ccs_LogoArea{width:80px;height:80px;padding:0}.ccs_Logo&gt;img{width:80px;height:80px;background-size:70px 70px}.ccs_HeaderArea{margin-left:80px;height:80px;width:calc(100% - 80px)}.ccs_topHeader{height:40px;max-height: 40px;overflow: hidden;display: block;}.ccs_Header_PageTitleArea{padding:5px;margin-right:50px}.ccs_Header_PageTitleArea&gt;.css_PortalHeading{font-size:24px!important}.ccs_Header_PageTitleArea&gt;.css_PortalHeadtingDescription{display:none}.ccs_Header_RightSideArea{display:none}}.ms-breadcrumb-top{margin:0}.s4-itm-selected &gt; .ms-vb-imgFirstCell.ms-vb-imgFirstCell {background-color: #008000;border-right-color: #008000;} Add above CSS in “Extended CSS” section under “General Settings”. Header HTML &lt;div class=\"ccs_LogoArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;a style=\"text-decoration: none;\" href=\"/sites/nitro/ClaDevITP\" accesskey=\"h\" class=\"ccs_Logo\"&gt;&#91;&#91;Logo||Logo]]&lt;/a&gt; &lt;/div&gt; &lt;div class=\"ccs_HeaderArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_HeaderRightTableArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_topHeader\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_Header_PageTitleArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"css_PortalHeading\"&gt;&#91;&#91;Web Title||Web Title]]&lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"css_PortalHeadtingDescription\"&gt;&#91;&#91;Web Description||Web Description]]&lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_Header_RightSideArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_Header_HomeLink\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;span class=\"ccs_Header_UserName\"&gt;&#91;&#91;Logged User Name||Logged User Name]]&lt;/span&gt;&amp;nbsp;|&lt;span class=\"ccs_Header_LogoutButton\"&gt;&#91;&#91;Logout Button||Logout Button]]&lt;/span&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_Header_TimeStamp\"&gt;&#91;&#91;Date Timer||Date Timer]]&lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_HeaderRightTableArea\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div style=\"display:table-row\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div style=\"display:table-cell;vertical-align: top;\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div class=\"ccs_Header_MenuArea\"&gt;&#91;&#91;Top Navigation Bar||Top Navigation Bar]]&lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div style=\"display:table-cell;\"&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div&gt;&#91;&#91;Search Box||Search Box]]&lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"ccs_Clear\"/&gt; Add above HTML in “Header HTML” control under Header section as shown below: Header section Sample output screenshot: Customize header colors with CSS: To modify the header links dropdown icon and hover colors, add below CSS in “Extended CSS” in General Setting section in Modern branding Custom CSS : #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item i { color: ##HeaderSelectedLinkDropdownIconColor## !important; font-size: 12pt !important; } #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item i:hover, #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item:hover i { color: ##HeaderLinkHoverColor## !important; } In above, replace ## HeaderSelectedLinkDropdownIconColor##, ##HeaderLinkHoverColor## with hexadecimal colors: Example: #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item i { color: #e82217 !important; font-size: 12pt !important; } #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item i:hover, #CCSCustomizedHeaderRow li.static > .ccs-core-listMenu-item:hover i { color: #21db40 !important; } Output : 2. To modify the custom sub links background color, add below CSS in Extended CSS section .CCSCustomSubMenu { background: ##HeaderBGColor## !important; } In above CSS, replace “##HeaderBGColor##” with hexadecimal color: Example : .CCSCustomSubMenu { background: #4e8efc !important; } Output : 3. To modify the overflow header links buttons color, add below CSS. li.CCSCustomTopNavMore > span.ms-Icon { color: ##HeaderSelectedLinkColor##; } li.CCSCustomTopNavMore > span.ms-Icon:hover { color: ##HeaderLinkHoverColor##; background: ##HeaderLinkHoverBackgroundColor##; border-color: ##HeaderLinkHoverborderColor##; } li.CCSCustomTopNavMore > span.ms-Icon { border: 2px solid ##HeaderSelectedLinkColor##; } In above custom CSS, replace below placeholders: ##HeaderSelectedLinkColor##: Overflow links button color ##HeaderLinkHoverColor##: hover color for overflow button ##HeaderLinkHoverBackgroundColor##: hover color for overflow button background ## HeaderLinkHoverborderColor ##: hover color for overflow button border Ex: li.CCSCustomTopNavMore > span.ms-Icon { color: #eb6f50; } li.CCSCustomTopNavMore > span.ms-Icon:hover { color: #34e5eb; background: #f255d8; border-color: #77f27b; } li.CCSCustomTopNavMore > span.ms-Icon { border: 2px solid #ecf547; } Output : 4. To modify the header background color, hover color and text color, add below CSS in “Extended CSS” section Custom CSS: div#CCSCustomizedHeaderRow { background: ##HeaderBGColor##; } #CCSCustomizedHeaderRow ul li a:hover { background: ##HeaderSelectedLinkhoverColor##; } #CCSCustomizedHeaderRow ul > li > a:hover .ccs-menu-item-text, #CCSCustomizedHeaderRow ul li a:hover .ccs-menu-item-text, #CCSCustomizedHeaderRow li a:hover i { color: ##HeaderLinkTextHoverColor## !important; } In above CSS, replace below placeholders with hexadecimal color ##HeaderBGColor##: Header background color ##HeaderSelectedLinkhoverColor##: Hover color for selected header link ##HeaderLinkTextHoverColor##: Hover color for selected header link text Ex : div#CCSCustomizedHeaderRow { background: #958eed; } #CCSCustomizedHeaderRow ul li a:hover { background: #e61755; } #CCSCustomizedHeaderRow ul > li > a:hover .ccs-menu-item-text, #CCSCustomizedHeaderRow ul li a:hover .ccs-menu-item-text, #CCSCustomizedHeaderRow li a:hover i { color: #b1f0bd !important; } Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "678",
    "name": "678 - Pre-requisites to work with Office API in Custom Actions and NITRO Workflows - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/678%20-%20Pre-requisites%20to%20work%20with%20Office%20API%20in%20Custom%20Actions%20and%20NITRO%20Workflows%20-%20Crow%20Canyon%20Software.html",
    "title": "Pre Requisites To Work With Office API In Custom Actions And NITRO Workflows Crow Canyon Software",
    "text": "Pre-requisites to work with Office API in Custom Actions and NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Pre-requisites to work with Office API in Custom Actions and NITRO Workflows Pre-requisites to work with Office API in Custom Actions and NITRO Workflows 1148 views 1 min , 24 sec read 0 Applies to : SharePoint On-premises (2013, 2016 and 2019/SharePoint Server Subscription Edition) Description In Custom Actions and NITRO Workflows, Generate Document action works with “Open XML API” and “Microsoft Office API”. Below configurations are required in the SharePoint server to work Generate Document action with “Microsoft Office API”. If you have multiple servers in farm, then these are required in all the application/web servers. Pre-requisites: 1. Install Microsoft office on SharePoint server machine and make sure that office is licensed. 2. Microsoft .NET Framework 4.8 or above should be installed on the server. 3. Create a folder with name “Desktop” in below system folders: C:\\Windows\\System32\\config\\systemprofile AND C:\\Windows\\SysWOW64\\config\\systemprofile 4. Create a new folder with name “tempfiles” in C drive 5. Configure as per below checklists in each SharePoint server Check List 1: 1. Open DCOMCNFG (search in the command line), Component Services -&gt; Computers -&gt; My Computer -&gt; right click on the My Computer and select properties 2. Choose the COM Securities tab. 3. In Access Permissions, click “Edit Defaults” and add “Local Access“ and “Remote Access” permissions for app pool user of CrowCanyon Application. 4. To know the application pool user, go to IIS Manager -&gt; Application Pools -&gt; See the identity (user) of crow canyon application pool account 5. In Launch and Activation Permissions, click Edit Defaults and add “Local Launch” and “Local Activation” permissions for app pool user of CrowCanyon Application Check List 2: 1. Open Windows Explorer 2. Depending on the 32bit or 64bit version of office installed on the server, do the following configurations: 32bit Office installation: Navigate to C:\\Windows\\System32\\config\\systemprofile 64bit Office installation: Navigate to C:\\Windows\\SysWOW64\\config\\systemprofile 3. Verify the folder &#8220;Desktop&#8221; exists. If not, create the “Desktop” folder. Select the “Desktop” folder and right click -&gt; properties -&gt; “Security” tab and add app pool user of Crow Canyon Application with default permissions (Read &amp; execute, List folder contents and Read) Check List 3: 1. Open DCOMCNFG (search in the command line) -&gt; Component Services -&gt; Computers -&gt; My Computer -&gt; DCOM Config 2. Find &#8220;Microsoft Word 97 &#8211; 2003 Document&#8221; (If it is missing check if your Word is also 64 bit (if your Windows is)) Right click -&gt; Properties Go to “Security” tab and edit the &#8220;Customize&#8221; radio buttons so that IIS_IUSRS could have rights for launch and access Next, go to “Identity” and choose &#8220;The interactive user&#8221; -&gt; apply changes and try again. If all this fails, go to &#8220;General&#8221; tab and in &#8220;Authentication Level&#8221; drop down choose &#8220;None&#8221;. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "679",
    "name": "679 - Set Variable in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/679%20-%20Set%20Variable%20in%20NITRO%20Forms.html",
    "title": "Set Variable In NITRO Forms",
    "text": "Set Variable in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Set Variable in NITRO Forms Set Variable in NITRO Forms 1194 views 3 min , 19 sec read 0 Applies to : NITRO activated sites in SharePoint online and On-premises (SharePoint Server Subscription Edition) Define NITRO Variables in NITRO Forms To define the variables in NITRO forms, Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Variables -&gt; Define the variables as shown below: Work with variables in different places in NITRO forms Line/HTML Control: Syntax to use variable value in Line/HTML control: %%Variable##Value%% To show dynamic column placeholder value in Line/HTML control, enable “Dynamic placeholder evaluation” and use column placeholder syntax as shown below: %%[Column Internal Name]%% This will be useful to show dynamic column values in Line/HTML control in the new form. Form Event Actions: Fetch List Items: Syntax to use variable value in “Fetch List Item” action: %%Variable##Value%% Set Variable values: Use this action to update the variable values. We can set the column placeholders, functions, variables, and Fetch Items for the variables. Column Placeholder : To save the column placeholder value in a variable, select the column from “Define Variable Value Expression” and click “Add Placeholder to Value” Syntax : [Column Display Name|Column Internal Name] Ex : Save the Category lookup column value in a variable: [Category|Category] Functions : Use the functions listed in “Define Variable Value Expression” as per the requirement Ex : To sum values from two columns, use “Add” function $add([Total Amount|TotalAmount],[Tax Amount|TaxAmount]) Variables : To copy the value from a variable, use variables in “Define Variable Value Expression” Syntax : Variable##Value Ex : VarRequester##Value Fetch Items : All the configured fetch item actions will be shown here. &nbsp;Below are the sample use cases for using variables with item and item collection. Item : In this example, configured a fetch item action to save “Budget” column value in a variable from “Departments” list based on the “Department” lookup selection on the form. Action 1: Configure fetch item action to get the department based on the selected “Department” column value Action 2 : Configure set variable value action to update the variable value with “Budget” column value from selected Department. Variable value expression: CCSQLGetDept##[Budget|Budget] 2. Items : In this example, configured a fetch item action to get all line items and update a variable with sum of total cost of all line items. Action 1: Configure fetch item action to get all the related line items from Purchase Items list Action 2 : Configure set variable action to update a variable with sum of total cost of all line items. Variable value expression: CCSQLGetILinetems##$sum([Total Cost|TotalCost]) Update Form Controls: Syntax to use variable value in Update Form Control action: Variable##Value Condition Builder control: Syntax to use variable value in condition control in permissions, validations, and form event actions: Variable##Value Custom Script: Get Variable Value: Syntax to get value from a variable using custom script in NITRO Forms: Syntax : window.ccs_g_FormUI.GetVariableValuebyName(“Variable Name”) Ex : window.ccs_g_FormUI.GetVariableValuebyName(“VarRequestStatus”) OutPut : Sometimes we get output in string format and sometimes in Object format, we need to use the output result as per as per our requirement in the custom script. Set Variable Value: Syntax to update variable value using custom script in NITRO Forms: Syntax : window.ccs_g_FormUI.SetVariableValuebyName(“Variable Name”,Variable Value) Ex : window.ccs_g_FormUI.SetVariableValuebyName(“VarRequestStatus”,”Closed”) Above functions can be used in custom java script section in below actions in Form Event Actions: Execute Script Update Form Controls Set Variable Value Use case: Concatenate “First Name” and “Last Name” on column value change and update it in “Full Name” column. In this sample use case, we have used variables and form event actions in NITRO forms to achieve this. Steps : Define variables Configure Form Event Actions In this sample use cases, we have covered output of a variable in both String and Object format Get variable value as Object Get variable value as String Detailed Steps: Get variable value as Object 1 .Define variables: Define below variables in NITRO Forms. VarFirstName VarLastName 2. Configure Form Event Actions: Configure form event action on “First Name” and “Last Name” column value change as shown below: Action 1: Set variable value Configure set variable action as shown below: VarFirstName VarLastName : Action 2: Update Full Name Script : var ObjFirstName = window.ccs_g_FormUI.GetVariableValuebyName(&#8220;VarFirstName&#8221;); var ObjLastName = window.ccs_g_FormUI.GetVariableValuebyName(&#8220;VarLastName&#8221;); var FirstName = &#8220;&#8221;; var LastName = &#8220;&#8221;; if (ObjFirstName &amp;&amp; ObjFirstName.Computed){ FirstName = ObjFirstName.Computed.Display; } if (ObjLastName &amp;&amp; ObjLastName.Computed){ LastName = ObjLastName.Computed.Display; } &nbsp;if(FirstName &amp;&amp; LastName){ return FirstName +&#8221; &#8220;+ LastName.ComputedValue; } else if(FirstName) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return FirstName.ComputedValue; } else if (LastName) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return LastName.ComputedValue; } else { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &#8220;&#8221;; } Get variable value as string 1.Define variables: Define below variables in NITRO Forms. VarFirstName VarLastName 2. Configure Form Event Actions: Configure form event action on “First Name” and “Last Name” column value change as shown below: Action 1: Execute Script Configure execute script action to update the variable values using Set variable function. Script: var FirstName = _ccs_FormUI.fetchColumnValueUI(&#8220;FirstName&#8221;); var LastName = _ccs_FormUI.fetchColumnValueUI(&#8220;LastName&#8221;); window.ccs_g_FormUI.SetVariableValuebyName (&#8220;VarFirstName&#8221;, FirstName); window.ccs_g_FormUI.SetVariableValuebyName (&#8220;VarLastName&#8221;, LastName); functionCallback(); Action 2: Update Form Control Configure update form control action to get the value from variables using Get variable function and update the “Full Name”. Script: var FirstName = window.ccs_g_FormUI.GetVariableValuebyName (&#8220;VarFirstName&#8221;); var LastName = window.ccs_g_FormUI.GetVariableValuebyName (&#8220;VarLastName&#8221;); if(FirstName &amp;&amp; LastName){ return FirstName+&#8221; &#8220;+LastName; } else if(FirstName) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return FirstName; } else if (LastName) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return LastName; } else { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &#8220;&#8221;; } About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "68",
    "name": "68 - Configure validation for ‘Attachments’ section in NITRO forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/68%20-%20Configure%20validation%20for%20%E2%80%98Attachments%E2%80%99%20section%20in%20NITRO%20forms.html",
    "title": "Configure Validation For ‘Attachments’ Section In NITRO Forms",
    "text": "Configure validation for ‘Attachments’ section in NITRO forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure validation for ‘Attachments’ section in NITRO forms Configure validation for ‘Attachments’ section in NITRO forms 869 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In NITRO Forms, files or documents can be attached to an item from ‘Attachments’ section and using ‘NITRO Attachments’ column. &nbsp;These files can be restricted using validations in attachment settings. In this sample article, we have configured validation on ‘Attachments’ section to allow maximum of two attachments to be attached to an item in NITRO Forms. Detailed steps Configure validation for ‘Attachments’ section in NITRO Forms. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select ‘Attachments’ section -&gt; Configure the validation as shown below from ‘Attachment Settings’. Configure validation as shown below: Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "680",
    "name": "680 - Configure validation for ‘Attachments’ section in NITRO forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/680%20-%20Configure%20validation%20for%20%E2%80%98Attachments%E2%80%99%20section%20in%20NITRO%20forms.html",
    "title": "Configure Validation For ‘Attachments’ Section In NITRO Forms",
    "text": "Configure validation for ‘Attachments’ section in NITRO forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure validation for ‘Attachments’ section in NITRO forms Configure validation for ‘Attachments’ section in NITRO forms 869 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In NITRO Forms, files or documents can be attached to an item from ‘Attachments’ section and using ‘NITRO Attachments’ column. &nbsp;These files can be restricted using validations in attachment settings. In this sample article, we have configured validation on ‘Attachments’ section to allow maximum of two attachments to be attached to an item in NITRO Forms. Detailed steps Configure validation for ‘Attachments’ section in NITRO Forms. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Select ‘Attachments’ section -&gt; Configure the validation as shown below from ‘Attachment Settings’. Configure validation as shown below: Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "681",
    "name": "681 - Configure additional requester metadata information in Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/681%20-%20Configure%20additional%20requester%20metadata%20information%20in%20Tickets.html",
    "title": "Configure Additional Requester Metadata Information In Tickets",
    "text": "Configure additional requester metadata information in Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure additional requester metadata information in Tickets Configure additional requester metadata information in Tickets 997 views 2 min , 56 sec read 0 Applies to: SharePoint online and On-premises (2013,2016 and 2019/SharePoint Server Subscription Edition) Application Type : Crow Canyon Helpdesk applications (IT Helpdesk, Request Management and Facilities/Work Orders) Description Requester metadata like email, phone and department will be auto populated in Tickets list by default in Crow Canyon helpdesk applications. This metadata will be updated in two ways in Tickets in standard helpdesk applications. Tickets created directly from NITRO forms Email to Ticket conversion This article describes the steps to configure additional requester metadata like Job Title, Office etc. in Tickets list. Summary of steps: Find attribute name in user profile properties SharePoint Online SharePoint On-premises User Profile Active Directory Configure auto-fill settings in Tickets list forms General Configurations Note : This article is same for IT, Facilities and Request Management applications and only difference is the name of the main list (Tickets list). Below instructions are given as per Tickets list name, please use the corresponding list name based on the application. For IT Helpdesk application &#8211; &#8216;Tickets&#8217; For Facilities application &#8211; &#8216;Work Orders&#8217; For Request Management application – &#8216;Requests&#8217; Detailed steps In this article, we have configured “Office” additional property in “Requester Location” column in Tickets list. 1. Find attribute name in user profile properties To configure additional requester properties in Tickets list, we need to find the attribute/property name from User Profile or Active Directory. In this article, we have described the steps to find the attribute name in SharePoint online and on-premises. SharePoint Online: Go to ‘Admin Center’ -&gt; SharePoint -&gt; More features -&gt; User profiles -&gt; ‘Manage User Properties’ -&gt; Edit required property and find the property name as shown below. Copy internal name of user profile attribute SharePoint On-premises: In SharePoint On-premises, we can get the user information from user profile and Active Directory. Based on our requirement, we need to find the attribute name in User Profile or Active Directory. User Profile: To find the attribute name in User Profile, go to Central Administration -&gt; Application Management -&gt; Manage Service Applications -&gt; Click User Profile Service Application -&gt; Manage User Properties under people section in User Profile Service page -&gt; Edit required property and find the property name as shown in above screenshots (same as SharePoint online). Active Directory: To find the user attribute names in Active Directory, please refer below link: https://docs.microsoft.com/en-us/windows/win32/adschema/attributes-all 2. Configure auto-fill settings in Tickets list forms 1.Create “Requester Location” column in Tickets list. Internal Name: RequesterLocation Display Name: Requester Location Type: Single line of text 2. Add “Requester Location” column created above to Tickets list forms Navigate to the list -&gt; List settings -&gt; Crow Canyon NITRO Forms -&gt; Drag and drop “Requester Location” column to the form in “Tickets” and “PortalTicket” forms 3. Next, configure auto fill settings in “Tickets” and “PortalTicket” forms as shown below: 4. Configure auto-fill settings as shown below: Edit “Requester” configurations and configure “Office” property as shown below. Note : For SharePoint On-premises, we will see Active Directory option in “Auto-fill User Information” settings. If we use “Active Directory” then configure the “Office” property as per the Active Directory attribute name and also we need to specify the “Active Directory Connection Settings” in Crow Canyon NITRO Site Settings. Go to the Site -&gt; Site Settings -&gt; Crow Canyon NITRO Site Settings under Site Administration -&gt; Expand Active Directory Connection Settings and specify the LDAP configuration settings. LDAP Path : Specify the LDAP path Ex : LDAP://ADServerIPAddress/CN=Partitions,CN=Configuration,DC=Domain,DC=Extension; In above example: ADServerIPAddress: IP Address of the Active Directory Server DC=Domain (Domain of the Active Directory) DC=Extension (extension of the Active Directory) E.g. for crowcanyon.com, domain will be &#8220;crowcanyon&#8221; and extension will be &#8220;com&#8221; LDAP Server: Specify IP address of the Active Directory server LDAP User Name: Specify user login name for account having required permissions on the Active Directory LDAP Password: Specify the password for user 4. Configure column mapping. Click ‘New Mapping’ button -&gt; Choose the &#8216;column&#8217; from drop-down for mappings -&gt; Select ‘Other Property’ in ‘User Property’ column -&gt; Paste the internal name of user profile attribute (copied in #1. above). 3. General Configurations Configure the “Office” property in Configurations list item as shown below: 1. Add “Requester Location” choice value in “Requester Meta Data Column 4” Go to site contents -&gt; Configurations list -&gt; List Settings -&gt; Edit “Requester Meta Data Column 4” column and add “Requester Location” (i.e. column created in Tickets list) value in the choice values. 2. After adding the choice value, go to Configurations list -&gt; Edit “Configuration – Service Request” item -&gt;Requester Information tab and configure the “Office” property as shown below: Note : For SharePoint On-premises, we will see Active Directory option in “Read Information From”. If we use “Active Directory” then configure the “Office” property as per the Active Directory attribute name and also specify the LDAP connection settings as described in #2 above in Configuration item. Note : If we are not able to see the new option added in “Requester meta data column4” then “Reset Cache” in Crow Canyon NITRO Site Settings. Go to Site Settings -&gt; Crow Canyon NITRO Site Settings -&gt; Cache Site Metadata and click “Reset Cache”. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "682",
    "name": "682 - NITRO Attachments column in NITRO forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/682%20-%20NITRO%20Attachments%20column%20in%20NITRO%20forms.html",
    "title": "NITRO Attachments Column In NITRO Forms",
    "text": "NITRO Attachments column in NITRO forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Attachments column in NITRO forms NITRO Attachments column in NITRO forms 945 views 1 min , 35 sec read 0 Applies To : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO forms support multiple attachment controls on the same form. Files/documents can be attached to an item from ‘Attachments’ section in NITRO form or using ‘NITRO Attachments’ column. We can add multiple NITRO attachments columns anywhere in the form as per the requirement. These columns can have different set of validations and permissions. Example, we can limit the number of attachments to be added for an item or allow only specific type of files such as jpg, pdf, doc, etc. that can be attached. ‘Form Event Actions’ can be configured to enhance its functionality. In this article, we have described below: Create NITRO Attachments column in NITRO forms Delete standard “Attachments“ section from NITRO forms Configure permissions for NITRO Attachments column Configure validation for NITRO Attachments column Sample use case In this sample use case, we have created “User Attachments” and “Staff Attachments” NITRO Attachments columns in NITRO Forms, one for the users and other for the staff. Based on the logged in user, permissions are configured to show or hide these attachment columns If logged in user is from staff group, then show “Staff Attachments” column and hide “User Attachments” column If logged in user is from user group then show “User Attachments” column and hide the “Staff Attachments” column Validation on NITRO attachments column to allow maximum of one file of “PDF” type. Detailed steps 1. Create ‘NITRO Attachments&#8217; column Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Click ‘Create Column’ button -&gt; Create ‘NITRO Attachments’ column. Column internal name: UserAttachments Column display name: User Attachments Column internal name: StaffAttachments Column display name: Staff Attachments 2. Add above created columns to NITRO forms at the required position. 3. Configure permissions for both the columns as shown below: User Attachments: Staff Attachments: Permissions : 1. Hide for all: 2. Show for logged in user if he/she is a member of the ‘User’ group. Note : Similarly, configure the permissions for ‘Staff Attachments’ column (there will be a ‘Staff’ group for these users). 4. Remove standard ‘Attachments’ section below the form. otherwise, all the attached documents (user attachments and staff attachments) will be shown in this section to all the users. To delete the “Attachments” section, right click the ‘Attachments’ section and click delete. Note: To add ‘Attachments’ section to the form, expand ‘Form Controls’ section in the left-hand panel and drag and drop ‘Attachment’ on to the form. Configure validation on NITRO attachments column to allow maximum of one file of &#8220;PDF&#8221; type To configure validation on ‘NITRO Attachments’ column, go to NITRO Forms designer for the list -&gt; Select ‘NITRO Attachments’ column -&gt; Configure the validations as shown below in ‘Column Settings’ Configure validations as shown below: Validation for type of files: Validation for number of files: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "683",
    "name": "683 - Troubleshooting steps for Crow Canyon NITRO site activation.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/683%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20NITRO%20site%20activation.html",
    "title": "Troubleshooting Steps For Crow Canyon NITRO Site Activation",
    "text": "Troubleshooting steps for Crow Canyon NITRO site activation - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Crow Canyon NITRO site activation Troubleshooting steps for Crow Canyon NITRO site activation 770 views 1 min , 0 sec read 0 Applies To SharePoint Online and On-premises (SharePoint Server Subscription Edition) Description This article lists the common issues and fixes that occur while activating NITRO for a site. Symptom 1: NITRO studio activation got failed while activating NITRO for the site. Getting below error while activating NITRO for a site: Error : “Site Pages Library does not exist” Cause ‘Wiki Page Home Page’ feature is not activated for the site. Fix Activate ‘Wiki Page Home Page’ feature for the site. Go to the site where it is required to activate NITRO Studio -&gt; ‘Site Settings’ -&gt; ‘Manage site features’ (under ‘Site Actions’) -&gt; Activate ‘Wiki Page Home Page’ feature and try activating NITRO for the site again. Symptom 2 Error occurring when activating NITRO for a publishing feature enabled site. Error Text: System.UnauthorizedAccessException: Attempted to perform an unauthorized operation. at Microsoft.SharePoint.SPUserCustomAction.CheckACPPermissionsForCurrentUser() at Microsoft.SharePoint.SPUserCustomAction.Update() at Microsoft.SharePoint.SPWebUserCustomAction.Update() at CrowCanyon.NITROStudio.Classes.CommonFunctions.CreateUserCustomActionForWeb(SPWeb web, CustomAction objActionXML, String siteURL, String webURL, String hostWebURL, String appInstanceID, String WebID) at CrowCanyon.NITROStudio.Classes.CommonFunctions.CreateUserCustomActionForWeb(SPWeb web, CustomAction objActionXML, String siteURL, String webURL) at CrowCanyon.NITROStudio.Layouts.CrowCanyon.NITROStudio.Default.CreateCustomAction(String hostWebURL, String addinName, String webId, String sitURL, String webURL, Int32 appContextEnum) Cause This error appears if &#8216;Add and Customize Pages&#8217; permission in missing for user on &#8216;Site Assets&#8217; library. Go to site contents &#8211;&gt; Site Assets library &#8211;&gt; library settings &#8211;&gt; Permissions on this library &#8211;&gt; check permissions on the library to validate this. Resolution Go to SharePoint server, open &#8216;SharePoint Management Shell&#8217; (run as administrator), use below commands for the site to resolve this. Replace &#8216;Identity&#8217; parameter URL with the site collection URL as needed. $site = Get-SPSite -Identity \"https://intranet.contoso.com\" $site.DenyPermissionsMask = &#91;Microsoft.SharePoint.SPBasePermissions]::EmptyMask About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "684",
    "name": "684 - Common steps in NITRO forms designer.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/684%20-%20Common%20steps%20in%20NITRO%20forms%20designer.html",
    "title": "Common Steps In NITRO Forms Designer",
    "text": "Common steps in NITRO forms designer - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Common steps in NITRO forms designer Common steps in NITRO forms designer 993 views 1 min , 52 sec read 0 Applies To : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description There are some common steps that we perform in NITRO forms designer to add custom functionality or to get desired form layout such as adding custom CSS, adding section within tab, etc. These steps can be performed to change some form settings or can be the part of main configurations. This article lists some of the common steps in NITRO forms designer: How to reset cache in NITRO forms How to navigate to advanced section How to add custom CSS How to add custom JavaScript How to configure Form Event Actions How to add section within section How to add section within tab How to add and configure actions in NITRO forms 1. How to reset cache in NITRO forms NITRO forms cache list and columns related information to speed up the loading of forms. To reset cache, navigate to Crow Canyon NITRO forms designer for the list -&gt; ‘GLOBAL SETTINGS’ -&gt; ‘Reset Cache’. After that, reload the NITRO form two to three times to see changes. 2. How to navigate to &#8216;Advanced&#8217; section Advanced section is in the left-hand panel of NITRO forms designer. We can configure required advanced settings for the form such as adding custom CSS, custom JavaScript, etc. 3. How to add &#8216;Custom CSS&#8217; To add custom CSS in NITRO forms designer, go to ‘Advanced’ section in the left-hand panel -&gt; Click ‘Custom CSS’ and add the required CSS. Refer Custom CSS sample use cases from: https://www.crowcanyon.help/article/422/ 4. How to add &#8216;Custom JavaScript&#8217; To add custom JavaScript in NITRO forms designer, go to ‘Advanced’ section in the left-hand panel -&gt; Click ‘Custom JavaScript’ and add the required script. Refer sample use cases for Custom JavaScript from: https://www.crowcanyon.help/article/443/#Symptom2 5. How to configure Form Event Actions To configure Form Event Actions in NITRO forms designer, go to ‘Advanced’ section in the left-hand panel -&gt; Click ‘Form Event Actions’ and add the configurations based on the requirement. Alternatively, select the column in NITRO Forms Designer -&gt; Configure form event action “On Column Value Change Event” in column settings. Refer sample use cases for Form Event Actions in NITRO Forms from: Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality &#8211; II 6. How to add section within section/tab To add section within section, select the section -&gt; Click gear icon at right-hand side of the parent section -&gt; Select ‘Add Section’ from the drop-down. Different set of permissions can be applied on each nested section. 7. How to add section within tab To add section within tab, select the tab -&gt; Click blue gear icon at right-hand side of the parent tab and select ‘Add Section’ from drop-down. Different set of permissions can be applied on each nested section. 8. How to add and configure &#8216;Actions&#8217; in NITRO forms Actions section is in the left-hand panel of NITRO forms designer. We can add required action buttons to run scripts, custom actions, etc. Refer sample use case for using actions in NITRO Forms from: Generate a custom unique ID for SharePoint list items These actions can be added anywhere on the form, i.e., on top of the form, in the form or below the form by drag and drop. Configuration of actions 1. &#8216;Custom Action&#8217; 2. ‘Script Action’ 3. ‘Submit Action’ About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "685",
    "name": "685 - Format tables added in multiple lines of rich text columns in NITRO Forms using Custom CSS - Crow Ca.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/685%20-%20Format%20tables%20added%20in%20multiple%20lines%20of%20rich%20text%20columns%20in%20NITRO%20Forms%20using%20Custom%20CSS%20-%20Crow%20Ca.html",
    "title": "Format Tables Added In Multiple Lines Of Rich Text Columns In NITRO Forms Using Custom CSS Crow Ca",
    "text": "Format tables added in multiple lines of rich text columns in NITRO Forms using Custom CSS - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Format tables added in multiple lines of rich text columns in NITRO Forms using Custom CSS Format tables added in multiple lines of rich text columns in NITRO Forms using Custom CSS 1311 views 1 min , 20 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description HTML tables are used in multi-line rich text columns to organize rows of related data. Standard functionality does not support formatting options like table cell spacing, cell padding and border etc. We can modify the HTML code to set table format, however it is difficult and error prone. And it needs to be done separately for each item where table is used in the column value. NITRO forms support several features to extend the functionality of standard forms and columns. For table formatting, we can use ‘Custom CSS’ option in NITRO forms. With this option, tables can be formatted without modifying the HTML source code. Also, it can be done in form settings once and there is no need to do this for each item separately. In this sample use case, we have configured ‘Custom CSS’ to format table width and border for tables in a multiple lines of rich text column. The CSS can be changed as per the formatting required. Column name used in this case is “Results”. Detailed steps 1.Create multiple lines of enhanced rich text column. To create new column, go to the list -&gt; List Settings -&gt; Create column -&gt; Create multiple lines of rich text column as shown below: Note : We can configure the custom script for existing columns also. 2. Add above created column to NITRO forms. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Drag and drop the above created column on to the form. 3. Add below script in ‘Custom CSS’. Go to ‘Advanced’ section in left hand panel -&gt; Custom CSS. Custom CSS: #row_ColumnInternalName table{ &nbsp;&nbsp;&nbsp; width:100%; } #row_ColumnInternalName td {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; border: 1px solid #333232; } Note: 1. Replace ‘ColumnInternalName’ (highlighted above) with internal name of multiple lines of enhanced rich text column configured above. To know the column internal name, please refer this article . 2. Configure the same CSS for multiple columns by modifying the column internal names. Ex: #row_Description table{ &nbsp;&nbsp;&nbsp; width:100%; } #row_Description td {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; border: 1px solid #333232; } #row_WorkLog table{ &nbsp;&nbsp;&nbsp; width:100%; } #row_WorkLog td {&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; border: 1px solid #333232; } Sample output Before setting default table width and border After setting default table width and border About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "686",
    "name": "686 - Using Form Event Actions on auto-populated lookup column.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/686%20-%20Using%20Form%20Event%20Actions%20on%20auto-populated%20lookup%20column.html",
    "title": "Using Form Event Actions On Auto Populated Lookup Column",
    "text": "Using Form Event Actions on auto-populated lookup column - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Forms / Using Form Event Actions on auto-populated lookup column Using Form Event Actions on auto-populated lookup column 1329 views 2 min , 7 sec read 0 Applies to: NITRO activated sites in SharePoint Online, On-premises 2013/2016/2019/SharePoint Server Subscription Edition Description Form event actions (FEAs) can be used to add custom functionality on the forms. Please refer this article for more details and examples. FEAs can be triggered on form load or on a column value change by a user. There are some special scenarios where standard triggers do not work reliably and this article covers one such case. On form load, logged in user is auto populated in a person and group column and user’s department in a lookup column. Based on this department value, we need to fetch a column value from department list using FEA. FEA with form load trigger will not work directly in this case as there is some gap in populating user and user’s department after form load. For this we need to write a script to wait until the lookup column loads and then trigger an event for the lookup column. This article describes FEA for this case by taking an example list schema and configuration. You can adapt this as per your use case. Requirement List Schema Departments Title Cost Requests Title Requester (person or group) Department (lookup to Departments list) Total Budget (Currency) In Requests list new item form: Auto populate logged in user in &#8220;Requester&#8221; person or group column using auto-fill settings in NITRO Forms. Auto populate logged in user’s department (from user’s profile) in &#8220;Department&#8221; lookup column using auto-fill settings in NITRO Forms. Based on the &#8220;Department&#8221; column value, fetch the department item from “Departments” list and update the department cost in &#8220;Total Budget&#8221; column Detailed steps: Below configurations are in NITRO Forms for the ‘Requests’ list described above. 1. Configure Auto-fill User Information Configure auto-fill user information settings to populate the logged in user and the user’s department in “Requester” and “Department” lookup column. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Auto-fill User Information under &#8220;Form Settings&#8221; and configure as shown below: 2. Configure form event actions We will configure two Form Event Actions: Form Event Action 1: Wait for the department lookup column to get loaded and value to get auto filled. This action is not required if user is directly selecting the department column value. In that case FEA 2 is enough as it will trigger when user selects a value. It is required in this special case to trigger the second FEA as it will not trigger if department value is set with user auto fill. Form Event Action 2: Update total budget This is the normal FEA to fetch department list item and use it to set value in a column in Request list. It is triggered whenever department column value is changed. Configure form actions as shown below: 1. Form Event Action 1: Action to wait for department lookup column to load on the form This action will execute a script that will check and wait for the “Department” lookup column value to get filled. Action 1: Wait For Department Load Configure execute script action as shown below: Script : Download the script from below: Script Download Note : In above downloaded script, replace “Department” with actual column internal name. To know the column internal name, please refer this article Action 2: Set Department to trigger Event Configure update form control action to trigger the event for ‘Department’ column value change. For this we need to do a dummy update of the “Department” column value. Form Event Action 2: Update total budget Configure form event action as shown below: Action 1: GetDepartment Configure fetch item action to get the item from &#8220;Departments&#8221; list Value used in query builder condition: Action 2: Update total budget Configure update form control action to update the &#8220;Total Budget&#8221; with &#8220;Cost&#8221; from the department item. Value used in column mappings: CCSQLGetDepartment##[Cost|Cost] NITRO Forms NITRO Studio- Forms About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: NITRO on the Go! NITRO Studio Workshop: Deep Dive into NITRO Forms Active Directory Groups integration with NITRO NITRO Studio Workshop: Omni-Channel Access Gives Users Multiple Ways to Engage © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "687",
    "name": "687 - Configure Gantt chart in Crow Canyon List Views.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/687%20-%20Configure%20Gantt%20chart%20in%20Crow%20Canyon%20List%20Views.html",
    "title": "Configure Gantt Chart In Crow Canyon List Views",
    "text": "Configure Gantt chart in Crow Canyon List Views - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Gantt chart in Crow Canyon List Views Configure Gantt chart in Crow Canyon List Views 825 views 1 min , 31 sec read 0 Applies to: NITRO activated sites in SharePoint online and On-premises 2013/2016/2019/SharePoint Server Subscription Edition Description: Crow Canyon list views can give administrators control over the items that are shown in a list view. In list views, Gantt chart is commonly used graphical representation of project schedule. It’s type of bar charts showing the start and end dates of a task. We can configure Gantt chart view in Crow Canyon list views using extended settings. This article describes the steps to configure Gantt chart in Crow Canyon list views. Detailed steps In this article, we have configured Gantt chart on a Tasks list. To configure Gantt chart below columns are required except ‘Parent Lookup’ Columns used in Gantt chart Title Start Date Due Date Percent Complete Parent Lookup (Optional) Sample output of a Gantt chart from list view web part: Configurations To configure Gantt chart, go to the site -&gt; Site Settings -&gt; Crow Canyon List Views -&gt; Edit any existing list view configuration or create a new list view configuration. Go to Advanced Settings and configure the below JSON in Extended Settings JSON as shown below JSON Used: \"GanttChart\":{ \"Enable\":true, \"Settings\":{ \"ChartColumns\":{ \"Title\":\"LinkTitle\", \"StartDate\":\"StartDate\", \"EndDate\":\"DueDate\", \"PercentComplete\":\"PercentComplete\", \"ParentLookp\":\"ParentLookup\" }, \"ShowWorkDays\":false, \"ShowWorkHours\":false, \"Views\":&#91; \"week\", \"month\"], \"DefaultView\":\"month\" } } Note: By default, list views come up with some default JSON in the ‘Extended Settings JSON’, we need to merge the given JSON with existing JSON in the list view and then put in the “Extended Settings JSON”. Before JSON: After JSON: Properties of Gantt Chart: To understand the properties of given JSON, formatted the above JSON and shown like below: Enable: Put true/false to enable or disable the ‘Gantt Chart’ in the list view web part. ChartColumns: Below columns are required except ‘ParentLookup’ to configure the Gantt chart in list view webpart. Title StartDate EndDate PercentComplete ParentLookup (Optional) ShowWorkDays : Set ‘ShowWorkDays’ to ‘false’ to show all days of the week. Set to ‘true’ to show only business days of the week. ShowWorkHours: Set ‘ShowWorkHours’ to ‘false’ to show all hours of the day. Set to ‘true’ to show only business hours of the day. Views: By default, Gantt chart support below views: Day Week Month DefaultView: Specified view will be selected when Gantt chart is loaded. Open Gantt Chart After configuring the list view, add list view webpart to a page. Refer instructions from below articles to add list view webpart to a classic page and modern page. Classic page: https://www.crowcanyon.info/nitro/appmanual_v2/add-view-to-classic-ui.html Modern page: https://www.crowcanyon.info/nitro/appmanual_v2/add-view-to-modern-ui.html Go to the list view web part and click ‘Gantt Chart’ button in list view web part as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "688",
    "name": "688 - Show confirmation message on clicking submit button in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/688%20-%20Show%20confirmation%20message%20on%20clicking%20submit%20button%20in%20NITRO%20Forms.html",
    "title": "Show Confirmation Message On Clicking Submit Button In NITRO Forms",
    "text": "Show confirmation message on clicking submit button in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Show confirmation message on clicking submit button in NITRO Forms Show confirmation message on clicking submit button in NITRO Forms 835 views 1 min , 2 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description It is a common requirement to show a confirmation message before form submission. This helps in delivering a message to user before they confirm form submission. It is also helpful in case submit button is unintentionally clicked by the user. In this article, confirmation box is shown to get confirmation about NITRO form submission. On clicking submit button, confirmation box pops up, the user will have to click either &#8220;OK&#8221; or &#8220;Cancel&#8221; to proceed. If user clicks “OK” then the form is submitted. Else the form is not submitted, and a message is displayed above the ‘Submit’ button. The user can then make required changes and resubmit the form. Detailed Steps Hide ‘Save’ button from the NITRO Forms. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Expand ‘Layouts and Theme’ section from right hand panel -&gt; Check ‘Hide Save Button’. Add ‘Submit Action’ to the form. Expand ‘Actions’ menu -&gt; drag and drop ‘Submit Action’ on to the form. Configure ‘Pre-Save Process’ script.&nbsp; From ‘Button Settings’ in right hand panel, click ‘Edit’ button to configure ‘Pre-Save Process’ script.&nbsp; Pre-Save Process Script: if (confirm(\"Do you want to submit the form?\") == true) { functionCallback(); } else { functionCallback(true, \"Please click 'Submit' after making required changes on the form.\"); } Note: Replace “Do you want to submit the form?” with required confirmation message. Replace “Please click &#8216;Submit&#8217; after making required changes on the form.” with required message displayed on clicking ‘Cancel’. Apply settings and publish the NITRO Forms. Sample output: Confirm box pops up on clicking ‘Submit’. The form is submitted on clicking ‘OK’. A message is displayed if user clicks ‘Cancel’ and user will have to click Submit button again after making required changes on the form. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "689",
    "name": "689 - Search large lists using NITRO List Search.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/689%20-%20Search%20large%20lists%20using%20NITRO%20List%20Search.html",
    "title": "Search Large Lists Using NITRO List Search",
    "text": "Search large lists using NITRO List Search - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Search large lists using NITRO List Search Search large lists using NITRO List Search 856 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online, On-Premises 2013/2016/2019 and SharePoint Server Subscription Edition Description We can store up to 30 million items or files in a list or library, however, the list view threshold limit in SharePoint is 5000 items. SharePoint does not return more than 5000 items in a list view and shows the list view threshold error message in views. In NITRO List Search settings, if the selected SharePoint list view has more than 5000 items, then the search does not work. In this scenario the web part shows an error message, “There was an error in processing: The attempted operation is prohibited because it exceeds the list view threshold.”. This article has steps to overcome SharePoint list view threshold limitations and enable search on large lists with NITRO List Search web part. Sample use case Suppose ‘All Items’ list view for Ticket list has more than 5000 items, that is, it exceeds the list view threshold limit. To overcome this limitation, we can split the list items into multiple filtered SharePoint list views such as: Tickets for a specific year Last year Tickets First six-month Tickets of current year Last 120-day Tickets, etc. Here, views are based on a date column such as the created date. This column should be indexed for views to work. To search Tickets from these views, configure NITRO List Search for Tickets list and select these views in list search settings. For more details on list search component, refer this&nbsp;article . Detailed steps Configure multiple SharePoint list views with filters, such that the views return less than 5000 items. Use indexed columns to filter SharePoint list views. Add multiple views in NITRO List Search settings. Select indexed list columns from ‘Columns to search’ drop down. Search will be performed on specified columns. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "69",
    "name": "69 - Configure portal site header colors.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/69%20-%20Configure%20portal%20site%20header%20colors.html",
    "title": "Configure Portal Site Header Colors",
    "text": "Configure portal site header colors - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure portal site header colors Configure portal site header colors 803 views Less than a minute 0 Applies to: NITRO based portal applications in SharePoint Modern UI SharePoint Online and On-premises (2019/SharePoint Server Subscription Edition) Description This article has steps to configure custom header colors using ‘Extended CSS’ in modern UI portal sites. Detailed steps To change the portal site header colors, navigate to the Portal&nbsp;site&nbsp;-&gt;&nbsp;Portal Administration&nbsp;-&gt;&nbsp;NITRO&nbsp;Site&nbsp;Settings&nbsp;-&gt;&nbsp;Specify ‘Extended CSS’ as shown&nbsp;-&gt;&nbsp;Save settings.&nbsp; Script used above: ExtendedCSS-3 Download About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "690",
    "name": "690 - Configure portal site header colors.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/690%20-%20Configure%20portal%20site%20header%20colors.html",
    "title": "Configure Portal Site Header Colors",
    "text": "Configure portal site header colors - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure portal site header colors Configure portal site header colors 803 views Less than a minute 0 Applies to: NITRO based portal applications in SharePoint Modern UI SharePoint Online and On-premises (2019/SharePoint Server Subscription Edition) Description This article has steps to configure custom header colors using ‘Extended CSS’ in modern UI portal sites. Detailed steps To change the portal site header colors, navigate to the Portal&nbsp;site&nbsp;-&gt;&nbsp;Portal Administration&nbsp;-&gt;&nbsp;NITRO&nbsp;Site&nbsp;Settings&nbsp;-&gt;&nbsp;Specify ‘Extended CSS’ as shown&nbsp;-&gt;&nbsp;Save settings.&nbsp; Script used above: ExtendedCSS-3 Download About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "691",
    "name": "691 - Expression builder in Custom Actions and NITRO Workflows.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/691%20-%20Expression%20builder%20in%20Custom%20Actions%20and%20NITRO%20Workflows.html",
    "title": "Expression Builder In Custom Actions And NITRO Workflows",
    "text": "Expression builder in Custom Actions and NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Expression builder in Custom Actions and NITRO Workflows Expression builder in Custom Actions and NITRO Workflows 967 views 7 min , 14 sec read 0 Applies to: NITRO activated sites in SharePoint Online and On-Premises Description This article describes the usage of expression builder in column mappings of different actions in Custom Actions and NITRO Workflows. Earlier syntax of functions and placeholders continues to be supported. Expression builder is an easier way to configure complex mappings. Function parameters are directly configurable in UI. Unlike earlier syntax, Expression builder supports nested functions. Expression builder supports below types of expressions in Custom Actions and Workflows Current Item ‘Run For’ Item Loop Control Item Variables Functions Fixed Value Contextual To use expression builder in column mappings, go to the actions configured in custom actions/NITRO Workflows, ‘Add column mappings’ and click ellipses icon to define the expression for column value. Expression builder in Custom Actions 1.Current Item Select this expression type to use current list item (on which the custom action/NITRO Workflow is running) column placeholders in column mappings. 2. ‘Run For’ Item &nbsp;This expression type will be shown only for actions (like add and update item actions) that are configured to run for query list item collection or variable collection. Select this expression type to loop the query list item collection column placeholder in column mapping. For sample use cases, refer ‘Use Case 2’ and ‘Use Case 3’ below in this article. 3. Loop Control Item Select this expression type to use the current iteration value of the loop item in the column mappings. Note : There are below different type of loops in Custom Actions and in NITRO Workflows. This expression type will return different output for different type of loops. For more details about the loop feature, refer this article: https://www.crowcanyon.help/article/696/ Number We can use this loop type to iterate the execution for a fixed number of times. We can specify the range using ‘Start Number’ and ‘End Number’ in the loop control settings. Below is the sample loop configuration for ‘Number’ type. In this configuration, static numbers are defined in ‘Start Number’ and ‘End Number’. As per the below screenshot, it will iterate the execution for 5 times as the ‘Start Number’ starts from 1 and on each iteration, ‘Start Number’ will be incremented by 1. When we use the ‘Loop Control Item’ expression type in the column mappings, output will be like below: Output : 1 st Iteration: 1 2 nd Iteration: 2 3 rd Iteration: 3 4 th Iteration: 4 5 th Iteration: 5 Date We can use this loop type to iterate the execution based on a date range. We can specify the ‘Start Date’ and ‘End Date’ in the loop control settings. Below is the sample loop configuration for ‘Date’ type. In this configuration, static dates are defined in ‘State Date’ and ‘End Date’ For example, loop configurations are like below:&nbsp; Start Date : 07/05/2022 End Date : 11/05/2022 Increment : 4 Unit : Week In this example ‘Run loop for date type’ is an action name of the loop control Output : 1 st Iteration: 7/05/2022 2 nd Iteration: 8/2/2022 3 rd Iteration: 8/30/2022 4 th Iteration: 9/27/2022 5 th Iteration: 10/25/2022 Query List We can use this loop type to iterate the execution for each item in the result of a query list action. We can configure the query list loop type for single item and multiple items. Below is the sample loop configuration for ‘Query List’ type. ‘Loop Control Item’ expression contains all columns data for the query list item. To get the specific column information from the loop item, we need to use ‘Get Property Value’ function. Query list action: Run loop for above query list items: Loop control item properties used in the column mappings: Column Mappings used in above action: Variable Collection We can use variables to save the column values and use them in required actions in Custom Actions and NITRO workflows. For example, here we have defined a variable with name ‘VarallUsers’. It is assigned the value from ‘Assigned Staff’ column on the item. ‘Assigned Staff’ is a multi-selection enabled person or group column. After this value is assigned, variable ‘VarallUsers’ will have a ‘collection’ of all users who are there in the ‘Assigned Staff’ column on the item. We can use ‘Loop Control Item’ in expression type to create task for each user saved in above variable collection. Assigned To column mapping: 4. Variables We can define the variables in custom actions/NITRO Workflows to save the values and then use this variable result in conditions and column mappings of other actions. Select this expression type to use the result of a variable in column mappings. 5. Functions Select this expression type to use functions in column mappings. Based on the selected function, we need to define the input parameters. These parameters are of below types: In Custom Actions and Workflows: Current Item ‘Run For’ Item Loop Control Loop Control Item Property Query List Actions Actions Variables 9. Function 10. Fixed Value 11. Contextual Also, we can use nested functions in expression builder. Simple function: Nested function: Nested function is defining a function within the function. We can configure nested functions in expression builder as shown below: In below example, we have configured ‘Format Value’ function inside ‘String Concatenation’ function in expression builder. Sample Output: Approval task for Onboarding request &#8211; 12 is approved by: James Restivo 6. Fixed Value Select this expression type to use fixed values in column mappings. 7. Contextual Select this expression type to use the contextual placeholders in column mappings. Supported contextual placeholders: Current Action ListId ListName Me Now SiteCollectionId SiteCollectionURL Today UtcNow WebId WebUrl Current Action: Use this contextual placeholder in expression builder to update the variables within the same action. In custom actions and Workflows, we can update the variables in below actions: Invoke Web Service Query List Create Item Action Example: Get the response from Invoke Web Response and update it in a variable. How to configure different functions using expression builder Simple Functions Syntax for functions in expression builder is same as functions in Custom Actions/NITRO Workflows. Only the difference is instead of typing the expression value for functions in column mappings, we can define the expression value by selecting the functions and parameters from the expression builder. Calculate Date Syntax : $calcdate([ColumnDisplayName|ColumnInternalName],number,Days/Weeks/Months/Years) Case 1: Functions using ‘Current Item’ as input parameter Case 2: Functions using ‘Run For’ Item as input parameter Case 3: Functions using ‘Loop Actions’ as input parameter Case 4: Functions using ‘Property’ as input parameter Case 5: Functions using ‘Actions’ as input parameter Case 6: Functions using ‘Variable’ as input parameter Case 7: Functions using ‘Query List Actions’ as input parameter To use the Query list item column placeholder in column mappings, use ‘Get Property Value’ function as shown below: In below example, ‘GetItem’ is a query list action and configured the query list item column placeholder as input parameter in ‘Calculate Date’ function. Query list action : String Concatenation Similarly, we can configure all other functions as shown above. GetIterationValue function Number Loop : To get values like currentindex, StartNumber, endNumber and Increment from ‘NumberLoop’ use below function To get value of Current iteration number, configure expression builder like below: To get value of currentindex of ‘NumberLoop’, configure expression builder like below: Similarly, configure ‘Get Iteration Value’ function using expression builder to get value of endNumber, Increment, currentindex. Date Loop: To get value like current Date, currentindex , StartDate, endDate and Increment from ‘DateLoop’ use below &nbsp;function. To get value of current iteration date, configure ‘Get Iteration Value’ function using expression builder like below: To get value of StartDate, Configure Expression Builder like below: Similarly, configure ‘Get Iteration Value’ function using expression builder to get value of endDate, currentindex, increment. Query Loop: To get the loop control values like currentindex, endindex and query list columns value use ‘GetIterationValue’ function. To get Title column value of QueryLoop item, configure expression like below: Similarly, configure function using expression builder to get value of other columns of QueryLoop Item. Variable Loop : We can get the loop control values like currentindex, endindex and Variable Loop current iteration value using below function. To get current iteration value of variable loop, configure expression builder like below: Similarly, configure other column mapping like below: Query list action functions We can fetch the single item or multiple items from a list using query list action in Custom Action and NITRO Workflows. We can use below functions based on the output of a query list action (Item or Item collection) In this example, we have configured two query list actions. QL – Single Item QL – Multiple Items QL – Single Item Function: Get Property Value Use this function in expression builder to update a column value with the value from a query list item column. QL – Multiple Items Below query list action fetches multiple items from Tickets list. Below functions can run on multiple items from output of a query list action. QL Count and QL Sum QL Count: This function performs the count operation on items returned from query list action item collection. QL Sum: This function performs the sum operation on values returned from “Cost” column for all items returned from query list action. QL First Item and QL Last Item QL First Item: This function is used in Query List actions to capture the first item ID in an item collection. QL Last Item: This function is used in Query List actions to capture the last item ID in an item collection. QL Variable Collection This function gets the collection of values from parameters and combines them into a single value by joining the collection of values with a separator. In below use case, it will retrieve users from ‘Assigned Staff’ column in each item of the query list action and combines them into a single value by joining ‘;#’ and updates all the users in a single multi selection enabled person or group column. Sample Use Cases Use add Item action result in other actions using expression builder Loop query list item collection to create items Create items using variable collection Use Case 1: Use add item action result in other actions using expression builder Details: This custom action uses “Purchase Requests” and “Purchase Orders” list. “Purchase Requests” has a lookup column to “Purchase Orders” list. This action is configured on “Purchase Requests” list. Configure create item action to create a Purchase Order. Configure update item action to update “Purchase Order” lookup column in Purchase Request with the purchase order created in above #4. Custom Action: Action 1: Create Purchase Order Configure create item action to create purchase order. Use expression builder to copy the column values from Purchase Request to Purchase Order. Column value expression: Similarly configure all other column mappings as shown below: Action 2: Update purchase order in purchase request Configure update item action. Use expression builder to update Purchase Order lookup column in Purchase Request item as shown below: Column value expression: Expression builder: Use Case 2: Loop query list item collection to create items This custom action uses “Requests”, “Tasks” and “Approval Levels” lists. Requests list has associated tasks. “Tasks” list has a lookup column pointing to “Requests” list. This action is configured on “Requests” list. Configure query list action to get all items from “Approval Levels” list. Configure create item action to create tasks for all approval levels found in #4. &nbsp;Custom Action: Create approval tasks Action 1: GetApprovalLevels Configure query list action to get the items from approval levels list. Action 2: Create tasks Configure create item action for above query list action as shown below. In this action, we have configured ‘Assigned To’ and ‘Approval Level’ column mappings from loop item. Expression builder: Use Case 3: Create items using a variable collection In this sample use case, we have configured a invoke web service action and result of invoke web service action is saving in a variable. This variable is then used to create items in a list. Web Service used in this example is a publicly available REST API: https://reqres.in/api/users For this example, we have defined a variable “VarUsers”. This variable will be used to store the user records from the web service response. Custom Action: Create user records from web service Action 1: GetUsers Configure Invoke Web Service action as shown below. Please note “Define Variable Mappings” section at the bottom. Service response is a JSON and we need to extract the values as per the structure of the JSON and put it in variables for subsequent usage. Variable mapping: Configure the JSON path function in expression builder as shown below to extract the response from invoke web service action and update it in a variable. This expression builder uses ‘CurrentAction’ as expression type as the response of web service is available in current action. Web Service Response: Response of invoke webservice action is given below. ‘VarUsers” variable will have the highlighted part from response as it is the extracted ‘data’ element from the response: Please note that JSON path will be different as per the response format of your API. Action 2: Create users Configure create item action for above variable collection as shown below. Define column mappings as shown below: To get the property value from a variable collection, use ‘Run For’ item in expression builder as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "692",
    "name": "692 - Auto-assignment in Crow Canyon helpdesk applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/692%20-%20Auto-assignment%20in%20Crow%20Canyon%20helpdesk%20applications.html",
    "title": "Auto Assignment In Crow Canyon Helpdesk Applications",
    "text": "Auto-assignment in Crow Canyon helpdesk applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto-assignment in Crow Canyon helpdesk applications Auto-assignment in Crow Canyon helpdesk applications 744 views 1 min , 57 sec read 0 Applies to: Crow Canyon helpdesk applications (SharePoint Online and On-premises) Description Auto-assignment refers to assigning new Tickets (or Requests) automatically to specified staff based on the configured rules. This can be done in following ways: Based on the Category and Issue Type of the Ticket. Assigning in round-robin fashion to available staff. Priority order for assignment If the Ticket is created with an Issue Type and selected issue type has a designated staff user, then Ticket will be assigned to that user regardless of round-robin configuration. If Ticket is created without Issue Type or the selected issue type does not have a designated staff user, then assignment will be based on round-robin configuration. If Ticket is not assigned based on the Issue Type and round-robin assignment is not configured, then Ticket will not be auto-assigned. It can be assigned manually from the application. 1. Based on Category of the Ticket In this case, Ticket will be assigned to staff based on the selected category and issue type in the Ticket. Issue type values are filtered based on the selected Category in the Ticket. If the selected issue type is configured to be handled by specific staff user, then Ticket will get assigned to that user automatically. To enable assignment based on staff, specify the user in Issue Type item. No other configuration is required to enable this feature. Go to Application Administration -> Auto Assignment tab -> Edit Issue Type and specify the user in the ‘Assigned Staff’ column. Round-robin assignment within Issue Type &#8216;Assigned Staff&#8217; column in the Issue Type list is a multiple selection enabled column. More than one user can be specified for an Issue Type. We can enable round-robin feature at Issue Type level to assign the Tickets in round-robin fashion. Example: &#8220;James Restivo&#8221; and &#8220;Scott Restivo&#8221; are two users specified for Issue Type &#8220;Calendar Delegation&#8221;. Example : &#8220;James Restivo&#8221; and &#8220;Scott Restivo&#8221; are two users specified for Issue Type &#8220;Calendar Delegation&#8221;. When the first Ticket is created for this Issue Type, it will be assigned to &#8220;James Restivo&#8221;. When the next Ticket is created with the same Issue Type, it will be assigned to &#8220;Scott Restivo&#8221; and the cycle will repeat. To enable this feature, Go to Application Administration -> Auto Assignment tab -> Edit the required Issue Type item and enable &#8220;Enable Round Robin Assignment&#8221;. General Round-robin assignment to staff If Ticket is not assigned based on the issue type, then general round-robin assignment feature can be used. In this case, new Tickets will be assigned to staff configured in the &#8216;Round Robin Staff&#8217; list. To enable the general round-robin assignment: Configure staff users in &#8216;Round Robin Staff&#8217; list. Go to application administration -> Auto Assignment -> Create an item for each staff user in &#8216;Round Robin Staff&#8217; list. Title : Specify title for staff user. Staff : Ticket will be assigned to the user specified in this column. Tickets Count: This value is zero in the beginning. It will be increased by 1 whenever a Ticket is assigned to that user. User with lowest Tickets count will be assigned the next Ticket. This feature needs to be enabled in the Configurations list. Go to application administration -> Auto Assignment -> Edit Configuration item and enable &#8216;Enable General Auto-Assignment&#8217; as shown below. Note : If Tickets are assigned/re-assigned manually in the application, ‘Tickets Count’ for the corresponding staff users will not be changed in the ‘Round Robin Staff’. There is a workflow that runs every day to update the count of open Tickets assigned to each staff user. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "693",
    "name": "693 - Auto Close progress dialog if action execution has not stopped due to query list action result in Cu.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/693%20-%20Auto%20Close%20progress%20dialog%20if%20action%20execution%20has%20not%20stopped%20due%20to%20query%20list%20action%20result%20in%20Cu.html",
    "title": "Auto Close Progress Dialog If Action Execution Has Not Stopped Due To Query List Action Result In Cu",
    "text": "Auto Close progress dialog if action execution has not stopped due to query list action result in Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto Close progress dialog if action execution has not stopped due to query list action result in Custom Actions Auto Close progress dialog if action execution has not stopped due to query list action result in Custom Actions 843 views 1 min , 52 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In Crow Canyon Custom Actions, ‘Query List Action’ is configured to fetch the list items as per the specified criteria. It is possible to continue or stop action execution based on whether any items are fetched in the query list action execution. A message is shown to user in case custom action execution stops as per the configuration in query list action. But if ‘Auto Close’ setting is enabled, then user is unable to read that message as progress dialog closes immediately. This article has steps to auto-close progress dialog only if action execution is not stopped due to query list action result. Otherwise, the message configured in query list action is shown to the user. Sample use case In this example, it is required to update ‘Sub Project’ column in Main Projects list. A custom action is configured to query Sub Projects list. Update ‘Sub Project’ column in Main Projects list only if any item is found in the query list action and then auto close the custom action dialog. If no item is found in query list action, then do not auto close so that user can read the message. Detailed steps Navigate to custom actions for the list. Go to Main Projects list -&gt; List settings -&gt; Crow Canyon Custom Actions -&gt; Configure a custom action in designer experience. Enable ‘Auto Close’ from action settings. Configure a variable with default value: Variable Name: NITRO_DialogAutoClose Default Value: Open Note: This is a pre-defined variable. Specify same variable name and default value. Initially this value is set to ‘Open’ so that custom action dialog will not auto close. After query list action, if items are fetched, then this value will be set to ‘Close’. In that case no message is to be shown to user and it will auto close. Rest of the steps in this article will clarify this point. Action 1: Add a ‘Query List’ action on the canvas. Configure a query list action to query Sub Projects list. In this example, ‘Only if item(s) found’ option is selected to continue custom action execution. Note: Select any option to continue custom action execution as required. Note that in case of ‘Always’, custom action always executes, so progress dialog always closes after action execution. Only if item(s) found: Next action will execute only if one or more matching item(s) are fetched in this query list action. If item(s) are not fetched, then action execution stops. Message given in ‘Show message if Custom Action execution stopped’ is shown in the progress dialog. Only if no item found: Next action will execute only if no matching items are fetched in query list action. If any items are fetched, then action execution stops. Message given in ‘Show message if Custom Action execution stopped’ is shown in the progress dialog. Add ‘Set Variable’ event on the canvas. Expand ‘Events and Controls’ section -&gt; Drag and drop ‘Set Variable’ on the canvas. Add variable mapping for ‘NITRO_DialogAutoClose’ variable. NITRO_DialogAutoClose: Close Action 2: Add an ‘Update List Item’ action on the canvas. From ‘Actions’ section, drag and drop ‘Update List Item’ action on the canvas to update ‘Sub Project’ column in Main Projects list. Column Mapping: Sub Project: $parselookupvalue(QueryProject##[Title|Title]) About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "694",
    "name": "694 - Import Tickets using NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/694%20-%20Import%20Tickets%20using%20NITRO%20Custom%20Actions.html",
    "title": "Import Tickets Using NITRO Custom Actions",
    "text": "Import Tickets using NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Help Desk , NITRO Studio- Custom Actions , Request Manager , Work Orders / Import Tickets using NITRO Custom Actions Import Tickets using NITRO Custom Actions 1551 views 4 min , 57 sec read 0 Applies to : Crow Canyon O365 helpdesk application (IT Helpdesk, Facilities, Request Management) Description This article describes the instructions to import the Tickets data from CSV file using Parse CSV action in NITRO Custom Actions. Note : This article is same for IT, Facilities and Request Management applications and only difference is the name of the list (Tickets list). Below instructions are referring to Tickets list name, please use the corresponding list name and the import package based on the application that we have. For IT Helpdesk application – &#8216;Tickets&#8217; For Facilities application – &#8216;Work Orders&#8217; For Request Management application – &#8216;Requests&#8217; Summary of steps Prepare CSV file with Tickets data List Schema Configure NITRO Custom Actions Disable Product App and NITRO Workflows Import Tickets data Process Imported Tickets Enable Product App and NITRO Workflows Detailed Steps It is recommended to import only open Tickets into the live “Tickets” list. Historical Tickets can be imported to “Archived Tickets” list. All the Tickets imported into the live Tickets list will be assigned a new case id. If we would like to capture the case id from old system for reference, please create a text column and map it in the “Parse CSV” action settings. Steps #4, #6 and #7 are not required on historical Tickets imported into “Archived Tickets” list. Pre-requisites: Make sure that all the required SharePoint groups are created in advance if we have data in “Assigned Team” column. Previous system could have different Ticket Ids but new case id will be assigned to all the imported Tickets in SharePoint. Do not map &#8220;Case Id&#8221; column for storing legacy case id from previous system. If required, please create new text column like &#8220;Legacy Case Id&#8221; in Tickets list and use it. Make sure that all choice columns have required options in SharePoint list before importing the data. For example, if we have “Priority” column with “Normal”, “Low”, “High” and “Critical” as possible values in CSV then we need to make sure that “Priority” column settings in Tickets/Archived Tickets list are matching with these options. Make sure that all category and issue types (lookup list items) are created prior to importing the data. Create a SharePoint group in site settings and add all possible users to this group. This is to ensure all person or group columns like Requester, Assigned Staff etc. are resolved in SharePoint before we do the actual import. If any user is not resolved prior to the import, it will be left with blank value. Lookup lists should have unique names For example, if we have two categories like “Hardware Request” and “Printer”. Both categories have “Other” issue type. Then we need to change the issue type to “Hardware Request – Other” and “Printer – Other” in SharePoint, update the data in CSV file accordingly. After the data import is completed, we can rename both the issue types to “Other” if required. Prepare CSV file with Tickets data Please contact sharepointsupport@crowcanyon.com for package link. Right click on the downloaded file, go to properties, and unblock it if it is blocked. Extract the package. Package contains below files: Sample CSV file (Tickets.csv) It contains the standard columns from the out of the box Tickets list. We can add additional columns if required. NITRO Custom Actions settings (“Import Tickets data.xml” and “Process Imported Tickets.xml”). In case if we modify the CSV file, then we need to modify the custom action settings as well in step #3 (“Configure NITRO Custom Actions”). CSV file data syntaxes: Single line of text and Multiple lines of text : Specify direct text Ex: Printer is not working Lookup column : Specify lookup column value Ex: Printer Note : Multiple selections are not supported currently. Choice : Specify choice option Ex: High Date and Time: The value entered in the CSV file must be as per the SharePoint site regional settings. Enter the time in 24 hours format. Syntax: Month-Date-Year Hours:Minutes:Seconds Ex: 08-18-2022 5:30:00 Person or Group : Specify display name of user or group Example for user: James Restivo Example for SharePoint group: Helpdesk Owners Note : Multiple selections are not supported currently. Number and Currency:&nbsp; Specify number values Ex: 500 or 550.50 Yes/No : Specify Yes or No values Ex: Yes List Schema Create a SharePoint list named “Import Tickets” in the site. Note: if this is one time import, then after the data import is completed, we can delete this list. Steps: Go to Site Contents à Create new custom/blank list à Enter name ‘Import Tickets’ and Create. Create an item in this list with the prepared CSV file as an attachment. This item will be used to run ‘Import Tickets data’ custom action in next steps. Create ‘OriginalCreated’ date and time column in Tickets list. This column will be used to save the ‘Created’ date column value from CSV file and then it will be used to update ‘Created’ date column on Ticket as part of “Process Imported Tickets” step. Configure Custom Actions Downloaded package contains below custom action settings files. Import Tickets data.xml Process Imported Tickets.xml Import above custom actions in ‘Import Tickets’ and ‘Tickets’ list. List: Import Tickets Go to Site Contents -&gt; Import Tickets -&gt; List Settings -&gt; Crow Canyon Custom Actions -&gt; Click ‘New Custom Action’ -&gt; Select ‘Designer’ experience and click ‘Ok’ Click ‘Import’ button in the designer experience After importing the custom action, click Publish button. Imported custom action will be as shown below. Action settings explanation: This custom action is enabled to run from list view, and it contains “Parse CSV” action. Action 1 (Parse CSV): Import Tickets This action is used to read the CSV file data and create items in “Tickets” list. Refer below screenshot for settings. Column mapping syntax: [CSV Column Name] Example: [Category] Advanced Settings : { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;DateValType&#8221;: &#8220;sitetime&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;MaxCSVRowstoProcess&#8221;: 500 } DateValType : By default, date time values in CSV are assumed to be in UTC. Set “sitetime” property to import the date and time as per site regional settings. MaxCSVRowstoProcess : Specify the max number of rows to process from the CSV data. Default maximum rows to be processed is 500. We can increase this limit if we want to import more than 500 items. List: Tickets This action is used to process the import Tickets and update case id, and other hidden columns to eliminate unwanted notifications and process on imported Tickets. 1. Import the custom action in ‘Tickes’ list Go to Site Contents -&gt; Tickets -&gt; List Settings -&gt; Crow Canyon Custom Actions -&gt; Click ‘New Custom Action’ -&gt; Select ‘Designer’ experience and click ‘Ok’ 2. Click ‘Import’ button in the designer experience After importing the custom action, click Publish button. Imported custom action will be as shown below. Action Settings Explanation: Define variables Variables : VarID VarCurrentTicket VarRequester Action 1: GetAllTickets This action is to get the unprocessed Tickets i.e., “Case ID” column is blank. Placeholder used in the condition builder: %%VarID##Value%% Set variable value in query list action settings Variable value: GetAllTickets##$lastitem([ID|ID]) Action 2: Condition gateway This condition gateway will verify the Tickets count found in above query list action. If Tickets found with empty Case Id then it will process the custom action otherwise it will terminate custom action. Value used in the condition builder : GetAllTickets##$count([ID|ID]),,0 Action 3: LoopQLItems This action will iterate through all items found in the query list action and process them as required. Action 4: Update variables This action will update the current loop item id and requester values in variables. VarCurrentTicket = $GetIterationValue(LoopQLItems,[ID|ID]) VarRequester = $GetIterationValue(LoopQLItems,[Requester|Requester]) Action 5: Process and update hidden columns This action will update all hidden columns in the imported Tickets for eliminating unwanted notifications. Disable Product App and NITRO Workflows Before starting the actual import process, we need to disable the Product App and the workflows on Tickets list. 1. Disable Product app Go to Site Contents -&gt; Open ‘Crow Canyon Product App’ and click ‘Deactivate’ 2. Disable NITRO Workflows Go to Application Administration -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and disable all workflows configured on Tickets list. Import Tickets data Run ‘Import Tickets data’ custom action in ‘Import Tickets’ list Go to Site Contents -&gt; Import Tickets list -&gt; Select the item that has CSV data file and click ‘Import Tickets data’ custom action as shown below: Process Imported Tickets After importing all the Tickets, run ‘Process Imported Tickets’ custom action. This will update the ‘Case Id’ and other hidden columns. go to Tickets list -&gt; Select an item and click ‘Process Imported Tickets’ custom action as shown below: Enable Product App and NITRO Workflows After processing the imported ticket is completed, activate the Crow Canyon Product app feature and enable the workflows on Tickets list that were disabled earlier. Help Desk NITRO Studio- Custom Actions Request Manager Work Orders About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Help Desk Training: Setting Up SLAs NITRO Studio Workshop: Custom Actions and Workflows Revisited SharePoint On-premises: Installation of NITRO Office API Active Directory Groups integration with NITRO © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "695",
    "name": "695 - Sample configurations for ‘Get user information from’ ‘Custom User Information List’ in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/695%20-%20Sample%20configurations%20for%20%E2%80%98Get%20user%20information%20from%E2%80%99%20%E2%80%98Custom%20User%20Information%20List%E2%80%99%20in%20NITRO%20Forms.html",
    "title": "Sample Configurations For ‘Get User Information From’ ‘Custom User Information List’ In NITRO Forms",
    "text": "Sample configurations for ‘Get user information from’ ‘Custom User Information List’ in NITRO Forms Auto-fill user information - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Sample configurations for ‘Get user information from’ ‘Custom User Information List’ in NITRO Forms Auto-fill user information Sample configurations for ‘Get user information from’ ‘Custom User Information List’ in NITRO Forms Auto-fill user information 883 views 1 min , 5 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article has steps to configure auto-fill user information settings by getting user information stored in a custom list. Sample list schema SharePoint list where user information needs to be populated: Person or group column (single selection, people only column): In this column user will be selected. Based on this selection, user attributes like email and phone should be populated in the other columns (e.g., ‘Assigned Staff’ in this article) Other columns for user attributes List with user information: This custom SharePoint list will have the user attributes like name, phone number, department, address, etc. It needs to have a column to match user’s SharePoint profile attribute with user’s item in this list. For the user selected in person and group column in above list, user information will be queried from this list based on this column value. Custom user information list Detailed steps Navigate to NITRO Forms designer for the list. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Expand ‘Form Settings’ from left hand panel -&gt; Auto-fill User Information. Configure auto fill user information settings as shown below: Configure user information auto fill settings. In this example, auto-fill settings are configured based on a user column ‘Assigned Staff’. Configure user information column mapping. Note: For custom user information list, use &#8216;Other Property&#8217; and specify internal name of the column that is to be mapped from custom user information list.&nbsp; In below screenshot, mapped ‘Business Phone’ column with ‘Other Property’ and specified ‘PhoneNumber’ that is the column internal name from Contacts list (custom user information list).&nbsp; Similarly, map other columns with ‘Other Property’ and then specify column internal name from custom user information list. Refer this article to know internal name of a list column. Save settings and publish the NITRO Forms. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "696",
    "name": "696 - Configuration of Loop feature in Custom Actions and NITRO Workflows.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/696%20-%20Configuration%20of%20Loop%20feature%20in%20Custom%20Actions%20and%20NITRO%20Workflows.html",
    "title": "Configuration Of Loop Feature In Custom Actions And NITRO Workflows",
    "text": "Configuration of Loop feature in Custom Actions and NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configuration of Loop feature in Custom Actions and NITRO Workflows Configuration of Loop feature in Custom Actions and NITRO Workflows 1496 views 8 min , 33 sec read 0 Applies to : NITRO activated sites in SharePoint Online and On-Premises (2013/2016/2019) Introduction Loop action is supported in Custom Actions and NITRO Workflows designer experience. Loop action is used to repeat a step for specific number of times. Below loop options are supported in loop control in Custom Actions and NITRO Workflows. Date Number Query List Variable Collection To configure loop control in Custom Actions and NITRO workflow. Custom actions: Go to custom actions -&gt; Select new custom action -&gt; Expand Events and Controls -&gt; Drag and drop loop control on designer. NITRO Workflows: Go to NITRO Workflows -&gt; Select new workflow -&gt; Expand Events and Controls -&gt; Drag and drop loop control on designer. Loop Control Settings There should always be two or more incoming connections and two outgoing connections from loop control body. One or more connections should be back to the loop control. Sample loop configuration: For below sample configurations, there are two outgoing connections and two incoming connections and one of the incoming connection is connecting back to the loop control. Summary of these connections: Incoming: Connection from a node outside of the loop to start the loop execution Note: There can be multiple nodes from which loop can be initiated Connection from loop body back to loop for repeated steps Note: There can be more than one connections from loop body back to loop control. For example, there can be a gateway inside the loop that decides to continue loop execution or go back to loop control for next iteration. Outgoing: Connection to the loop body to execute each step Connection to a node outside of loop to exit the loop Note : In this document, column mappings are configured in below ways in sample use cases and examples. We can use any one of the below expressions. Without expression builder (Old format) With expression builder (New format) Expression builder is released for Custom Actions. For NITRO Workflows, expression builder will be released soon. Different types of loops Loop Type: Number Use this loop type to iterate the execution for a fixed number of times. We can specify the range using ‘Start Number’ and ‘End Number’ in the loop control settings. Start Number : Specify the number from which we want to start the loop execution. End Number : Specify the number at which we want to stop the loop execution. Increment : Specify the increment value to increase the number in each iteration. Note: End Number should be greater than Start Number Number loop type does not support decimal values in Start Number and End Number. Supported values in Start Number and End Number: Placeholder Example/Scenario Fixed values Start Number: 1 End Number: 5 [Column Display Name|Column Internal Name] Specify ‘Start Number’ and ‘End Number’ from the current list item column placeholder on which the Custom Action/Workflow is running Ex: [Count|Count] Variables Select the start and end numbers from variables. VarStartNumber##Value Query list action name##[Column Display Name|Column Internal Name] To use query list item placeholder, Query list action result should be a single item (not an item collection) Ex: GetConfiguration##[Start Number|StartNumber] Sample loop control configuration for Number type: In this sample configuration, we have used static numbers for ‘Start Number’ and ‘End Number’ in the loop configurations. As per the below screenshot, it will iterate the execution for 5 times as the start number starts from 1 and on each iteration start number will increment by 1. Functions Used to get values from Number Loop Control: We can get the loop control values like current index number, start number, end number and Increment value using below function. Function: Syntax 1 : $GetIterationValue(Loop Control Name) $GetIterationValue(Loop Control Name, parameter) Function : $GetIterationValue(Loop Control Name) This function will return the current iteration value of the loop. Ex : $GetIterationValue(Run loop for number type) As per the above sample loop configuration, ‘Run loop for number type’ is the name of the loop control It will iterate the loop body 5 times starting from value ‘1’ Output : For first iteration current value will be 1, for second iteration current value will be 2 and so on. Supported parameters for number type loop: currentindex startNumber endNumber increment currentindex This parameter will return the current iteration number from the loop when it is executing. Ex : $GetIterationValue(Run loop for number type, currentindex) Output : For first iteration current index value will be 1, for second iteration current index value will be 2 and so on. Note that in case of number loop with starting value and increment as 1, index will be same as loop iteration value. startNumber This parameter will return the ‘Start Number’ from the loop control configuration. This value does not change with loop execution. Ex : $GetIterationValue(Run loop for number type,startNumber) Output : 0 endNumber This parameter will return the ‘End Number’ from the loop control configuration. This value does not change with loop execution. Ex : $GetIterationValue(Run loop for number type,startNumber) Output : 5 increment This parameter will return the ‘Increment’ from the loop control configuration. This value does not change with loop execution. Ex: $GetIterationValue(Run loop for number type, increment) Output : 1 Loop configuration with variables and functions Start Number : VarStartNumber##Value End Number : $add(VarStartNumber##Value,5) Increment : 1 In this loop configuration, “VarStartNumber” is a variable in Custom Actions Loop Type: Date Use this loop type to iterate the execution based on a date range. We can specify the ‘Start Date’ and ‘End Date’ in the loop control settings. Start Date : Specify the start date from where we want to start the loop execution. End Date : Specify the end date to stop the loop execution. Note : End Date should be greater than Start Date Increment : Specify the increment number to increase the start date in each iteration. Unit: Specify the unit for the increment. Supported below different type of units. Increment will be calculated based on the selected unit type. Day Week Month Supported values in Start Date and End Date: Placeholder Example/Scenario Fixed values Specify fixed date in below format. Syntax: Month/Date/Year Start Date: 7/20/2022 End Date: 7/30/2022 Contextual placeholders {Today} {Now} {UtcNow} [Column Display Name|Column Internal Name] Specify ‘Start Date’ and ‘End Date’ from the current list item column placeholders on which the Custom Action/Workflow is running Ex: [Start Date|StartDate] Variables Select the ‘Start Date’ and ‘End Date’ from a variable. VarStartDate##Value Query list action name##[Column Display Name|Column Internal Name] To use query list item column placeholder, Query list action result should be single item. Query list action should return single item Ex: GetConfiguration##[Start Number|StartNumber] Case 1 : Loop configuration with column placeholders and increment value by ‘Day’. Start Date: {Today} End Date: [Due Date|DueDate1] Increment : 1 Unit : Day Suppose below values for the placeholders: Start Date: 08/01/2022 End Date: 08/05/2022 Increment : 1 Unit : Day The above loop will run for 5 times as we are incrementing the start date value by 1 day in each iteration. Case 2: Loop configuration with variables and functions and increment value by ‘Week’ Start Date : VarStartDate##Value End Date : $calcdate({Today},4, Months) Increment : 4 Unit : Week Assume below values for the dates for above configuration: Start Date : 07/05/2022 End Date : 11/05/2022 Increment : 4 Unit : Week Then the above loop configuration will run 5 times. This Loop will increment start date by 4 weeks in each iteration. Functions Used to get values from Date Loop Control: We can get the loop control values like current index number, start date, end date and Increment value using below function. Function: Syntax : $GetIterationValue(Loop Control Name) $GetIterationValue(Loop Control Name, parameter) For example, loop configurations are like below, then using ‘GetIterationValue’, we can get the output as given below: Start Date : 07/05/2022 End Date : 11/05/2022 Increment : 4 Unit : Week Function : $GetIterationValue(Loop Control Name) This function will return the current loop value. Ex : $GetIterationValue(Run loop for date type) In this example ‘Run loop for date type’ is an action name of the loop control Output : 1 st Iteration: 7/05/2022 2 nd Iteration: 8/2/2022 3 rd Iteration: 8/30/2022 4 th Iteration: 9/27/2022 5 th Iteration: 10/25/2022 Supported parameters in above function for date type loop: currentindex This parameter will return the current iteration number from the loop when it is executing. Ex : $GetIterationValue(Loop Control Name, currentindex) As per the above example, this loop configuration will run for 5 times and in each iteration, we will get currentindex value. For first iteration current index value will be 1, for 2 nd iteration current index value will be 2 and so on. startDate This parameter will return the ‘Start Date’ of the loop control configuration. Ex : $GetIterationValue(Loop Control Name,startDate) Output : 07/05/2022 endDate This parameter will return the ‘End Date’ of the loop control configuration. Ex : $GetIterationValue(Loop Control Name,endDate) Output : 11/05/2022 increment This parameter will return the ‘Increment’ of the loop control configuration. Ex: $GetIterationValue(Loop Control Name, increment) Output : 4 Loop Type: Query List Use this loop type to iterate the execution for each item in the result of a query list action. We can configure the query list loop type for single item and multiple items. In this sample use case, we have configured a query list action ‘QLGetOpenTasks’ Query list action: Query list loop configuration: Example for Query loop type: Clone associated Ticket tasks and send mail to new task assignee. This custom action is configured on Tickets list Tickets list has related tasks i.e., ‘Associated Tasks’ list has a lookup column ‘Related Ticket ID’ pointing to ‘Tickets’ list. This way, one Ticket can have multiple tasks. For Ticket, get open tasks assigned to a particular user with a query list action. Create a copy of each task returned in above query list action and assign to a different user. Send an email to the new task assignee for each task Cancel the original tasks returned in query list action. Custom Action Define variable Define variable: VarAssignee Action 1: QLGetOpenTasks This action will get all open tasks assigned to a particular user. Action 2: Run loop for query list items This action will loop query list items Action 3: Copy associated task This action will create a copy of each task returned in above query list action and assign to a different user. With expression builder : Column mappings : Without expression builder : Column mappings : &nbsp; Column Name Value expression Task Name $GetIterationValue(Run loop for query list items,[Task Name|Title]) Assigned To [Department::Owner|Department::Owner] Due Date $GetIterationValue(Run loop for query list items,[Due Date|DueDate]) Description $GetIterationValue(Run loop for query list items,[Description|Body]) Type of Request $GetIterationValue(Run loop for query list items,[Type Of Request|TypeOfRequest]) Related Ticket ID [ID|ID] Action 4: Update assignee email With expression builder (New format) : Without expression builder (Old format) : Value expression: $parsefieldvalue(Copy task##[Assigned To|AssignedTo],email) Action 5: Send mail to assignee This action will send an email to the new task assignee for each task Action 6: Cancel open associated task This action will cancel the original tasks returned in query list action. With expression builder (New format) : Without expression builder (Od format) : Functions used to get values from Query loop control We can get the loop control values using below function. Function: Syntax : $GetIterationValue(Loop Control Name) $GetIterationValue(Loop Control Name, parameter) &nbsp; Function : $GetIterationValue(Loop Control Name) This function will return the current loop item id from the QL items Ex : $GetIterationValue(Run loop for query list items) Output : As per the above example, if query list action returns 5 tasks and the item ids are below: Task Ids: 10,11,12,13 and 14 Then using this function in column mappings will return the current loop item id as given below: 1 st iteration: 10 2 nd iteration: 11 3 rd iteration: 12 4 th iteration: 13 5 th iteration: 14 Supported parameters in above function for Query type loop: currentindex endindex Column placeholder of the query list item currentindex This parameter will return the current iteration number from the loop when it is executing. Ex : $GetIterationValue(Run loop for query list items, currentindex) As per the above example, this loop configuration will run for 5 times and in each iteration, we will get currentindex value. For first iteration current index value will be 1, for 2nd iteration current index value will be 2 and so on. endindex This parameter will return the last index of the query list action result. Ex : $GetIterationValue(Run loop for query list items,endindex) Output : 5 Column placeholder of the query list item This parameter will return the current loop item column value Ex : $GetIterationValue(Run loop for query list items,[Type Of Request|TypeOfRequest]) Output : New Request Note : As per above example, ‘Type of Request’ column value will get from the loop item. Loop Type: Variable Collection We can use variables to save the column values and use them in required actions in Custom Actions and NITRO workflows. For example, here we have defined a variable with name ‘VarallUsers’. It is assigned the value from ‘Assigned Staff’ column on the item. ‘Assigned Staff’ is a multi-selection enabled person or group column. After this value is assigned, variable ‘VarallUsers’ will have a ‘collection’ of all users who are there in the ‘Assigned Staff’ column on the item. Use ‘Variable Collection’ loop type to iterate the execution for each value in variable collection. See the sample use case below on how to use variable collection in loop control Example for variable collection In this example custom action, a task is created for each user in a multi-selection enabled person or group column. This action is configured on Tickets list Tickets list has a ‘Assigned Staff’ column which is a multi-selection enabled person or group column Store ‘Assigned Staff’ column value in a variable Run loop action on a variable having collection of users Create task for each user in above variable. Custom Action Define variable Define variable ‘VarallUsers’ as shown below: [Assigned Staff|AssignedStaff] With expression builder (New format): Action 1: Run loop for all users Run loop for above variable ‘VarallUsers’ collection as shown below. Action 2: Create task for user This action will create task for each user in variable collection With expression builder (New format): Assigned To column mapping: Without expression builder (Old format): Column mapping used for Assigned To column in below: $GetIterationValue(Run loop for all users) Functions used to get values from variable collection loop control We can get the loop control values using below function. Function: Syntax : $GetIterationValue(Loop Control Name) $GetIterationValue(Loop Control Name,parameter) Function : $GetIterationValue(Loop Control Name) This function will get the current loop value. Ex : $GetIterationValue(Run loop for all users) As per the above example, ‘Assigned Staff’ column having below users. This ‘Assigned Staff’ column value will be stored as a collection of users in a variable ‘VarallUsers’. James Restivo Scott Restivo Ryan Output : This function will return the each of the user details in a variable collection. 1 st iteration: James Restivo 2 nd Iteration: Scott Restivo 3 rd Iteration: Ryan Supported parameters for variable collection loop type: currentindex endindex currentindex This parameter will return the current iteration number from the variable collection loop when it is executing. Ex : $GetIterationValue(Run loop for all users, currentindex) Output : As per the above example, this loop configuration will run for 3 times and in each iteration, we will get currentindex value. For first iteration current index value will be 1, for 2nd iteration current index value will be 2 and so on. endindex This parameter will return the last index of the variable collection. Ex: $GetIterationValue(Run loop for all users,endindex) Output : 3 &nbsp; Refer to this article for more sample use cases for loop feature. &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "697",
    "name": "697 - Sample Use Cases for Loop Feature in Custom Actions and NITRO Workflows - Crow Canyon Software Suppo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/697%20-%20Sample%20Use%20Cases%20for%20Loop%20Feature%20in%20Custom%20Actions%20and%20NITRO%20Workflows%20-%20Crow%20Canyon%20Software%20Suppo.html",
    "title": "Sample Use Cases For Loop Feature In Custom Actions And NITRO Workflows Crow Canyon Software Suppo",
    "text": "Sample Use Cases for Loop Feature in Custom Actions and NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Sample Use Cases for Loop Feature in Custom Actions and NITRO Workflows Sample Use Cases for Loop Feature in Custom Actions and NITRO Workflows 1531 views 7 min , 25 sec read 0 Applies to : NITRO activated sites in SharePoint Online and On-Premises (2013/2016/2019 and SE) Description This article describes the sample use cases for loop feature in Custom Actions and NITRO Workflows. Refer to this article for more details regarding the loop feature. Update items in a list from a web service response using variable collection loop Replicate assets from asset type using number loop type Run send mail action for query list items using query list loop Close Tickets and Ticket tasks on resolving a problem In all sample use cases, column mappings are shown with expression builder and the old format. We can use any one of them though expression builder is the preferred option. With expression builder (New format) Expression builder is released for Custom Actions. For NITRO Workflows, expression builder will be released soon. Without expression builder (Old format) &nbsp; Use case 1: Update items in a list from a web service response using variable collection loop In this sample use case, a custom list with title “Users” is being used to store details of the users. ‘Users’ list in SharePoint site has below columns. Column Name Column Type User Id Single line of text First Name Single line of text Last Name Single line of text Email Single line of text Status Choice (Active, Inactive) Details : Configure an invoke web service action and response of this action is stored in a variable. This variable collection will have user details like User Id, Email, First Name and Last Name Web Service used in this example is a publicly available REST API: https://reqres.in/api/users Response variable is then used in loop control configuration. Configure a query list action in the loop body. It will query the user from ‘Users’ list based on the email address extracted from the user data in current loop iteration. If user is found in the ‘Users’ list then update the details of the matching item in the ‘Users’ list. Otherwise, create a new item with details of the user in the ‘Users’ list. Custom Action Define below variables VarUsers VarEmail VarCurrentUser Action 1: GetUsers Configure Invoke Web Service action as shown below. Please note “Define Variable Mappings” section at the bottom. Service response is in JSON format and we need to extract the values as per the structure of the JSON and put it in variables for subsequent usage. Define variable mappings in Invoke Web Service Action: With expression builder: Configure the JSON path function in expression builder as shown below to extract the response from invoke web service action and update it in a variable. This expression builder uses ‘CurrentAction’ as expression type as the response of web service is available in current action. Without expression builder : Variable value used in above: $jsonpath2({CurrentAction}##Value,@$.data) Web Service Response: Response of invoke webservice action is given below. ‘VarUsers’ variable will have the highlighted part of response as it is the extracted ‘data’ element from the response: Please note that JSON path will be different as per the response format of your API. Action 2: Loop all users In above Web API action response, ‘data’ element contains an array (collection) of user data. This collection was stored in variable ‘VarUsers’. We will now configure a loop control to iterate over each user in the response: Action 3: Update VarEmail We now want to store the email of the user in current iteration in a variable. This is done in a set variable action. These variables will be used in subsequent actions. VarCurrentUser: This variable is used to save the current iteration value from a variable collection. With expression builder Without expression builder: Value used in the expression: $GetIterationValue(Loop all users) Note : ‘Loop all users’ is loop control name configured in ‘Action 2’ above Sample output: VarEmail This variable is used to extract the email address from above variable ‘VarCurrentUser’. Output: george.bluth@reqres.in With expression builder: Without expression builder: Variable value used in the expression below: VarCurrentUser##email Action 4: GetUserFromSPList Configure a query list action to query the user from ‘Users’ list based on the email address that we have extracted in the set variable action above. Note that user with this email address may not be there in the list yet. Value used in the condition builder: Email equal %%VarEmail##Value%% Action 5: Verify if user is found or not in the list Configure gateway control to check if user is found in the ‘Users’ list. Gateway will allow us to execute different actions depending on whether user is found or not. Value used in the condition builder: GetUserFromSPList##$count([ID|ID]),,0 Action 6: Update user record User record already exists in the list. We will use an update item action to update the user details based on the data we got in the Web API response for user with this email Id. With expression builder: Expression used in the column mapping: Property names used in above expression builder: Column Name Value expression Title id Email email FirstName first_name LastName last_name Status Active Without expression builder: Value expressions used in above column mappings: Column Name Value expression Title VarCurrentUser##id Email VarCurrentUser##email FirstName VarCurrentUser##first_name LastName VarCurrentUser##last_name Status Active Action 7: Create user record User does not exist in the ‘Users’ list. We will configure a create item action to create the user record based on the data in variable that has the user details from current loop iteration. With expression builder: Expression used in the column mapping: Without expression builder: Value expressions used in above column mappings: Column Name Value expression Title VarCurrentUser##id Email VarCurrentUser##email FirstName VarCurrentUser##first_name LastName VarCurrentUser##last_name Status Active Use Case 2: Replicate assets from asset type using number loop type Details : This custom action uses ‘Assets’ and ‘Asset Type’ lists. ‘Assets’ list has a lookup column to ‘Asset Type’ list. For specified Asset Type(s), we need to create multiple assets in ‘Assets’ list. This action is configured on ‘Asset Type’ list. Prompt the user to enter required number of Assets that need to be created. Based on the user input, create assets in the ‘Assets’ list. This sample use case assumes that ‘Assets’ and ‘Asset Type’ lists already exist in the SharePoint site. Below steps explain above functionality on both single and multiple ‘Asset Type’. Replicate Assets &#8211; Single Asset Type This action runs on single ‘Asset Type’ and creates the required number of Assets. Replicate Assets &#8211; Multiple Asset Types This action will query multiple ‘Asset Type’ using query list action and run the above ‘Replicate Assets &#8211; Single Asset Type’ action for each item in the result of the query list action. Replicate Assets &#8211; Single Asset Type Define a variable Define a variable ‘VarNumberToReplicate’ with default value ‘0’ as shown below. This variable will be set based on the user input in next action and then used to create the specified number of assets in ‘Assets’ list. Note : In NITRO Workflows, we cannot take the user input as they run in the backend servers, so directly specify the default user input value in variable ‘VarNumberToReplicate’. Ex : VarNumberToReplicate = 5 Action 1: How many to replicate? Configure execute script action to take the user input for number of assets to be created. Note : This action is not required for NITRO Workflows. We need to specify the input for number of assets to be created directly while defining the variable ‘VarNumberToReplicate’ above. Script: var NumberToReplicate = prompt(&#8220;Please enter the number of Assets to create&#8221;, &#8220;0&#8221;); NumberToReplicate = parseInt(NumberToReplicate); if (NumberToReplicate &gt; 0){ ccs_setwfvariablevalue(&#8220;VarNumberToReplicate&#8221;, NumberToReplicate); } else { ccs_setwfvariablevalue(&#8220;VarNumberToReplicate&#8221;, &#8220;0&#8221;); alert(&#8220;Please enter valid number&#8221;); } functionCallback(); Note : In above script, use the same name for variable as used in previous step (“VarNumberToReplicate”). Action 2: Loop number to replicate Configure loop control action to execute required number of times. Action 3: Add to Assets list Configure add list item action in the loop body to create item in ‘Assets’ list. With expression builder (New format) : Without expression builder (Old format) : Replicate Assets &#8211; Multiple Asset Types This custom action can be used to create multiple Assets for each of the Asset Type. This action demonstrates two levels of loop. At first level the iteration is over ‘Asset Type’ items. Then there is a nested loop to create multiple assets for the Asset Type in current iteration of outer loop. Action 1: GetAssetTypes – Multiple Configure query list action to get the required ‘Asset Type’ for creating assets. Note : In this sample use case, we have configured query list action to get ‘Asset Type’ from all items list view. This query can be modified as per the requirement to fetch a subset of items. Action 2: Run loop for Asset Type Configure loop action with ‘Query List’ option. This is the outer loop that will be executed for each of the ‘Asset Type’ items. Note : For all other action configurations, refer ‘Replicate Assets – Single Asset Type’ above. Use Case 3: Run send mail action for query list items using query list loop Details : This action is configured on Tickets list. Tickets list has associated tasks. ‘Associated Tasks’ list has a lookup column pointing to Tickets list. Configure query list action to get open associated tasks for related Ticket. Configure a loop to iterate over open tasks. Send mail to assignee of the task. This sample use case assumes that ‘Tickets’ and ‘Associated Tasks’ lists already exist and ‘Associated Tasks’ list has a lookup column to ‘Tickets’ list. Custom Action Define Variables Define variables as shown below: VarAssignedToEmail VarAssignedToUser Action 1: GetOpenTasks Configure a query list action to get the open tasks for a Ticket. Conditions can be changed as per the requirement. Value used in the condition builder: Related Ticket ID equal ‘lookupid:%%[ID|ID]%%’ Task Status not equal Completed Action 2: Loop query list items Configure a loop control action for the above query list action as shown below: Action 3: Update VarAssignedToEmail Configure set variable action to get the ‘Assigned To’ email address from the task item. For this we first need to get the user value from the list item column. We then get the email Id of the user. Update variables with expression builder (New format): VarAssignedToUser VarAssignedToEmail Update variables without expression builder (Old format): VarAssignedToUser: This variable is used to save the ‘Assigned To’ column value of current iteration of query list item. Value used in the expression: $GetIterationValue(Loop query list items,[Assigned To|AssignedTo]) In above expression, “Loop query list items” is loop control action name “[Assigned To|AssignedTo]” is a ‘Assigned To’ column placeholder from associated task list. VarAssignedToEmail: This variable is used to save the email address of assigned to user saved in above variable ‘ VarAssignedToUser ’ Value used in the above expression: $parsefieldvalue(VarAssignedToUser##Value,email) Action 4: Send mail to assignee Configure send mail action to notify task assignee. Use Case 4: Close Tickets and Ticket tasks on resolving a problem Details : A problem can have multiple associated Tickets and each Ticket can have multiple associated tasks. When a problem is resolved, we need to complete the tasks of each of the associated ticket. We need to close each of these Tickets and finally resolve the problem. This custom action uses below lists: Problems Tickets Associated Tasks Relation between these lists is given below. Tickets list has a lookup to ‘Problems’ list. Associated Tasks list has a lookup to ‘Tickets’ list. This custom action is configured on the Problems list. Configure query list action to get related Tickets of the Problem on which custom action is being executed. Run loop action to iterate over each of the Tickets Get open associated tasks for each of the related Tickets using query list action Complete all associated tasks fetched in #7. This is done with Update item action as it is a simple update process. For more complicated scenario a loop can be added here to go over each associated task. Close the Ticket for loop item in #6. Resolve the current Problem. This sample use case assumes that “Problems”, “Tickets” and “Associated Tasks” lists already exist. Custom Action Define variable Define a variable ‘VarCurrentTicket’ with empty value as shown below. Action 1: GetRelatedTickets Configure query list action to get open Tickets from the ‘Tickets’ list that are related to the current Problem. Value used in the condition builder: Related Problem equal ‘lookupid:%%[ID|ID]%%’ Request Status not equal ‘Closed’ Action 2: Loop all related Tickets For each Ticket we need to do some process. So we configure a loop to iterate over each Ticket fetched in above step. Action 3: Update VarCurrentTicket Configure a set variable action to store the Id of the Ticket from the current iteration. This variable is used in next query list action to find all the associated tasks for the Ticket. With expression builder (New format) Without Expression builder (Old format) Variable value used in the expression: $GetIterationValue(Loop all related Tickets,[ID|ID]) Action 4: Getallopentasks Configure a query list action to get related tasks for the current Ticket Id stored in variable ‘VarCurrentTicket’. Values used in the condition builder: Related Ticket ID equal lookupid:%%VarCurrentTicket##Value%% Task Status not equal Completed Action 5: Complete all related ticket tasks Configure update list item action as shown below to complete all the tasks. Action 6: Close Ticket Configure update list item action to close the Ticket. Action 7: Resolve problem Configure update list item action to resolve the problem. &nbsp; &nbsp; &nbsp; About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "698",
    "name": "698 - Active Directory Groups integration with NITRO.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/698%20-%20Active%20Directory%20Groups%20integration%20with%20NITRO.html",
    "title": "Active Directory Groups Integration With NITRO",
    "text": "Active Directory Groups integration with NITRO - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio , NITRO Studio- Custom Actions , NITRO Studio- Forms / Active Directory Groups integration with NITRO Active Directory Groups integration with NITRO 1190 views 2 min , 6 sec read 0 Applies to : Office 365 This article describes different NITRO components that can directly work with AD security groups along with unsupported cases. Microsoft SharePoint supports granting permissions at site/list/item level to security groups directly without needing to use SharePoint groups. NITRO works on top of SharePoint, so NITRO does not need any special integration for working with standard SharePoint features. We have NITRO specific features like below that could work directly with AD groups along with SharePoint groups and direct users. NITRO Forms Tab/column permissions Submit actions permissions NITRO custom actions Permissions NITRO Security Settings Automatically redirect selected users to different site Whenever the form/custom action etc. need to work with Active Directory groups, we need to grant permissions to “Crow Canyon Azure AD API”. This way NITRO can read the AD groups and its members and check if the logged in user is allowed to perform the operations or not. Steps : Go to site settings, Crow Canyon NITRO Site Settings, expand “Azure Active Directory Connection Settings” and “Grant Permissions” as shown below. “Allow Crow Canyon Azure AD API to read from Azure Active Directory” permission is sufficient for working with permissions in NITRO components. NITRO Forms We can configure permissions on different NITRO Forms components like ‘Tabs/sections’, ‘columns’, ‘actions (submit actions, custom actions, script action)’. All these components have similar settings shown below. “When to apply this permission” -&gt; “If logged in user:” -&gt; “In Users/Groups” setting supports different scenarios mentioned below. Grant permissions to direct user(s) Grant permissions to direct security group(s) from AD Grant permissions to SharePoint groups that have direct users as members Unsupported scenario SharePoint group(s) that have AD security groups as members “When to apply this permission” -&gt; “If logged in user:” -&gt; “In Column” setting supports different scenarios mentioned below. Grant permissions to direct user(s) saved in the selected column on the item. Grant permissions to direct SharePoint group(s) saved in the selected column on the item and that SharePoint group has direct users as members. Grant permissions to direct AD security group(s) saved in the selected column on the item. We need to enable “Load Current User AD Groups” property in “Extended Settings”, under ‘advanced’ section on the left side panel of the NITRO Form designer as shown below to get this feature to work. This additional configuration is provided to not always load the logged in user’s membership AD groups when not required, this is to improve the form performance. Unsupported scenario SharePoint group(s) are saved in the selected column on the item and that SharePoint group has AD security group(s) as member. NITRO Custom Actions We can configure permissions on NITRO custom actions to allow/restrict selected user(s) from executing the custom action using “Conditions” setting shown below. We can configure branches using “Gateway” available under “Events and Controls” section shown below and it has the permissions setting. These components have the permissions settings same as the permissions settings described in NITRO Forms section earlier in this article. Supported and unsupported scenarios are same as NITRO Forms cases. Regarding the “Grant permissions to direct AD security group(s) saved in the selected column on the item” case, we need to enable “Load Current User AD Groups” checkbox in action settings dialog shown below. NITRO Security Settings We can use NITRO Security Settings to allow/redirect logged-in user to a different site when accessing a site. Steps: Go to site settings, Crow Canyon NITRO Site Settings, expand “Security Settings”, configure as shown below. For using direct AD security group(s) in this setting, we need to grant permissions to “Crow Canyon Azure AD API” mentioned in the description section of this article. NITRO Studio NITRO Studio- Custom Actions NITRO Studio- Forms About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: New NITRO Reports Features NITRO Studio Workshop: Building Dashboards with NITRO Studio NITRO Studio Workshop: NITRO Forms &#038; Business Processes NITRO Studio Workshop: How to Use NITRO Forms (Part 2) © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "699",
    "name": "699 - SharePoint On-premises_ Installation of NITRO Office API.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/699%20-%20SharePoint%20On-premises_%20Installation%20of%20NITRO%20Office%20API.html",
    "title": "SharePoint On Premises Installation Of NITRO Office API",
    "text": "SharePoint On-premises: Installation of NITRO Office API - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio- Custom Actions / SharePoint On-premises: Installation of NITRO Office API SharePoint On-premises: Installation of NITRO Office API 1095 views 1 min , 13 sec read 0 Applies To SharePoint 2013/2016/2019/SharePoint Server Subscription Edition Description This article has the instructions to install NITRO Office API. In Custom Actions and NITRO Workflows, Generate Document action has an option to use “Microsoft Office API” for generating the document. To use “Microsoft Office API”, Microsoft Office must be installed on the server. On SharePoint servers, newer versions of Microsoft Office cannot be installed. NITRO Office API can be installed on a server different from SharePoint servers so that Office API can be used for document generation. Server must have IIS configured and a licensed version of Microsoft Office installed. Instructions Pre-requisites Install Microsoft office on IIS Server and make sure that office is licensed. Microsoft .NET Framework 4.8 or above should be installed on the server. Refer https://www.crowcanyon.help/article/678 and do the configurations on the server we are using to install the NITRO Office API. Install NITRO Office API 1. Download and copy the “NITROOfficeAPI” package to the IIS Server. 2. Extract the folder, right click on the folder &#8211;&gt; properties &#8211;&gt; unblock it. Ignore if the folder is not blocked. 3. Paste the “NITROOfficeAPI” folder in the location: &#8216;C:\\inetpub\\wwwroot&#8217; 4. Open IIS Manager 5. Select Sites and create a new site as shown below: Add Website as shown below, browse the physical path below that is used for #3 above. 6. After creating the site, select the site and click “Browse website” 7. This will open the site in the browser, copy the URL of the site: Example URL: http://localhost:1100/api/msword Modify the URL by replacing “localhost” with the server name and port number used while creating the “NITROOfficeAPI” site: For example, modified URL will be like: http://SP2016:1100/api/msword Update SharePoint Farm Property In this step we will create one farm level property so that Custom Action and Workflow Manager can access the NITRO Office API component. For this we need the URL of the NITRO Office API site (step #7 above). Open SharePoint Management Shell and run the below script: Script: $farm=Get-SPFarm $farm.Properties&#91;\"nitroofficeapiurl\"] =&nbsp; \"&lt;&lt;NITRO Office API site URL.&gt;&gt;\"; $farm.Update() Note: In above script, specify the NITRO Web API URL, example: $farm.Properties&#91;\"NITROWebAPIURL\"] = \"http://SP2016:1100/api/msword\"; Custom Action NITRO Studio- Custom Actions About supportTeam View all posts by supportTeam &rarr; Related Articles NITRO Studio Workshop: Custom Actions and Workflows Revisited Active Directory Groups integration with NITRO Import Tickets using NITRO Custom Actions NITRO Studio Workshop: Invoking Web Services using Workflows &#038; Custom Actions © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "7",
    "name": "7 - Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/7%20-%20Exclude%20non-business%20days%20and%20holidays%20while%20calculating%20due%20date%20using%20Form%20Event%20Actions%20in%20NITRO%20Forms.html",
    "title": "Exclude Non Business Days And Holidays While Calculating Due Date Using Form Event Actions In NITRO Forms",
    "text": "Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms 831 views 1 min , 44 sec read 1 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article has steps to calculate target date by excluding non-business days, as per site regional settings and holidays that are maintained in a custom list in the site. In this example, it is required to calculate ‘Due Date’ in Tickets list by excluding weekends and holidays specified in ‘Holidays’ list. Summary of steps Create a custom list to maintain list of holidays. Define work week in site regional settings. Configure form event actions to calculate due date. Detailed steps Create a custom list to maintain list of holidays. Go to ‘Site Contents’ -&gt; Create a custom list. ‘Holidays’ is the list name in this example that is created for specifying holidays. It is required to create an item for each holiday in this list. Create below columns in the list: Column Name Column Type StartDate Date and Time (Date only) EndDate Date and Time (Date only) For continuous holidays, specify start date of holidays in ‘StartDate’ column and end date of holidays in ‘EndDate’ column. For single holiday, specify ‘EndDate’ and leave ‘StartDate’ column blank. Sample ‘Holidays’ list: Define work week in site regional settings. Go to site settings -&gt; ‘Regional Settings’ under ‘Site Administration’ -&gt; Define work week as required. Sample work week: Configure form event actions to calculate due date. The projects form has a ‘Start Date’ column that will be entered by the user. User will also enter the number of days required to finish the project in &#8216;Days&#8217; column. After that, system will automatically calculate the due date based on these two values. Navigate to NITRO Forms designer for Tickets list -&gt; Create below columns and add them to the NITRO Form. Column Name Column Type Start Date Date and Time (Date &amp; Time or Date only) Due Date Date and Time (Date &amp; Time) Days Number (with ‘0’ decimal places) Configure form event actions. Expand ‘Advanced’ section from left-hand panel -&gt; Form Event Actions -&gt; Configure FEA on column value change as shown below: Configure update form controls action to set due date. Add mapping for ‘Due Date’ column using custom script. Script: return window.ccs_g_FormUI.AddDaysFromNumberColumnToDateColumnValue(\"StartDate\", \"Days\", true, true,\"Holidays\",\"EndDate\", &#91;\"EndDate\", \"StartDate\"], window.ccs_g_FormUI); Parameters in the script Description StartDate Internal name of ‘Start Date’ column in Tickets list. This is the source date column to calculate due date. Days Internal name of ‘Days’ column. Number of days that are to be added in ‘Start Date’ for calculating ‘Due Date’. true Consider business days defined in site regional settings. Possible values: true/false true Consider Holidays list while calculating ‘Due Date’. Possible values: true/false Holidays Custom list name that is created to maintain list of holidays. EndDate Internal name of ‘EndDate’ column in Holidays list. StartDate Internal name of ‘StartDate’ column in Holidays list. Note: Replace column internal names (that are mentioned in the above table) with actual column internal names. Save settings. Configure update form controls action to clear ‘Due Date’ column if ‘Start Date’ or ‘Days’ column value is blank. Add mapping for ‘Due Date’ column. Save settings and publish the NITRO Forms. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "70",
    "name": "70 - Support for checkboxes in Word documents for Generate Document Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/70%20-%20Support%20for%20checkboxes%20in%20Word%20documents%20for%20Generate%20Document%20Action.html",
    "title": "Support For Checkboxes In Word Documents For Generate Document Action",
    "text": "Support for checkboxes in Word documents for Generate Document Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Support for checkboxes in Word documents for Generate Document Action Support for checkboxes in Word documents for Generate Document Action 869 views 4 min , 40 sec read 0 Applies To : SharePoint Online Description: In SharePoint lists we have checkbox columns (multi-choice). Also, Yes/No column can be represented as a checkbox. If SharePoint list item form has checkboxes, sometimes similar UI is required in document (Word/pdf) that are generated based on that item. Checkboxes support in Word templates ensures that look and feel of generated document is closer to the item form. NITRO document generation now supports this feature. Based on values in SharePoint list item, checkboxes can be checked/unchecked in Word document template. Summary of steps 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Enable checkboxes in Microsoft Word. 2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create SharePoint list with required columns (or use existing list/columns). 3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a Word template with checkbox controls. 4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure Generate document action. 5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map list item columns to checkbox controls in template. 6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Run the action to generate document. Enable checkboxes in Microsoft Word Checkboxes can be added to Word document from the ‘Developer’ tab. By default, this tab is not visible in the ribbon of Microsoft Word. Please follow below steps to make it visible. Open Microsoft Word and go to File -&gt; Options -&gt; Customize Ribbon. In the Main Tabs section, enable ‘Developer’ tab. After above step, Developer tab will be visible in Word: In Developer tab, checkbox option is available. Move the cursor to the required position in the word document. After that click checkbox in the ribbon to insert it in the required position in the document. For settings of Checkbox, select the ‘Checkbox’ in the document and navigate to properties in ‘Controls’ group of ‘Developer’ Tab. Create SharePoint list with required columns In this article, we will take below examples to map to checkboxes in a word document. Based on values in the SharePoint list item for these columns, corresponding checkboxes will get checked/unchecked in the generated word document. Columns in SharePoint List (Onboarding Request) for which checkboxes are created in MS Word template Single Choice Employee type Full-time Contractor Ad-hoc Multi-choice column Column name: Application Access Column internal name: ApplicationAccess Choice options: SQL Server Active Directory Azure SharePoint Yes/No column Column name: Allow Administrator Access Column internal name: AllowAdministratorAccess Choice options: Yes/No Text column Column name: Employee Name Column internal name: EmployeeName Other columns in SharePoint List for which checkboxes are not created in MS Word template Title column Column name: Title Column internal name: Title Text Column Column name: Employee Name Column internal name: EmployeeName Text Column Column name: Cloud Column internal name: Cloud Text Column Column name: Database Column internal name: Database Expressions Expressions – String concatenate function is used in expression. Based on the output of this function corresponding checkbox will be checked/unchecked. Create a Word template with checkbox controls Checkbox can be single or part of a group with multiple related options. This article will show implementation of checkboxes in the word template for above mentioned column examples Insert a group of checkboxes for single choice column in template To create above mentioned single Choice checkbox controls follow the below steps. Step 1. In word document, type Employee Type as group name and create 3 checkboxes as shown below. These checkboxes are the allowable column values of which only a single value can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below: Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert Checkbox for Multi choice column To create above mentioned multi-Choice checkbox controls follow the below steps Step 1. In word document, type Application Access as group name and create 4 checkboxes as shown below. These checkboxes are the allowable column values of which multi values can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below: Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert checkboxes for Yes/No column in template To create above mentioned Yes/No column checkbox controls follow the below steps Step 1. In word document, type Allow Administrator Access as group name and create 2 checkboxes as shown below. These checkboxes are the allowable column values of which Yes/No values can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert a checkbox for Text column in template Normally text columns will not be mapped to check boxes. However, if required this can be done. Checkbox will get checked in the generated document only if the value of text column in the item matches with the Title of the checkbox in the template. To create Text column based checkbox control follow the below steps. Step 1. In word document, type EmployeeName (can be any name) as group name and create a checkbox as shown below. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below Title: This value should match with the item column value. Once matched, checkbox gets checked. Tag: Provide a name for the control, this will be visible in the Custom Action configuration dialog to map to the item column value. Note: Text column value can be directly inserted in the document. For this, add a ‘Merge fields Mappings’ and configure mapping for text column. If required, a checkbox can be checked for a specific value in text column. This checkbox will be checked only if the value in Text Column is &#8216;John Smith&#8217;. Otherwise, it will be unchecked. Sample MS word Template Configure Generate document action Please refer to this document for configuring a MS Word template based document generation. NITRO Studio Workshop: Easily Generate Documents and Print Output Content Control Mappings in Generate Document Action In ‘Content Control Mappings’ field, Add Mappings for ‘Tag’ provided to checkboxes in Template. Note: In Content Control Mappings, we can map either Column placeholder or values or expressions. Based on output of Column placeholder or values passed or expressions, corresponding checkbox will be checked/unchecked Content control mapping for sample document: Tag name provided to checkboxes in template will be visible in Content control mappings as shown below: 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map List Item Columns to checkbox controls (Tag) in template Below example shows the &#8216;Column Placeholder&#8217; mappings: Item for which document is generated with checkboxes shown below: Run the action to generate document Run ‘Generate Document’ Custom Action on above item. It will generate MS word document on location provided in the Custom Action. Below document will be generated for above item: 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map Expression (Strcat), value and variable to checkbox controls (Tag) in template Output of expressions can be mapped to checkboxes as well. Checkbox will get checked in the generated document only if the output value of expression/placeholder matches with the Title of the checkbox in the template. Below example shows the ‘Expression’ mapping in Content Control Mappings: Item for which document is generated with checkboxes is shown below: Run the action to generate document Run ‘Generate document’ custom action on above item. Below shown document will be generated. Based on output of expression corresponding checkboxes get checked/unchecked in the document. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "700",
    "name": "700 - Support for checkboxes in Word documents for Generate Document Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/700%20-%20Support%20for%20checkboxes%20in%20Word%20documents%20for%20Generate%20Document%20Action.html",
    "title": "Support For Checkboxes In Word Documents For Generate Document Action",
    "text": "Support for checkboxes in Word documents for Generate Document Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Support for checkboxes in Word documents for Generate Document Action Support for checkboxes in Word documents for Generate Document Action 869 views 4 min , 40 sec read 0 Applies To : SharePoint Online Description: In SharePoint lists we have checkbox columns (multi-choice). Also, Yes/No column can be represented as a checkbox. If SharePoint list item form has checkboxes, sometimes similar UI is required in document (Word/pdf) that are generated based on that item. Checkboxes support in Word templates ensures that look and feel of generated document is closer to the item form. NITRO document generation now supports this feature. Based on values in SharePoint list item, checkboxes can be checked/unchecked in Word document template. Summary of steps 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Enable checkboxes in Microsoft Word. 2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create SharePoint list with required columns (or use existing list/columns). 3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a Word template with checkbox controls. 4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure Generate document action. 5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map list item columns to checkbox controls in template. 6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Run the action to generate document. Enable checkboxes in Microsoft Word Checkboxes can be added to Word document from the ‘Developer’ tab. By default, this tab is not visible in the ribbon of Microsoft Word. Please follow below steps to make it visible. Open Microsoft Word and go to File -&gt; Options -&gt; Customize Ribbon. In the Main Tabs section, enable ‘Developer’ tab. After above step, Developer tab will be visible in Word: In Developer tab, checkbox option is available. Move the cursor to the required position in the word document. After that click checkbox in the ribbon to insert it in the required position in the document. For settings of Checkbox, select the ‘Checkbox’ in the document and navigate to properties in ‘Controls’ group of ‘Developer’ Tab. Create SharePoint list with required columns In this article, we will take below examples to map to checkboxes in a word document. Based on values in the SharePoint list item for these columns, corresponding checkboxes will get checked/unchecked in the generated word document. Columns in SharePoint List (Onboarding Request) for which checkboxes are created in MS Word template Single Choice Employee type Full-time Contractor Ad-hoc Multi-choice column Column name: Application Access Column internal name: ApplicationAccess Choice options: SQL Server Active Directory Azure SharePoint Yes/No column Column name: Allow Administrator Access Column internal name: AllowAdministratorAccess Choice options: Yes/No Text column Column name: Employee Name Column internal name: EmployeeName Other columns in SharePoint List for which checkboxes are not created in MS Word template Title column Column name: Title Column internal name: Title Text Column Column name: Employee Name Column internal name: EmployeeName Text Column Column name: Cloud Column internal name: Cloud Text Column Column name: Database Column internal name: Database Expressions Expressions – String concatenate function is used in expression. Based on the output of this function corresponding checkbox will be checked/unchecked. Create a Word template with checkbox controls Checkbox can be single or part of a group with multiple related options. This article will show implementation of checkboxes in the word template for above mentioned column examples Insert a group of checkboxes for single choice column in template To create above mentioned single Choice checkbox controls follow the below steps. Step 1. In word document, type Employee Type as group name and create 3 checkboxes as shown below. These checkboxes are the allowable column values of which only a single value can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below: Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert Checkbox for Multi choice column To create above mentioned multi-Choice checkbox controls follow the below steps Step 1. In word document, type Application Access as group name and create 4 checkboxes as shown below. These checkboxes are the allowable column values of which multi values can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below: Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert checkboxes for Yes/No column in template To create above mentioned Yes/No column checkbox controls follow the below steps Step 1. In word document, type Allow Administrator Access as group name and create 2 checkboxes as shown below. These checkboxes are the allowable column values of which Yes/No values can be selected at a time. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below Title: Values of each checkbox should match with possible value(s) of the column. Based on the values in column, corresponding checkbox(es) gets checked. Tag: Each checkbox in the group should have same tag. Provide a name for the checkbox group, this will be visible in the Custom Action configuration dialog to map to the item column value(s). Repeat Step 2 for all the checkboxes in this group. Insert a checkbox for Text column in template Normally text columns will not be mapped to check boxes. However, if required this can be done. Checkbox will get checked in the generated document only if the value of text column in the item matches with the Title of the checkbox in the template. To create Text column based checkbox control follow the below steps. Step 1. In word document, type EmployeeName (can be any name) as group name and create a checkbox as shown below. Step 2: Go to Content Control properties of a check-box through Developer tab. In the pop-up provide as below Title: This value should match with the item column value. Once matched, checkbox gets checked. Tag: Provide a name for the control, this will be visible in the Custom Action configuration dialog to map to the item column value. Note: Text column value can be directly inserted in the document. For this, add a ‘Merge fields Mappings’ and configure mapping for text column. If required, a checkbox can be checked for a specific value in text column. This checkbox will be checked only if the value in Text Column is &#8216;John Smith&#8217;. Otherwise, it will be unchecked. Sample MS word Template Configure Generate document action Please refer to this document for configuring a MS Word template based document generation. NITRO Studio Workshop: Easily Generate Documents and Print Output Content Control Mappings in Generate Document Action In ‘Content Control Mappings’ field, Add Mappings for ‘Tag’ provided to checkboxes in Template. Note: In Content Control Mappings, we can map either Column placeholder or values or expressions. Based on output of Column placeholder or values passed or expressions, corresponding checkbox will be checked/unchecked Content control mapping for sample document: Tag name provided to checkboxes in template will be visible in Content control mappings as shown below: 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map List Item Columns to checkbox controls (Tag) in template Below example shows the &#8216;Column Placeholder&#8217; mappings: Item for which document is generated with checkboxes shown below: Run the action to generate document Run ‘Generate Document’ Custom Action on above item. It will generate MS word document on location provided in the Custom Action. Below document will be generated for above item: 1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Map Expression (Strcat), value and variable to checkbox controls (Tag) in template Output of expressions can be mapped to checkboxes as well. Checkbox will get checked in the generated document only if the output value of expression/placeholder matches with the Title of the checkbox in the template. Below example shows the ‘Expression’ mapping in Content Control Mappings: Item for which document is generated with checkboxes is shown below: Run the action to generate document Run ‘Generate document’ custom action on above item. Below shown document will be generated. Based on output of expression corresponding checkboxes get checked/unchecked in the document. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "701",
    "name": "701 - Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/701%20-%20Exclude%20non-business%20days%20and%20holidays%20while%20calculating%20due%20date%20using%20Form%20Event%20Actions%20in%20NITRO.html",
    "title": "Exclude Non Business Days And Holidays While Calculating Due Date Using Form Event Actions In NITRO",
    "text": "Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms Exclude non-business days and holidays while calculating due date using Form Event Actions in NITRO Forms 831 views 1 min , 44 sec read 1 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article has steps to calculate target date by excluding non-business days, as per site regional settings and holidays that are maintained in a custom list in the site. In this example, it is required to calculate ‘Due Date’ in Tickets list by excluding weekends and holidays specified in ‘Holidays’ list. Summary of steps Create a custom list to maintain list of holidays. Define work week in site regional settings. Configure form event actions to calculate due date. Detailed steps Create a custom list to maintain list of holidays. Go to ‘Site Contents’ -&gt; Create a custom list. ‘Holidays’ is the list name in this example that is created for specifying holidays. It is required to create an item for each holiday in this list. Create below columns in the list: Column Name Column Type StartDate Date and Time (Date only) EndDate Date and Time (Date only) For continuous holidays, specify start date of holidays in ‘StartDate’ column and end date of holidays in ‘EndDate’ column. For single holiday, specify ‘EndDate’ and leave ‘StartDate’ column blank. Sample ‘Holidays’ list: Define work week in site regional settings. Go to site settings -&gt; ‘Regional Settings’ under ‘Site Administration’ -&gt; Define work week as required. Sample work week: Configure form event actions to calculate due date. The projects form has a ‘Start Date’ column that will be entered by the user. User will also enter the number of days required to finish the project in &#8216;Days&#8217; column. After that, system will automatically calculate the due date based on these two values. Navigate to NITRO Forms designer for Tickets list -&gt; Create below columns and add them to the NITRO Form. Column Name Column Type Start Date Date and Time (Date &amp; Time or Date only) Due Date Date and Time (Date &amp; Time) Days Number (with ‘0’ decimal places) Configure form event actions. Expand ‘Advanced’ section from left-hand panel -&gt; Form Event Actions -&gt; Configure FEA on column value change as shown below: Configure update form controls action to set due date. Add mapping for ‘Due Date’ column using custom script. Script: return window.ccs_g_FormUI.AddDaysFromNumberColumnToDateColumnValue(\"StartDate\", \"Days\", true, true,\"Holidays\",\"EndDate\", &#91;\"EndDate\", \"StartDate\"], window.ccs_g_FormUI); Parameters in the script Description StartDate Internal name of ‘Start Date’ column in Tickets list. This is the source date column to calculate due date. Days Internal name of ‘Days’ column. Number of days that are to be added in ‘Start Date’ for calculating ‘Due Date’. true Consider business days defined in site regional settings. Possible values: true/false true Consider Holidays list while calculating ‘Due Date’. Possible values: true/false Holidays Custom list name that is created to maintain list of holidays. EndDate Internal name of ‘EndDate’ column in Holidays list. StartDate Internal name of ‘StartDate’ column in Holidays list. Note: Replace column internal names (that are mentioned in the above table) with actual column internal names. Save settings. Configure update form controls action to clear ‘Due Date’ column if ‘Start Date’ or ‘Days’ column value is blank. Add mapping for ‘Due Date’ column. Save settings and publish the NITRO Forms. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "702",
    "name": "702 - Enforce unique values for list item column values using NITRO features - Crow Canyon Software Suppor.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/702%20-%20Enforce%20unique%20values%20for%20list%20item%20column%20values%20using%20NITRO%20features%20-%20Crow%20Canyon%20Software%20Suppor.html",
    "title": "Enforce Unique Values For List Item Column Values Using NITRO Features Crow Canyon Software Suppor",
    "text": "Enforce unique values for list item column values using NITRO features - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Enforce unique values for list item column values using NITRO features Enforce unique values for list item column values using NITRO features 914 views 4 min , 32 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Requirement This article illustrates below capabilities: Show unique value violation warning as soon as user enters the data, but allow saving the item anyway. Enforce unique values on a combination of column values. Description SharePoint list columns have an option to &#8216;Enforce unique values&#8217;. If enabled, only one item can be created with a specific value for column. When user tries to save the item, SharePoint shows an error if item has duplicate value. This functionality can be enhanced with NITRO in following ways: &#8216;Enforce unique values&#8217; option is not available for calculated columns. In many cases, we need unique constraint on some combination of column data. Unique value may be based on data (full or partial) in more than column. We can use ‘Form event action’ to generate the required value that needs to be checked for uniqueness. We can run the duplicate value check using ‘Form event action’ as soon as user enters the data. A message can be shown to user using NITRO Forms column validations on the form itself and user does not need to click ‘Save’ button to know that value is duplicate. Duplicate check can be made optional. We can remove the &#8216;Enforce unique values&#8217; option from column settings but still show the duplicate warning on the form. User can save the item with duplicate value if required. Use case 1 In this sample use case, we have described below scenarios: Requester submits the request by specifying the Invoice number using NITRO forms. If request already exists for a specified invoice number, then show a warning message on the form. This will allow user to verify before submitting another request for the same invoice number. Detailed steps Create “Invoice” column in the list. Based on value in this column, user ‘form event actions’ to check if another request with same invoice number already exists. Column Internal Name: Invoice Column Display Name: Invoice Column Type: Single Line of Text Note that &#8216;Enforce unique values&#8217; is set to ‘No’ as user will get warning but can still save with duplicate value. Create an index on this column to improve performance and avoid SharePoint list view threshold errors. Create “ShowError” NITRO Managed column from NITRO forms designer. This column will be set using form event actions. Based on this column value show or hide warning message in NITRO form. Go to the list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Expand “Create Column” dropdown -&gt; Create ‘NITRO Managed Column’ as shown below: Column Internal Name: ShowError Column Display Name: Show Error Column Type: NITRO Managed Column Drag and drop “Invoice” and “Show Error” columns on to the NITRO form. Hide “Show Error” column on the form as it is used in column permissions and users do not need to see it. Configure ‘Hide’ permission for ‘Show Error’ column as shown below: Hide for everyone. To show warning message, add ‘Line/HTML’ control on the form as shown below and specify the required text. Configure ‘Form Event Actions’ on “Invoice” column value change. Expand ‘Advanced’ section in left hand panel -&gt; ‘Form Event Actions’ -&gt; Configure form event action as shown below: Configure ‘Fetch List Items’ action: This action will fetch the existing item if it exists with same value as the “Invoice” number entered on the form. Configure ‘Update Form Controls’ action: This action will check if another item exists with same value as the “Invoice” number entered on the form using fetch list items action variable. If yes, then script will set the “Show Error” column value to “Yes” otherwise it will be set to “No”. Warning message is shown on the form if “Show Error” column value is “Yes”. Script used above : var itemID = window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLGetItem\", \"ID\", true); if (itemID &amp;&amp; itemID &gt; 0) { return \"Yes\"; } return \"No\"; functionCallback(); Configure permissions for ‘Line/HTML’ control (added above) so that it is shown only when “Show Error” column value is “Yes”. Hide: Configure hide permission for everyone. Show: Configure show permission when ‘Show Error’ column value is ‘Yes’. Sample output Use case 2 Enforce a unique value based on a combination of column values. Sample list schema ‘Company’: Single selection choice ‘Product Code’: Single line of text column ‘Product Unique Code’: Single line of text column Concatenate “Company” and “Product Code” column values and map it to “Product Unique Code” column. Set validation to enforce unique values in “Product Unique Code” column. ‘Unique Value To Set’: NITRO Managed ‘Text &#8211; Short’ column Summary of steps Add an index to “Product Unique Code” column. Create a NIRO Managed column. Configure form event actions: Concatenate ‘Company’ and ‘Product Code’ column values and map concatenated value to NITRO Managed column. Fetch an item from the same list if it exists with same value as the concatenated value. Set value in “Product Unique Code” column. Configure column validations on “Company” and “Product Code” columns. Detailed steps Add an index to “Product Unique Code” column. This is useful for improving performance and avoiding SharePoint list view threshold errors. Navigate to ‘List Settings’ page for the list -&gt; ‘Indexed columns’ -&gt; ‘Create a new index’ -&gt; Select ‘Product Unique Code’ column from drop-down -&gt; Click ‘Create’ as shown below: 2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Create a NIRO Managed column. Navigate to Crow Canyon NITRO Forms designer for the list -&gt; Click ‘Create Column’ from ‘FORM’ ribbon -&gt; ‘NITRO Managed Columns’ -&gt; Select ‘Text &#8211; Short’ and modify its internal and display name as shown below: Display Name: Unique Value To Set Internal Name: UniqueValue Drag and drop this column on to the form. Configure hide permissions for ‘Product Unique Code’ column as this column is used in column permissions and users do not need to see it. Hide for everyone. Similarly, configure hide permissions for ‘Unique Value To Set’ column. 3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure form event actions Expand “Advanced” section from left hand panel -&gt; Form Event Actions -&gt; Configure a new form event action as shown below: Action 1: Concatenate column values and map concatenated value to NITRO Managed column. Add “Update Form Control Values” action to concatenate ‘Company’ and ‘Product Code’ column values and populate ‘Unique Value To Set’ NITRO managed column as shown below: Value: $strcat([Company|Company],_,[Product Code|ProductCode]) Action 2: Fetch an item from the same list if it exists with same value as the concatenated value. Add “Fetch List Items” action to query ‘Product Unique Code’ column in the same list and fetch an item if it exists with same value as the concatenated value in ‘Unique Value To Set’ column. Action 3: Set value in “Product Unique Code” column. This action will check if another item exists with same value as the concatenated value in “Unique Value To Set” column using fetch list items action variable. If yes, then script will set the “Product Unique Code” column value to ‘Unique validation failed’ otherwise it will be set with the value in “Unique Value To Set” column. Validation error is shown on the form if “Product Unique Code” column value is ‘Unique validation failed’. Add “Update Form Control Values” action to map ‘Product Unique Code’ as shown below: Script used above: var itemID = window.ccs_g_FormUI.GetQLItemColumnValues(\"CCSQLGetItem\", \"ID\", true); if (itemID &amp;&amp; itemID &gt; 0) { return \"Unique validation failed\"; } return _ccs_FormUI.fetchColumnValueUI(\"UniqueValue\"); functionCallback(); 4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Configure column validations on “Company” and “Product Code” columns Configure validation on ‘Company’ column. Select ‘Company’ column -&gt; Validations -&gt; Configure validation settings as shown below -&gt; Apply the settings. Note: “[Company]” in validation value setting is internal name of the ‘Company’ column. Configure validation on ‘Product Code’ column. Select ‘Product Code’ column -&gt; Validations -&gt; Configure validation settings as shown below -&gt; Apply the settings. Note: “[ProduceCode]” in validation value setting is internal name of the ‘Product Code’ column. Sample output Existing list items Specified same ‘Company’ and ‘Product Code’ combination and received validation error. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "703",
    "name": "703 - Frequently asked questions regarding NITRO Branding.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/703%20-%20Frequently%20asked%20questions%20regarding%20NITRO%20Branding.html",
    "title": "Frequently Asked Questions Regarding NITRO Branding",
    "text": "Frequently asked questions regarding NITRO Branding - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Frequently asked questions regarding NITRO Branding Frequently asked questions regarding NITRO Branding 707 views 2 min , 17 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article covers following cases: How to change font-weight of web part header text for NITRO components? How to change background color of web part header for NITRO components? How to change the color of NITRO Form header background and the color of text appearing in the form header when a form is launched in a dialog? 1. How to change font-weight of web part header text for NITRO components? For modern UI sites: To change the font-weight of web part header, go to the site -&gt; Site settings -&gt; Crow Canyon Branding (Modern sites) -&gt; Specify ‘Extended CSS’ as shown below -&gt; Save settings. Script: .CCS-Webpart-Title{ font-weight: bold !important; } For classic UI sites: To change the font-weight of web part header, go to the site -&gt; Site settings -&gt; Crow Canyon Branding (Classic sites) -&gt; Click ‘Try New Theme Builder’ button -&gt; Click ‘Select’ button -&gt; Select the existing site theme from base theme picker -&gt; Specify a new theme name if the base theme is selected from ‘Predefined Themes’ -&gt; Specify below script in ‘Extended CSS’ below the existing script. Script: div.CCS-Webpart-Title,.ms-webpart-titleText{ font-weight: bold !important; } Click ‘Save Theme’ button. Go to ‘Apply Theme’ tab -&gt; Expand ‘Custom Themes’ section -&gt; Select the theme that is created above -&gt; Click ‘Apply Theme’ button. Sample output: Before above ‘Extended CSS’ in branding. After above ‘Extended CSS’ in branding. 2. How to change background color of web part header for NITRO components? For modern UI sites: To change the header background color, go to the site -&gt; Site settings -&gt; Crow Canyon Branding (Modern sites) -&gt; Specify ‘Extended CSS’ as shown below -&gt; Save settings. Script: .CCS-Webpart-Title { background: #009900 !important; color: #fff !important; } Note: Change the color codes as required. Sample output: For classic UI sites: To change the header background color, go to the site -&gt; Site settings -&gt; Crow Canyon Branding (Classic sites) -&gt; Click ‘Try New Theme Builder’ button -&gt; Click ‘Select’ button -&gt; Select the existing site theme from base theme picker -&gt; Specify a new theme name if the base theme is selected from ‘Predefined Themes’ -&gt; Specify below script in ‘Extended CSS’ below the existing script. Script: body .CCS-Webpart-Title, #s4-workspace .CCS-Webpart-Title,.ms-webpart-titleText, div.CCS-Webpart-Title,.ms-webpart-titleText,.ms-webpart-chrome-title { background: #023047 !important; color: #fff !important; } Note: Change the color codes as required. Click ‘Save Theme’ button. Go to ‘Apply Theme’ tab -&gt; Expand ‘Custom Themes’ section -&gt; Select the theme that is created above -&gt; Click ‘Apply Theme’ button. Sample output: 3. How to change the color of NITRO Form header background and the color of text appearing in form header when a form is launched in a dialog? For modern UI sites: To change the color of NITRO Form header background and header title, navigate to the site à Site Settings &#8211;> Site Administration &#8211;> Crow Canyon Branding (Modern Sites) &#8211;> General Settings &#8211;> Extended CSS &#8211;> Specify the CSS as shown below à Save settings. Script: .modalDialogIframeHeader { background: Coral !important; } .modalDialogHeader { background: Coral !important; } .modalDialogIframeHeader .HeaderTitle{ color: black !important; } .modalDialogHeader .HeaderTitle{ color: black !important; } Note: Change the color names in the above script as needed. Sample output For classic UI sites: To change the color of NITRO Form header background and header title, go to the site -> Site settings -> Crow Canyon Branding (Classic sites) -> Click ‘Try New Theme Builder’ button -> Click ‘Select’ button -> Select the existing site theme from base theme picker -> Specify a new theme name if the base theme is selected from ‘Predefined Themes’ -> Specify below script in ‘Extended CSS’ below the existing script. Script: .ms-dlgTitle { background: Coral !important; } .ms-dlgTitle > h1 { color: black !important; } Note: Change the color names in the above script as needed. 2. Click ‘Save Theme’ button. 3. Go to ‘Apply Theme’ tab -> Expand ‘Custom Themes’ section -> Select the theme that is created above -> Click ‘Apply Theme’ button. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "704",
    "name": "704 - Troubleshooting steps for Crow Canyon SPFx components.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/704%20-%20Troubleshooting%20steps%20for%20Crow%20Canyon%20SPFx%20components.html",
    "title": "Troubleshooting Steps For Crow Canyon SPFx Components",
    "text": "Troubleshooting steps for Crow Canyon SPFx components - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for Crow Canyon SPFx components Troubleshooting steps for Crow Canyon SPFx components 735 views 1 min , 52 sec read 0 Applies to: SharePoint Online Description This article has steps to troubleshoot if Crow Canyon SPFx (Modern UI) components do not load and show an error. This issue occurs when these components are updated to a newer version, but the files are referenced from the old version. This can happen if update is not done in all the sites or SharePoint is referring to cached files from older versions. Example: Detailed steps Update NITRO Modern UI components for all the NITRO activated sites in the SharePoint tenancy. Please note that NITRO activated sites may be there in more than one site collection in your tenancy. Open NITRO Studio home page in each site collection where NITRO is installed and check the NITRO activated sites. Note : Site collection administrator user can perform this step. Navigate to the site &#8211;> Site Settings &#8211;> Site Administration &#8211;> Crow Canyon NITRO Apps &#8211;> NITRO ADMIN HOME &#8211;> Click ‘Setup’ button (if it is available, else move to next step). Install/Upgrade NITRO Modern UI components in the site. Click ‘Manage’ button for NITRO activated site from NITRO ADMIN HOME page &#8211;> Click ‘Upgrade’ (or ‘Install’). Upgrade all NITRO activated sites in the site collection by repeating this step. Clear browser cache and cookies. Click ‘Ctrl+Shift+Delete’ and clear the browsing data; cookies and cache. Please note that this has to be done by all users in their browser. Sign-in to the SharePoint site. Refresh (Ctrl+F5) the page with errors a couple of times and check if the issue is resolved. Please wait for 5-10 seconds and reload if the issue is still there. If the issue is not resolved with the above steps. Open browser developer tools by pressing F12 key &#8211;> Application &#8211;> Expand ‘IndexedDB’ &#8211;> Select SPFx.Config &#8211;> Click ‘Delete database’. Refresh the page a few times and check if the issue is resolved. This step should be performed by every user who is facing this issue. If the issue is still not resolved, remove modern UI components (‘Crow Canyon NITRO Web Parts I’ and ‘Crow Canyon NITRO Web Parts II’) and reinstall: Note : Site collection administrator user can perform this step. All the sites: Go to site contents &#8211;> Remove Crow Canyon NITRO Web Parts I and II. Repeat this step for all the sites in the site collection. Site collection (root site): Go to the root site &#8211;> Site contents &#8211;> Remove ‘Crow Canyon NITRO Web Parts I and II’. Recycle bin: Go to site contents of root site &#8211;> Recycle bin &#8211;> Remove ‘Crow Canyon NITRO Web Parts I and II’. Second-stage recycle bin: Scroll to the bottom of Recycle bin &#8211;> Click ‘second-stage recycle bin’ &#8211;> Remove ‘Crow Canyon NITRO Web Parts I and II’. Admin recycle bin: Go to Site settings of the root site &#8211;> Site Collection Administration &#8211;> Recycle bin &#8211;> Remove ‘Crow Canyon NITRO Web Parts I and II’. Reinstall ‘Crow Canyon NITRO Web Parts I’ and ‘Crow Canyon NITRO Web Parts II’. Go to site contents of the root site &#8211;> Crow Canyon NITRO Studio &#8211;> Click ‘Manage’ for the site &#8211;> Click ‘Install’ button. Repeat this for all NITRO activated subsites. Clear browser cache and reload the page couple of times and check the result. If the issue is still not resolved, please contact Crow Canyon at sharepointsupport@crowcanyon.com About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "705",
    "name": "705 - Manage quick launch links in SharePoint sites.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/705%20-%20Manage%20quick%20launch%20links%20in%20SharePoint%20sites.html",
    "title": "Manage Quick Launch Links In SharePoint Sites",
    "text": "Manage quick launch links in SharePoint sites - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Manage quick launch links in SharePoint sites Manage quick launch links in SharePoint sites 683 views Less than a minute 0 Applies To : SharePoint online and On-premises. Description This article describes instructions to manage quick launch links in SharePoint site. Create new navigation link. Create new heading. Change order of links Delete quick launch link. Instructions Create new navigation link: 1.Copy page URL that you want to configure. In this sample use case, we have copied a page URL from “Site Pages” library in SharePoint site. Go to Site contents -> Site Pages -> click on page that needs to be added -> Copy URL from the browser. 2. Create new link in quick launch section. Go to Site contents -> Site settings -> Click “Quick launch” link under “Look and Feel” section. Click “New Navigation Link” as shown below: This will create “Survey Reports” page link under Tickets heading. Here, Survey Reports link is added in Quick launch as shown below: Create New Heading Click ‘New Heading’ in Quick launch section as shown below: Change order of links To change order of Heading click on ‘Change Order’ in Quick launch as shown below Change the order of links by selecting number from dropdown. Delete quick launch link. To delete a quick launch link, edit the link and click “Delete” button as shown below: Page link will be deleted from Quick launch. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "706",
    "name": "706 - Functions_ GetGroupMembers and Join.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/706%20-%20Functions_%20GetGroupMembers%20and%20Join.html",
    "title": "Functions GetGroupMembers And Join",
    "text": "Functions: GetGroupMembers and Join - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Functions: GetGroupMembers and Join Functions: GetGroupMembers and Join 964 views 2 min , 38 sec read 0 Applies to : NITRO Custom Actions and Workflows (SharePoint Online and On-premises) For complete list of functions, please refer to this article . Introduction This article describes the functionality and syntax of functions ‘GetGroupMembers’ and ‘Join’ in NITRO Workflows and Custom Actions. Detailed instructions GetGroupMembers This function is used to fetch the users that are members of a SharePoint (SP) group or an Active Directory (AD) group. This function fetches only those users that are directly the members of the specified SP/AD group. It will not fetch users that are members of the nested groups within the group. This function can be defined in two ways: With Expression Builder : Without Expression Builder : Syntax: $getgroupmembers(displayvalue, joinchar, usercolumn, output) Parameters to be defined in above function: Display value : Specify the user attribute that is to be fetched. Below are the supported values: email name id loginname Join char: This is required if the output type is ‘string’. Specify the character/string as a separator between each user value. Example : Semicolon (;) or ;# User column : Specify a person or group column placeholder that will contain one or more AD/SP groups. This person or group column can contain more than one group and this function will get users from all the groups. Note : Direct group names or variables are not supported, only user columns are supported for this parameter. If user column has one or more direct user values (other than groups), then those are also included in the output. Output : Specify the type of output that is to be returned by this function. Below are the supported values for this parameter. &#8220; array &#8220;: Get the output as an array. This output can be used to loop through each user and take the required action. For example, using the loop action in custom action or workflow manager a task can be created for each user in the output. &#8220;string&#8221; : Get the output as a text value where each user attribute will be separated as per the input given to function. Example : In this example, we want to fetch the &#8216;name&#8217; attribute for each user. Output type is string and separator is semicolon. &#8216;Assigned Team&#8217; is a user column in the current list. If this column has a SharePoint group as the saved value for an item, then users from that group will be fetched. Example output with &#8216;name&#8217; attribute : James Restivo;Joe Bloggs;John Smith;Ryan Stephani Example output with &#8217;email&#8217; attribute: jamesr@crowcanyon365.com;joeb@crowcanyon365.com;John.smith@crowcanyon365.com;ryan.stefani@crowcanyon.com Join Function This function takes as input an array of values and outputs a string by concatenating these values. With Expression Builder Without Expression Builder Syntax : $join (separator, [placeholder]) Parameters to be defined in above function: Separator : provide the character or string to separate the values in the output. Placeholder : Provide the variable that has the array of values. Example : In above example, VarUsers : This variable has an array of user values. [&#8220;jamesr@crowcanyon365.com&#8221;,&#8221;joeb@crowcanyon365.com&#8221;,&#8221;John.smith@crowcanyon365.com&#8221;,&#8221;ryan.stefani@crowcanyon.com&#8221;] Output : jamesr@crowcanyon365.com;#joeb@crowcanyon365.com;#John.smith@crowcanyon365.com;#ryan.stefani@crowcanyon.com Sample use case for GetGroupMembers function: Create tasks for approvers specified in a column in a list item. This action uses &#8220;Requests&#8221; and &#8220;Approval Tasks&#8221; lists. &#8220;Approvers&#8221; is a multi-selection enabled person or group column in &#8220;Requests&#8221; list. Select &#8216;Allow selection of&#8217; option to &#8216;People and Groups&#8217;. Mention setting name that allows groups to be selected in user column. &#8220;Approvers&#8221; column in Request item will be filled with the required group. For each user in the specified group, we need to create a task in the &#8220;Approval Tasks&#8221; list. &#8220;Approval Tasks&#8221; list has a lookup to &#8220;Requests&#8221; list. This way each task will be linked to the request item for which it has been created. Steps : This action is configured on the &#8220;Requests&#8221; list. Define a variable to get the members in the group specified in &#8216;Approvers&#8217; column in &#8220;Requests&#8221; list item. User the variable in the loop action to iterate for each user in the group. Configure a create item action in the loop body to create a task for user in the current loop iteration. Custom Action: Define Variable: Action 1: Run loop for all approvers Configure loop action for variable &#8216;varApprovers&#8217; defined above. Action 2: Create tasks for all approvers Configure create item action to create task for each user. Column mapping for Assigned To: Action 3: Update worklog in Request Configure update item action to update the worklog in request. Column mapping: Sample output: In below request item, &#8220;Crow Canyon Managers&#8221; group is selected in the &#8216;Approvers&#8217; column. Below users are the members of &#8220;Crow Canyon Managers&#8221; group: James Restivo Joe Bloggs John Smith Ryan Stefani Tasks created for above users: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "707",
    "name": "707 - Extended Settings in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/707%20-%20Extended%20Settings%20in%20NITRO%20Forms.html",
    "title": "Extended Settings In NITRO Forms",
    "text": "Extended Settings in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Extended Settings in NITRO Forms Extended Settings in NITRO Forms 703 views Less than a minute 0 Applies to : NITRO activated sites in SharePoint Online and On-Premises Description NITRO Forms provides enhanced capabilities to create, view or modify the SharePoint list items. This article describes some of the advanced features in NITRO forms. Disable Hyper Links In NITRO forms, in the item display form below column types are hyperlinked (sample screenshot below): Lookup (single/multi-selection) Person or Group (single/multi-selection) NITRO Attachments column NITRO Associated Items column (lookup, person or group and NITRO Attachments columns in associated items view) If required, hyperlinks can be disabled using extended settings. Hyperlinks can be disabled for all the columns or for specific columns. To disable hyperlinks for all columns, go to NITRO Form Settings -> Expand Advanced Section -> Extended Settings -> Set &#8220;DisableHyperLinks&#8221; to true as shown below: To disable hyperlinks for specific columns, provide the column internal names in an array. Syntax : &#8220;DisableHyperLinks&#8221;:[&#8220;Column1&#8243;,&#8221;Column2&#8221;] Example : &#8220;DisableHyperLinks&#8221;:[&#8220;IssueType&#8221;,&#8221;Attachments&#8221;] Note : Do not use column display name, use column internal name in the array. Refer this article for to find the column internal name: https://www.crowcanyon.help/article/614/#Post2 Sample output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "708",
    "name": "708 - Function_ Get Column Value for Version.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/708%20-%20Function_%20Get%20Column%20Value%20for%20Version.html",
    "title": "Function Get Column Value For Version",
    "text": "Function: Get Column Value for Version - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Function: Get Column Value for Version Function: Get Column Value for Version 916 views 3 min , 32 sec read 0 Applies to: NITRO Workflows and Custom Actions (SharePoint Online and SharePoint On-premises(2019)) For complete list of functions, please refer to this article . Introduction For SharePoint lists there is a feature to append text in columns of the type &#8216;Multiple lines of text&#8217;. When &#8216;Append Changes to Existing Text&#8217; is enabled in column settings, changes are shown as a thread in the column. The text entered earlier cannot be changed, and new text is shown above the earlier text. Each version of the item has its own value for this column (blank if not entered while saving the item). Function &#8216;getcolumnvalueforversion&#8217; can be used to get the column value for a version enabled multiple lines of text column. Value can be fetched for a specific version of the item or for all versions. Note : Source column should be multiple lines of text column with append changes enabled. And to enable this setting, version history should be enabled for the list. Syntax : Without Expression Builder $getcolumnvalueforversion(Column Name,Version,SortOrder,Format,textType) With Expression Builder Parameters to be defined in above function: ColumnName: Specify the internal name of the column. Only the column name is supported; column placeholders are not supported. Supported columns: Multiple lines of Text column with append changes enabled (Example: WorkLog) Choice (Example: Priority) Single Line of Text Number Date and Time Multiple Lines of Text (Example: Description) Unsupported columns: Person and Group Lookup Hyperlink To know the column internal name, go to the list -&gt; List Settings -&gt; Edit the column and find the column internal name in the browser URL as shown below: Ex : WorkLog Version: This parameter has below supported values. All : Return column value from all the versions of the item. First : Return column value from the first version of the item (earliest). Last : Return column value from the most recent version (last). Last-N : Returns the column value from the Nth version before the most recent one. LastNonBlank : Return column value from the latest version where value of this column is not blank. If item is saved without specifying any text for this column, then in that version of the item value of this column will be blank. Enter specific version number : Return column value from the specified version (Ex: 2.0 – returns the value from item version 2.0) Version Column: Here you can directly use the Version column. When you use the Version column as a column placeholder, it will return the latest version number of the item. Usage in $subtract() Function: The version number can be used in functions like $subtract(), which performs arithmetic operations on values. If you want to calculate the difference between the latest version and a previous version of an item. You can pass the version numbers retrieved via the column placeholder into the $subtract() function to compute the version difference. Example: or you can directly use the version number in the $subtract() function to fetch the column value from the specific version. SortOrder: Specify the sorting order for the versioned data for the column. SortOrder is applicable only for version of type &#8216;All&#8217;. Supported values for this parameter are below: LastToFirst : Column value in the latest versions of the item will be before the values entered in earlier versions (latest first). This is the default setting for this parameter. FirstToLast : Values will be in ascending order of the item version (earliest first). Format: Column version value can be fetched with or without header. Every item version has a user and timestamp associated with it. withHeader : Include name of user who created that version (user saving/editing item) and the time at which it was saved. Example: $getcolumnvalueforversion(WorkLog,All,LastToFirst,withHeader) withoutHeader : Only return column value text and not the user or timestamp. Example: $getcolumnvalueforversion(WorkLog,All,LastToFirst,withoutHeader) See the difference in output of &#8220;withHeader&#8221; and &#8220;withoutHeader&#8221; format in below screenshot. Custom Value : This option can be used to arrange the column value, user and timestamp in a custom format. Below is the sample value for custom format: @{UserName} &#8211; Created: {Created} \\r\\n Columnvalue: {ColumnValue} Example : $getcolumnvalueforversion(WorkLog,All,LastToFirst,@{UserName} &#8211; Created: {Created} \\r\\n Value: {ColumnValue}) Only the below placeholders are supported in this option: {UserName} : Name of the user who saved the item with the column value. {Created} : Date and time when the version was created. {ColumnValue} : Text value of the column. textType: This is an optional parameter. It is required in &#8220;Post Adaptive Card&#8221; action as plain text value appears better in the adaptive cards used in NITRO bots. This parameter supports &#8220;Plain&#8221; and &#8220;Normal&#8221; values. Plain : Returns the column value in plain text format. HTML is not used in the header and value formatting. Normal : Returns the column value in normal styling that includes HTML. See the difference in output of &#8216;Plain&#8217; and &#8216;Normal&#8217; text type in below screenshot: Note : In case of &#8216;Post an Adaptive Card&#8217; action, we need to use this parameter otherwise the output will have HTML code along with text: Example : %%$getcolumnvalueforversion(WorkLog,All,LastToFirst,withHeader)%% Output of post adaptive card action with &#8216;Plain&#8217; text type: Output of post adaptive card action with &#8216;Normal&#8217; text type: Sample use case: Notify requester when worklog is modified. Details : This workflow uses Tickets list that is version enabled, and “Work Log” is a multiple lines of enhanced rich text column with append changes enabled. This workflow is configured on item modified event when the “Work Log” column value is changed. Configure send mail action to notify requester with latest worklog comments. Configure post an adaptive card action to notify requester in teams with latest worklog comments. Conditions : Work Log:afterchange:[[Any]] This condition indicates that value of worklog column has changed in this update to the item. If there is no change to this column then the workflow will not be executed. Action 1: Notify requester when worklog is modified. Configure send mail action to notify requester as shown below: Mail template: Placeholder used in the mail template: %%$getcolumnvalueforversion(WorkLog,Last,LastToFirst,withHeader)%% Action 2: Send adaptive card to Requester when worklog is modified. Configure &#8216;Post an Adaptive Card&#8217; action to send adaptive card to requester. Placeholder used in the description column below: %%$getcolumnvalueforversion(WorkLog,Last,,withHeader,plain)%% Sample output : Version history of the Work Log column in Tickets list: Column value in the email received : Column value in the adaptive card received in Teams : About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "709",
    "name": "709 - Customize Crow Canyon List View using JavaScript Code.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/709%20-%20Customize%20Crow%20Canyon%20List%20View%20using%20JavaScript%20Code.html",
    "title": "Customize Crow Canyon List View Using JavaScript Code",
    "text": "Customize Crow Canyon List View using JavaScript Code - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Customize Crow Canyon List View using JavaScript Code Customize Crow Canyon List View using JavaScript Code 789 views 8 min , 8 sec read 0 Applies To : NITRO activated sites in SharePoint Online and On-Premises (2013, 2016, 2019 and SE) Description Crow Canyon List View is a NITRO component that provides enhanced capabilities to view SharePoint list items. It also provides a host of features to do operations on list items. The data shown in list view can be customized using JavaScript code. This is for advanced scenarios like data filtering that cannot be done with CAML queries or SharePoint views. Or to show item data in a format different from what is stored in the list. Detailed Instructions Users can customize the list view using JavaScript code in NITRO List View configuration. To customize the list view, go to the Site -> Site Settings -> Crow Canyon List View -> Edit the list view configuration -> Navigate to Advanced Settings -> Configure custom script in &#8220;Customize List View JavaScript Code&#8221; section as shown below: NITRO list view has below functions in custom JavaScript. GetColumnsToFetch Use this function to fetch data for any columns in addition to columns in the configured list view. These column values can be used in other functions like &#8220;UpdateListItemsValues&#8221; and &#8220;UpdateListItemValues&#8221;. Ex : scriptManager.GetColumnsToFetch = function(viewColumns, viewName, objListView){ var loadColumnNames = &#91;\"CaseId\",\"Requester\",\"AssignedStaff\"]; return loadColumnNames; }; In above example, &#8220;CaseId&#8221;, &#8220;Requester&#8221;, and &#8220;AssignedStaff&#8221; are the column internal names in the list. viewColumns : This parameter has the column names from the configured list view. viewName : This parameter has the current view name in case of multiple list views configured in the list view settings. objListView : This parameter has the JavaScript object representing the NITRO list view, it can be used in some advanced scenarios. UpdateListItemsValues This function will be called after fetching data for the view configured in the list view. This function can be used to modify list item column values before this data is processed to render the list view. Ex : scriptManager.UpdateListItemsValues = function(listItems, viewName, objListView){ return listItems; }; listItems : This parameter has data for all items in the specified view. UpdateListItemValues This function will be called after fetching items for the view configured in the list view. This function can be used to modify list column values before this data is processed to render the list view. This function is called for each item in the list view. Note : Use this function (UpdateListItemValues) or UpdateListItemsValues. There should not be a case to use both. Former is called for each item separately, latter is called only once with all the values. Ex : scriptManager.UpdateListItemValues = function(listItem, viewName, objListView){ return listItem; }; listItem : This parameter has the data for the list item that can be modified. IsItemVisible This function can be used to decide whether to show the item in the list view or not. This function can be used for advanced filtering that is not possible with CAML queries. This function will be called for each item in the list view. Ex : scriptManager.IsItemVisible = function(listItem, viewName, objListView){ return true; }; Sample Use Cases Below sample use case are configured in NITRO list view using custom JavaScript. Use case 1: Format Crow Canyon List View to show custom generated unique Id This sample use case uses the “scriptManager.UpdateListItemsValues&#8221; function in the custom JavaScript. In list column there is a number value. Script code formats the number based on data in item and the formatted value is shown in list view instead of just the number value. Note that this does not update the data stored in the list, it is only to display in the list view. Details: NITRO list view is configured on Tickets list, and it has below columns in the list views. Title CaseId Category Issue Type Requester Priority Status Type of Ticket NITRO List View is configured with three views and list view is added to a page. Unassigned Tickets All Open Tickets All Items &#8220;Case Id&#8221; column in Tickets list has the value of SharePoint generated unique ID (number). Each item has a unique value for this column. In this sample use case, we have configured custom script to show the &#8220;Case Id&#8221; column value as an alpha-numeric Id. For many business scenarios, it is required to have an alpha-numeric Id. For example: INC_00001 instead of just 1. Note that using NITRO Id column or NITRO Workflows, formatted value can be saved in columns. However, here we are taking the scenario where stored value is just a number but while displaying it needs to be a formatted value. This case Id is constructed based on values in the list item column &#8220;Type of Ticket&#8221; and the SharePoint generated item Id. &#8220;Type of Ticket&#8221; has two options Incident Request If &#8220;Type of Ticket&#8221; is &#8220;Incident&#8221; then &#8220;Case Id&#8221; will be shown as &#8220;INC_00001&#8221; If &#8220;Type of Ticket&#8221; is &#8220;Request&#8221; then &#8220;Case Id&#8221; will be shown as &#8220;REQ_00001&#8221; Ex : INC_00001 and REQ_00001 In above example, &#8220;INC&#8221; and &#8220;REQ&#8221; represents the &#8220;Type of Ticket&#8221;. &#8220;0000&#8221; is the prefix for the item Id &#8220;1&#8221; is the SharePoint generated unique item Id List View Configuration Go to the Site -> Site Settings -> Crow Canyon List view and configure the list view as shown below: Script used in above: var scriptManager = { }; scriptManager.GetColumnsToFetch = function(viewColumns, viewName, objListView){ var loadColumnNames = &#91;\"ID\",\"TypeofTicket\"]; return loadColumnNames; }; scriptManager.UpdateListItemsValues = function(listItems, viewName, objListView){ var oListItemsEnum = listItems.getEnumerator(); while (oListItemsEnum.moveNext()) { var oListItem = oListItemsEnum.get_current(); var Id = oListItem.get_id(); var typeOfTicket = oListItem.get_item(\"TypeofTicket\"); if(typeOfTicket == \"Incident\"){ oListItem.set_item(\"CaseId\", \"INC_\" + (\"00000\" + Id).slice(-5)); } if(typeOfTicket == \"Request\"){ oListItem.set_item(\"CaseId\", \"REQ_\" + (\"00000\" + Id).slice(-5)); } } return listItems }; scriptManager.UpdateListItemValues = function(listItem, viewName, objListView){ return listItem; }; scriptManager.IsItemVisible = function(listItem, viewName, objListView){ return true; }; return scriptManager; Script Details: scriptManager.GetColumnsToFetch : Use this function to load the columns that are not displayed in the list view but are required in the script for custom functionality. List view only loads the columns to be displayed, so we need to use this function to get data for additional columns. In this list view, &#8220;Type of Ticket&#8221; column value is required to calculate the Case Id in the Ticket. However, &#8220;Type of Ticket&#8221; column is not there in the list view, so its value is not get loaded. Hence, it is specified in this function. We can load additional columns if we want to use these columns in &#8220;scriptManager.UpdateListItemsValues&#8221;. scriptManager.UpdateListItemsValues: This function is used to set the &#8220;Case Id&#8221; column value based on the &#8220;Type of Ticket&#8221; and the SharePoint generated Id value. This function will iterate through each item in the list view. Based on the &#8220;Type of Ticket&#8221;, generate the formatted &#8220;Case Id&#8221; column value and show it in the list view. Note : This will not update the column value in the Ticket list item, it is only to show the changed value in the list view. Above script is applicable for all the configured list views. Sample output: Before using the custom script: After using the custom script: For the same use case above, we can use &#8220;scriptManager.UpdateListItemValues&#8221; function. The difference is that this function is called for each item in the list view separately. Sample script : var scriptManager = { }; scriptManager.GetColumnsToFetch = function(viewColumns, viewName, objListView){ var loadColumnNames = &#91;\"ID\",\"TypeofTicket\"]; return loadColumnNames; }; scriptManager.UpdateListItemsValues = function(listItems, viewName, objListView){ return listItems }; scriptManager.UpdateListItemValues = function(listItem, viewName, objListView){ var Id = listItem.get_id(); var typeOfTicket = listItem.get_item(\"TypeofTicket\"); if(typeOfTicket == \"Incident\"){ listItem.set_item(\"CaseId\", \"INC_\" + (\"00000\" + Id).slice(-5)); } if(typeOfTicket == \"Request\"){ listItem.set_item(\"CaseId\", \"REQ_\" + (\"00000\" + Id).slice(-5)); } return listItem; }; scriptManager.IsItemVisible = function(listItem, viewName, objListView){ return true; }; return scriptManager; Use case 2: Filter list view items based on a column value Configured a NITRO list view to show all the items from Tickets list. Tickets list has a &#8220;Status&#8221; column with below options: Unassigned Assigned Resolved Closed Configure a custom script to show only open Tickets i.e. Status is &#8216;Unassigned&#8217; and &#8216;Assigned&#8217;. &#8220;scriptManager.IsItemVisible&#8221; function is to control item visibility in the list view. If &#8216;true&#8217; value is returned from this function then item will be shown in the list view. If &#8216;false&#8217; value is returned, then item will not be shown. Custom Script: var scriptManager = { }; scriptManager.GetColumnsToFetch = function(viewColumns, viewName, objListView){ var loadColumnNames = &#91;\"RequestStatus\"]; return loadColumnNames; }; scriptManager.UpdateListItemsValues = function(listItems, viewName, objListView){ return listItems; }; scriptManager.UpdateListItemValues = function(listItem, viewName, objListView){ return listItem; }; scriptManager.IsItemVisible = function(listItem, viewName, objListView){ var status = listItem.get_item(\"RequestStatus\"); if(status != \"Resolved\" &amp;&amp; status != \"Closed\"){ return true; } return false; }; return scriptManager; Sample output without script: Sample output with custom script : Use case 3: Configure common workspace/page for different roles with common list view. This example shows how to control item visibility based on multiple rules based on logged-in user and item status. It uses the column permission schema used in NITRO Forms to configure complex conditions. Though JSON structure looks little complex, it is simpler to use than to write the code from scratch. NITRO list view is configured for Requests list, and it has below columns: Column Name Column Internal Name Column Type Title Title Single line of text Status Status Choice type Options : &#8211; Pending Management Decision &#8211; Pending Scheduling &#8211; In Progress &#8211; Closed Assigned Staff AssignedStaff Person or Group Requester Requester Person or Group Description Description Multiple lines of text Priority Priority Choice Options : &#8211; Low &#8211; Normal &#8211; High 2. Below are the roles used in this example: End Users Management Group Scheduling Group 3. Requirement : Configure a common list view to show the items based on the &#8216;Status&#8217; and role of the current logged in user. Note that this complex requirement cannot be achieved with SharePoint list views or even by writing a CAML query. Rules : If logged-in user&#8217;s name is in &#8216;Requester&#8217; column (user is requester of the item), then show that item regardless of the status value. If logged-in user is member of &#8220;Management Group&#8221; then show the item only if status is &#8220;Pending Management Decision&#8221;. If logged-in user is member of &#8220;Scheduling Group&#8221; when show the item only if status is &#8220;Pending Scheduling&#8221;. If logged-in user&#8217;s name is in &#8216;Assigned Staff&#8217; column (user is assigned to work on the item), then show that item if status is &#8220;In Progress&#8221;. 4. This is a complex use case and script is complicated. If required, Crow Canyon can assist as part of professional services for such cases. List view configuration: Configure Crow Canyon list view for Requests. Go to the Site -> Site Settings -> Crow Canyon List Views and configure the list view as shown below: Script used in above: var scriptManager = { }; scriptManager.GetColumnsToFetch = function(viewColumns, viewName, objListView){ var loadColumnNames = &#91;]; return loadColumnNames; }; scriptManager.UpdateListItemsValues = function(listItems, viewName, objListView){ return listItems; }; scriptManager.UpdateListItemValues = function(listItem, viewName, objListView){ return listItem; }; scriptManager.IsItemVisible = function(listItem, viewName, objListView){ var ListPermissions = &#91;{\"ID\":\"733fa1a1-5b77-451b-830a-e270f7d21e44\",\"Name\":\"Show for Requester\",\"Level\":\"Write\",\"ForAll\":false,\"ForGroup\":{\"Type\":\"Column\",\"Operator\":\"In\",\"Value\":\"Requester\"},\"Conditions\":{\"condition\":\"AND\",\"rules\":&#91;]},\"FormType\":7,\"FormFor\":7,\"LoggedInUserConditionsMatch\":\"MatchAll\",\"LoggedUserConditions\":&#91;{\"Title\":\"Requester\",\"Value\":\"Requester\",\"ValueType\":\"Column\",\"Operator\":\"In\",\"ID\":\"993d0051-afdf-4314-a305-3bb9e8cd44e2\"}]},{\"ID\":\"53c30c34-66ee-4c08-a561-39f62a98d75f\",\"Name\":\"Show for Management group\",\"Level\":\"Write\",\"ForAll\":false,\"ForGroup\":{\"Type\":\"User\",\"Operator\":\"In\",\"Value\":\"$group##Management Group;\"},\"Conditions\":{\"condition\":\"AND\",\"rules\":&#91;{\"id\":\"Status\",\"field\":\"Status\",\"type\":\"string\",\"operator\":\"equal\",\"value\":\"Pending Management Decision\"}]},\"FormType\":7,\"FormFor\":7,\"LoggedInUserConditionsMatch\":\"MatchAll\",\"LoggedUserConditions\":&#91;{\"Title\":\"Management Group\",\"Value\":\"$group##Management Group;\",\"ValueType\":\"User\",\"Operator\":\"In\",\"ID\":\"aaa7b9c6-108a-4bb9-bb91-fca305c50e11\"}]},{\"ID\":\"f3f556da-1308-45d4-9e55-ec44e27c0331\",\"Name\":\"Show for scheduling\",\"Level\":\"Write\",\"ForAll\":false,\"ForGroup\":{\"Type\":\"User\",\"Operator\":\"In\",\"Value\":\"$group##Scheduling Group;\"},\"Conditions\":{\"condition\":\"AND\",\"rules\":&#91;{\"id\":\"Status\",\"field\":\"Status\",\"type\":\"string\",\"operator\":\"equal\",\"value\":\"Pending Scheduling\"}]},\"FormType\":7,\"FormFor\":7,\"LoggedInUserConditionsMatch\":\"MatchAll\",\"LoggedUserConditions\":&#91;{\"Title\":\"Scheduling Group\",\"Value\":\"$group##Scheduling Group;\",\"ValueType\":\"User\",\"Operator\":\"In\",\"ID\":\"8a74729c-346c-4d2d-a1ed-0893277bbce6\"}]},{\"ID\":\"8efb45fe-2f3d-4003-9aee-ddf4168fafb3\",\"Name\":\"Show for Assigned Staff\",\"Level\":\"Write\",\"ForAll\":false,\"ForGroup\":{\"Type\":\"Column\",\"Operator\":\"In\",\"Value\":\"AssignedStaff\"},\"Conditions\":{\"condition\":\"AND\",\"rules\":&#91;{\"id\":\"Status\",\"field\":\"Status\",\"type\":\"string\",\"operator\":\"equal\",\"value\":\"In Progress\"}]},\"FormType\":7,\"FormFor\":7,\"LoggedInUserConditionsMatch\":\"MatchAll\",\"LoggedUserConditions\":&#91;{\"Title\":\"AssignedStaff\",\"Value\":\"AssignedStaff\",\"ValueType\":\"Column\",\"Operator\":\"In\",\"ID\":\"14639a38-bf30-48a8-9c2c-738928e403b3\"}]}]; var ObjCEUtility = objListView.GetConditionsEvalUtils(listItem); var showItem = false; for (var pIdx = 0; pIdx &lt; ListPermissions.length; pIdx++) { var objPermission = ListPermissions&#91;pIdx]; if (ObjCEUtility.IsValidPermission(objPermission, true)) { if (ObjCEUtility.EvaluateConditions(objPermission.Conditions, true)) { showItem = true; break; } } } return showItem; }; return scriptManager; Script details : In this custom script, we have used &#8220;scriptManager.IsItemVisible&#8221; function to show/hide the item based on the logged in user role and item status value. In this function, we have defined &#8220;ListPermissions&#8221; collection. This has the JSON for conditions to show/hide the item. Next, iterate each permission defined in the &#8220;ListPermissions&#8221; collection and verify if the permission level is valid for the list item or not. If item matches any of the rules, then it is shown, else hidden from the list view. Note : We need to generate the JSON for permissions manually and put it in the script. Follow below steps to generate the JSON for permissions. Generate JSON for permissions: We need to use NITRO Forms to generate the permissions JSON, follow below steps: Define all the permission rules that need to be setup. Refer rules given in this example above. Configure above permission rules in NITRO Forms on any of the columns temporarily, as shown below. These permissions can be removed after generating the required JSON. Permissions setup: Rule 1 : If logged-in user&#8217;s name is in &#8216;Requester&#8217; column (user is requester of the item), then show that item regardless of the status value. Rule 2 : If logged-in user is member of &#8220;Management Group&#8221; then show the item only if status is &#8220;Pending Management Decision&#8221;. Similarly, configure permissions for other rules. Rule 3: If logged-in user is member of &#8220;Scheduling Group&#8221; when show the item only if status is &#8220;Pending Scheduling&#8221;. Rule 4 : If logged-in user&#8217;s name is in &#8216;Assigned Staff&#8217; column (user is assigned to work on the item), then show that item if status is &#8220;In Progress&#8221;. After configuring the permissions, save the NITRO Form settings. 5. Next, click &#8216;Manage Forms&#8217; in NITRO forms and open NITRO form settings as shown below: 6. Copy current form settings and paste it in a notepad++ and format it as shown below: 7. Navigate to the node &#8220;CPermissions&#8221; and copy all permission levels as shown below: 6. Paste the copied permissions in a notepad++ and minimize the JS and put it in the custom script as shown below: Sample output: For different roles, we are using below users in this example. User Role Maria Clark Requester Joe Bloggs Assigned Staff John Smith Management Group and Scheduling Group Output for logged in user as Requester: Output for logged in user as Assigned Staff: Output for logged in user in &#8220;Management Group&#8221; and &#8220;Scheduling Group&#8221;: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "71",
    "name": "71 - Comprehensive List Of Functions in NITRO Studio – 2.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/71%20-%20Comprehensive%20List%20Of%20Functions%20in%20NITRO%20Studio%20%E2%80%93%202.html",
    "title": "Comprehensive List Of Functions In NITRO Studio – 2",
    "text": "Comprehensive List Of Functions in NITRO Studio – 2 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Comprehensive List Of Functions in NITRO Studio &#8211; 2 Comprehensive List Of Functions in NITRO Studio &#8211; 2 1012 views 3 min , 3 sec read 0 Applies To : SharePoint On-premises (2013/2016/2019/SharePoint Server Subscription Edition) and SharePoint Online For more functions, refer to this article Description This article describes the syntax and examples of the functions that are available in our NITRO Workflows component. Functions available in NITRO Workflows $pad([Placeholder],length,padchar,left/right) This function is used to add specified padding character to left or right of the text to the specified length. Syntax : $pad([ColumnDisplayName|ColumnInternalName],length,padchar,left/right) Example : $pad([ID|ID],6,0,left) ID: 6 Output : 000006 $DateFormat(Format,DateTimeField) This function is used to format a date value as per specified format. Syntax : $DateFormat(Format,[ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example 1 : $DateFormat(dd MMMM yyyy HH:mm:ss,[Due Date|DueDate]) Due Date: 5/30/2023 Output : 30 May 2023 05:00:00 Example 2 : $DateFormat(dd MMMM yyyy HH:mm:ss) Output : 30 May 2023 06:30:00 For more format options refer: https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings $Day(DateTimeField) This function is used to get the day number from the given date. Syntax : $Day([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Day([Due Date|DueDate]) Due Date: 05/30/2023 Output : 30 $Month(DateTimeField) This function is used to get the month number from the given date. Syntax : $Month([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Month([Due Date|DueDate]) Due Date: 05/30/2023 Output : 05 $Year(DateTimeField) This function is used to get the year number from the given date. Syntax : $Year([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Year([Due Date|DueDate]) Due Date: 05/30/2023 Output : 2023 $Weekday(DateTimeField) This function is used to get the day of week from the given date. Syntax : $Weekday([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Weekday([Due Date|DueDate]) Due Date: 05/30/2023 Output : Tuesday $WeekdayNumber(DateTimeField) This function is used to get the day of the week number from the given date. Syntax : $WeekdayNumber([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $WeekdayNumber([Due Date|DueDate]) Due Date: 05/30/2023 Output : 2 Below are the weeks and corresponding weekday numbers. Week Name Week Day Number Sunday 0 Monday 1 Tuesday 2 Wednesday 3 Thursday 4 Friday 5 Saturday 6 $WeekNumber(DateTimeField) This function is used to get the week number from the given date. Syntax : $WeekNumber([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $WeekNumber([Due Date|DueDate]) Due Date: 05/30/2023 Output : 23 $DayOfTheYear(DateTimeField) This function is used to get the day of the year from the given date. Syntax : $DayOfTheYear([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $DayOfTheYear([Due Date|DueDate]) Due Date: 05/30/2023 Output : 150 $Hour(DateTimeField) This function is used to get the hour number from the time part of the given date. Syntax : $Hour([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Hour([Due Date|DueDate]) Due Date: 05/30/2023 7:30:45 PM Output : 19 $Minute(DateTimeField) This function is used to get the minute number from the time part of the given date. Syntax : $Minute([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Minute([Due Date|DueDate]) Due Date: 05/30/2023 7:30:45 PM Output : 30 $Days(DateTimeField,DateTimeField) This function is used to get the difference in days for two date values. Syntax : $Days([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Days([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 1 $Hours(DateTimeField,DateTimeField) This function is used to get the difference in hours for two date values. Syntax: $Hours([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example: $Hours([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output: 29 $Minutes(DateTimeField,DateTimeField) This function is used to get the difference in minutes for two date values. Syntax : $Minutes([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Minutes([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 1740 $Seconds(DateTimeField,DateTimeField) This function is used to get the difference in seconds for two date values. Syntax : $Seconds([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Seconds([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 104400 $Left(TextField or Value,number) This function is used to get the specified number of characters from the left of the given text. Syntax : $Left([ColumnDisplayName|ColumnInternalName],number) Example : $Left([Type of Request|TypeofRequest],3) Type of Request: INCIDENT Output : INC $Right(TextField or Value,number) This function is used to get the specified number of characters from the right of the given text. Syntax : $Left([ColumnDisplayName|ColumnInternalName],number) Example : $Left([Type of Request|TypeofRequest],3) Type of Request: INCIDENT Output : ENT $Substring(TextField or Value,Start number,length) This function is used to get the specified number of characters starting from the given starting position of the text. Syntax : $Substring([ColumnDisplayName|ColumnInternalName], Start number, length) Example : $Substring([Type of Request|TypeofRequest],3,5) Type of Request: INCIDENT Output : IDENT $ToLowerCase(TextField) This function is used to convert given text to lower case. Syntax : $ToLowerCase([ColumnDisplayName|ColumnInternalName]) Example : $ToLowerCase([Title|Title]) Title: INCIDENT Output : incident $ToUpperCase(TextField) This function is used to convert given text to upper case. Syntax : $ToLowerCase([ColumnDisplayName|ColumnInternalName]) Example : $ToLowerCase([Title|Title]) Title: incident Output : INCIDENT About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "710",
    "name": "710 - Comprehensive List Of Functions in NITRO Studio – 2.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/710%20-%20Comprehensive%20List%20Of%20Functions%20in%20NITRO%20Studio%20%E2%80%93%202.html",
    "title": "Comprehensive List Of Functions In NITRO Studio – 2",
    "text": "Comprehensive List Of Functions in NITRO Studio – 2 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Comprehensive List Of Functions in NITRO Studio &#8211; 2 Comprehensive List Of Functions in NITRO Studio &#8211; 2 1012 views 3 min , 3 sec read 0 Applies To : SharePoint On-premises (2013/2016/2019/SharePoint Server Subscription Edition) and SharePoint Online For more functions, refer to this article Description This article describes the syntax and examples of the functions that are available in our NITRO Workflows component. Functions available in NITRO Workflows $pad([Placeholder],length,padchar,left/right) This function is used to add specified padding character to left or right of the text to the specified length. Syntax : $pad([ColumnDisplayName|ColumnInternalName],length,padchar,left/right) Example : $pad([ID|ID],6,0,left) ID: 6 Output : 000006 $DateFormat(Format,DateTimeField) This function is used to format a date value as per specified format. Syntax : $DateFormat(Format,[ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example 1 : $DateFormat(dd MMMM yyyy HH:mm:ss,[Due Date|DueDate]) Due Date: 5/30/2023 Output : 30 May 2023 05:00:00 Example 2 : $DateFormat(dd MMMM yyyy HH:mm:ss) Output : 30 May 2023 06:30:00 For more format options refer: https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings $Day(DateTimeField) This function is used to get the day number from the given date. Syntax : $Day([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Day([Due Date|DueDate]) Due Date: 05/30/2023 Output : 30 $Month(DateTimeField) This function is used to get the month number from the given date. Syntax : $Month([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Month([Due Date|DueDate]) Due Date: 05/30/2023 Output : 05 $Year(DateTimeField) This function is used to get the year number from the given date. Syntax : $Year([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Year([Due Date|DueDate]) Due Date: 05/30/2023 Output : 2023 $Weekday(DateTimeField) This function is used to get the day of week from the given date. Syntax : $Weekday([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Weekday([Due Date|DueDate]) Due Date: 05/30/2023 Output : Tuesday $WeekdayNumber(DateTimeField) This function is used to get the day of the week number from the given date. Syntax : $WeekdayNumber([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $WeekdayNumber([Due Date|DueDate]) Due Date: 05/30/2023 Output : 2 Below are the weeks and corresponding weekday numbers. Week Name Week Day Number Sunday 0 Monday 1 Tuesday 2 Wednesday 3 Thursday 4 Friday 5 Saturday 6 $WeekNumber(DateTimeField) This function is used to get the week number from the given date. Syntax : $WeekNumber([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $WeekNumber([Due Date|DueDate]) Due Date: 05/30/2023 Output : 23 $DayOfTheYear(DateTimeField) This function is used to get the day of the year from the given date. Syntax : $DayOfTheYear([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $DayOfTheYear([Due Date|DueDate]) Due Date: 05/30/2023 Output : 150 $Hour(DateTimeField) This function is used to get the hour number from the time part of the given date. Syntax : $Hour([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Hour([Due Date|DueDate]) Due Date: 05/30/2023 7:30:45 PM Output : 19 $Minute(DateTimeField) This function is used to get the minute number from the time part of the given date. Syntax : $Minute([ColumnDisplayName|ColumnInternalName]) Note : Column placeholder in above syntax is optional. By default, it will consider the site&#8217;s current time. Example : $Minute([Due Date|DueDate]) Due Date: 05/30/2023 7:30:45 PM Output : 30 $Days(DateTimeField,DateTimeField) This function is used to get the difference in days for two date values. Syntax : $Days([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Days([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 1 $Hours(DateTimeField,DateTimeField) This function is used to get the difference in hours for two date values. Syntax: $Hours([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example: $Hours([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output: 29 $Minutes(DateTimeField,DateTimeField) This function is used to get the difference in minutes for two date values. Syntax : $Minutes([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Minutes([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 1740 $Seconds(DateTimeField,DateTimeField) This function is used to get the difference in seconds for two date values. Syntax : $Seconds([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]) Example : $Seconds([End Date|EndDate],[Start Date|StartDate]) Start Date: 05/29/2023 12:00 AM End Date: 05/30/2023 5:00 AM Output : 104400 $Left(TextField or Value,number) This function is used to get the specified number of characters from the left of the given text. Syntax : $Left([ColumnDisplayName|ColumnInternalName],number) Example : $Left([Type of Request|TypeofRequest],3) Type of Request: INCIDENT Output : INC $Right(TextField or Value,number) This function is used to get the specified number of characters from the right of the given text. Syntax : $Left([ColumnDisplayName|ColumnInternalName],number) Example : $Left([Type of Request|TypeofRequest],3) Type of Request: INCIDENT Output : ENT $Substring(TextField or Value,Start number,length) This function is used to get the specified number of characters starting from the given starting position of the text. Syntax : $Substring([ColumnDisplayName|ColumnInternalName], Start number, length) Example : $Substring([Type of Request|TypeofRequest],3,5) Type of Request: INCIDENT Output : IDENT $ToLowerCase(TextField) This function is used to convert given text to lower case. Syntax : $ToLowerCase([ColumnDisplayName|ColumnInternalName]) Example : $ToLowerCase([Title|Title]) Title: INCIDENT Output : incident $ToUpperCase(TextField) This function is used to convert given text to upper case. Syntax : $ToLowerCase([ColumnDisplayName|ColumnInternalName]) Example : $ToLowerCase([Title|Title]) Title: incident Output : INCIDENT About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "711",
    "name": "711 - Create user in Azure Active Directory with NITRO Workflows using Microsoft Graph API - Crow Canyon S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/711%20-%20Create%20user%20in%20Azure%20Active%20Directory%20with%20NITRO%20Workflows%20using%20Microsoft%20Graph%20API%20-%20Crow%20Canyon%20S.html",
    "title": "Create User In Azure Active Directory With NITRO Workflows Using Microsoft Graph API Crow Canyon S",
    "text": "Create user in Azure Active Directory with NITRO Workflows using Microsoft Graph API - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create user in Azure Active Directory with NITRO Workflows using Microsoft Graph API Create user in Azure Active Directory with NITRO Workflows using Microsoft Graph API 713 views 2 min , 55 sec read 0 Applies to : SharePoint Online Description This article describes the steps to create a user in Azure Active Directory using Microsoft Graph API in NITRO Workflows using Invoke web service action. This can be used in scenarios where new users need to be created in on-boarding type of flows. SharePoint application site will have a list with details of the user like name, email, telephone number, and other attributes. Workflow will read these attributes and connect to Azure AD to create the user. For more details regarding Invoke Web Service action in NITRO Workflows, please refer to this article . Pre-requisites: User should be an administrator of O365 subscription. Should have full control permissions on the SharePoint site where workflow is to be configured. Summary of Steps App Registration in Azure Active Directory (Azure AD) Create a new app registration. Grant API permissions. Generate client secret. Configuration of NITRO Workflow Detailed Steps App Registration in Azure Active Directory Azure AD app is needed to get the required access to create the user in AD. App credentials are stored as part of workflow settings in your SharePoint site and Crow Canyon does not have access to this information. Create new app registration in Azure AD Go to Office 365 Admin Center -&gt; Azure Active Directory -&gt; App Registrations -&gt; New Registration Direct URL: https://aad.portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps For more details regarding app registration in Azure AD, please refer to this article: https://learn.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app Copy Client Id and Tenant Id after registering the App as shown in image below. These will be used later in the NITRO Workflow. Grant API Permissions As shown in image above, click &#8220;API Permissions&#8221; link. Click Add a permission -&gt; Microsoft Graph -&gt; Application Permissions -&gt; Add below permission levels for &#8220;Delegated&#8221; and &#8220;Application&#8221; type of permissions. User.ReadWrite.All Directory.ReadWrite.All After adding permissions, click &#8216;Grant admin consent for &#8216; Generate the client secret Go to Certificates and secrets -&gt; New client secret -&gt; Add a client secret. You can give any description for the secret. Select the appropriate expiry duration for the certificate. Secret will need to be regenerated after expiry and workflow needs to be updated with new secret. After adding client secret, copy the client secret. Configuration of NITRO Workflow Go to the site where we want to configure workflow to create user in Azure AD. Workflow is to be configured on the list that has the required user attributes information. Though workflow can be used with hard-coded values for user attributes, usually that will not be the case. S. No. Column Name Column Internal Name Description 1 First Name FirstName Specifies first name of the user 2 Last Name LastName Specifies last name of the user 3 Display Name DisplayName Specifies display name of the user 4 Email Email Specifies email address of the user 5 Phone Phone Specifies mobile phone number of the user 6 Department Department Specifies department of the user Go to Site Settings -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows and configure the workflow as shown below: Action1: Get Access Token Configure invoke web service action to get access token as shown below: URL : https://login.microsoftonline.com/{{tenantId}}/OAuth2/V2.0/token In the above URL, replace &#8220;{{tenantId}}&#8221; with your tenant id that was copied in &#8220;Create new app registration&#8221; section above. HTTP Method: POST Headers : Key Value Content-Type application/x-www-form-urlencoded Data : grant_type=client_credentials&amp;client_id={{ClientId}}&amp;client_secret={{ClientSecretId}}&amp;scope=https://graph.microsoft.com/.default In the above, replace {{ClientId}} and {{ ClientSecretId}} that we have copied earlier. Action2: Create AD User Create invoke web service action to create user in azure active directory. URL : https://graph.microsoft.com/v1.0/users Authentication : Select Bearer Token authentication %%$jsonpath2(GetAccessToken##Value,@$.access_token)%% In &#8220;GetAccessToken##Value&#8221;, if you are using a different name for action to get token, replace &#8216;GetAccessToken&#8217; with name you have specified for that action. Data: { &#8220;accountEnabled&#8221;: true, &#8220;displayName&#8221;: &#8220;[[UserName]]&#8221;, &#8220;mailNickname&#8221;: &#8220;[[mailNickName]]&#8221;, &#8220;userPrincipalName&#8221;: &#8220;[[UserPrincipleName]]&#8221;, &#8220;passwordProfile&#8221; : { &#8220;forceChangePasswordNextSignIn&#8221;: false, &#8220;password&#8221;: &#8220;[[Password]]&#8221; } } In above data, replace the placeholders: [[UserName]]: Specify the name to display in the address book for the user. [[mailNickName]]: Specify the mail alias for the user. [[UserPrincipleName]]: Specify user principle name [[Password]]: Specify the password profile for the user. Example with direct values: { \"accountEnabled\": true, \"displayName\": \"Michael Ross\", \"mailNickname\": \"Michael\", \"userPrincipalName\": \"Michael@contoso.onmicrosoft.com\", \"passwordProfile\" : { \"forceChangePasswordNextSignIn\": false, \"password\": \"abc123!\" } } Example with column placeholders from the list: { \"accountEnabled\": true, \"displayName\": \"%%&#91;DisplayName|Display Name]%%\", \"mailNickname\": \"%%&#91;FirstName|First Name]%%\", \"userPrincipalName\": \"%%&#91;Email|Email]%%\", \"passwordProfile\" : { \"forceChangePasswordNextSignIn\": false, \"password\": \"abc123!\" } } Note : We can add other properties in JSON format in &#8220;Data&#8221; container in the above workflow action. For more properties, refer &#8220;Properties&#8221; section in below article: https://learn.microsoft.com/en-us/graph/api/resources/user?view=graph-rest-1.0 Example with other properties in JSON format: { \"accountEnabled\": true, \"displayName\": \"Michael Ross\", \"mailNickname\": \"Michael\", \"userPrincipalName\": \"Michael@contoso.onmicrosoft.com\", \"passwordProfile\" : { \"forceChangePasswordNextSignIn\": false, \"password\": \"abc123!\" }, \"companyName\": \"Crow Canyon\", \"department\": \"IT\", \"city\": \"Hyderabad\", \"mobilePhone\": \"9874563210\" } Troubleshooting Scenarios: If Azure AD app credentials are not valid (Client Id and Secret), then workflow will show below error in the logs. 2. Azure AD credentials are valid, but permissions are not granted to the App. 3. If user with same username already exists in the Azure AD. For #2 and #3, workflow will show below error in the logs. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "712",
    "name": "712 - Function_ Append in NITRO Workflows and Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/712%20-%20Function_%20Append%20in%20NITRO%20Workflows%20and%20Custom%20Actions.html",
    "title": "Function Append In NITRO Workflows And Custom Actions",
    "text": "Function: Append in NITRO Workflows and Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Function: Append in NITRO Workflows and Custom Actions Function: Append in NITRO Workflows and Custom Actions 928 views 4 min , 13 sec read 0 Applies to : NITRO Workflows and Custom Actions (Online) For complete list of functions, please refer to this article . Introduction This function can be used to append value to a collection. For example: Add a user to an existing collection of users in a multi-user column. Supported column types to add value are multi-user, multi-lookup and multi-choice. Appended values can also be saved in text type columns. Syntax: With Expression Builder Ex: To use ‘Append’ function without expression builder use below syntax: $ append(lookup/lookupid/lookupvalue/user/userid/uservalue/multichoice/string,separator,[placeholder],[placeholder]) Parameters to be defined in above function: Param1- Lookup/LookupId/LookupValue/User/UserId/UserValue/MultiChoice/String: S. No. Parameter Value Description 1 Lookup Target column is of type multi-lookup. 2 LookupId Target column is of type multi-lookup. Or target column is of type text and only lookup item Ids are required. 3 LookupValue Target column is of type text and only lookup item display values are required. 4 User Target column is of type multi-user. 5 UserId Target column is of type multi-user. Or target column is of type text and only user Ids are required. 6 UserValue Target column is of type text and only user display values (name of user) are required. 7 MultiChoice Target column is of type multi-choice. 8 String Target column is of type text. Or target is a variable. Param2- separator: For &#8216;String&#8217; type output or when target is a text type column or a variable, specify the separator for the values. Multiple values separated by specified character can be used in scenarios where such a list needs to be passed to external systems via Invoke Web API action. Or data must be converted to specified format and saved to text type columns. Param3- [Placeholder]: Specify column placeholder, fixed value, or variable for input values. Param4- [Placeholder]: Specify column placeholder, fixed value, or variable for input values. Click ‘+’ (available in right side of Append Function in EB) to add more parameter in the function. These parameters can be a column placeholder, fixed value, or variable for input values. Please refer to below table for scenarios and corresponding parameters for the append function. Scenario Description Target Column Type / Variable Param 1 Param 2: Separator Param 3: [Placeholder]/Fixed Value/Variable Param 4: [Placeholder]/Fixed Value/Variable More Parameters Output Example Add values from a lookup column to a multi-lookup column. &nbsp; Multi-Lookup Column to which value needs to be added &nbsp; Ex: [LookupMultiCategory] Lookup Not Required Same as target column: [LookupMultiCategory] &nbsp; Value before append: Calendar;Email Column whose value need to be added. Value in this column will not change. &nbsp; Column: [LookupSingleCategory] &nbsp; Value: Finance NA Value in target column after append: Calendar;Email;Finance Get a comma separated list of lookup column Id values from two or more lookup columns. Variable/ Text columns to which value needs to be added &nbsp; Ex: [TextLookupId] &nbsp; &nbsp; LookupId , Same as target column: [TextLookupId] &nbsp; Value before append: &nbsp;Ex: 6 Column whose value need to be added. Value in this column will not change. &nbsp; Column: [LookupMultiCategory] &nbsp; Value: Calendar;Email Column whose value need to be added. Value in this column will not change. &nbsp; Column: [SingleConverted] &nbsp; Value: 1 Value in target column after append: 6,4,5,1 Get a semicolon separated list of lookup column display values from two or more lookup columns. Variable/Text Column to which value needs to be added &nbsp; Ex: [TextLookupValue] LookupValue ; Same as target column: [TextLookupValue] &nbsp; Value before append: Ex: Desktop &nbsp; Column whose value need to be added. Value in this column will not change. &nbsp; Column: [LookupMultiCategory] &nbsp; Value: Calendar;Email Column whose value need to be added. Value in this column will not change. &nbsp; Column: [SingleConverted] &nbsp; Value: Hardware Request &nbsp; Value in target column after append: Desktop;Calendar;Email;Hardware Request Add values from a user column to a multi-user column. &nbsp; Multi-User Column to which value needs to be added &nbsp; Ex: [UserAndGroupMulti] User Not Required Same as target column: [UserAndGroupMulti] &nbsp; Value before append: Ex: TemplateTest3 Members; Maria Clark Column whose value need to be added. Value in this column will not change. &nbsp; Column: [UserAndGroupSingle] &nbsp; Value: Joe Bloggs NA Value in target column after append: TemplateTest3 Members;Maria Clark; Joe Bloggs Get a semicolon separated list of user Id values from user column and fixed value. Variable/Text Column to which value needs to be added &nbsp; Ex: [TextUserId] &nbsp; UserId ; Same as target column: [TextUserId] &nbsp; Value before append: Ex: 129 Column whose value need to be added. Value in this column will not change. &nbsp; Column: [UserAndGroupMulti] &nbsp; Value: TemplateTest3 Members; Maria Clark Fixed Value Ex: 26 Value in target column after append: 129;140;153;26 Get a semicolon separated list of user display values from user column and fixed value. Variable/Text Column to which value needs to be added &nbsp; Ex: [TextUserValue] &nbsp; UserValue ; Same as target column: [TestUserValue] &nbsp; Value before append: Ex: Scott Restivo Column whose value need to be added. Value in this column will not change. &nbsp; Column: [UserAndGroupMulti] &nbsp; Value: TemplateTest3 Members; Maria Clark Fixed Value Ex: James Restivo Value in target column after append: Scott Restivo; TemplateText3 Members;Maria Clark;James Restivo Add values from a choice column and variable to a multi-choice column. &nbsp; Multi-Choice Column to which value needs to be added &nbsp; Ex: [DepartmentMulti] MultiChoice Not Required Same as target column: [DepartmentMulti] &nbsp; Value before append: Ex: Sales,HR Column whose value need to be added. Value in this column will not change. &nbsp; Column: [DepartmentSingle] &nbsp; Value: Marketing Variable: [varDepartment] Ex: Electronics &nbsp; Value in target column after append: Sales;HR;Marketing;Electronics Get a comma separated list of choice column values from two or more choice column Variable/Text Column to which value needs to be added &nbsp; Ex: [TextString] &nbsp; String , Same as target column: [TextString] &nbsp; Value before append: Ex: Finance Column whose value need to be added. Value in this column will not change. &nbsp; Column:[DepartmentMulti] &nbsp; Value: Sales,HR Column whose value need to be added. Value in this column will not change. &nbsp; Column: [DepartmentSingle] &nbsp; Value: Marketing &nbsp; Value in target column after append: Finance,Sales,HR,Marketing Other supported Scenarios Add values from a user column and fixed value to a multi-lookup column. &nbsp; Multi-User Column to which value needs to be added &nbsp; Ex: [MultiUserWithUserId] UserId ;#;# Same as target column: [MultiUserWithUserId] &nbsp; Value before append: Ex: TemplateTest3 Members; Maria Clark Column whose value need to be added. Value in this column will not change. &nbsp; Column: [UserAndGroupSingle] &nbsp; Value: Joe Bloggs Fixed Value: 70(Id of Demo Site Members) Value in target column after append: TemplateTest3Members; Maria Clark; Joe Bloggs; Demo Site Members Add values from a lookup column and fixed value to a multi-lookup column. &nbsp; Multi-lookup column to which value needs to be added &nbsp; Ex: [MultiLookupWithLookupId] &nbsp; LookupId ;#;# (For getting multiple Lookup id use this separtor) &nbsp; &nbsp; Same as target column: [MultiLookupWithLookupId] &nbsp; Value before append: Ex: Calendar;Email Column whose value need to be added. Value in this column will not change. &nbsp; Column: [LookupSingleCategory] Value: Finance Fixed Value: 6(Id of Printer) Value in target column after append: Calendar;Email;Finance;Printer Note: In NITRO Workflows: For users, to append a hard-coded user, specify one of the below user attributes: DisplayName Id Email In Custom Actions: For users, to append a hard-coded user, specify the ‘ID’ attribute of the user or SP Group or AD Group. Example of Append Function: In Custom Actions, Configure Append Function in Column Mappings of Update Item Action. Configure Update item custom action Define Variables Configure ‘Append’ function for different types of columns as shown below: Configure Column Mapping for ‘TextLookupValue’ column using Expression Builder as shown below: Similarly, configure other columns mappings using Expression Builder. Item column values before running the custom action: Item column values after running the custom action: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "713",
    "name": "713 - Function_ Format Value 2.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/713%20-%20Function_%20Format%20Value%202.html",
    "title": "Function Format Value 2",
    "text": "Function: Format Value 2 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Function: Format Value 2 Function: Format Value 2 920 views 2 min , 45 sec read 0 Applies to : NITRO Workflows and Custom Actions (Online) For complete list of functions, please refer to this article . Introduction This function is used to get the string output from Date/Number/Currency column in specified format. Note : Target Column should be Plain Text column. Syntax: With Expression Builder Ex: To use ‘Format Value 2’ function without expression builder use below syntax : $formatvalue2(Currency/DateTime/Number,[Placeholder],FormatSpecifier,CultureInfo) Parameters for the function: Currency/DateTime/Number: Specify type of input as Currency/DateTime/Number to format the input Placeholder: Specify the column placeholder, fixed Value, or variable for the input Format Specifier: Specify the output format as described below: Type of source Column Format Specifier with Expression Builder Format Specifier without Expression Builder Currency {0:c} @{0:c} Number {0:n} @{0:c} DateTime {0:dd/MM/yy} @{0:dd/MM/yy} Note: 1. DateTime value will be taken as per time zone configured for the site (regional settings). 2. Specify number for decimal places in format specifier. Default value is 2 decimal places. For ex: {0:c1}: here ‘1’ represent currency with one decimal place. For currency format specifier refer below link: Currency Format In C# (techieclues.com) {0:n0} : here ‘0’ represent Number with zero decimal place. For number format specifier refer below link Standard numeric format strings | Microsoft Learn For date format specifier refer below link: https://www.techieclues.com/blogs/string-format-for-datetime-in-c-sharp Culture Info: This parameter is supported in NITRO Workflows only. If this parameter is blank then default value is “en-US” which represents country “United State”. Culture Info formats the Currency/Number/DateTime value as per the country specified in culture info. Note: ‘Culture Info’ is only for format and does not change the date time value as per the time zone of the country. To know Culture Info Code, follow below link: https://www.techieclues.com/blogs/currency-format-in-c-sharp#:~:text=The%20format%20specifier%20%22C%22%20(,a%20number%20to%20a%20string.&amp;text=CX%20%2D%3E%20X%20%2D%20indicates%20the,%22C2%22%20currency%20format%20specifier Please refer below table ‘formatvalue2’ function usage examples: Target Column Param1: Currency/DateTime/Number Param2: [Placeholder] Param3: [Format Specifier] Param4: [CultureInfo] Output Plain Text Column/Variable Ex: [CurrencyUSText] Currency Placeholder/Fixed Value/Variable Ex: [SourceCurrency] = 20000 {0:c} &nbsp; $20000.00 Plain Text Column/Variable Ex: [NumberUSText] Number Placeholder/Fixed Value/Variable Ex: [SourceNumber]=500 {0:n} &nbsp; 500.00 Plain Text Column/Variable Ex: DateUSText DateTime Placeholder/Fixed Value/Variable Ex: [SourceDate]= 6/23/2023 6AM {0:dd/MM/yy} &nbsp; 23/06/23 Plain Text Column/Variable Ex: [CurrencyArgentina] &nbsp; Currency Placeholder/Fixed Value/Variable Ex: [SourceCurrency] = 20000 {0:c0} es-AR(Argentina) $ 20.000 Plain Text Column/Variable Ex: [CurrencyGermany] Currency Placeholder/Fixed Value/Variable Ex: [SourceCurrency] = 20000 {0:c0} de-DE(Germany) 20.000 € Plain Text Column/Variable Ex: [CurrencyBelgium] Currency Placeholder/Fixed Value/Variable Ex: [SourceCurrency] = 20000 {0:c0} fr-BE(Belgium) 20.000 € Plain Text Column/Variable Ex: [NumberArgentina] Number Placeholder/Fixed Value/Variable Ex: [SourceNumber] = 500 {0:n3} es-AR 500,000 Plain Text Column/Variable Ex: [NumberGermany] Number Placeholder/Fixed Value/Variable Ex: [SourceNumber] = 500 {0:n3} de-DE 500,000 Plain Text Column/Variable Ex: [NumberBelgium] Number Placeholder/Fixed Value/Variable Ex: [SourceNumber] = 500 {0:n3} fr-BE 500,000 Plain Text Column/Variable Ex: [DateTimeArgentina] DateTime Placeholder/Fixed Value/Variable Ex: [SourceDate] = 6/23/2023 6AM {0:dddd, dd MMMM yyyy hh:mm tt} es-AR viernes, 23 junio 2023 06:00 a.m Plain Text Column/Variable Ex: [DateTimeGermany] DateTime Placeholder/Fixed Value/Variable Ex: [SourceDate] = 6/23/2023 6AM {0:dddd, dd MMMM yyyy hh:mm tt} de-DE Freitag, 23 Juni 2023 06:00 Plain Text Column/Variable Ex: [DateTimeBelgium] DateTime Placeholder/Fixed Value/Variable Ex: [SourceDate] = 6/23/2023 6AM {0:dddd, dd MMMM yyyy hh:mm tt} fr-BE vendredi, 23 juin 2023 06:00 Sample use case for FormatValue2 function: Calculate total amount of all associated items when new main item is created and generate a document with item values. List structure: “UH &#8211; Requests” is the main list. “UH PFA” is the associated list. It has a lookup column for “UH &#8211; Requests” list. &nbsp;“UH &#8211; Requests” has a NITRO associated items column ‘Associated UHPFA’ to show related “UH PFA” items. “Amount” is a currency column in “UH PFA” list. “Quantity” is a number column in “UH PFA” list. Steps: Workflow is configured on the “UH &#8211; Requests” list. Define variables to get the total amount and total quantity specified in ‘Amount’ and ‘Quantity’ column in “UH PFA” list items. Run Query list action to get all related “UH PFA” items. And in variable mapping, calculate total amount and total quantity. Configure a generate document action to generate document and attach it to the item. Workflow: Define Variables : Action 1: Get related PFAs Configure ‘Query Builder’ condition as shown below: UHRequest = lookupid:%%[ID|ID]%% This will get all related PFAs. Configure Variable mapping as shown below: varGrandTotal = Get related PFAs##$sum([Amount|Amount]) This will get the sum of Amount of all related PFAs. varTotalQuantity = Get related PFAs##$sum([Quantity|Quantity]) This will get the sum of quantity of all related PFAs. Action 2: Generate Pdf document for request Generate a document that has total amount and total quantity of PFAs linked to this request item. Column mapping for GrandTotal: Column mapping for Total Quantity: Column mapping for Created: Note: ‘es-AR’ is Culture Info Code of ‘Argentina’. So, Currency/DateTime/Number will be formatted according to this Culture Info Code. Below Item is created in ‘UH &#8211; Requests’ list Generated Pdf document for request is shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "714",
    "name": "714 - Column Width and Text overflow in Crow Canyon List Views.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/714%20-%20Column%20Width%20and%20Text%20overflow%20in%20Crow%20Canyon%20List%20Views.html",
    "title": "Column Width And Text Overflow In Crow Canyon List Views",
    "text": "Column Width and Text overflow in Crow Canyon List Views - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Column Width and Text overflow in Crow Canyon List Views Column Width and Text overflow in Crow Canyon List Views 694 views 1 min , 7 sec read 0 Applies to : SharePoint Online and On-Premises (2013, 2016, 2019 and SE) Description In NITRO list view, each column gets a default width as per the type of column. Width can be adjusted by using &#8220;Column Width JSON&#8221; option in List View Advanced Settings. If column header text is more than the available width, then it is truncated to fit the width. This article describes the steps to adjust the column width and the text overflow styles in column headers. Detailed Instructions Column Width To adjust the column width, go to the SharePoint Site -> Site Settings -> Crow Canyon List View -> Edit the required list view setting -> Navigate to Advanced Settings -> Column Width JSON and configure the column width as per the requirement. Ex : JSON used in above : { \"LinkTitle\":{ \"width\":250 }, \"Title\":{ \"width\":150 }, \"ID\":{ \"width\":80 }, \"RequestedShipmentDate\":{ \"width\":200 }, \"MitigationOrRollbackOptions\":{ \"width\":200 }, \"Status\":{ \"width\":100 }, \"Priority\":{ \"width\":100 } } In above JSON, we have configured column width for below columns: Title RequestedShipmentDate MitigationOrRollbackOptions Status Priority Note : Specify column internal names and not the display names of the columns in the JSON. To find the column internal names, please refer to this article . If any of the columns is not specified in the JSON, then it will get default width as per the data type of the column. If the total width for the columns is more than the available width for the list view webpart, then horizontal scroll will become visible. Sample output: Before applying column width: After applying column width: TextOverflow If the column header is more than the width of the column, then the column header will be truncated by default in NITRO List Views. In advanced settings, for header style, &#8216;TextOverflow&#8217; can be set to &#8220;Wrap&#8221; or &#8220;Truncate&#8221; for column header text overflow cases. To apply these styles, go to the site -> Site Settings -> Crow Canyon List View -> Edit the list view -> Navigate to Advanced Settings -> Extended Settings JSON -> Configure the column header text overflow behavior as shown below: Sample output with &#8220;Truncate&#8221; : Sample output with &#8220;Wrap&#8221; : About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "715",
    "name": "715 - State Management in Service Request Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/715%20-%20State%20Management%20in%20Service%20Request%20Applications.html",
    "title": "State Management In Service Request Applications",
    "text": "State Management in Service Request Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / State Management in Service Request Applications State Management in Service Request Applications 673 views 2 min , 37 sec read 0 Applies to : SharePoint Online and On-premises (2013, 2016, 2019 and SE) Application type : NITRO Helpdesk, Facilities 2020, Request Management 2020 and Customer Service 2020. Description Crow Canyon Service Request application by default comes with below status options in Ticket&#8217;s list. SharePoint Online : Unassigned Assigned Resolved Closed SharePoint On-premises : Not Started In Progress Resolved Closed These status options can be modified as per our requirement using state management feature in service request applications. This article describes the instructions to configure state management in Crow Canyon service request applications. Summary of steps : List Schema Configuration of State Management Sample Use Cases Detailed Instructions: 1.List Schema 1.Make sure that &#8220;State Management&#8221; column exist in &#8220;Configuration&#8221; list. If not, create the column. Go to Site Contents -> Configurations list -> Create column as given below: Column : State Management Internal name : StateManagement Display name : State Management Column type : Multiple lines of plain text 2. Add &#8220;State Management&#8221; column to NITRO forms. Go to Configuration list -> List Settings -> Crow Canyon NITRO Forms and add &#8220;State Management&#8221; column to the form and publish the forms. 2.Configuration of State Management Go to Application Administration -> General Configurations and configure below JSON in the &#8220;State Management&#8221; column. JSON : { \"Unassigned\": { \"DisplayName\": \"Not Started\", \"AutoSetOnStaffClear\": \"Yes\" }, \"Assigned\": { \"DisplayName\": \"In Progress\", \"AutoSetOnAssign\": \"Yes\", \"SetFirstAssignedDate\": \"No\" }, \"Resolved\": { \"DisplayName\": \"Resolved\" }, \"Closed\": { \"DisplayName\": \"Completed\" } } Note : Do not modify the keys &#8220;Unassigned&#8221;, &#8220;Assigned&#8221;, &#8220;Resolved&#8221; and &#8220;Closed&#8221; in above JSON. In above Json: Properties : DisplayName : This property represents the updated status value of &#8216;Unassigned&#8217; option in Ticket&#8217;s list. Ex: If we would like to update the status of &#8216;Unassigned&#8217; to &#8216;Not Started&#8217;, we can use the &#8216;DisplayName&#8217; for &#8216;Unassigned&#8217; as &#8216;Not Started&#8217;. Similarly, we can modify the status of other options i.e., &#8216;Assigned&#8217;, &#8216;Resolved&#8217; and &#8216;Closed&#8217; as per our requirement. AutoSetOnStaffClear : Out of the box, when &#8216;Assigned Staff&#8217; is cleared from Ticket, system will automatically reset the status to initial state i.e. Unassigned. If we would like to override this behavior, set &#8216;AutoSetOnStaffClear&#8217; property value to &#8216;No&#8217; in &#8216;State Management&#8217;. AutoSetOnAssign : Out of the box, when &#8216;Assigned Staff&#8217; filled in a Ticket, system will automatically modify the status to &#8216;Assigned&#8217;. If we would like to override this behavior, set &#8216;AutoSetOnAssign&#8217; property value to &#8216;No&#8217; in &#8216;State Management&#8217;. SetFirstAssignedDate : Out of the box, when a Ticket is assigned/reassigned, &#8216;Assigned Date&#8217; will always updated with latest assignment date. If we would like to capture the first assignment date in Ticket&#8217;s list, set this property to &#8216;Yes&#8217;. Note : Please make sure that &#8216;First Assignment Date&#8217; column is there in the Tickets list. If not, please create this column. Column : First Assignment Date Internal name : FirstAssignmentDate Display name : First Assignment Date Column type : Multiple lines of plain text 3. Sample Use Case In this sample use case, we would like to use new status options instead of &#8216;Unassigned&#8217;, &#8216;Assigned&#8217; and &#8216;Closed&#8217;. Below table describes the current status options and the corresponding new status options. Current Status Option New Status Option Unassigned New Assigned Work in progress Resolved Resolved Closed Completed Instructions 1. Modify the &#8216;Request Status&#8217; options in Ticket&#8217;s list and Archived Ticket&#8217;s lists. Go to the list -> List Settings -> Edit &#8216;Request Status&#8217; column and add new status options. 2. Go to Application Administration -> General Configurations -> Add below JSON in &#8216;State Management&#8217; column. Note : If there is any list view using these status options, then we need to update the list views. State Management : { \"Unassigned\": { \"DisplayName\": \"New\", \"AutoSetOnStaffClear\": \"Yes\" }, \"Assigned\": { \"DisplayName\": \"Work in progress\", \"AutoSetOnAssign\": \"Yes\", \"SetFirstAssignedDate\": \"Yes\" }, \"Resolved\": { \"DisplayName\": \"Resolved\" }, \"Closed\": { \"DisplayName\": \"Completed\" } } After configuring new status options in Ticket&#8217;s list, we need to modify these new status options in different places in the application. Tickets and Archived Tickets list views Go to the Tickets and Archived Tickets list -> List Settings -> Edit the list views and modify the status options as per new statuses. Modify the status options in &#8216;Mark Closed&#8217; and &#8216;Re-open&#8217; submit actions in portal Ticket forms in Ticket&#8217;s list. Go to Tickets list -> List Settings -> Crow Canyon NITRO Forms -> Edit &#8216;PortalTicket&#8217; forms -> Switch to edit form -> Select &#8216;Mark Closed&#8217; and &#8216;Re-open&#8217; submit actions -> Edit the script in submit action settings and modify the status options as per the new status options. Modify the status values in &#8216;Reopen Count&#8217; column in &#8216;Tickets Status Tracking&#8217; list. Go to Site Contents -> Tickets Status Tracking -> List Settings -> Edit &#8220;Reopen Count&#8221; column and modify the &#8216;Closed&#8217; status option as per new status. Modify the status options in NITRO Workflows Go to Application Administration -> Crow Canyon NITRO Apps -> NITRO Workflows -> Edit all the workflows except the workflows configured on Calendar, Archived Tickets and Email Tickets list -> Modify the status options in query list actions, conditions and column mappings as per the new status options. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "717",
    "name": "717 - Query List (Search) action configurations in NITRO Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/717%20-%20Query%20List%20%28Search%29%20action%20configurations%20in%20NITRO%20Custom%20Actions.html",
    "title": "Query List (Search) Action Configurations In NITRO Custom Actions",
    "text": "Query List (Search) action configurations in NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Query List (Search) action configurations in NITRO Custom Actions Query List (Search) action configurations in NITRO Custom Actions 788 views 4 min , 45 sec read 0 Applies to : SharePoint Online and On-Premises Introduction Query List action is used to fetch the items meeting the required filter criteria and then do some action on those items. For example, we can fetch tasks that are &#8216;Open&#8217; and are of a particular &#8216;Type&#8217; and then send a reminder mail to assignee of each task. The filter conditions are specified in the Custom Action settings and cannot be changed during execution. More details on this action are here: https://www.crowcanyon.help/article/470/ &#8216;Query list (Search)&#8217; action allows user to specify the search text and select the required items when custom action is executed. User selected items can then be processed in subsequent actions like normal Query List action. Detailed Description Search Type Select the search type to fetch the items from the list: NITRO Search : Uses CAML query to search the matching items from SharePoint list. It uses both the conditions specified in &#8216;Filter Items By&#8217; option and the user entered text. SharePoint Search : This will search on indexed content to find the relevant matching items. For large lists, this can give better results. Both : User will have the option to select the search type during action execution. Selection Type Whether to get a single item or a collection of items. This depends on the business use case. Select Query Site URL Select the site of the list from which items have to be fetched. Items can be fetched from any site within the site collection. Based on site selection, next drop-down for the lists will be populated. Query List Select list from which items have to be fetched. Please note that next option depend on this selection. Filter Items By List View Fetch items from the list selected in the &#8216;Query List&#8217; option based on the selected &#8216;List View&#8217;. Items will be fetched based on the conditions specified in the list view conditions and the search text entered by the user. Query Builder Fetch items from the list selected in the &#8216;Query List&#8217; option based on the conditions specified in the Query Builder and the search text entered by the user. Column placeholder syntax in the conditions: %%[Column Display Name|Column Internal Name]%% Ex: %%[ID|ID]%% For more details about the syntax used in query list action, refer to this article . Query Fetch items from the list selected in the &#8216;Query List&#8217; option based on the specified CAML query and the search text entered by the user. Please refer CAML query syntax from this article . Sample CAML query : &lt;View> &lt;Query> &lt;Where> &lt;Eq> &lt;FieldRef Name='RelatedItems' LookupId='TRUE'/> &lt;Value Type='Lookup'>%%&#91;ID|ID])%%&lt;/Value> &lt;/Eq> &lt;/Where> &lt;/Query> &lt;/View> Item Selection Mandatory Whether selecting one or more items from search result is mandatory for the user to continue Custom Action execution. Continue Custom Action Execution This option can be used to continue or stop the execution of the Custom Action based on whether items are selected in the Query List search result or not. Always : This is the default option and execution of subsequent actions is not dependent on whether any items are selected in the Query List search results or not. Only if item(s) selected : This option will continue the custom action execution flow only when one or more items are selected in the Query list action. This is used in common scenario where we are fetching items using Query List search action and then there is an Update Item action to update all the items selected from the query list search results. If there are no items selected in Query List search results, then it is not required to run the action to update them. However, note that if there are any other actions after Update Item action then those too will be skipped. Hence, use this option if all subsequent actions should be skipped if no items are selected in Query List Search action. Only if no item selected: This option will continue the custom action execution flow only when no items are selected from the Query List search action. Note : All subsequent actions will be skipped if execution is stopped at the Query List action. Grid Settings Search result selection limit Specify the number of items user can select from the search results. The maximum number of items a user can select is 500. Display Columns Select the columns to be shown in the search results grid. First sort by the column Select the column to sort the items in search results. Items Per Page Limit Specify the number of items to be displayed per page in the search results. Variable mappings Configure variables to update the query list search results. Follow below syntax to update the variable value with Query list search results for single item and item collection. Item: Syntax: {CurrentAction}##[Column Display Name|Column Internal Name] OR Query list action name##[Column Display Name|Column Internal Name] Item Collection: Only functions that aggregate the values are supported for Query list items (item collection): $variablecollection, $count, $sum. For more details about the syntax, refer to this article Using Query list search action results We can use the query list search action results in different places for single and multi-items selection. Query list search (Single Item): Below query list search action is configured to select a single item. We can use this search result in different places. Below table describes the syntax and the use case. Syntax Use cases {CurrentAction}##Column Internal Name or {CurrentAction}##[Column Internal Name|Column Display Name] This syntax is used to update the variable value with Query list action search result Query list action name##Column Internal Name OR Query list action name##[Column Display Name|Column Internal Name] Ex: Select Parent Ticket##[ID|ID] This syntax is used to get the column value from a query list search action result. This can be used in Custom Action conditions and column mappings of Add/Update list item actions Query list search (Multiple Items): We can use the selected items in the query list search action results in below places in Custom Actions: Run loop for selected items in the query list search action results. Run below actions on the selected items from the search results. Add List Item Update List Item Delete List Item Invoke Web Service Invoke Workflow Parse CSV Functions QL Count QL Sum QL First Item QL Last Item QL Variable Collection Sample use cases Use case1: Link to Problem (Item) Details : This custom action uses &#8220;Tickets&#8221; and &#8220;Problems&#8221; lists. &#8220;Tickets&#8221; list has a lookup type column pointing to &#8220;Problems&#8221; list. This action is configured on the Tickets list. Configure query list search action to find the required problem from the &#8220;Problems&#8221; list. Configure update item action on Ticket item to update ‘Related Problem’ lookup column with the selected problem from the search results in #4. Configure update item action to update the worklog of the selected problem. Custom Action Action 1: Search problem Configure query list search action to get open problems. Settings to store the Id of the selected problem in the variable. This Id can then be used to update the lookup column in the Ticket item. Action 2: Update related problem in Ticket Configure update item action to update the &#8216;Related Problem&#8217; in Ticket. Action 3: Update worklog in problem Configure update item action to update the worklog in problem. Use case2: Link Tickets to Problem (Item Collection) Details : This custom action uses &#8220;Tickets&#8221; and &#8220;Problems&#8221; lists. &#8220;Tickets&#8221; list has a lookup column pointing to &#8220;Problem&#8221; list. This action is configured on the Problems list. Configure a query list search action to select the required Tickets from &#8220;Tickets&#8221; list. Configure update item action to update ‘Related Problem’ lookup column in the selected Tickets from the query list search results in #4. Configure update item action to update the worklog in selected problem. Custom Action: Action 1: Get Open Tickets Configure query list search action to get open Tickets. &#8216;Filter Items By&#8217; section is configured to show only those Tickets that are not resolved or closed. This way user will only be able to select open Tickets for linking to the problem. Action 2: Update problem in selected Tickets Configure update item action to run for user selected Tickets in the QL search results in action#1 above to update the &#8216;Related Problem&#8217; lookup column in Ticket. Action 3: Update worklog in problem Configure update item action to update the worklog in problem. Note the expression builder syntax to get a comma separated list of Ids of all the Tickets linked to this problem. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "718",
    "name": "718 - Crow Canyon List View Advanced Settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/718%20-%20Crow%20Canyon%20List%20View%20Advanced%20Settings.html",
    "title": "Crow Canyon List View Advanced Settings",
    "text": "Crow Canyon List View Advanced Settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Crow Canyon List View Advanced Settings Crow Canyon List View Advanced Settings 842 views 2 min , 43 sec read 0 Applies to : SharePoint Online For additional settings related to this feature, please refer to Crow Canyon List View advanced settings &#8211; Crow Canyon Software Support Description Crow Canyon List View is a NITRO component that provides enhanced capabilities to view SharePoint list items. It also provides a host of features to do operations on list items. This article describes the advanced features of the NITRO list view component for use in various business applications. Advanced Settings Options available in &#8216;Extended Settings JSON&#8217; in List view component. Hide command bar in list view web part. Apply background colour for command bar Vertical padding for header and footer Apply prefix in command bar Webpart header background colour, font size, weight, and font colour Whether columns are filterable Vertical separator between tabs NITRO List Settings in tabs Note : Please ensure the JSON syntax for above settings. If syntax is invalid, then all settings will get cleared. Hide command bar in list view webpart By default, NITRO list view webpart will show the command bar and that will have different action buttons like New, Email, Custom Actions etc. We can show or hide the command bar using &#8216;CommandBar&#8217; property in &#8216;Extended Settings&#8217;. Set &#8220;CommandBar&#8221; property &#8216;hide&#8217; to &#8216;true&#8217; as shown below to hide the command bar. With command bar: Without command bar: Apply background color for command bar: We can apply background colour for &#8216;Command bar&#8217; in &#8216;Extended Settings&#8217; as shown below: Example: &#8220;CommandBar&#8221;: {&#8220;BackgroundColor&#8221;:&#8221;lightslategrey&#8221;} For html color names, refer to this article . Vertical padding for header and footer We can adjust the padding for &#8216;Header&#8217; and &#8216;Footer&#8217; in list view using &#8216;VerticalPadding&#8217; settings in &#8216;Header&#8217; and &#8216;Footer&#8217; styles in &#8216;Extended Settings&#8217;. Sample output for &#8216;Header&#8217; and &#8216;Footer&#8217; after applying vertical padding. Compared to earlier images in this article, there is more space above and below the text in header and footer. Apply prefix for Toolbar text: This setting will be applied only when the list view &#8216;Toolbar Mode&#8217; is selected as &#8216;Compact&#8217; instead of &#8216;Standard&#8217;. In compact mode, list view tabs and command bar are merged in one line to save vertical space. To select &#8216;Compact&#8217; mode in toolbar, go to the site -&gt; Site Settings -&gt; Crow Canyon List View -&gt; Create/Edit existing list view definition and select the &#8216;Compact&#8217; mode as shown below: See the difference between &#8216;Standard&#8217; and &#8216;Compact&#8217; modes: Standard : Compact : We can a text before the list views for &#8216;Toolbar&#8217; in compact mode as shown below: Sample output with prefix in toolbar : Webpart Header background color, font size, weight, and font color Webpart Header background color, font size, weight, and font color We can set the webpart header background color, font size, font weight and font color using ‘Extended Settings’ as shown below. Refer below articles for font weight property and color picker: https://www.w3schools.com/cssref/pr_font_weight.php https://www.w3schools.com/colors/colors_picker.asp Sample output after applying webpart header properties: Columns Filterable In NITRO list views, we can filter the items by selecting the operator and specifying the column value as shown below: &#8216;Column Filterable&#8217; option in NITRO list view will provide the flexibility to select the filterable value like SharePoint list view. It shows the options to filter as per values in the items in list view. This makes it easy for user to do the filtering without having to type the value. To enable this feature, go to the site -&gt; Site Settings -&gt; Crow Canyon List View -&gt; Create/Edit existing list view -&gt; Set &#8216;ColumnsFilterable&#8217; to true as shown below. This will apply the filter option for all the columns in the list view. Sample output: Note : To apply &#8216;Columns Filterable&#8217; option only for specific columns, specify the column internal names in an array format as shown below: &#8216;ColumnsFilterable&#8217;: [&#8220;Category1&#8243;,&#8221;RequestStatus&#8221;] To know the column internal names, refer to this article . Vertical separator between tabs In NITRO list views, we can show the list views as &#8216;Tabs&#8217; and &#8216;Dropdown&#8217; in case of multiple list views. This setting is applied only when we select &#8216;Tabs&#8217; option in &#8216;Show Views As&#8217;. To enable the vertical separator for tabs, go to &#8216;Extended Settings&#8217; in Advanced Settings and set the &#8216;VerticalSeparatorBetweenTabs&#8217; to true as shown below: Sample output after applying vertical separator: NITRO List Settings: We can edit the NITRO list view settings directly using &#8216;NITRO List Settings&#8217; button in the webpart instead of navigating to &#8216;Crow Canyon List View&#8217; app settings page. To show &#8216;NITRO List Settings&#8217;, go to the site -&gt; Site Settings -&gt; Crow Canyon List View -&gt; Create or edit existing list view sett -&gt; Navigate to &#8216;Hide Buttons&#8217; tab -&gt; Unselect the &#8216;NITRO List Settings&#8217; as shown below: Note : This button will be shown only for the users having &#8216;Manage web site&#8217; permissions on the site. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "719",
    "name": "719 - NITRO Forms_ Set column values back to the original if any validation fails during save. - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/719%20-%20NITRO%20Forms_%20Set%20column%20values%20back%20to%20the%20original%20if%20any%20validation%20fails%20during%20save.%20-%20Crow%20Cany.html",
    "title": "NITRO Forms Set Column Values Back To The Original If Any Validation Fails During Save. Crow Cany",
    "text": "NITRO Forms: Set column values back to the original if any validation fails during save. - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Forms: Set column values back to the original if any validation fails during save. NITRO Forms: Set column values back to the original if any validation fails during save. 718 views 1 min , 43 sec read 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: NITRO Forms provides enhanced capabilities to create, view or modify the SharePoint list items. For any specific cases not covered directly by the configurations, custom JavaScript can be added using ‘Submit Action’ and ‘Script Action’ in NITRO Forms. For more details about &#8216;Submit Action&#8217; and &#8216;Script Action&#8217;, refer to this article . On ‘Submit Action’ button click, we can set column values on the form using custom JavaScript. For example, a form may have two buttons – ‘Submit for Approval’ and the normal ‘Save’ button. On clicking ‘Submit for Approval’ button, ‘Approval Status’ column value can be automatically set to the ‘Pending Approval’ status. This way user need not manually set the value and as per the action taken one or more column values can be auto-set. However, if any validation fails then form will not be submitted, and user will need to modify the form data before submitting again. In this case, the column values that were set with custom JavaScript will not get reverted to original values. For example, if user clicked ‘Submit for Approval’ button the script will set the status. In case of any validation failure, user may decide to just save the item as draft and come back later for approval submission. In this case, it is necessary to revert the ‘Approval Status’ column value as it should not remain as ‘Pending Approval’. This article describes the instructions to revert column values on the form if any validation fails after clicking submit action button. Detailed Description This article uses ‘Requests’ list and it has below columns: Column Name Column Internal Name Column Type Title Title Single line of text Request Status RequestStatus Choice type of column Options: UnassignedAssignedResolvedClosed Resolution Resolution Multiple lines of plain text Assigned Staff AssignedStaff Person or Group Requester Requester Person or Group Process Log Process Log Multiple lines of plain text Configure validation on ‘Resolution’ column to make this column as required if “Request Status” is set to “Resolved”. Configure a submit action ‘Resolve’ on the form, this will set the ‘Request Status’ to ‘Resolved’ and if any validation fails then it will set the ‘Request Status’ column value back to its original value. Instructions Configure validation on ‘Resolution’ column. Go to the list à List Settings à Crow Canyon NITRO Forms à Select the ‘Resolution’ column à Configure the column validation in ‘Column Settings’ as shown below: Apply the Column Settings. Configure ‘Resolve’ submit actions as shown below. This button will be shown in edit form, and it will set the ‘Request Status’ to ‘Resolved’. If any validation fails, then it will revert the ‘Request Status’ column to its original value. Expand ‘Actions’ section from left hand panel and drag and drop ‘Submit Action’ on to the form. Configure submit action as shown below: Pre-Save script used above var currentStatus = currentItem.get_item(\"RequestStatus\"); formContext.setColumnControlValueByName(\"RequestStatus\", \"Resolved\"); var listColumnValueobj = {}; var advSettings = { Validate : true, Fail: function(){ formContext.setColumnControlValueByName(\"RequestStatus\", currentStatus); }}; listColumnValueobj&#91;\"ProcessLog\"] = \"Request is resolved.\"; functionCallback(false, listColumnValueobj, \"Default\", advSettings) Apply the settings and publish the form. Sample Output: If validation is successful: Clicking ‘Resolve’ button will set the ‘Request Status’ column value to ‘Resolved’ and item will be saved. If validation fails : About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "72",
    "name": "72 - Troubleshooting steps for NITRO secure.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/72%20-%20Troubleshooting%20steps%20for%20NITRO%20secure.html",
    "title": "Troubleshooting Steps For NITRO Secure",
    "text": "Troubleshooting steps for NITRO secure - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for NITRO secure Troubleshooting steps for NITRO secure 683 views Less than a minute 0 Applies to: SharePoint On-premises Description: This article lists the fixes for common issues in NITRO Secure NITRO Studio pages are not opening in migrated sites. 1. NITRO Studio pages are not opening in migrated sites Issue : In sites that have been migrated, NITRO Studio pages shows message ‘An unexpected error has occurred’. Cause : This issue can occur if the site collection Id is changed as part of the migration process (site is moved to current location from another environment). When site is restored using SharePoint content database backup/restore method, site collection id, site Id etc. are not changed. However, for other methods (custom migration tool, site collection backup/restore) to restore the site collection, site collection Id can change. Since NITRO Studio works with Ids of the sites, this issue will occur if Ids change for a site that is using NITRO Studio. Resolution : There are two hidden lists in the root site of the site collection (”CrowCanyonNITROInfo” and “CrowCanyonAddinInfo”). These lists are used by NITRO Studio, and they have items referring to site collection Ids. Delete all the items in these two lists after the site collection is restored to target environment. After deleting the items, navigate to &#8216;Crow Canyon NITRO Studio App&#8217; page in the site and refresh the page once, this will create the entries in hidden lists in the root site of the site collection (”CrowCanyonNITROInfo” and “CrowCanyonAddinInfo”). About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "720",
    "name": "720 - Troubleshooting steps for NITRO secure.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/720%20-%20Troubleshooting%20steps%20for%20NITRO%20secure.html",
    "title": "Troubleshooting Steps For NITRO Secure",
    "text": "Troubleshooting steps for NITRO secure - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting steps for NITRO secure Troubleshooting steps for NITRO secure 683 views Less than a minute 0 Applies to: SharePoint On-premises Description: This article lists the fixes for common issues in NITRO Secure NITRO Studio pages are not opening in migrated sites. 1. NITRO Studio pages are not opening in migrated sites Issue : In sites that have been migrated, NITRO Studio pages shows message ‘An unexpected error has occurred’. Cause : This issue can occur if the site collection Id is changed as part of the migration process (site is moved to current location from another environment). When site is restored using SharePoint content database backup/restore method, site collection id, site Id etc. are not changed. However, for other methods (custom migration tool, site collection backup/restore) to restore the site collection, site collection Id can change. Since NITRO Studio works with Ids of the sites, this issue will occur if Ids change for a site that is using NITRO Studio. Resolution : There are two hidden lists in the root site of the site collection (”CrowCanyonNITROInfo” and “CrowCanyonAddinInfo”). These lists are used by NITRO Studio, and they have items referring to site collection Ids. Delete all the items in these two lists after the site collection is restored to target environment. After deleting the items, navigate to &#8216;Crow Canyon NITRO Studio App&#8217; page in the site and refresh the page once, this will create the entries in hidden lists in the root site of the site collection (”CrowCanyonNITROInfo” and “CrowCanyonAddinInfo”). About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "721",
    "name": "721 - Use of “Execute manually” form event actions in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/721%20-%20Use%20of%20%E2%80%9CExecute%20manually%E2%80%9D%20form%20event%20actions%20in%20NITRO%20Forms.html",
    "title": "Use Of “Execute Manually” Form Event Actions In NITRO Forms",
    "text": "Use of “Execute manually” form event actions in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use of “Execute manually” form event actions in NITRO Forms Use of “Execute manually” form event actions in NITRO Forms 717 views 2 min , 14 sec read 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description Form Event Actions enable advanced custom functionality in NITRO Forms. These actions can be invoked: On form load. On a column value change. By user clicking on a button on the form (‘Execute Manually’). For sample use cases of form event actions on form load and on column value change, refer to below articles: Use ‘Form Event Actions’ feature of NITRO Forms to add custom functionality Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality &#8211; II This article describes the use of manually executed form event actions in NITRO Forms. Example scenario Set ‘Due Date’ column value on the form based on some data on the form and some calculation. For example, ‘Today’ or some date column on the form plus 5 days. In some scenarios, this will be done automatically when a column value is changed on the form. Like user may set the priority and based on that due date is automatically calculated (using form event actions on column value change). In other cases, user will review the data on form and then decide to do an action. There could be more than one button on the form and user will click the required button to invoke the appropriate form event action. This is the case for manually invoked actions that will perform the required changes on the form. Buttons are of two types. Script action buttons are used to execute the required script or form event action and after that user can continue editing the form. Submit buttons also do the same but save the item after running the script/action. For more details about the action buttons, refer to this article: https://www.crowcanyon.info/nitro/appmanual_v2/actions.html Detailed Description We can execute form event actions that are set to ‘Execute Manually’ using ‘Script Action’ and ‘Submit Action’ buttons in new and edit forms. Script Action: Configure script action button on the form. Refer to images below. Go to NITRO Forms Designer for the list à Expand ‘Actions’ section à Drag and drop ‘Script Action’ button on the form. From button settings in right-hand panel, click ‘Edit’ button for process à Select ‘Form Event Action’ in the ‘Process’ dialog à Select the required form event action from ‘Execute Action’ drop-down. This drop-down shows all those form event actions that are selected to execute manually. Submit Action Configure submit action button on the form. Refer to images below. Go to NITRO Forms Designer for the list à Expand ‘Actions’ section à Drag and drop ‘Submit Action’ on the form. à From button settings in right-hand panel, click ‘Edit’ button for pre-save process à Select ‘Form Event Action’ in ‘Pre-Save Process’ dialog à Select the required form event action from ‘Execute Pre-Save Action’ and ‘Execute Action on Validation Failure’ dropdown. These dropdowns show all the form event actions that are configured for manual execution. Sample use case: Set due date column value as 5 business days from ‘today’ on a Ticket form. Sample list schema and use case: Standard SharePoint list Due Date: Date and Time column Set ‘Due Date’ column value 5 business days from ‘today’. Instructions: Configure a form event action as shown below: ‘Configure Column mapping for ‘Due Date’ column in ‘Tickets’ list: After configuring the form event action, drag and drop ‘Submit Action’ button on to the form and invoke ‘Set Due Date’ form event action in the submit action pre-save script. After configuring the submit action button, click ‘Submit’ action button on the form to execute the form event action. This will set the ‘Due Date’ column value before item is saved. If there is chance that the form submit (item save) will fail due to validations on some column values, you can configure another manual form event action. In that action ‘Due Date’ value can be cleared. This is for scenarios where user will just ‘save’ the item and not ‘submit’ it after the data validation error. And in that case the form should not have a due date set. Select the action to clear the due date in drop-down “Execute Action On Validation Failure”. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "722",
    "name": "722 - Update hyperlink column with link URL and display text using NITRO Custom Actions - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/722%20-%20Update%20hyperlink%20column%20with%20link%20URL%20and%20display%20text%20using%20NITRO%20Custom%20Actions%20-%20Crow%20Canyon%20Soft.html",
    "title": "Update Hyperlink Column With Link URL And Display Text Using NITRO Custom Actions Crow Canyon Soft",
    "text": "Update hyperlink column with link URL and display text using NITRO Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Update hyperlink column with link URL and display text using NITRO Custom Actions Update hyperlink column with link URL and display text using NITRO Custom Actions 668 views Less than a minute 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: In Custom Actions, we can update hyperlink column in add and update list item actions. If we put the full URL as the value to update, then the same URL will be shown as the display value of hyperlink column. However, frequently requirement is to have a different display text which is hyperlinked to the URL. This article describes updating hyperlink column with link URL and link title in add or update item actions in Custom Actions. This is done using ‘strcat’ function so that both URL and title can be set. Sample use case: This custom action uses ‘Asset Type’ and ‘Assets’ list. ‘Asset Type’ list has ‘Asset Info Link’ and ‘Asset Info Title’ single line of text columns. ‘Assets’ list has ‘Asset Info’ hyperlink column. Configure custom action in ‘Asset Type’ list to create Asset with ‘Asset Info’ hyperlink. In this custom action, we have mapped ‘Asset Info’ hyperlink column with ‘Asset Info Link’ as the URL and ‘Asset Info Title’ as the display text. Custom Action: Go to ‘Asset Type’ list à List Settings à Crow Canyon Custom Actions and configure the custom action as shown below: Define a variable: Define a variable ‘varSeparator’ with default value as comma and space (, ) as shown below. This variable will be used in ‘Create Asset’ action to update the ‘Asset Info’ hyperlink column. 2. Configure add item action to create an ‘Asset’. Column mappings of ‘Asset Info’ : When mapping a value to hyperlink column, we can specify it as “&lt;URL&gt;,&lt;Title&gt;” to set separate values for the URL and the display value of the hyperlink. Sample output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "723",
    "name": "723 - NITRO Forms_ Upload large documents from associated items column.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/723%20-%20NITRO%20Forms_%20Upload%20large%20documents%20from%20associated%20items%20column.html",
    "title": "NITRO Forms Upload Large Documents From Associated Items Column",
    "text": "NITRO Forms: Upload large documents from associated items column - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Forms: Upload large documents from associated items column NITRO Forms: Upload large documents from associated items column 701 views Less than a minute 0 Applies To: SharePoint On-premises (2013, 2016, 2019, and SE) Add this resolution to troubleshooting article: https://www.crowcanyon.help/article/409/ Issue: In NITRO Forms, uploading a file with size more than 5MB from associated item column (for a document library), gives below error. “This issue is not there when we directly upload file in the associated document library.“ In below image, ‘Loan Documents’ is an associated document library column in NITRO Forms. For files with size more than 5MB, below error is shown and file does not get added: Cause: This issue can happen if the file upload limit is less than 5 MB. Resolution Check 1: Make sure the ‘Maximum Upload Size’ limit is set correctly in Central Administration. Go to SharePoint Central Administration à Manage web applications (under Application Management) à Select the required web application (that has the site collection of the required document library). Click ‘General Settings’ (from ‘WEB APPLICATIONS’ ribbon) à Search for ‘Maximum Upload Size’ and change the maximum upload size. Check 2: Increase the file upload limit for files uploaded via code (like in case of NITRO forms). To increase the file upload limit to 200 Mb, Open SharePoint Management Shell and run below command. $ws = [Microsoft.SharePoint.Administration.SPWebService]::ContentService $ws.ClientRequestServiceSettings.MaxReceivedMessageSize = 209715200 $ws.ClientRequestServiceSettings.MaxParseMessageSize&nbsp; = 209715200 $ws.Update() About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "724",
    "name": "724 - Restrict the type of files allowed for attachments in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/724%20-%20Restrict%20the%20type%20of%20files%20allowed%20for%20attachments%20in%20NITRO%20Forms.html",
    "title": "Restrict The Type Of Files Allowed For Attachments In NITRO Forms",
    "text": "Restrict the type of files allowed for attachments in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Restrict the type of files allowed for attachments in NITRO Forms Restrict the type of files allowed for attachments in NITRO Forms 725 views 1 min , 31 sec read 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: In NITRO Forms, files or documents can be attached to an item from the ‘Attachments’ section. One or more ‘NITRO Attachments’ columns can also be added to the NITRO forms for adding files to the item. In this article, we have configured validation on ‘NITRO Attachments’ column to allow only specific types of files using custom validations. For more details on ‘NITRO Attachments’ column, refer to this article: https://www.crowcanyon.help/article/682/ Detailed steps: Configure validation on ‘NITRO Attachments’ column. Go to NITRO Forms designer for the list -&gt; Select ‘NITRO Attachments’ column -&gt; Configure the custom validation as shown below in the ‘Column Settings’: Add custom validation using JavaScript as shown below. Change the message or the file extensions as needed. Script used in above : var colVal = objData.ColumnValue; var valid = true; if(colVal &amp;&amp; colVal.length &gt; 0) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var allowedExtensions = /(\\.jpg|\\.jpeg|\\.bmp|\\.gif|\\.png)$/i; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (var i in colVal) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!allowedExtensions.exec(colVal[i])) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; valid = false; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } } objData.Status = valid; if(!valid) { &nbsp;&nbsp;&nbsp; objData.Message = &#8220;Invalid file type.&#8221;; } return objData; Sample output: Allowed File types in NITRO attachments column: .jpg / .jpeg / .bmp / .gif / .png We can also configure validation for &#8216;Attachments’ section same as &#8216;NITRO Attachments&#8217; column. To configure validation for &#8216;Attachments&#8217; section in NITRO Form, go to Crow Canyon NITRO Forms -&gt; Select &#8216;Attachments&#8217; section and configure the validation as shown below: Rest of the configurations are same as for above NITRO Attachments column. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "725",
    "name": "725 - Format the phone number specified in a column using form event actions in NITRO Forms - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/725%20-%20Format%20the%20phone%20number%20specified%20in%20a%20column%20using%20form%20event%20actions%20in%20NITRO%20Forms%20-%20Crow%20Canyon.html",
    "title": "Format The Phone Number Specified In A Column Using Form Event Actions In NITRO Forms Crow Canyon",
    "text": "Format the phone number specified in a column using form event actions in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Format the phone number specified in a column using form event actions in NITRO Forms Format the phone number specified in a column using form event actions in NITRO Forms 704 views 1 min , 1 sec read 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: This article describes the steps to format the value entered in a column as phone number using form event actions. Sample list schema and use case: Standard SharePoint list ‘TelNumber’: Single line of text column Format the value entered in this column as phone number. Configure validation such that only allow phone number in the column. Steps to configure: Configure custom JavaScript as shown below: Expand ‘Advanced’ section from left hand panel -> Click ‘Custom JavaScript’ -> Specify the custom script as shown below. This script will format the user entered digits to the required phone number format. This script can be changed as per any custom formatting required in the column. Script used above : window.toPhoneFormat = function formatPhoneNumber(phoneNumberString) { &nbsp; var cleaned = (&#8221; + phoneNumberString).replace(/\\D/g, &#8221;); &nbsp; var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/); &nbsp; if (match) { &nbsp;&nbsp;&nbsp; return &#8216;(&#8216; + match[1] + &#8216;) &#8216; + match[2] + &#8216;-&#8216; + match[3]; &nbsp; } &nbsp; return null; } Configure form event actions as shown below to format the value specified in ‘TelNumber’ column. Configure ‘Update form control values’ action to update the ‘TelNumber’ Column value mapping: Note : This action is triggered by the user entering the value in the column. And this action updates the formatted value in the same column. To avoid repeated execution of this action, select ‘Never fire’ option for the event. This will ensure that this action is triggered only when user modifies the column value, and not when it is modified by this action. Script used above: var telNum = _ccs_FormUI.fetchColumnValueUI(&#8220;TelNumber&#8221;); var phoneVar = toPhoneFormat(telNum); return phoneVar; Save the form event action. Configure validation on the ‘TelNumber’ column. Select the column à Expand ‘Validations’ section from column settings in right hand panel à Add the validation as shown below: Apply column settings and publish the NITRO Forms. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "728",
    "name": "728 - Manual for DocuSign Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/728%20-%20Manual%20for%20DocuSign%20Action.html",
    "title": "Manual For DocuSign Action",
    "text": "Manual for DocuSign Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Manual for DocuSign Action Manual for DocuSign Action 610 views 4 min , 56 sec read 0 Applies to : SharePoint Online and On-premises NITRO Workflows Introduction DocuSign is an electronic signature platform that simplifies and accelerates the document signing process. It allows users to securely sign, send, and manage documents online, eliminating the need for physical paperwork. DocuSign action in NITRO Workflows is used to send documents within the NITRO sites for signing. Signing process can be tracked and signed documents can be stored in a separate document library. Installation SharePoint Online It is installed as part of NITRO Studio and no separate steps are required. SharePoint On-Premises : Go to SharePoint Central Administration -> Monitoring -> Review Job Definitions and ensure below timer job is created for DocuSign. Note : Ignore this step if timer job already exists for the site collection. If this timer job is not created, please deactivate &#8216;Crow Canyon Mail Templates Administration&#8217; feature and activate again. Follow below instructions: Open SharePoint Management Shell in SharePoint server (run as administration) and run below commands. Feature Name : CrowCanyonMailTemplates Deactivate feature command : Disable-SPFeature -Identity &#8220;CrowCanyonMailTemplates&#8221; -URL &#8220;SiteCollectionURL&#8221; Activate feature command: Enable-SPFeature -Identity &#8220;CrowCanyonMailTemplates&#8221; -URL &#8220;SiteCollectionURL&#8221; Detailed Description of DocuSign action Before DocuSign action can be used in NITRO Workflows, permissions need to be granted. Process to grant permissions is described below. Grant Permission NITRO application need access to user’s DocuSign account to programmatically manage the document signing process. Also known as &#8220;API consent,&#8221; it is a feature that allows applications to integrate with DocuSign&#8217;s eSignature capabilities. When a user grants permission for API access, they are authorizing a specific application to access their DocuSign account on their behalf, which can be helpful for automating document-related processes or workflows. On approval, access is granted using an access token and this process ensures the security and privacy of the user&#8217;s documents. Grant Permission process has following steps: Get the DocuSign account User Id Select the environment and grant permissions Test connection Save the settings You can find the DocuSign User Id in DocuSign Portal. Click below link: Login with your DocuSign user account -&gt; Go to Settings in top menu -&gt; Apps and Keys -&gt; Copy the User ID To grant access: Go to SharePoint Site Settings page -&gt; Crow Canyon NITRO Site Settings -&gt; DocuSign API Connection Settings. Refer to below image to grant permissions. Select the environment as ‘Production’. ‘Developer’ environment is only for development and testing purpose. Click ‘Grant Permission’ button and use your DocuSign account to login and grant permissions. Enter your DocuSign User ID copied above and click ‘Test Connection’ button. If connection is successful, then save the settings. Configuration of DocuSign action in NITRO Workflows Go to SharePoint Site Settings -&gt; Crow Canyon NITRO Apps -&gt; NITRO Workflows DocuSign action has two parts: First part is used to send the document for signing. This includes the document and the users who need to sign. General Settings Action Name : Provide a name for the action. Action Description: Provide a short description for the action. Delay Execution: Provide time in seconds to delay action execution if required. Select Document: This section explains from where to select the document that need the signature. Document to sign: Item Attachment/Document: Attachment file of the SharePoint list item on which workflow is being executed. Document of the document library item on which workflow is being executed. Generate Document Action: File that is generated via a generate document action in the same workflow. Item Attachment/Document: If DocuSign action is configured on a custom list, then fetch the attachment file from current item. &nbsp;Attachment Name option will be visible in this case. Attachment Name:Provide attachment name/placeholder to select the required document. Keeping ‘Attachment Name’ blank will fetch the first attachment of the item for document signing. If DocuSign action is configured on document library, this will fetch document on which workflows is being executed. Attachment Name option will not be visible in this case as a document library item has a single file only. Generate Document Action: Workflow can have one or more actions of type ‘Generate Document Action’. The generated document can be sent for signing. Select the required action in drop-down for this option. Note that generate document action should be prior to the signing action in the workflow. Note: This action supports only a single document for signing. Recipients: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This section describes the users who will receive the document for signing. To :&nbsp; The icon at end of row opens the Recipients screen to select users. Multiple entries can be made in any of the three options: Select Users and Groups as recipient. Select column in current list that has the users. Provide the recipient’s email address(es). Sign in Order: Select yes to send document to specified users in sequential order (one after another). Select no to send document to all users at the same time. Signature Email: Recipients will receive an email with a link to document for signing. Subject : The Subject of the email. This can have placeholders in it. Body: The Body of the email. This can have Placeholders in it. 2. Second part is to save the signed document and keep track of signing process. Save Signed Document Two options are available to save the signed document: Document Library Current File Location Document Library To save the signed document in a document library, follow below steps. Note that this library can be different from the list/library on which DocuSign workflow is configured. Select site from current site collection or specify the site URL. Select document library from dropdown. Provide folder path name where you want to save the signed document. Provide file name for the signed document. Option to overwrite file if it already exists in the destination. Current File Location Save signed document in the same location as the document that was sent for signing. It has two options: Use same file name: File name will be same as original file sent for signing along with any prefix/suffix that is specified. If prefix/suffix is not specified, then file name and location will be same and overwrite option should be selected. Custom file name: &nbsp; Provide a file name as required which can be different from the original document. Column Mappings This can be used to copy metadata related to the document from the original file location to the list/library where signed document is stored. For example, if an attachment from a list item is used for signing and signed document is saved to a document library, then column mapping section can be used to copy item column values to document library columns. Track Document Signing DocuSign workflow can save the status and log related to the signing process in the item on which workflow is run. This is helpful to track the signing process. Process Log: Select a multiple lines of text column with append changes enabled from the current list/library. Log related to execution of this action will be stored in this column and will include information like who signed the document and the status of the signed document. Signing Status Column: Select single line of text column from the current list/library. This column will have the status of signed document and can be used for any further process/email etc. Signed Document URL Column : Select hyperlink column from the current list/library. This column will have the full URL of the final signed document. It can be shown in the item form or used for any further process/email etc. Note: NITRODocuSignHistory list is created automatically to keep track of document signing process. DocuSignHistory column is created automatically in Current list (Custom List/Document Library). It will store the link of item created in NITRODocuSignHistory list when document signing process starts. Example: Send custom list item document for signing and save the signed document in current file location. Workflow configuration for DocuSign Action: DocuSign Action is configured on item modified event. In above configuration Attachment name is provided, it will fetch provided attachment of current item. Sign in Order is ‘Yes’. Document will be sent to first recipient first. If First recipient signs the document, only then document will be sent to second recipient for sign. In above configuration Use same file name with prefix to save signed document. Source Item Contract_MercyCorps.docx document will be sent to first recipient John Smith (John.smith@crowcanyon365.com) for sign. After signing is done by John Smith, mail is sent to Joe Bloggs account for signing the document. When both the recipient signs the document, process is completed and document is saved in source file location with same source file name with prefix and suffix added. DocURL, SignStatus and Process Log fields of source item will be updated. And document sign completed mail will be sent to recipients. Sample Output : About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "729",
    "name": "729 - Insert Query list item link in Mail Template of Send Mail Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/729%20-%20Insert%20Query%20list%20item%20link%20in%20Mail%20Template%20of%20Send%20Mail%20Action.html",
    "title": "Insert Query List Item Link In Mail Template Of Send Mail Action",
    "text": "Insert Query list item link in Mail Template of Send Mail Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Insert Query list item link in Mail Template of Send Mail Action Insert Query list item link in Mail Template of Send Mail Action 600 views Less than a minute 0 Applies To: SharePoint Online Custom action and NITRO Workflows Description: This article describes the steps to insert the link of item fetched from query list action in the mail (send mail action). Detailed Steps: Navigate to the list&nbsp;-&gt;&nbsp;Custom actions&nbsp;-&gt;&nbsp;Edit the required custom action&nbsp;-&gt;&nbsp;Edit the ‘Send Mail’ action&nbsp;-&gt;&nbsp;Click gear icon to navigate to ‘Mail Templates’. Edit the required mail template&nbsp;-&gt; Select the required text in the mail template&nbsp;that is to be hyperlinked -&gt;&nbsp;Click ‘Insert hyperlink’ icon&nbsp;-&gt;&nbsp;Insert query list item link as shown below: Note: Please go to the query list that is selected in Query List action&nbsp;-&gt;&nbsp;Open any item&nbsp;-&gt;&nbsp;Copy display form link from the address bar&nbsp;-&gt;&nbsp;Paste it in notepad&nbsp;-&gt;&nbsp;Remove item ID&nbsp;-&gt;&nbsp;Replace yellow highlighted text with display form link. Syntax of query list item ID (text highlighted in green): %%QueryListActionName##[ID|ID]%% Please replace green highlighted text as per the syntax above. Save the mail template. Sample Example: Send mail with link of Category item of the IssueType. Here Category is a lookup column in Issue Type. Custom Action: Custom Action: Query list action. Note that type is “Item”, that is, this action will fetch a single item (and not a collection of items). Custom Action2: Send Mail Action Mail Template Configuration: Insert Query List Item Link as shown below: Insert Query List Item Title Link as shown below: Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "73",
    "name": "73 - How To Customize NITRO Reports Using Script in List Rollup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/73%20-%20How%20To%20Customize%20NITRO%20Reports%20Using%20Script%20in%20List%20Rollup.html",
    "title": "How To Customize NITRO Reports Using Script In List Rollup",
    "text": "How To Customize NITRO Reports Using Script in List Rollup - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How To Customize NITRO Reports Using Script in List Rollup How To Customize NITRO Reports Using Script in List Rollup 634 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-Premises Description This article describes the process of configuring NITRO Reports data using JavaScript in List Rollup configuration. Below is the use case that require script in NITRO Reports. Use case: Overall Aging report (for &#8216;List Rollup&#8217;) Age of an item refers to the difference between a date column value in the item and the current date. In this report, we want to see the number of items for different age values. In this report, age value is on X axis and Tickets count is on Y axis. “Age” is a single line of text column in ‘Tickets’ list and ‘Archived Tickets’ list. Age will be calculated dynamically based on the ‘Created’ date of the Ticket when rendering the report using custom script. Sample output: Report Configuration: Script Used in above: List Rollup Configuration UI Settings: Mobile Mode Tab: Columns Tab: Data Tab: Archived Ticket List configuration for Rollup: Tickets List Configuration for Rollup: Toolbar Tab: Advanced Settings Tab: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "730",
    "name": "730 - How To Customize NITRO Reports Using Script in List Rollup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/730%20-%20How%20To%20Customize%20NITRO%20Reports%20Using%20Script%20in%20List%20Rollup.html",
    "title": "How To Customize NITRO Reports Using Script In List Rollup",
    "text": "How To Customize NITRO Reports Using Script in List Rollup - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / How To Customize NITRO Reports Using Script in List Rollup How To Customize NITRO Reports Using Script in List Rollup 634 views Less than a minute 0 Applies To: SharePoint Online and SharePoint On-Premises Description This article describes the process of configuring NITRO Reports data using JavaScript in List Rollup configuration. Below is the use case that require script in NITRO Reports. Use case: Overall Aging report (for &#8216;List Rollup&#8217;) Age of an item refers to the difference between a date column value in the item and the current date. In this report, we want to see the number of items for different age values. In this report, age value is on X axis and Tickets count is on Y axis. “Age” is a single line of text column in ‘Tickets’ list and ‘Archived Tickets’ list. Age will be calculated dynamically based on the ‘Created’ date of the Ticket when rendering the report using custom script. Sample output: Report Configuration: Script Used in above: List Rollup Configuration UI Settings: Mobile Mode Tab: Columns Tab: Data Tab: Archived Ticket List configuration for Rollup: Tickets List Configuration for Rollup: Toolbar Tab: Advanced Settings Tab: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "731",
    "name": "731 - Get URL to View Version History of an Item.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/731%20-%20Get%20URL%20to%20View%20Version%20History%20of%20an%20Item.html",
    "title": "Get URL To View Version History Of An Item",
    "text": "Get URL to View Version History of an Item - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Get URL to View Version History of an Item Get URL to View Version History of an Item 561 views Less than a minute 0 Applies To: Custom Actions and NITRO Workflows Description SharePoint item version history is a feature that automatically tracks changes made to documents or list items in a SharePoint document library or list. Each time an edit is made, a new version is created, allowing users to view, restore, or compare different states of an item. Use case: URL to View Version History of an Item Sample URL to view version history of a list item: https://contoso.sharepoint.com/sites/IT/_layouts/15/Versions.aspx?list=4859a10b-c22a-4bc4-9f84-2bd177e9e1ad&amp;ID=1 Configure column mappings as shown below to build above URL using expression builder: Fixed value used in third row in above expression: /_layouts/15/Versions.aspx?list= Sample Use case: Send URL in email to view version history of an item. Custom Action: Define Variable: Set Variable: Expression Builder: Below configuration will be same for custom actions and NITRO workflows. Send Mail Action: Configure Send Mail action to send URL to view version history of an item as shown below: Mail Template: Hyperlink: Configure hyperlink as shown below Web address: %%VariableName##Value%% Sample Output: Sample Version History URl of an item by clicking above link will be Like this: [Site URL] /_layouts/15/Versions.aspx?list=4c405ab4-24ed-4766-9298-4bb4a9e85a28&amp;ID=1 About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "732",
    "name": "732 - Hide default ‘Close’ button and configure a close button for redirecting to custom URL - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/732%20-%20Hide%20default%20%E2%80%98Close%E2%80%99%20button%20and%20configure%20a%20close%20button%20for%20redirecting%20to%20custom%20URL%20-%20Crow%20Canyon.html",
    "title": "Hide Default ‘Close’ Button And Configure A Close Button For Redirecting To Custom URL Crow Canyon",
    "text": "Hide default ‘Close’ button and configure a close button for redirecting to custom URL - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Hide default ‘Close’ button and configure a close button for redirecting to custom URL Hide default ‘Close’ button and configure a close button for redirecting to custom URL 518 views Less than a minute 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: NITRO display form has a ‘Close’ button to close the form and go back to the list. If requirement is to redirect to a specific URL after closing the form, then a custom button can be configured. NITRO Forms custom CSS and JavaScript features can be used to hide the default ‘Close’ button and configure a custom button. This document describes the steps to achieve this requirement. Steps to hide default ‘Close’ button and to configure a close button for redirecting to custom URL Navigate to the site&nbsp;-&gt; List&nbsp;-&gt; List settings&nbsp;-&gt; Crow Canyon NITRO Forms&nbsp;-&gt;&nbsp;Expand ‘Advanced’ section from left-hand panel&nbsp;-&gt;&nbsp;Custom CSS.&nbsp;&nbsp;Specify CSS as shown below: CSS to hide the default close button is given below: #btnClose { &nbsp; display:none; } To show the custom button, configure ‘Form Event Actions’ on form load; from ‘Advanced’ section as shown below: JavaScript to configure close button and redirect to custom URL: //Execute script action //Please replace &#8220; RedirectURLGoesHere &#8221; with the required URL. Save settings and publish the NITRO Forms. Sample Output: Default ‘Close’ button is hidden and custom button is shown above. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "733",
    "name": "733 - Steps to open NITRO Form of items with specific form key.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/733%20-%20Steps%20to%20open%20NITRO%20Form%20of%20items%20with%20specific%20form%20key.html",
    "title": "Steps To Open NITRO Form Of Items With Specific Form Key",
    "text": "Steps to open NITRO Form of items with specific form key - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps to open NITRO Form of items with specific form key Steps to open NITRO Form of items with specific form key 518 views 2 min , 10 sec read 0 Applies to: SharePoint online and On-premises (2013, 2016, 2019 and SE) Description: A SharePoint list can have multiple content types. And user can configure different NITRO forms for each content type. A SharePoint list item can be created with one content type and can later be updated to a different content type. To open the item in NITRO form for the updated content type, we need to update a hidden column value in item that stores the NITRO form key. This document describes the multiple content types in SharePoint lists and steps to update content type and form key for an item. Steps to add content types to SharePoint List Go to List settings -&gt; Advanced settings -&gt; select ‘yes’ in Allow management of content types -&gt; click Ok 2. Go to List settings -> In Content types click ‘add from existing site content types’ Select content types as shown below: For example: In ‘Tickets’ list below content types are added 3. Configure a different NITRO form for each content type. To create new form Go to ‘Manage Forms’ in NITRO Forms ribbon Click ‘New form’ button In the ‘Configure NITRO Form’ window: Select Form Name If you want to copy the new form from an existing form, then select the required form in dropdown. Click ‘Ok’ Click ‘Edit’ to configure form setting. Below images shows NITRO form for ‘Category’ content type in ‘Tickets’ list. Click ‘Publish’ button to publish the form. After configuring NITRO form, bind it with specific content type as described in below step. 4. To bind NITRO form to a specific content type, go to Advanced settings of ‘Manage Forms’ in NITRO Forms ribbon. 5. Click ‘New Mapping’ in ‘Configure Content Type Mappings’ Click &#8216;Ok&#8217; to save the settings. In List, to create items with different content types Go to list -&gt; ‘New’ button dropdown will show all available content types Select content type for which you want to create item, NITRO form configured for that content type will open. To open item with specific form Go to Advanced settings of ‘Manage Forms’ in NITRO Forms ribbon. 2. Click ‘New Setting’ in ‘Configure Override Forms’ With above override forms setting, items created with ‘Tickets’ form will open with Category form. Similarly, you can configure other override forms settings as per requirement. Steps to open NITRO form of an item with specific form key When an item is created using NITRO Forms, the NITOR form name (form key) is saved in a hidden column (‘CCSPortalFormKey’). When an item is opened, this value is used to decide which NITRO form to use to display the item content. To open an item with a different form, it is required to update item content type along with ‘CCSPortalFormKey’ column value and specify the form key with which we want to open that item. &nbsp;Below are the steps to update item content type and ‘CCSPortalFormKey’ column value using Crow&nbsp;&nbsp;&nbsp; Canyon Custom Actions. If item content type is updated for any reason, then ‘CCSPortalFormKey’ value should be updated as well. Below steps explain updating both the content type and the ‘CCSPortalFormKey’ for an item. Sample List: ‘Tickets’ In this example, we are updating the item content type to ‘Category’ and ‘CCSPortalFormKey’ to ‘Category’ form key. Navigate to the ‘Tickets’ list&nbsp;à&nbsp;Custom Actions (from list ribbon)&nbsp;à&nbsp;Configure a new action. Action 1: Add ‘Update List Item’ action on to the canvas. This action is to update the content type. Action 2: Add ‘Execute Script’ action on to the canvas. This action is to update the form key. Publish the custom action&nbsp; Script to update form key: currentItem.set_item(&#8220;CCSPortalFormKey&#8221;,&#8221;Category&#8221;); currentItem.update(); spContext.executeQueryAsync(functionCallback,functionCallback); functionCallback(); Sample input: Item has ‘Item’ content type and below NITRO form is configured for ‘Item’ content type. Sample output after executing custom action to update content type to ‘Category’ and open item with ‘Category’ form. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "734",
    "name": "734 - Count the number of items separately for each status in NITRO associated items column in NITRO form.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/734%20-%20Count%20the%20number%20of%20items%20separately%20for%20each%20status%20in%20NITRO%20associated%20items%20column%20in%20NITRO%20form.html",
    "title": "Count The Number Of Items Separately For Each Status In NITRO Associated Items Column In NITRO Form",
    "text": "Count the number of items separately for each status in NITRO associated items column in NITRO form - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Count the number of items separately for each status in NITRO associated items column in NITRO form Count the number of items separately for each status in NITRO associated items column in NITRO form 489 views Less than a minute 0 Applies To: SharePoint Online Description: Associated Items column in NITRO form shows related items. For example, it can show milestones related to a project or tasks related to a request. It can also show aggregate values for related items like count, sum, minimum and maximum value etc. This article describes the steps to show count of items separately based on a column value in related items (status). Detailed Description: In this example, we are counting related items based on their ‘Task Status’ in ‘Associated Tasks’ NITRO Associated items column. Navigate to NITRO Forms designer for the list -&gt; Edit ‘Associated Tasks’ column settings: Open ‘Aggregate’ Tab Click ‘New Aggregate’ button to configure aggregate settings for ‘Not Started’ task status: Script used in above: var count = 0; if (arrSelectColValues) { &nbsp;&nbsp;&nbsp; for (var i = 0; i &lt; arrSelectColValues.length; i++) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arrSelectColValues[i] == &#8220;Not Started&#8221;) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count++; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; } } return count; &nbsp;Click ‘New Aggregate’ button to configure aggregate settings for ‘In Progress’ task status: Script used in above: var count = 0; if (arrSelectColValues) { &nbsp;&nbsp;&nbsp; for (var i = 0; i &lt; arrSelectColValues.length; i++) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arrSelectColValues[i] == &#8220;In Progress&#8221;) { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; count++; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } &nbsp;&nbsp;&nbsp; } } return count; Configure ‘Completed’ task similar to above two steps by changing the status value in script. Apply column settings -> Publish the NITRO Forms. Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "735",
    "name": "735 - Steps To Count The Total Number Of Attachments For An Item and Set The Value In a Specified Column I.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/735%20-%20Steps%20To%20Count%20The%20Total%20Number%20Of%20Attachments%20For%20An%20Item%20and%20Set%20The%20Value%20In%20a%20Specified%20Column%20I.html",
    "title": "Steps To Count The Total Number Of Attachments For An Item And Set The Value In A Specified Column I",
    "text": "Steps To Count The Total Number Of Attachments For An Item and Set The Value In a Specified Column In The List - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps To Count The Total Number Of Attachments For An Item and Set The Value In a Specified Column In The List Steps To Count The Total Number Of Attachments For An Item and Set The Value In a Specified Column In The List 504 views 1 min , 44 sec read 0 Applies to: SharePoint Online and SharePoint On-premises Description This article describes the steps to use JavaScript to count the total number of attachments for an item in the list and then, display the total count of these attachments in a specified column of the list. This scenario can also be used to include validation for the number of attachments and is explained below. The script used in this article is tied to a &#8216;Submit Action&#8217; button and can be found for reference within the explained steps. Detailed Steps Navigate to the desired list where the total attachments need to be counted and open the NITRO Forms for this list. Add the required columns of the list in the NITRO Forms designer page. To count the total attachments and populate this value to a specific column, create a new column (For example, a single line of text column) and provide it a name. In this example, we have used a &#8216;Single line of text&#8217; column that has been named as &#8216;Docs&#8217; (this name can be changed as per the requirement), and this column&#8217;s internal name is only used in the script. Then drag and drop a ‘Submit Action’ button present under ‘Actions’ tab as shown below: The default ‘Save’ button can be hidden by selecting ‘Hide Save Button’ option present under the Layouts and Theme -&gt; Buttons as shown below: Once the Submit Action button is added, click on the ‘Edit’ button present adjacent to the ‘Pre-Save Process’ option and use the below script as shown below: Script used above: var attachcount = (window.ccs_g_FormUI.fetchAttachments() || &#91;]).length; formContext.setColumnControlValueByName(\"Docs\",attachcount); functionCallback(); This script would count the total number of attachments for any newly created item in the list as well as during the editing of the pre-existing item in the list and on submitting the form, it would display the total number of attachments in the ‘Docs’ column. Publish the NITRO Form to check the result. A sample output generated from the list configured with above mentioned steps is as shown below: The attached files can also be restricted using validations in attachment settings as shown below: Click on ‘Add’ to configure a new validation. In this example scenario, we are setting the maximum attachments limit to 2 for the default SharePoint Attachments column as shown below: If a user tries to attach more than 2 files (as specified in the above scenario) either in NITRO Attachments column or in the default SharePoint column, a message will appear as shown below: Script to count only the NITRO Attachments column: If there is a requirement to count the number of attachments in a NITRO Attachments column and not the total attachments in the list item, we can modify the script as shown below: In this example, we have used the name &#8216;NITRO Attachments&#8217; for NITRO Attachments column. This name can also be changed as per the requirement. Script used above: var objNITROAttachment = formContext.fetchColumnValueUI(\"NITROAttachments\").split(/&#91;\\s;]+/); if(objNITROAttachment &amp;&amp; objNITROAttachment.length &gt; 0){ formContext.setColumnControlValueByName(\"Docs\",objNITROAttachment.length); } functionCallback(); The Docs column has count of files in the NITRO Attachments column only: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "736",
    "name": "736 - NITRO Report To Display The Count Of Options Based On a Multi-Select Column - Crow Canyon Software S.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/736%20-%20NITRO%20Report%20To%20Display%20The%20Count%20Of%20Options%20Based%20On%20a%20Multi-Select%20Column%20-%20Crow%20Canyon%20Software%20S.html",
    "title": "NITRO Report To Display The Count Of Options Based On A Multi Select Column Crow Canyon Software S",
    "text": "NITRO Report To Display The Count Of Options Based On a Multi-Select Column - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Report To Display The Count Of Options Based On a Multi-Select Column NITRO Report To Display The Count Of Options Based On a Multi-Select Column 465 views 1 min , 51 sec read 0 Applies To SharePoint Online and SharePoint On-Premises Description This article describes the process of configuring a NITRO Report using custom JavaScript to display the total counts for options selected in a multi-choice column as well as a multi-lookup column. In the example used below to demonstrate this configuration, the multi-choice column is titled as ‘Options’ and the multi-lookup column is titled as ‘Department’. These names can be changed as per the name of the column(s) used in the actual scenario. Use Case 1: Configuration to show the total count for the options selected in a multi-choice column. The ‘Options’ column used in this example has following selected choices: The total count based upon above entries is as follows: Cable = 1, Keyboard = 2, Laptop = 1, Mouse = 3, PC = 3, Printer = 2, Router = 2, and Switch = 2 There are only 5 items in this view, but the total selected options are 16. The NITRO Report need to display the individual count for each option as well as the total as shown below: To configure this report, navigate to the NITRO Report configured for the list –&gt; Advanced settings –&gt; Customize Report –&gt; Add/Edit Script as shown below: Use the script as shown below: The JavaScript used is: scriptManager.GetFormattedColumnValues = function(listItem){ var result = &#91;]; //For Non Large List Reports var fieldValues = listItem.get_item(\"Options\"); //For Large List Reports // var fieldValues = listItem&#91;\"CheckBoxes\"] ? listItem&#91;\"Options\"].split(\"; \") : &#91;]; if (fieldValues &amp;&amp; fieldValues.length &gt; 0) { for (var i = 0; i &lt; fieldValues.length; i++) { var item = {}; item&#91;\"Options\"] = fieldValues&#91;i]; result.push(item); } } return result; }; If the list has a large number items, then to avoid the list threshold error, below option can be selected: If the above shown option is selected then, the lines related to ‘For Large List reports’ should be uncommented and used. In this example, the demonstrated list is not having large number of items and hence, the lines related to ‘For Non-Large List Reports’ are used. Use Case 2: Configuration to show the total count for the options selected in a multi-lookup column. In this example, the column used as a NITRO Multi-Lookup column is titled as ‘Departments’ and the same internal name would be used in the sample script. The ‘Department’ multi-lookup column has following entries selected: The total count based upon above entries is as follows: HR = 1, IT =3, Sales = 2, and the total selected departments is 6. Number of items in view are only 3. The NITRO Report need to display the individual count for each option as well as the total as shown below: To configure this report, navigate to the NITRO Report configured for the list –&gt; Advanced settings –&gt; Customize Report –&gt; Add/Edit Script as shown in the above Use Case 1. Use the script as shown below: The JavaScript used is: scriptManager.GetFormattedColumnValues = function (listItem) { var result = &#91;]; //For Non Large List Reports var fieldValues = listItem.get_item(\"Department\"); //For Large List Reports //var fieldValues = listItem&#91;\"Department\"] ? listItem&#91;\"Department\"].split(\"; \") : &#91;]; if (fieldValues &amp;&amp; fieldValues.length &gt; 0) { for (var i = 0; i &lt; fieldValues.length; i++) { var item = {}; item&#91;\"Department\"] = fieldValues&#91;i] &amp;&amp; fieldValues&#91;i].get_lookupValue ? fieldValues&#91;i].get_lookupValue() : fieldValues&#91;i]; result.push(item); } } return result; }; As mentioned in Use Case 1, use the lines related to large list if that optio is enabled in the report: For a detailed information about other script options available in the ‘Add/Edit Script’ section, please refer to this article. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "737",
    "name": "737 - A Complete Guide to Crow Canyon’s Mobile List View.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/737%20-%20A%20Complete%20Guide%20to%20Crow%20Canyon%E2%80%99s%20Mobile%20List%20View.html",
    "title": "A Complete Guide To Crow Canyon’s Mobile List View",
    "text": "A Complete Guide to Crow Canyon’s Mobile List View - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / A Complete Guide to Crow Canyon&#8217;s Mobile List View A Complete Guide to Crow Canyon&#8217;s Mobile List View 385 views 3 min , 19 sec read 0 Applies To: SharePoint Online and SharePoint On-premises Description: Crow Canyon List View is a NITRO component that provides enhanced capabilities to view the SharePoint list items. One such capability includes an option of viewing the List View in ‘Mobile Mode’ for devices with screens of different sizes and resolutions. This article covers detailed description of ‘Mobile Mode’ feature in Crow Canyon List View. Configuration for Crow Canyon List View in Mobile Mode: To display the NITRO List View in a mobile friendly layout, configure the mobile mode settings in a list view component through the below path: Navigate to Site Settings &#8211;&gt; Crow Canyon List View &#8211;&gt; Edit an existing List View definition or configure a new List View &#8211;&gt; Select ‘Mobile Mode’ tab as shown below: Various options present under this tab are as follows: Enable Mobile Mode: We can enable or disable the mobile mode using the toggle button as shown in the above screenshot. On enabling this option, the configured list view becomes compatible for viewing on the mobile devices. A sample screenshot for this view is as shown below: Mobile Mode In Max Screen Width: In this option, we can specify the width of the screen in pixels for a device where the List View is rendered. For devices with a screen width of 1024 pixels or more, the List View seamlessly adopts the &#8216;Desktop&#8217; mode. Whereas, for devices with a screen width below 1024 pixels, the List View is displayed using &#8216;Tablet&#8217; and &#8216;Mobile&#8217; modes. This pixel size can be specified depending upon the screen width of the device used for viewing the list. In this example, we have specified the screen width as 480 pixels. Mobile View: All the list views configured in ‘General’ tab are shown in this ‘Mobile View’ dropdown and the selected list view items is displayed in the mobile experience. Listing Mode: We can show the items in List View in ‘Normal’ or ‘Compact’ mode. Normal: When normal mode is selected, then the sub-fields ‘Sub-title Row Columns’ and ‘Sub-title Row Column Value Separator’ are also available as shown below: Sample output of List View using ‘Normal’ mode is as shown below: Compact: When ‘Compact’ mode is selected, then the fields to select ‘Sub-title Row Columns’ and ‘Sub-title Row Column Value Separator’ are not available as shown below: Sample output of the List View using compact mode displays the list items with only the ‘Title’ as shown below: Title Row Column: Using this option, select any list column from the dropdown that will be used as ‘Title’ for an item in the List View’s mobile experience. In the below screenshot, the column ‘Title’ is used for this purpose as shown: The sample output is as shown below: Sub-title Row Columns: In this option, select the additional list columns that can be viewed for an item under the main title. In the below sample screenshot, the sub-title columns selected are ‘Case Id’, ‘Category’ and ‘Status’. Sample output will be as shown below: Sub-title Row Column Value Separator: Specify the separator to be shown between the above selected sub-title row columns. Examples: Comma (,), Semicolon (;), Pipe (|), etc. This article uses ‘|’ as a separator as shown below: Image: When this option is used, an image is displayed as an icon for list items. The options present under this are ‘Default’, ‘Column’, ‘No Image’ and ‘Other’. Default: This option is enabled by default. In this option, the list items are displayed with a default NITRO image as shown below: Column: This option is to specify an image to be used as a display icon for a list item that is already present with the list item in a ‘Hyperlink or Picture’ column. To use this option, select a column that is available in the list containing a picture as shown below: Any item in the list that does not have an image present in the above selected column will use a default NITRO Studio image as an icon as shown below: No Image : When ‘No Image’ option is selected, then the Crow Canyon List View in the mobile mode will not display any image adjacent to the list items as shown below: Other : Select this option to specify the URL for custom image. This can be done by uploading an image to the ‘Site Assets’ folder and then specifying the path of the image in ‘Enter Image URL’ section as shown below: Sample output with a custom image is as shown below: Launch Form in: This option is used to specify a way by which a NITRO Form for the list item in the mobile mode can be displayed. It has further two sub-options: Inline: In this option, the list items are opened in the same webpart as shown below: Dialog : Select this option to open the item in a dialog. The ‘Edit’ and ‘Close’ buttons are displayed at the bottom of the dialog as shown below: Row Right Cell Display Type: This option is used to display text to the right side of the items in mobile mode. It has following three sub-options that can be used as per the requirement: Default: In this option, an arrow as highlighted in the below screenshot is displayed to view the specific list item as shown below: Content: This option is used to specify any custom content that would be displayed to the right side of the item row. When this option is checked, an additional field ‘Row Right Cell Display Content’ is available which is used to specify any custom content. In this article, ‘Click’ keyword is used that is displayed to the right of the item as shown below: None: When ‘None’ is chosen as an option then the right side of the row cell for an item remains empty as shown below: Sort Column: This option is to sort the items displayed in list view in mobile experience. In this example, we have selected ‘Status’ as the sorting column as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "738",
    "name": "738 - Address possible save_version conflicts in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/738%20-%20Address%20possible%20save_version%20conflicts%20in%20NITRO%20Forms.html",
    "title": "Address Possible Save Version Conflicts In NITRO Forms",
    "text": "Address possible save/version conflicts in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Address possible save/version conflicts in NITRO Forms Address possible save/version conflicts in NITRO Forms 350 views 1 min , 20 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: While saving a new item consisting of attachment(s) in a list, using NITRO Forms, an error is received as shown below: Also, when trying to save the same item again after clicking ‘OK’ button, another error is received as shown below: Possible Cause: This error occurs if there are NITRO Workflows configured on a list using ‘an item is created’ event. When an item is added to a list, Product workflows update the ‘Case ID’ and other hidden columns in the list item. If there are items added with attachments, one more update happens to set attachments after an item is created. If there is a workflow that is also updating the item on creation, it is expected that these updates happen concurrently causing version conflicts in the workflow execution. Resolution: We can follow one of the below methods to avoid these errors: 1. Delay the execution of the NITRO Workflow: Execution of a NITRO Workflow can be delayed by specifying the time in seconds in the ‘Delay Execution’ field available in the NITRO Workflow settings page as shown in the below screenshot. On using this option, the product workflow will update the item and then this NITRO workflow will start its execution. Hence, this will avoid the version conflict error(s). 2. Configuring a timer-based workflow: A timer-based workflow can be configured based on the ‘Created’ column with similar actions as that of current workflow(s). By using such a workflow, the item gets updated with a slight delay instead of updating directly on its creation. Note: There could be a possible maximum delay of 30 minutes as timer-based workflows run every 30 minutes. 3. Using a Submit Button: In NITRO Forms, we can use ‘Submit’ button instead of regular ‘Save’ button and use the NITRO Custom Actions to update an item after its creation. More details about configuring a Submit Action button can be found from the below article: https://www.crowcanyon.help/article/362/#Index1 We can also configure a user triggered workflow with same actions as that of the existing workflow(s). It can be invoked through the ‘Submit Button’ in NITRO Forms using Custom Actions (We can configure ‘Invoke Workflow’ action in custom actions to invoke the user-triggered NITRO Workflows). More details on how to invoke a workflow can be found from the below manual: https://www.crowcanyon.info/nitro/appmanual_v2/index.html?invoke-workflow.html About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "74",
    "name": "74 - Import data using Crow Canyon CSV Import Webpart.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/74%20-%20Import%20data%20using%20Crow%20Canyon%20CSV%20Import%20Webpart.html",
    "title": "Import Data Using Crow Canyon CSV Import Webpart",
    "text": "Import data using Crow Canyon CSV Import Webpart - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Import data using Crow Canyon CSV Import Webpart Import data using Crow Canyon CSV Import Webpart 324 views 4 min , 42 sec read 0 Applies To: SharePoint online (NITRO version 2.5.0.42 onwards) and Onprem Note: Latest NITRO installs CSV Import file. Description: This article describes the steps to add data in the SharePoint list from a CSV file using Crow Canyon CSV Import web part. A CSV (Comma-separated values) file is a delimited text file that uses a comma to separate values. Each line of the file is a data record. Each record consists of one or more columns, separated by commas. Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. The CSV Import webpart is used to create items in a SharePoint list using the records from CSV data. It can also be used to update or delete existing items in the list using a matching criterion. Summary of Steps: Add CSV Import webpart to a page Import CSV file data to the SharePoint list Detailed Steps: Add CSV Import webpart to a page Add CSV Import web Part in Online and Onprem NITRO Secure and Onprem NITRO Azure Modern Page Go to site contents –&gt; Site Pages -&gt; Click Site Pages in ‘New’ dropdown 2. Add “NITRO Container &#8211; Crow Canyon” webpart in the page as shown below 3. After Adding webpart, edit the webpart and select CSV Import in Settings in right panel 4. Publish the page 5. After publishing, page will show CSV import webpart as shown below: Add CSV Import web Part in Online and Onprem (Azure based NITRO (Nonsecure)) Classic Page To create a web part page (Classic), go to site contents –&gt; Site Pages -&gt; click Web Part Page in ‘New’ dropdown and add a web part page 2. Specify the page name, choose the appropriate layout, and select the target document library as shown below: 3. After adding Web Part Page, Click edit web part -&gt; select ’Media and Content’ in Categories -&gt; select ‘Content Editor’ in Parts -&gt; click ‘Add’ button 4. After adding ‘Content Editor’ webpart, edit the webpart as shown below 5. Provide below content file URL in ‘Content Link’ in right side of the page. Also, user can select appearance, layout and other settings as per their choice. Click ‘Ok’ or ‘Apply’ button in bottom. Link for Online webpart and Azure based NITRO (Nonsecure) &#8211; https://cdn.crowcanyon.com/CSVImport/Content/Classic/CSVImportContentWP.xml Link for Secure NITRO &#8211; #SiteCollectionURL#/CrowCanyonNITRO/CDN/CSVImport/Content/Classic/CSVImportContentWP.xml Note: For Secure Nitro replace #SiteCollectionURL# with SharePoint Site Collection URL. 6. Click stop editing webpart in upper left corner. Web Part page will contain CSV Import Webpart as shown below Import CSV file data to the SharePoint list Functionality of CSV Import CSV import webpart is used to import CSV file column data and map it to SharePoint list columns. CSV Import webpart consists of 4 stages CSV File Configuration Validation Processing CSV File This stage is used to input CSV file. Step 1: Prepare the CSV file: Below table describes the syntax to put value for different column types: Column Type Column Value Example Single line of text Specify direct text Printer is not working Multiple line of text Specify direct text Printer is not working Lookup Column (Single and Multi) Specify lookup column value or lookup id (specify multiple values using semicolon hash (;#) separator) Single Value: Email Multiple Values: Email;#Network Choice (Single and Multi) Specify Choice options ( to specify multiple choice use separator comma(,), semicolon(;) or semicolon hash(;#)) Single Choice: High Multiple Choice: Calendar;Email Date and Time The value entered in the CSV file must be as per the SharePoint site regional settings. Enter the time in 24 hours format. Syntax : Month-Date-Year Hours:Minutes:Seconds 08-18-2022 5:30:00 Person or Group (Single and Multi) Specify display name or login name or user email or user id of user or group User display name (Single): James Restivo SharePoint group display name (Single): Helpdesk Owners User Ids (Multi): 15;#7:25 Login name (Multi): James Restivo;#Scott Restivo &nbsp; &nbsp; Number and Currency Specify number values 500 or 550.50 Yes/No Specify Yes or No values yes Hyperlink Specify hyperlink value http://www.google.com Metadata (Single and Multi) Speciy Metadata value (For Multiple values use separator semicolon(;)) Single Value: Marketing Multiple Values: HR;Marketing Folder Specify folder path /sites/NITRO/Helpdesk/ Site Assets/Folder1 Files (Single and Multi) Specify Files path ( use separator semicolon hash (;#) for multiple files /sites/NITRO/Helpdesk/ Site Assets/Folder1/logs.txt;# /sites/NITRO/Helpdesk/ Site Assets/Folder1/logs1.txt Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. Or you can export SharePoint list data as CSV file to import this data into another list as shown below: Sample CSV file &nbsp;Step 2: Input the CSV file &nbsp;There are two ways to input CSV File in CSV Import tool Select the CSV file using the ‘Select CSV File’ button from the local machine Select a CSV file from the SharePoint Library Click ‘Next’ button to load CSV file Configuration Stage In this stage, CSV file columns to SharePoint column mapping is done to create, update or delete items in SharePoint list that matches the criteria. Settings: User can save the settings that are configured in Configuration tab by clicking ‘Save’ button at bottom. All Saved settings will be shown in Settings column dropdown. User can select the setting and click ‘Upload’ button. User can make further changes in the uploaded setting. Example: Click Save button to save the above configured settings. Save Configuration window will pop up. Provide ‘Configuration Name’ and click ‘Ok’ These saved Configurations will be available in ‘Settings’ column dropdown as shown below Select the setting and click ‘Upload’ button. This will load the settings configured in selected xml file as shown below. Mode Create: To create items in SharePoint List Update: To update SharePoint List Items by providing ‘Unique key’. This will check if an item is already present in target SharePoint list based on ‘Unique key mapping’ If item not found, it will create list item as per the column mappings and CSV file content. If item found, then it will update existing list item as per the column mappings and CSV file content. Note: Unique Key selected in update mode should be mapped in Column Mapping too. Example: Delete: To delete SharePoint List Items by Providing ’Unique Key’. System will check if an item is already present in target SharePoint list based on ‘Unique key mapping’ If item found, then recycle the item. If item not found, no action required. Note: Unique Key selected in delete mode should be mapped in Column Mapping too. Example: SharePoint Site URL: Select target SharePoint site URL from dropdown. List: Select SharePoint list from dropdown where you want to create, update or delete items based on the CSV data. Column Mapping: Configure CSV file to SharePoint list column mappings as required by clicking ‘New Mapping’ button. Attachment: Folder: If CSV file has folder column which contain path for files, then all the files of provided folder path will be attached to item Folder path format in CSV File: /Library/Folder Name File: If CSV file has file column which contain path for individual file (Single or Multiple files supported), then those files will be attached to the item. Note : separator supported in CSV file for multiple Files: ‘;#’ Example: File and Folder column in CSV file are shown below: Delay execution: It delays the creation, updation and deletion of multiple items in SharePoint list by specified number of seconds. Log Library: Select log library from dropdown to store log details. Click ‘Next’ button to go to validation stage. Validation Stage This will check the validation of columns mapped (check that mapped columns are valid or invalid) in previous step. Also, it will show the mapped column count. Click ‘Next’ button to go to processing stage. Processing Stage This step will show the Success count of item which are successfully created in the target SharePoint list Failed Count to show the items which are causing error in creating items in target list Pending Count to show the pending items count to map to target list Total Count: to show total number of items mapped to target SharePoint list Log Type: All: It will show all success and Failed logs Error: It will show all failed logs In Update mode: If selected unique Key fetch more than one item, then error will occur as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "741",
    "name": "741 - Import data using Crow Canyon CSV Import Webpart.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/741%20-%20Import%20data%20using%20Crow%20Canyon%20CSV%20Import%20Webpart.html",
    "title": "Import Data Using Crow Canyon CSV Import Webpart",
    "text": "Import data using Crow Canyon CSV Import Webpart - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Import data using Crow Canyon CSV Import Webpart Import data using Crow Canyon CSV Import Webpart 324 views 4 min , 42 sec read 0 Applies To: SharePoint online (NITRO version 2.5.0.42 onwards) and Onprem Note: Latest NITRO installs CSV Import file. Description: This article describes the steps to add data in the SharePoint list from a CSV file using Crow Canyon CSV Import web part. A CSV (Comma-separated values) file is a delimited text file that uses a comma to separate values. Each line of the file is a data record. Each record consists of one or more columns, separated by commas. Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. The CSV Import webpart is used to create items in a SharePoint list using the records from CSV data. It can also be used to update or delete existing items in the list using a matching criterion. Summary of Steps: Add CSV Import webpart to a page Import CSV file data to the SharePoint list Detailed Steps: Add CSV Import webpart to a page Add CSV Import web Part in Online and Onprem NITRO Secure and Onprem NITRO Azure Modern Page Go to site contents –&gt; Site Pages -&gt; Click Site Pages in ‘New’ dropdown 2. Add “NITRO Container &#8211; Crow Canyon” webpart in the page as shown below 3. After Adding webpart, edit the webpart and select CSV Import in Settings in right panel 4. Publish the page 5. After publishing, page will show CSV import webpart as shown below: Add CSV Import web Part in Online and Onprem (Azure based NITRO (Nonsecure)) Classic Page To create a web part page (Classic), go to site contents –&gt; Site Pages -&gt; click Web Part Page in ‘New’ dropdown and add a web part page 2. Specify the page name, choose the appropriate layout, and select the target document library as shown below: 3. After adding Web Part Page, Click edit web part -&gt; select ’Media and Content’ in Categories -&gt; select ‘Content Editor’ in Parts -&gt; click ‘Add’ button 4. After adding ‘Content Editor’ webpart, edit the webpart as shown below 5. Provide below content file URL in ‘Content Link’ in right side of the page. Also, user can select appearance, layout and other settings as per their choice. Click ‘Ok’ or ‘Apply’ button in bottom. Link for Online webpart and Azure based NITRO (Nonsecure) &#8211; https://cdn.crowcanyon.com/CSVImport/Content/Classic/CSVImportContentWP.xml Link for Secure NITRO &#8211; #SiteCollectionURL#/CrowCanyonNITRO/CDN/CSVImport/Content/Classic/CSVImportContentWP.xml Note: For Secure Nitro replace #SiteCollectionURL# with SharePoint Site Collection URL. 6. Click stop editing webpart in upper left corner. Web Part page will contain CSV Import Webpart as shown below Import CSV file data to the SharePoint list Functionality of CSV Import CSV import webpart is used to import CSV file column data and map it to SharePoint list columns. CSV Import webpart consists of 4 stages CSV File Configuration Validation Processing CSV File This stage is used to input CSV file. Step 1: Prepare the CSV file: Below table describes the syntax to put value for different column types: Column Type Column Value Example Single line of text Specify direct text Printer is not working Multiple line of text Specify direct text Printer is not working Lookup Column (Single and Multi) Specify lookup column value or lookup id (specify multiple values using semicolon hash (;#) separator) Single Value: Email Multiple Values: Email;#Network Choice (Single and Multi) Specify Choice options ( to specify multiple choice use separator comma(,), semicolon(;) or semicolon hash(;#)) Single Choice: High Multiple Choice: Calendar;Email Date and Time The value entered in the CSV file must be as per the SharePoint site regional settings. Enter the time in 24 hours format. Syntax : Month-Date-Year Hours:Minutes:Seconds 08-18-2022 5:30:00 Person or Group (Single and Multi) Specify display name or login name or user email or user id of user or group User display name (Single): James Restivo SharePoint group display name (Single): Helpdesk Owners User Ids (Multi): 15;#7:25 Login name (Multi): James Restivo;#Scott Restivo &nbsp; &nbsp; Number and Currency Specify number values 500 or 550.50 Yes/No Specify Yes or No values yes Hyperlink Specify hyperlink value http://www.google.com Metadata (Single and Multi) Speciy Metadata value (For Multiple values use separator semicolon(;)) Single Value: Marketing Multiple Values: HR;Marketing Folder Specify folder path /sites/NITRO/Helpdesk/ Site Assets/Folder1 Files (Single and Multi) Specify Files path ( use separator semicolon hash (;#) for multiple files /sites/NITRO/Helpdesk/ Site Assets/Folder1/logs.txt;# /sites/NITRO/Helpdesk/ Site Assets/Folder1/logs1.txt Excel data is different from CSV. To convert the excel file to a CSV file, open the excel data file -&gt; File tab -&gt; Click Save As -&gt; Select save as CSV file. Or you can export SharePoint list data as CSV file to import this data into another list as shown below: Sample CSV file &nbsp;Step 2: Input the CSV file &nbsp;There are two ways to input CSV File in CSV Import tool Select the CSV file using the ‘Select CSV File’ button from the local machine Select a CSV file from the SharePoint Library Click ‘Next’ button to load CSV file Configuration Stage In this stage, CSV file columns to SharePoint column mapping is done to create, update or delete items in SharePoint list that matches the criteria. Settings: User can save the settings that are configured in Configuration tab by clicking ‘Save’ button at bottom. All Saved settings will be shown in Settings column dropdown. User can select the setting and click ‘Upload’ button. User can make further changes in the uploaded setting. Example: Click Save button to save the above configured settings. Save Configuration window will pop up. Provide ‘Configuration Name’ and click ‘Ok’ These saved Configurations will be available in ‘Settings’ column dropdown as shown below Select the setting and click ‘Upload’ button. This will load the settings configured in selected xml file as shown below. Mode Create: To create items in SharePoint List Update: To update SharePoint List Items by providing ‘Unique key’. This will check if an item is already present in target SharePoint list based on ‘Unique key mapping’ If item not found, it will create list item as per the column mappings and CSV file content. If item found, then it will update existing list item as per the column mappings and CSV file content. Note: Unique Key selected in update mode should be mapped in Column Mapping too. Example: Delete: To delete SharePoint List Items by Providing ’Unique Key’. System will check if an item is already present in target SharePoint list based on ‘Unique key mapping’ If item found, then recycle the item. If item not found, no action required. Note: Unique Key selected in delete mode should be mapped in Column Mapping too. Example: SharePoint Site URL: Select target SharePoint site URL from dropdown. List: Select SharePoint list from dropdown where you want to create, update or delete items based on the CSV data. Column Mapping: Configure CSV file to SharePoint list column mappings as required by clicking ‘New Mapping’ button. Attachment: Folder: If CSV file has folder column which contain path for files, then all the files of provided folder path will be attached to item Folder path format in CSV File: /Library/Folder Name File: If CSV file has file column which contain path for individual file (Single or Multiple files supported), then those files will be attached to the item. Note : separator supported in CSV file for multiple Files: ‘;#’ Example: File and Folder column in CSV file are shown below: Delay execution: It delays the creation, updation and deletion of multiple items in SharePoint list by specified number of seconds. Log Library: Select log library from dropdown to store log details. Click ‘Next’ button to go to validation stage. Validation Stage This will check the validation of columns mapped (check that mapped columns are valid or invalid) in previous step. Also, it will show the mapped column count. Click ‘Next’ button to go to processing stage. Processing Stage This step will show the Success count of item which are successfully created in the target SharePoint list Failed Count to show the items which are causing error in creating items in target list Pending Count to show the pending items count to map to target list Total Count: to show total number of items mapped to target SharePoint list Log Type: All: It will show all success and Failed logs Error: It will show all failed logs In Update mode: If selected unique Key fetch more than one item, then error will occur as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "742",
    "name": "742 - Permissions used in NITRO Studio Modern (3.0).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/742%20-%20Permissions%20used%20in%20NITRO%20Studio%20Modern%20%283.0%29.html",
    "title": "Permissions Used In NITRO Studio Modern (3.0)",
    "text": "Permissions used in NITRO Studio Modern (3.0) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Permissions used in NITRO Studio Modern (3.0) Permissions used in NITRO Studio Modern (3.0) 357 views 3 min , 34 sec read 0 Applies To: SharePoint Online Description NITRO Studio can be installed with one of the below permission levels in SharePoint Online site collection. 1. NITRO API (tenant level) Tenant administrator needs to grant this permission. NITRO API will have full control permissions on all site collections in the SharePoint. This option makes the NITRO Studio installation and updates easier. 2. NITRO Site API (site.selected) Tenant administrator need to allow NITRO Site API in the tenant. This step does not grant permissions on any of the site collections. When NITRO is installed in any of the site collections, NITRO Site API will get full control permissions on that site collection only. Difference between NITRO API and NITRO Site API : NITRO API (tenant level) NITRO Site API (site.selected) It will have full control permission on all site collections. It will have full control permission on only those site collections where NITRO Studio is installed. Custom script can be enabled automatically using this permission level. Scripting is required for certain steps like adding links to NITRO in the site. Custom script cannot be enabled automatically. SharePoint administrator need to enable it manually. All site collections will be shown on the NITRO studio installation page. User can find the required site collection and initiate installation. Only those site collections where NITRO Studio is installed are shown. To add NITRO to a new site collection, user need to enter the URL of the site collection. Select the permission option as per your organization policies. Refer to this article to install NITRO Studio and activate NITRO for a site. Permissions required for different API&#8217;s : Crow Canyon Authentication API (with NITRO API) This API is required for logging into NITRO Studio installation home page: https://crowcanyonnitro.azurewebsites.net &nbsp; Basic permissions only – User.Read, OpenId profile. Normal users can grant permissions for themselves. &nbsp; Administrator can grant permission for entire organization. &nbsp; Crow Canyon Authentication API (with NITRO Site API) This API is required for logging into NITRO Studio installation home page: https://crowcanyonnitro.azurewebsites.net &nbsp; Delegated permissions &#8211; Full control on all site collections. Note that this does not allow NITRO applications to access the sites. It is only used on this site to enable ‘NITRO Site API’ permissions on the site collection where NITRO Studio is installed. &nbsp; NITRO API Note: Either &#8216;NITRO API&#8217; or &#8216;NITRO Site API&#8217; can be used for NITRO Studio installation. Please refer to this article for installation steps. Full control permissions on all SharePoint site collections &nbsp; Term store and user read permissions &nbsp; NITRO Site API Full control permissions only on the site collections where NITRO Studio is installed &nbsp; Term store and user read permissions &nbsp; Crow Canyon Advanced Approval/NITRO Workflows/Product App Full control permissions on the site collection where NITRO Studio is installed. This is same as NITRO Site API permission. &nbsp; SharePoint list items are created/updated in the context of these Apps. With separate permissions we can identify which app has created/updated the list item. &nbsp; Crow Canyon Email API Mail read/write/send permissions on specific mailboxes that are used to send or receive emails in the application. &nbsp; Permissions are restricted to specific mailboxes with an additional step using PowerShell. &nbsp; Crow Canyon Calendar API Calendar read/write/send permissions on specific mailboxes. Permissions are restricted to specific mailboxes with an additional step using PowerShell. &nbsp; Optional: Required if Workflows/Custom actions need to create meetings. Crow Canyon Teams API Group read/write permissions. &nbsp; Optional: Required for Workflow/Custom actions to create Teams/Channels. &nbsp; Azure AD API (Read) Read permissions on Directory/Group/Group Member/User. &nbsp; If not granted, NITRO will not be able to read AD groups and group members. &nbsp; Azure AD API Read and Write permissions on Directory/Group/Group Member/User. &nbsp; Optional: If any AD write operations are required, otherwise use Read API. NITRO Onboarding application can create/update in Microsoft Entra (AD). &nbsp; Custom Scripting : NITRO Studio installation requires that custom scripting is enabled for the site collection. Enable custom script in app catalog site collection and the site collection in which NITRO Studio will be installed. Use the PowerShell to set the tenant level flag to not disable the custom script (see the last step in below article) Please refer to this article How to enable scripting capabilities with PowerShell – Crow Canyon Software Support to enable custom script. Use of custom scripting in NITRO Studio: Custom script is required for the following steps during NITRO Studio installation Installing NITRO Modern SPFx components in the site collection. NITRO apps links in the site settings page and the settings menu (gear icon in upper right corner). NITRO Apps links in list settings page and classic UI list ribbon. Create modern site pages Custom script is required for the following steps during NITRO update/repair To update NITRO Modern SPFx components in the site collection. Create or update links in sites settings page and settings menu (gear icon in upper right corner). Create or update NITRO Apps links in list settings page and classic UI list ribbon. Create or update modern site pages In NITRO Apps settings pages, for sites using Modern UI, scripting is required only to create NITRO application administration link using modern branding app. For sites using classic UI, scripting is required for below steps: Adding web parts for below apps to classic SharePoint pages (webpart pages). List Search List View List Rollup Tiles and Dials NITRO Reports Publish NITRO Forms for SharePoint classic experience. If the list is using modern experience, then this is not required. Create Custom Actions in list/form ribbon and edit control block for SharePoint classic lists. To use the following features in Crow Canyon Classic Branding, custom script is required Launch NITRO forms in a dialog Translator Widgets Application Administration For below features in NITRO Site Settings page for the classic SharePoint sites: Live Chat Integration Security Settings NITRO Linked Items app for classic SharePoint lists Note that custom script is not required for both classic and modern sites for regular usage by end users. It is only required during installation, upgrade and configuration of NITRO apps. During NITRO 3.0 Upgrade Installing NITRO Modern SPFx components in the site collection. NITRO apps links in the site settings page and the settings menu (gear icon in upper right corner). NITRO Apps links in list settings page and classic UI list ribbon. Create modern site pages About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "743",
    "name": "743 - Configure Archival Functionality in Service Request Applications using NITRO Workflows - Crow Canyon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/743%20-%20Configure%20Archival%20Functionality%20in%20Service%20Request%20Applications%20using%20NITRO%20Workflows%20-%20Crow%20Canyon.html",
    "title": "Configure Archival Functionality In Service Request Applications Using NITRO Workflows Crow Canyon",
    "text": "Configure Archival Functionality in Service Request Applications using NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Archival Functionality in Service Request Applications using NITRO Workflows Configure Archival Functionality in Service Request Applications using NITRO Workflows 332 views 4 min , 24 sec read 0 Applies To: SharePoint Online Note: For SharePoint On-Premises, please refer to the below article: https://www.crowcanyon.help/article/316/ Description: This article explains the steps to configure archival functionality for the ‘Tickets’ list in Crow Canyon Helpdesk application. The steps explained in this article can also be followed to configure the same functionality for any other list. Automatic archival process The automatic archival process moves the tickets along with their associated items like tasks, etc. to a different list without breaking their relation using NITRO Workflows. Summary of steps Prepare the list schema so that old tickets/items can be moved along with their related items. Configure NITRO Workflows to move the tickets. Detailed Steps: Prepare list schema: Save the following lists as template: Tickets, Email Tickets, Associated Tasks and Time Tracking. To save ‘Tickets’ list as template, navigate to the site -> Application Administration -> Click ‘Advanced’ -> Configure Lists -> ‘Configure Tickets’. From the Tickets list settings page, under ‘Permissions and Management’ section, click ‘Save list as template’ as shown below: 3. Provide the ‘File name’, ‘Template name’ and do not select the ‘Include Content’ option -> Click OK as shown below: 4. Similarly, save the other lists as template that are mentioned in #1 as ‘Archived Email Tickets’, ‘Archived Time Tracking’ and ‘Archived Associated Tasks’ respectively. 5. Create new archival lists from the above list templates. 6. To create ‘Archived Tickets’ list, navigate to ‘Site Contents’ -&gt; Click ‘Return to classic SharePoint’ at the bottom left of the page (if the site is in modern experience) as shown below: 7. On the opened page, click ‘add an app’ -> Search for ‘Archived Tickets’ list template created in #3 above -> Click ‘Archived Tickets’ -> Create a list with this template as shown below: 8. Similarly, create ‘Archived Email Tickets’, ‘Archived Time Tracking’ and Archived Associated Tasks’ lists from the respective list templates. Note: The idea behind creating Archived Email Tickets, Archived Time Tracking and Archived Associated Tasks lists is to move email history and related items along with the Tickets during archival process. 9. Configure NITRO Forms for each of these archival lists using ‘Export and Import’ feature of the NITRO Forms. More information on how to use the export and import functionality of the NITRO Forms can be found in this article . 10. After creating all the archival lists and NITRO Forms, ensure that all the lookup columns in Archived Tickets list, Archived Email Tickets list, Archived Time Tracking list and Archived Associated Tasks list are correct. 11. Recreate below lookup column in archival lists: Archived Email Tickets, Archived Time Tracking and Archived Associated Tasks lists. For Archived Email Tickets list: Navigate to NITRO Forms designer for the list -&gt; Create a NITRO Lookup column ‘Related Ticket ID’ as shown below: Internal name: RelatedTicketID Display name: Related Ticket ID For Archived Time Tracking list: Navigate to NITRO Forms designer for the list -&gt; Create a NITRO Lookup column ‘Related Ticket ID’ as shown below: Internal name: RelatedTicketID Display name: Related Ticket ID For Archived Associated Tasks list: Navigate to NITRO Forms designer for the list -&gt; Create a NITRO Lookup column ‘Related Ticket ID’ as shown below: Internal name: RelatedTicketID Display name: Related Ticket ID 12. Delete all the NITRO Associated Item columns (‘Time Tracking’, ‘Email History’ and ‘Associated Tasks’) from Archived Tickets list manually. 13. Recreate the NITRO Associated Item columns with the lookup columns created in #11. Navigate to the Archived Tickets list -&gt; List settings -&gt; Crow Canyon NITRO Forms -&gt; Click ‘Create Column’ -&gt; NITRO Associated Items Column. 14. Configure the ‘Time Tracking’ NITRO Associated Items column as shown below: Column Internal Name: TimeTracking Column Display Name: Time Tracking 15. Similarly, create ‘Associated Tasks’ and ‘Email History’ columns as shown below: For ‘Associated Tasks’: Column Internal Name: AssociatedTasks Column Display Name: Associated Tasks For ‘Email History’: Column Internal Name: EmailHistory Column Display Name: Email History 16. Drag and drop all the above NITRO Associated Items columns on to the NITRO Form under ‘Related Items’ tab. Configure NITRO Workflows: 1. Navigate to the Tickets list -> List settings -> Crow Canyon NITRO Workflow -> Click ‘New’ -> Select ‘scheduled / user / bot triggered’ event -> Click Ok as shown below: 2. Click ‘Settings’ button from the ‘WORKFLOW’ ribbon -&gt; Configure action settings as shown below: Query builder conditions: ‘Status’ ‘equal’ ‘Closed’ ‘Closed Date’ ‘less or equal’ ‘OffsetDays:-365’ 3. Click ‘OK’. Expand ‘Actions’ section -&gt; Drag and drop a ‘Move Item’ action on to the canvas -&gt; Configure the ‘Move Item’ action settings as shown below: 4. Add associated list mappings as shown in the below table and screenshots: Source List Target List Associated Tasks – Related Ticket Archived Associated Tasks – Related Ticket ID Email Tickets – Related Ticket ID Archived Email Tickets – Related Ticket ID Time Tracking – Related Ticket ID Archived Time Tracking – Related Ticket ID 5. Similarly, map the other 2 associated lists as shown below: 6. Publish the NITRO Workflow. Manual Archival Process : The automatic archival process moves the items only based on the ‘Closed Date’, that is, exactly 1 year after the ‘Closed Date’ of the ticket. So, the tickets are archived in a timely manner. We can also configure the manual archival process to move tickets to the archived list in bulk at a time manually as explained below: Summary of steps Prepare the list schema Configure a Custom Action Configure a NITRO Workflow Detailed steps : Prepare the list schema to move old tickets along with their related items as per the below steps: The archival list schema is same as explained above for the automatic archival process. Additionally, create a ‘Yes/No’ column in the Tickets list as: Column Internal Name: ArchiveTickets Column Display Name: Archive Tickets Configure a Custom Action: 1. Navigate to the Tickets list -&gt; Click ‘Custom Actions’ from the list ribbon -&gt; Click ‘New Custom Action’ button -&gt; Select the ‘Tickets’ list -&gt; ‘Designer’ experience -&gt; Click ‘OK’ as shown below: 2. Click ‘Settings’ button from the ‘CUSTOM ACTION’ ribbon -&gt; Configure action settings as shown below: 3. Click ‘OK’. Expand ‘Actions’ section -&gt; Drag and drop an ‘Update List Item’ action on to the canvas -&gt; Configure action settings as shown below: Column mapping: ‘Archive Tickets’ -&gt; ‘True’ 4. Publish the Custom Action. Configure the NITRO Workflow: 1. Navigate to ‘Tickets’ list -&gt; Click ‘NITRO Workflow’ from the list ribbon -&gt; Click ‘New’ button -&gt; Select ‘Tickets’ list -&gt; ‘Designer’ experience -&gt; Select ‘an item is modified’ event -&gt; Click ‘Ok’. 2. Click ‘Settings’ button from ‘WORKFLOW’ ribbon -&gt; Configure the action settings as shown below -&gt; Click ‘OK’: 3. Configure workflow conditions, click ‘Conditions’ from the ‘WORKFLOW’ ribbon and specifying the condition as: Archive Tickets ‘equal’ afterchange:True 4. Expand ‘Actions’ section -&gt; Drag and drop a ‘Move Item’ action on to the canvas -&gt; Configure the ‘Move Item’ action settings as shown below: Note: Refer to #3, #4 and #5 above from the ‘Configure NITRO Workflows’ section under automatic archival process and configure the associated list mappings. 5. Publish the NITRO Workflow. Steps to archive the Tickets manually in bulk: Navigate to the ‘Tickets’ list -&gt; Select ‘Closed Tickets’ list view -&gt; Select multiple tickets to archive -&gt; Click ‘Archive Tickets’ custom action button from the list ribbon as shown below: Note: In the Archived Tickets list, the standard SharePoint columns like ‘Created, Created By, Modified, Modified By and ID’ are not copied from the Tickets List. To view this information, there are additional columns in the Archived Tickets list: CCSOriginalCreatedDate -> This column displays the original created date of the archived Ticket. CCSOriginalModifiedDate -> This column displays the original modified date of the archived Ticket. CCSVersionCreatedDate -> This column displays the original version created date of the archived Ticket. CcsOriginalItemID -> This column displays original item ID of the archived Ticket. CCSUnMappedColumnData -> This column stores the data of those columns that are not present in the Archived Tickets list but present in the actual Tickets list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "744",
    "name": "744 - Steps To Filter The List Items Using SharePoint Views and Calculated Columns - Crow Canyon Software.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/744%20-%20Steps%20To%20Filter%20The%20List%20Items%20Using%20SharePoint%20Views%20and%20Calculated%20Columns%20-%20Crow%20Canyon%20Software.html",
    "title": "Steps To Filter The List Items Using SharePoint Views And Calculated Columns Crow Canyon Software",
    "text": "Steps To Filter The List Items Using SharePoint Views and Calculated Columns - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps To Filter The List Items Using SharePoint Views and Calculated Columns Steps To Filter The List Items Using SharePoint Views and Calculated Columns 308 views 5 min , 24 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: This article describes the steps to use ‘ Calculated Columns ’ to create SharePoint Views for filtering the items of a list based upon a Date/Time column in the same list. The ‘Date/Time’ column used for reference in this article is titled ‘ ClosedDate ’. These steps can also be implemented using the default Date/Time columns in a SharePoint list like ‘Created’ and ’Modified’ or any other custom Date/Time type of a column(s). Detailed Steps: Use Case 1: Creating a filter in a SharePoint View to display items closed in the ‘Current Calendar Month’: 1. Navigate to the desired list -> List Settings -> Create Column -> Calculated -> Configure as shown below: Column Display Name : Start Of Current Month Column Internal Name : StartOfCurrentMonth This column is used to show the first day of the month based on ‘ClosedDate’ column value, and the formula used is: =DATE(YEAR(ClosedDate),MONTH(ClosedDate),1) 2. If required, uncheck the ‘Add to default view’ so that this column remains hidden from the main list and click ‘OK’ to save the configuration for this column. 3. Similarly, create another ‘Calculated’ column and configure it as shown below: Column Display Name: End Of Current Month Column Internal Name : EndOfCurrentMonth This column is used to show the last day of the month based on ‘ClosedDate’ column value, and the formula used is: =DATE(YEAR(ClosedDate),MONTH(ClosedDate)+1,1)-1 4. For this column also, if required, uncheck the ‘Add to default view’ option and click on ‘OK’ to save the column in the list. 5. Navigate back to the list and from the list ribbon, select ‘All Items’ -> Create new view as shown below: 6. Provide a name to this view. In this example, we have named it as ‘Tickets Closed In Current Month’ to display only those items in the list that are closed in the current month as shown below: Filter conditions for this view are used as: 7. Save the above view and on selecting this view, the items in the list will be displayed as shown below: Use Case 2: Creating a filter in a SharePoint View to display items closed in the ‘Previous Calendar Month’: 1. Create three ‘Calculated’ columns in the list as explained in the ‘Use Case 1’ and name them as ‘ Closed Year ’, ‘ Closed Month ’ and ‘ Is Previous Month ’ respectively. The names can be changed as per the requirement. 2. The ‘Closed Year’ column can be configured as shown below: Column Display Name : Closed Year Column Internal Name : ClosedYear This column is used to calculate the year on which the Ticket was closed based on the date entered in ‘ClosedDate’ column, and the formula used is: =YEAR(ClosedDate) 3. The ‘Closed Month’ calculated column can be configured as shown below: Column Display Name : Closed Month Column Internal Name : ClosedMonth The purpose of this column is to calculate the closed month based upon the value in the ‘ClosedDate’ column, and the formula used is: =MONTH(ClosedDate) 4. The ‘Is Previous Month’ column can be configured as shown below: Column Display Name : Is Previous Month Column Internal Name : IsPreviousMonth The formula used above is: =IF(AND(YEAR(TODAY())=YEAR(DATE(YEAR(ClosedDate),MONTH(ClosedDate)+1,0)),MONTH(ClosedDate)=MONTH(TODAY())-1),&#8221;Yes&#8221;,&#8221;No&#8221;) Example: If ClosedDate is 2023-05-15 and Today is 2023-06-13, the formula will evaluate: YEAR(TODAY()) = 2023 YEAR(DATE(YEAR(2023),MONTH(2023-05-15)+1,0)) = 2023 MONTH(2023-05-15) = 5 MONTH(2023-06-13)-1 = 5 The conditions are true, so the result will be &#8220;Yes&#8221;. If ClosedDate is 2023-04-15 and Today is 2023-06-13, the conditions will not be met, so the result will be &#8220;No&#8221;. Explanation of the formula: TODAY(): This function returns the current date. YEAR(TODAY()): This extracts the year from the current date. MONTH(TODAY()): This extracts the month from the current date. YEAR(ClosedDate): This extracts the year from the ‘ClosedDate’ column. MONTH(ClosedDate): This extracts the month from the ClosedDate. DATE(YEAR(ClosedDate), MONTH(ClosedDate) + 1, 0): This constructs a date by taking the year of ‘ClosedDate’, the month of ‘ClosedDate’ plus one, and day zero of that month. The day zero of the next month actually gives the last day of the current month. This is a used to get the last day of the month for the ‘ClosedDate’ column. YEAR(DATE(YEAR(ClosedDate), MONTH(ClosedDate) + 1, 0)): This extracts the year from the date calculated above, which is the last day of the month of the ‘ClosedDate’ column. MONTH(TODAY()) – 1: This calculates the previous month from the current date. 5. Create a new view titled ‘Tickets Closed Last Month’ as explained in #5 of Use Case 1. It can be configured as shown below: The filter conditions used for this view are: 6. Once the above configured view is saved, the output from the list displaying the items will be as shown below: Use Case 3: Creating a filter in a SharePoint View to display items closed in the ‘Current Week of the Calendar Month’: Create 2 calculated columns as explained in the above Use Case 1 titled ‘ Start of Current Week ’ and ‘ End of Current Week ’ respectively. The configuration for ‘Start of Current Week’ calculated column is as shown below: Column Display Name: Start of Current Week Column Internal Name: StartofCurrentWeek This column is added to calculate the start date of the week based on the value from the ‘ClosedDate’ column, and the formula used is: =ClosedDate-WEEKDAY(ClosedDate)+1 Note: The start date for the week will depend upon the Site’s Regional Settings as shown below: 3. Similarly, ‘End of Current Week’ calculated column can be configured as shown below: Column Display Name: End of Current Week Column Internal Name: EndOfCurrentWeek The purpose of this column is to calculate the end date for the week and, the formula used for this column is: =[Start of Week]+6 4. As per the previous ‘Use Cases’ explained above, create a SharePoint View titled ‘Tickets Closed in Current Week’ to display only those items in a list that were closed in the current week of the current Calendar month as shown below: The filter conditions used for this view are: 5. As per the above configured view, the output will be as shown below: Use Case 4: Creating a filter in a SharePoint View to display the items closed in the ‘Previous Week’ Create a Calculated Column titled ‘Is Previous Week’ and configure it as shown below: Column Display Name: Is Previous Week Column Internal Name : IsPreviousWeek The formula used is: =IF( &nbsp;&nbsp;&nbsp; AND( &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [ClosedDate] &gt;= (TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 7), &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [ClosedDate] &lt;= (TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 1) &nbsp;&nbsp;&nbsp; ), &nbsp;&nbsp;&nbsp; &#8220;Yes&#8221;, &nbsp;&nbsp;&nbsp; &#8220;No&#8221; ) Example Calculation: Let us assume that the current date is Wednesday, June 12, 2024 and it is required to find if a ClosedDate falls in the previous week (from Sunday, June 2, 2024, to Saturday, June 8, 2024). Today&#8217;s Date: TODAY() = June 12, 2024 Day of the Week: WEEKDAY(TODAY(), 1) = 4 (Wednesday) Previous Sunday: TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 7 June 12, 2024 &#8211; 4 &#8211; 7 June 12, 2024 &#8211; 11 June 1, 2024 Previous Saturday: TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 1 June 12, 2024 &#8211; 4 &#8211; 1 June 12, 2024 &#8211; 5 June 7, 2024 Explanation of the formula: TODAY(): Gets the current date. WEEKDAY(TODAY(), 1): Returns the day of the week for the current date, with 1 representing Sunday and 7 representing Saturday. TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 7: Calculates the start date of the previous week (Sunday). TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 1: Calculates the end date of the previous week (Saturday). AND([ClosedDate] &gt;= (TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 7), [ClosedDate] &lt;= (TODAY() &#8211; WEEKDAY(TODAY(), 1) &#8211; 1)): Checks if the ‘ClosedDate’ falls within the previous week. IF(&#8230;, &#8220;Yes&#8221;, &#8220;No&#8221;): Returns &#8220;Yes&#8221; if the ‘ClosedDate’ is within the previous week, otherwise returns &#8220;No&#8221;. 2. Create a SharePoint View titled ‘Tickets Closed Last Week’ as shown below: The filter conditions used for this view are: 3. On selecting this view, the output from the list will be shown as below: Use Case 5: Creating a filter in a SharePoint View to display items closed in the ‘Previous Year’: To display the items of the list that were closed last year, we need to create one Calculated Columns as ‘ Is Previous Year’ . The configuration for this column can be done as shown: Column Display Name : IsPreviousYear Column Internal Name : IsPreviousYear The formula used in this column is: =IF(YEAR([ClosedDate]) = YEAR(TODAY()) &#8211; 1, &#8220;Yes&#8221;, &#8220;No&#8221;) Explanation of the above formula: YEAR([ClosedDate]): Extracts the year from the ClosedDate column. YEAR(TODAY()) &#8211; 1: Calculates the previous year based on the current year. IF(YEAR([ClosedDate]) = YEAR(TODAY()) &#8211; 1, &#8220;Yes&#8221;, &#8220;No&#8221;): Checks if the year of the ClosedDate is equal to the previous year. If it is, it returns &#8220;Yes&#8221;; otherwise, it returns &#8220;No&#8221;. 3. Create a SharePoint view titled as ‘Tickets Closed Last Year’ as shown below: The filter conditions used for this view are: On selecting the above configured view, the output from the list will be as shown below: Use Case 6: Creating a filter in a SharePoint view to display all the Tickets closed in the ‘Current Year’: 1. Create a new ‘Calculated’ column titled ‘ Is Current Year ’ and configure it as shown below: Column Display Name : Is Current Year Column Internal Name : IsCurrentYear The formula used in the above screenshot is : =IF(YEAR(ClosedDate)=YEAR(TODAY()),&#8221;Yes&#8221;,&#8221;No&#8221;) Explanation of the above formula: YEAR([ClosedDate]): Extracts the year from the ClosedDate column. YEAR(TODAY()): Extracts the current year from today&#8217;s date. IF(YEAR([ClosedDate]) = YEAR(TODAY()), &#8220;Yes&#8221;, &#8220;No&#8221;): Checks if the year of the ClosedDate is equal to the current year. If it is, the formula returns &#8220;Yes&#8221;; otherwise, it returns &#8220;No&#8221;. 2. Once the above column has been created, create a new SharePoint List View and configure it as shown below: The filter conditions used for this view are: 3. From this configured view, the output will be as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "745",
    "name": "745 - Knowledge Base Copilot Configuration in NITRO Studio.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/745%20-%20Knowledge%20Base%20Copilot%20Configuration%20in%20NITRO%20Studio.html",
    "title": "Knowledge Base Copilot Configuration In NITRO Studio",
    "text": "Knowledge Base Copilot Configuration in NITRO Studio - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Knowledge Base Copilot Configuration in NITRO Studio Knowledge Base Copilot Configuration in NITRO Studio 308 views 16 min , 28 sec read 0 Contents Knowledge Base Copilot Configuration in NITRO Studio. 1 Description. 1 Prerequisites. 1 Summary of steps. 1 Detailed description. 2 AI Connections in NITRO Studio. 2 General details of NITRO Copilot 4 Configure the Copilot web part on the page. 49 KB Copilot in NITRO Helpdesk. 50 Add KB Copilot to Page. 65 Applies to : SharePoint Online Description NITRO Copilot can be used by end users to get comprehensive answers to their questions. And Help Desk staff users can easily generate responses for their Tickets. NITRO Copilot leverages the latest AI technologies along with an organization’s existing information and data to provide relevant and accurate answers to user inquiries. Organizations can now use their data to provide users with a self-serve Copilot that integrates with the NITRO Help Desk. If users still need help after making an inquiry to NITRO Copilot, they can escalate the request to the Help Desk with just a click. The request is auto-populated based on the conversation with Copilot, saving time for the user and staff. This article describes the steps to configure copilot in NITRO Studio. Prerequisites Copilot can work with different data sources; prerequisites vary based on the type of data source for the knowledge base that is used to generate the answers. Please refer this article for more details on Azure Services: Instructions to create Azure Services &#8211; Crow Canyon Software Support Summary of steps AI services connections in NITRO Studio Configure NITRO Copilot settings Add NITRO Copilot component in a SharePoint site page KB Copilot in NITRO Helpdesk Detailed description AI Connections in NITRO Studio Connections are a way to authenticate and consume both Microsoft and other resources within your Azure AI Studio projects. Below are the supported connection types in NITRO Copilot. Connection Type Description Azure Open AI Azure OpenAI Service provides REST API access to OpenAI&#8217;s powerful language models including GPT-4o, GPT-4 Turbo with Vision, GPT-4, GPT-3.5-Turbo, and Embeddings model series. Open AI OpenAI is a cloud-based platform that allows developers to access a variety of models hosted by OpenAI, configure and submit prompts to said models and use their generative outputs in automations. Document Intelligence AI Document Intelligence is an AI service that applies advanced machine learning to extract text, key-value pairs, tables, and structures from documents automatically and accurately. Azure AI Search Azure AI Search is an Azure resource that supports information retrieval over your vector and textual data stored in search indexes. To configure the connections in NITRO Studio, go to the site -&gt; Site Settings -&gt; Crow Canyon NITRO Site Settings -&gt; Expand “AI Connection Settings” and configure the connections as shown below: Azure Open AI Connection Settings: Name: Specify the connection name. Service Type: Select the type of service you are using from the dropdown. API Key: Enter the API key provided by the service provider. API key is a unique authentication token that grants access to the AI service capabilities, including text generation and natural language processing. API key value can be accessed from the settings of the Azure Open AI resource in the Azure portal. Completions Model: Enter the name of the Completion Model provided by the service provider. Models can be added to the Azure Open AI resource from the Azure portal. The completion model generates text based on the input provided, utilizing advanced natural language processing capabilities. Example: gpt -35-turbo. Embedding Model: Enter the name of the Embedding Model provided by the service provider. Models can be added to the Azure Open AI resource from the Azure portal. The Embedding Model transforms text into numerical representations (embeddings) that capture semantic meaning and context. Endpoint: Enter the endpoint URL provided by the service provider. This endpoint serves as the gateway for making API requests to utilize advanced AI capabilities such as text generation and natural language processing. Endpoint URL value can be accessed from the settings of the Azure Open AI resource in the Azure portal API Version : Enter the API Version provided by the service provider. Open AI Connection Settings These details can be accessed from your Open AI subscription settings. Document Intelligence AI Connection Settings For document intelligence AI connection, users need Azure AI services multi-service account. API key and Endpoint value can be accessed from the corresponding resource in Azure portal. Azure AI Search Connection Settings API Key (Admin): Enter your Admin API key to authenticate and authorize administrative tasks and configurations for Azure API search. This key grant access to manage indexes, query settings, and other administrative functions within your Azure API Search service. API key can be accessed from the settings of the Azure AI Search resource in the Azure portal. API Key (Query): Enter your Query API key to authenticate and authorize queries made to Azure API search. This key allows access to perform search operations and retrieve search results from your Azure API Search service. API key can be accessed from the settings of the Azure AI Search resource in the Azure portal. General details of NITRO Copilot To configure NITRO copilots, navigate to the URL below manually. ##SiteURL##/CrowCanyonAppsLib/nitroai/copilot/default.aspx ##SiteURL##: Replace the placeholder with the site URL General Settings Name: Specify the name for the copilot. The name will be shown on the copilot page. Copilot Title: Specify the copilot title. Copilot title will be shown at the top of the copilot. Welcome Text : Specify the welcome text for your Copilot search application. This text will greet users and provide initial guidance or instructions on how to use the application effectively. Example: Welcome to Copilot search! Start typing your query or question to begin exploring insights and information. Leave this blank to use the default welcome text in the Copilot web part. Supported placeholder: [CurrentUserDisplayName]], [[FirstName]] and [[LastName]] The above placeholder will be replaced with the current logged-in user’s name and user first name and last name. Disclaimer Text: Disclaimer for NITRO Copilot response, shown at the end of the answer below the list of document sources. To remove the disclaimer from the copilot response, remove the disclaimer text. Show Disclaimer on Home Page: Options: Yes / No This setting controls whether a disclaimer message is displayed to users on the NITRO Copilot home page. &#8211; Yes: A disclaimer will be shown at the end of the answer below the list of document sources. &#8211; No: No disclaimer will be displayed on the home page. Logging Type &#8211; Normal / Detailed This setting defines the level of logging for Copilot usage: &#8211; Normal : This is the default logging option for KB Copilot. It records basic information such as user queries and responses. &#8211; Detailed : This option enables advanced logging. It captures detailed logs including: &#8211; AI Keywords Request and Response &#8211; AI Question Request and Response &#8211; AI Answer Request and Response Useful for deeper analysis and troubleshooting of AI interactions Example: When a user submits a query in KB Copilot, a log entry is created in the Log List to track the interaction. Initial Query For the user&#8217;s first question: &#8211; The system processes the query and returns a response. &#8211; The following columns are updated in the Log List : &#8211; AIAnswerRequest – Stores the query sent to the AI. &#8211; AIAnswerResponse – Stores the response generated by the AI. Follow-up Questions &#8211; If the user asks additional questions during the same session: &#8211; The existing log item is updated. &#8211; The following columns are updated: &#8211; AIQuestionRequest – Stores the user’s follow-up question. &#8211; AIQuestionResponse – Stores the AI&#8217;s response to the follow-up. Logging Type: Normal vs. Detailed &#8211; Normal Logging : &#8211; Only basic logs are captured. &#8211; Columns like Chat Logs and Debug Logs are updated. &#8211; AI-specific columns ( AIAnswerRequest , AIAnswerResponse , etc.) are not included . &#8211; Detailed Logging : &#8211; All AI-related columns are updated, including both initial and follow-up interactions. &#8211; Useful for tracking detailed interaction history and troubleshooting. Follow up question in same session: Log List: The Log List is automatically created upon saving Copilot settings and records all user interactions with NITRO Copilot. You don’t need to create this list manually—it will appear in the site once the setup is complete. General General Settings configuration Example: Sample Output of General Settings : Enter search query: AI Settings AI Type : Select the AI type as per the requirement for text generation and language processing. Below are the supported AI Types. Open AI Azure Open AI AI Connection : Select an AI connection Configured in NITRO Site Settings. If no connection is configured yet, please click the ‘+’ button beside the dropdown to create it now. Type of Search : Below are the supported search types. Select the type of search you wish to perform. SharePoint Search : Access and retrieve information stored within SharePoint repositories. Benefit from SharePoint’s robust document management and collaboration features. SharePoint and Embedding Search: Search the content using SharePoint search and the results are ranked using embeddings to capture semantic meaning and context. Search Query: Search query will be shown only if the “Type of Search” is “SharePoint Search” or &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; “SharePoint and Embedding Search” It provides three options for search query input. User Input Key Phrases &amp; Synonyms Hybrid User Input: Keywords and phrases entered by the user in Copilot will directly be used to search for relevant information. Key phrases&nbsp;&amp; Synonyms: Instead of using the user-entered text directly, Copilot will send it to the AI service to extract keywords and synonyms. These keywords and synonyms will be used for the actual search. Hybrid: Copilot will first search with user entered text. If no results are found, then it will use key phrases and synonyms Azure AI Search : It utilizes powerful AI-driven search capabilities provided by Azure with features like semantic search. Azure AI Search Connection: This connection will show only when we select “Type of Search” as “Azure AI Search”. Select the Azure AI Search connection to establish a connection with Azure AI Search. This connection allows the Copilot search application to interact with Azure AI Search Services, enabling powerful search capabilities. This dropdown will show the existing Azure AI search connections configured in the NITRO Site Settings. Also, we can create a new connection using the plus (+) icon. Azure AI Search Index: Select the Azure AI Search index you wish to query within your Copilot search application. In Azure AI Search, indexes are used to store the extracted data from the documents and make them available in the search. The index represents the structured data repository where Azure AI Search stores and retrieves searchable content. This dropdown will show the existing search indexes in the Azure AI Search. We can also create a new index using the plus (+) icon. The checkbox will validate the required fields in the Search Index and if they are not available then it will create. Fields like, HideLinkinCopilot, Target Audience etc Number of Tokens to API : Tokens can be thought of as words or pieces of words. 75 words are roughly equivalent to 100 tokens. Passing more tokens to AI APIs will give better results but will incur higher cost. Specify the number of tokens to the API as per the selected AI connection and the completion model. Different models have different limits for allowed number of tokens. Max Output Tokens: Sets the maximum number of tokens (Words and Symbols) the AI can generate in a single response. Higher values allow longer replies but may take more time or cost more resources. Chat Message Limit : Specify the number of messages the user is allowed to send in one conversation with the copilot. Users can start a new chat once this limit is reached. Absolutely! Here&#8217;s a clear explanation of these two NITRO Copilot settings in the Helpdesk application , specifically in the context of how they enhance AI responses: Include Source Links in Response Setting: Yes / No Determines whether the AI-generated response should include hyperlinks to the original source documents or articles used to generate the answer. Yes : When enabled, Copilot will append clickable links at the end of its response pointing to the relevant Knowledge Base articles, ticket history, or documents that it used as references. No : Source links will not be shown in the AI responses, even if the data was fetched from internal documents. Source Links Limit Defines the maximum number of source links that can be included in a single AI response. For example, if you set this value to 2 , Copilot will only show up to two of the most relevant links in its response — even if more documents contributed to the answer. Data Source A data source in NITRO Copilot refers to the location where documents are stored and from which Copilot retrieves information. Some possible options include: SharePoint Document Libraries SharePoint lists Data source for Azure AI Search Data source lists are not required for the Azure AI search as it will search content from the search index selected in the general settings. So, Data Source tab will be hidden in this case. Data Source for SharePoint Search, and SharePoint and Embedding Search in AI Settings (General Section): Select Site URL: Select the site URL for the data source list. List : This dropdown will show all the available lists from the selected site. Search column can be selected from a Custom list or Document library list. Search Column: For a custom list, select the search column from the dropdown where Copilot will look for relevant information. For a document library , the DocContent column is automatically created. This column stores the extracted text from documents, making them searchable. Copilot searches within this column When it needs to find specific details, such as policy information. Example: If an employee asks, &#8220;What is the leave policy?&#8221; , Copilot will scan the DocContent column to retrieve the most relevant information. Number of items/documents to pick: Enter the maximum number of documents or items you wish to retrieve as search results in the SharePoint Search. This number determines how many search results will be displayed or processed based on your query. Detailed explanation of lists selected in Data Source Custom List: To search within a specific list, select the desired list from the available options. If you choose a custom list, the &#8216;Embeddings Column&#8217; will become visible. Example settings for KB Copilot: Embeddings Column : This column will store the embedding value of the search column content. This is used to better match the content with the user query based on the semantic meaning of the user query. Connection Between Copilot and Embedding Action in Workflow : NITRO Copilot utilizes embeddings to understand and process user queries effectively. The &#8216;Calculate Embedding &#8216; action in NITRO Workflows generates these embeddings for your list items. When a new item is added or an existing item is updated, this action computes the embedding for the specified content and stores it in the &#8216;Embeddings Column&#8217;. Copilot then references these embeddings to deliver contextually relevant responses to user queries. Document Library: If a customer wants to use Copilot to find information within their documents, they first need to store the documents in a SharePoint Document Library . However, for Copilot to understand and retrieve content effectively, the text from these documents must be extracted and indexed. This is where the Document Intelligence action in Nitro Workflows comes in. After running the Document Intelligence action , the extracted content becomes available in SharePoint , making it accessible to Copilot. If the content is stored in a SharePoint List , customers should select that list as the data source in Copilot. If the content is stored in the Document Library , Copilot will automatically use the &#8220;DocContent&#8221;(automatically created) column, where the extracted text is indexed for search. Example Settings: Document Intelligence AI Connection : The Document Intelligence AI Connection (set as Azure Doc Intelligence in the example) enables Copilot to analyze and extract information from documents. If this is set up: Copilot can automatically read , understand , and extract key details from documents. Without the connection, Copilot can only retrieve metadata like file names, not document content. For example, if asked about the HR leave policy, Copilot can return the file name but not the text. To enable content-based searches, the Document Intelligence AI connection is needed; otherwise, Copilot can only list documents. This dropdown will show the existing Document Intelligence connections configured in the NITRO Site Settings. Also, we can create a new connection using the plus (+) icon. Note: Users can create a workflow in Nitro Workflows that includes the Document Intelligence action to process and manage documents efficiently. This action automatically stores the documents in a designated target location, making them easily accessible for future use. Once the documents are stored, users can select this target location as a data source in Copilot. This setup ensures that all processed documents are indexed and available for search, improving Copilot’s ability to retrieve relevant information when needed. Prompts Prompts are the instructions to AI to get the desired response. These can be tweaked as per the requirement. Sample Prompt Configuration: Conversation: Input to LLM (Large Language Model) AI to generate the answer based on user query and search content. In this setting, Input to LLM (Large Language Model) AI means that the user&#8217;s query and any relevant search content are provided as input to the AI model. The AI then generates a response based on this input, leveraging its language processing abilities to provide a coherent and relevant answer. Response Options: Restrict Response to Given Context : This is an optional setting that can be enabled to control how the AI generates its responses. When Checked: The AI is instructed to only use the provided context to formulate its response. It is not allowed to provide general answers or make any assumptions outside of the given context. This ensures the response remains accurate, relevant, and consistent with the information provided, avoiding general answers that may not be relevant to your organization. If Restrict Response to Given Context option is enabled, the following text is added to the conversation prompt: “Only use the provided context to answer the question. If the context is not there or not relevant to the question, then do not fabricate or make up the answer. Strictly ensure that the response is relevant to the context given and maintains coherence with the topic.” If Restrict Response to Given Context option is disabled: When the &#8220;Restrict Content&#8221; option is disabled in NITRO Copilot&#8217;s conversation prompt settings, you have the flexibility to include additional information directly within the conversation prompt. This allows the AI to generate responses based on both the user&#8217;s query and the provided context. Indicate context relevance: When enabled, Copilot evaluates how relevant the context is to the user&#8217;s question. This setting is mainly used to hide irrelevant source/reference links in the final answer. Restrict Response Indicate Relevance Outcome Enabled Enabled Copilot only uses provided content, and also tags the relevance of sources. Only relevant links are shown in responses. Best for reliable, context-specific responses. Enabled Disabled Copilot restricts to context but shows all links , even if some aren’t fully relevant. Responses won’t flag context relevance. Disabled Enabled Copilot may use general AI knowledge beyond the provided context , but will still indicate if the given context was useful or not. Disabled Disabled Copilot can freely use AI knowledge and provided content, no restriction or indication of source relevance . May lead to broader but less controlled responses. Sample Output without enabling Restrict Response to Given Context and Indicate context relevance : Sample Output with enabling Restrict Response to Given Context and without enabling Indicate context relevance: Sample Output without enabling Restrict Response to Given Context and with enabling Indicate context relevance: Sample Output with enabling Restrict Response to Given Context and Indicate context relevance: Rephrase Question: Input to LLM (Large Language Model) AI to rephrase the question based on the latest user query text and the conversation history. This setting tells Copilot how to rewrite a user’s question in a clearer way, using both the current question and earlier conversation. Keyword: Input to LLM (Large Language Model) AI to extract the keywords from user query text. This setting tells Copilot how to pick out important words from a piece of text. Precanned: Tiles for frequently used queries from the users. These are designed to quickly address common queries or actions within the Copilot application. You can create a new Precanned prompt by clicking the ‘New’ button. Sample configuration: Or provide Icon URL as shown below Upload the icon in any folder in Site Assets, then copy the link. Sample URL used above: [[Site URL]] /SiteAssets/Icons/Laptop.png Precanned Prompt Height: Specify the height (in pixels)of the tiles to display precanned requests in your copilot application. Precanned Prompt Width: Specify the width (in pixels)of the tiles to display precanned requests in your copilot application. Sample Output: Configured Precanned prompts will be shown in the NITRO Copilot webpart as shown below: Actions: Enable Feedback : Enables users to give feedback rating for the conversation. This feedback is stored in a list and can be used by admins to analyze the effectiveness of the copilot. Knowledge-based content can be added and improved based on the types of queries asked by the users. Save Chat Summary : Enable this setting to copy the conversation along with the feedback. Enable Feedback Comments: When enabled, users can add optional comments along with their feedback. Useful for collecting more details on whether the response was helpful or not. Rating Completion Redirect URL: After feedback is submitted, users can be redirected to another page (like a thank you message or additional resource). Enter a URL here if you want to guide users to a specific location after submitting feedback. Feedback List : The feedback list will be created automatically when we save the copilot settings. All the feedback will be saved in this list. Actions : Configure actions to escalate the request to the helpdesk if user query is not resolved by the copilot. Create Ticket Action: Click ‘New’ to map field values: Action Fields: Create Ticket Title The name of the action displayed to users. Example: &#8220;Create Ticket&#8221; (shown as a button after the Copilot chat). Action Description Optional text to describe what this action does. Example: &#8220;Click here to create a support ticket if your issue was not resolved.&#8221; Site and List Configuration Select Site URL Choose where the ticket will be created: Select Site from Current Site Collection : Use a site within the same environment. Specify Site URL : Enter a full SharePoint site URL (as shown in your example). List The SharePoint list where the ticket will be created. Example: Tickets Mappings (Field Data Mapping) This section maps values from the Copilot interaction to columns in the Tickets list: Column Title Value Explanation Title Search Text Maps the user&#8217;s query to the ticket title. Please provide additional details User Input Lets the user add more info before creating the ticket. Requester Logged User Automatically sets the current user as the ticket requester. TicketSource KB Copilot Identifies that the ticket was created via the Copilot. Additional Information new Search Text Stores the original search text in a separate field. Work Log AI Result Stores the AI-generated response in the work log for context. These mappings ensure that useful context from the Copilot session is passed into the Helpdesk ticket automatically. Create Feedback Item Optional setting to also log feedback when a ticket is created. Rating Optionally assign a feedback rating when the ticket is created. In this case, it&#8217;s set to 1 , which may indicate a low satisfaction level (since the user needed help beyond Copilot). Example: User Search Query: Unable to log in to my Laptop/Desktop If the user doesn&#8217;t find a suitable response after searching, they can click the &#8216;Create Ticket&#8217; button to submit a new request. Enter Description in popup window and click ok to create a Ticket. Below Ticket will be created in Tickets list in Helpdesk Application. Issue Resolved Sample Output: Theme It allows users to customize the appearance of various UI elements, including button colors and pre-canned prompt tiles. Users can configure the theme as required. 1. Button Color Background and Text : Allows customization of the background and text color for buttons. The dropdowns let you select different colors or keep the default theme. 2. Pre-canned Prompt Tile Color Background and Text : Sets the background and text color for pre-canned prompt tiles. Hover Background and Hover Text : Configures colors when hovering over the prompt tiles. 3. Pre-canned Prompt Icon Color Background and Text : Customizes the colors of icons within pre-canned prompts. Hover Background and Hover Text : Changes the icon colors when hovered over. Sample Configuration : Sample output with custom theme : Advanced Settings: Advanced Settings JSON for NITRO Copilot 1. AzureAISearchResultsFilter Controls how strictly the Copilot selects content from Azure AI Search when forming a response. &#8220;AzureAISearchResultsFilter&#8221;: { &nbsp; &#8220;min_search_score&#8221;: 4, &nbsp; &#8220;min_search_score_relative&#8221;: 0.7 } min_search_score: 4 This sets the absolute minimum quality score for search results (scale may vary). Any document or KB article with a score below 4 is excluded from the response context. min_search_score_relative: 0.7 This is a relative threshold : only results that score at least 70% as good as the top result will be included. Helps Copilot focus on the most relevant results and ignore weak matches. 2. CopilotVersion: 1.1 Defines the version of the Copilot configuration being used. Helpful for backward compatibility or applying version-specific logic in future updates. 3. AdditionalFilters &#8220;AdditionalFilters&#8221;: { &nbsp; &#8220;TargetAudience&#8221;: &#8220;&#8221; } Acts as a placeholder for filtering search results based on specific field values. Here, TargetAudience is the filter field, but its value is currently empty (i.e., no filter is applied unless set dynamically). TargetAudience field can have value ‘Internal’, ‘External’ and ‘Both’. 4. AdditionalFiltersPattern &#8220;AdditionalFiltersPattern&#8221;: &#8220;TargetAudience eq &#8216;Both&#8217; or TargetAudience eq &#8216;Internal&#8217; or TargetAudience eq &#8216;External'&#8221; This defines a pattern Copilot uses when applying the TargetAudience filter. It allows content targeting specific audiences to be included, such as: Internal users External users Both This is useful for tailoring Copilot responses depending on who&#8217;s asking the question (e.g., employee vs. customer). Configure the Copilot web part on the page To configure the copilot web part, create a new site page, add the “Open AI Search – Crow Canyon” web part, and select the configured NITRO Copilot. KB Copilot in NITRO Helpdesk In this article, we have configured NITRO KB Copilot. In NITRO Helpdesk applications, Knowledge Base is a repository of information to solve frequently occurring issues. It also has data from resolved Tickets so that users can refer to this information if they are facing a problem that has been solved before. NITRO KB Copilot uses the repository of knowledge base articles data and provides intelligent, appropriate answers to users and reduces demand on the technicians. In this sample use case, we have used a Knowledge Base list and below is the list of columns required for this configuration. Column Name Column Type Use in NITRO Copilot Title Single line of text &nbsp; Wiki Content Enhanced rich text Will be used as search column in NITRO Copilot Embeddings Multiple line of text-Plain In this sample, use case we have used ‘SharePoint and Embedding Search’ and this column is used to store embedding values Checksum Single line of text Will use this column to store checksum values Configurations for NITRO Copilot Navigate to the NITRO Copilot page and configure the Copilot as shown below: Data Source: Prompts: Actions: ‘Create Ticket’ and ‘Issue Resolved’ actions are explained above. Theme: Advanced Settings: Calculate Embeddings for Knowledge Base articles KB Copilot uses the concept of embeddings to provide more relevant response for the user queries. An embedding is a numerical representation of a text or data that captures the semantic meaning of the text. This is calculated using generative AI services. Embeddings are pre-calculated for the KB articles and stored in a column in the KB list. When user enters their query in the copilot, embedding value is calculated for the user query. The embedding for the user query is matched with that of KB articles and then articles that match more closely with user query are ranked higher. Using NITRO Workflows, we calculate the embedding for the Knowledge Base article content and store it for use with the copilot. Configure NITRO Workflows Calculate embedding when Knowledge Base articles created Configure a workflow on knowledge base article creation Calculate embedding when knowledge base article modified Configure a workflow on item updated event Workflow: Calculate embedding when Knowledge Base article is created Action: Calculate Embeddings Drag and drop ‘Calculate embeddings’ action as shown below General Settings: provide action name, action description and delay execution. Embeddings Settings: AI Connection: This dropdown will show all AI connections configured in NITRO site settings. select the AI Connection as required. Search Text Column(s): Select the column(s) for which embeddings has to be calculated. This will be the column where KB article text is stored. Embeddings Column: Select the multi-line text column to store the embedding value. MD5 Checksum Column: Select the single-line text column to store the checksum of the search text column(s). A checksum is used to detect changes in search content, and embedding is recalculated only if the content has changed. When a knowledge base article is added, embeddings are calculated as shown below: Configure ‘Update Embeddings value’ workflow on Knowledge base list Item Updated event Workflow: Calculate embedding when Knowledge Base article is updated Configure ‘calculate embedding’ action on item update event when ‘Wiki Content’ is modified. ‘Calculate Embedding’ action configuration is same as above. Condition : Add KB Copilot to Page To add KB Copilot to a page, Go to Site Contents in Settings -&gt; Site Pages -&gt; select ‘Site Page’ in the New button dropdown. In the page after adding the Crow Canyon Open AI Search web part as explained above, click edit properties button to select KB Copilot Publish the page by clicking the ‘Publish’ button. Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "746",
    "name": "746 - IT Help Desk – Guide for Knowledge Base Copilot.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/746%20-%20IT%20Help%20Desk%20%E2%80%93%20Guide%20for%20Knowledge%20Base%20Copilot.html",
    "title": "IT Help Desk – Guide For Knowledge Base Copilot",
    "text": "IT Help Desk – Guide for Knowledge Base Copilot - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / IT Help Desk &#8211; Guide for Knowledge Base Copilot IT Help Desk &#8211; Guide for Knowledge Base Copilot 289 views 1 min , 12 sec read 0 Applies to : SharePoint Online Description Any employee in the organization can use Knowledge Base Copilot to get comprehensive answers to their questions. Help Desk staff users can also easily generate responses for their Tickets. Knowledge Base Copilot leverages the latest generative AI technologies along with an organization’s existing information and data to provide relevant and accurate answers to user inquiries. Organizations can now use their data to provide users with a self-serve Copilot that integrates with the NITRO Help Desk. If users still need help after making an inquiry to NITRO Copilot, they can escalate the request to the Help Desk with just a click. The request is auto-populated based on the conversation with Copilot, saving time for the user and staff. If KB Copilot is not configured, refer ‘KB Copilot in NITRO Helpdesk’ section from this article: KB Copilot Configuration in Crow Canyon NITRO Studio &#8211; Crow Canyon Software Support Knowledge Base Copilot Employees can access KB Copilot in the IT Help Desk portal site as shown below: Click Knowledge Base Copilot in top link bar to open chat window. User can select predefined queries for their issue User can enter their query in the chat box and then click enter. After getting a response from copilot, user can perform the below actions Create Ticket: &nbsp;If copilot response does not resolve the issue, user can create a Ticket by clicking ‘Create Ticket’ button. Issue Resolved: If copilot response resolves the issue, user can click ‘Issue Resolved’ button. Rating: The user can rate the conversations by clicking on the stars icon available at the bottom of the chatbot.’ Rating will be stored in feedback list created by NITRO Copilot.. Copy this conversation to the clipboard: If the user wants to copy the conversation to the clipboard, click the copy icon available at the bottom of the chat window. Email this conversation to me: If the user wants to email the conversation to themselves then they can click this email icon. Sample email received from the NITRO KB Copilot: Note: The user is allowed to send 15 messages in one chat. Users can start a new chat once this limit is reached. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "747",
    "name": "747 - Instructions to create Azure Services for use with NITRO Copilot.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/747%20-%20Instructions%20to%20create%20Azure%20Services%20for%20use%20with%20NITRO%20Copilot.html",
    "title": "Instructions To Create Azure Services For Use With NITRO Copilot",
    "text": "Instructions to create Azure Services for use with NITRO Copilot - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Instructions to create Azure Services for use with NITRO Copilot Instructions to create Azure Services for use with NITRO Copilot 319 views 2 min , 14 sec read 0 Applies to : SharePoint Online Pre-requisites Azure subscription Permissions to create Azure resources and to deploy models for Azure Open AI. Description In this article, we have described configuring the below services in Microsoft Azure. Azure OpenAI Services Azure AI Search Azure AI Document Intelligence Azure OpenAI Services Azure OpenAI Service provides access to OpenAI&#8217;s models including the GPT-4, GPT-4 Turbo with Vision, GPT-3.5-Turbo, DALLE-3 and Embeddings model series with the security and enterprise capabilities of Azure. This service is used by NITRO Copilot to generate AI response for user query using the enterprise data. To create Azure Open AI service, 1. Open Azure portal and sign in with azure subscription. 2. Open &#8220;Azure OpenAI&#8221; resource from Azure services or you can search and find out &#8220;Azure OpenAI&#8221; resource as shown below. 3. Create a new Open AI service. Note : If Azure OpenAI service is not enabled for your Azure tenancy, then a link will be shown in Azure portal to fill a form. Once the form is submitted, OpenAI service gets enabled within a day as per our experience. Refer below Microsoft article to create new azure open AI service. https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/create-resource?pivots=web-portal 4. Open above created Azure Open AI service and navigate to the Azure OpenAI Studio to deploy the completion model (gpt-4o)and text embedding models (text-embedding-ada-002) as shown below 5. Click &#8216;Deployments&#8217; under Management in Azure OpenAI Studio and create new deployments as shown below 6. Create &#8220;gpt-4o&#8221; and &#8220;text-embedding-ada-002&#8221; models 7. Navigate to the Azure OpenAI service that we have created above and copy the keys and endpoint URL to use it for the connection in the NITRO AI Settings. NITRO Open AI Connection: Azure AI Search Azure AI Search provides secure information retrieval at scale over user-owned content in traditional and generative AI search applications. To create Azure Open AI service, 1. Open Azure portal and sign in with azure subscription. 2. Open &#8220;AI Search&#8221; resource from Azure services or you can search and find out &#8220;Azure AI Search&#8221; resource as shown below. 3. Create a new AI search service. Refer below Microsoft article to create new azure open AI service. https://learn.microsoft.com/en-us/azure/search/search-create-service-portal Note : While creating the AI search service, select the pricing tier as per the requirement. If your data is less than 50MB then go with the free tier otherwise select the tier that suits your requirement. 4. Navigate to the Azure AI search service created in above step and copy the URL and this will be used in NITRO AI connection settings. 5. Next navigate to the ‘Keys’ and copy admin key and query key to use it in the NITRO AI connection Settings. Admin Key : Used to authenticate and authorize administrative tasks and configurations for Azure API search. This key grant access to manage indexes, query settings, and other administrative functions within your Azure API Search service. Query Key : Used to authenticate and authorize queries made to Azure API search. This key allows access to perform search operations and retrieve search results from your Azure API Search service. NITRO AI Search Connection: Azure AI Document Intelligence Create Azure AI cognitive multi service account that is used for document intelligence. Document intelligence is used to extract the content from pdf and word documents. Extracted content can be saved either in the SharePoint list or Azure AI Search for use in the NITRO Copilot. To create Azure AI cognitive multi service account: 1. Open Azure portal and sign in with azure subscription. 2. Open &#8220;AI Search&#8221; resource from Azure services or you can search and find out &#8220;Azure AI Search&#8221; resource as shown below. 3. Create a new AI cognitive service Refer below Microsoft article to create new azure open AI service. https://learn.microsoft.com/en-us/azure/ai-services/multi-service-resource?pivots=azportal 4. Navigate to the Azure AI cognitive service created in above step and go to &#8216;Keys and Endpoint&#8217; under &#8216;Resource Management&#8217; and copy the key and endpoint URL to use it in the NITRO AI connection Settings. NITRO AI Document Intelligence Connection: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "748",
    "name": "748 - Steps To Autofill the Logged-in User’s Manager and Manager Information Using NITRO Forms - Crow Cany.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/748%20-%20Steps%20To%20Autofill%20the%20Logged-in%20User%E2%80%99s%20Manager%20and%20Manager%20Information%20Using%20NITRO%20Forms%20-%20Crow%20Cany.html",
    "title": "Steps To Autofill The Logged In User’s Manager And Manager Information Using NITRO Forms Crow Cany",
    "text": "Steps To Autofill the Logged-in User’s Manager and Manager Information Using NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Steps To Autofill the Logged-in User’s Manager and Manager Information Using NITRO Forms Steps To Autofill the Logged-in User’s Manager and Manager Information Using NITRO Forms 291 views 1 min , 46 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: This article explains the steps to autofill the values of column(s) related to the logged-in user’s Manager and Manager Information in a NITRO Form. For this purpose, Auto-fill User Information and a Form Event Action (FEA) can be configured in NITRO Forms using the steps mentioned below. Detailed Steps: 1. Navigate to the desired list -> List Settings -> Crow Canyon NITRO Forms. 2. On the opened NITRO Forms designer page, add the required columns. For this example, the columns that are used are as follows: Requester: It is a ‘NITRO User’ column with configuration as shown below: Requester Manager: It is a &nbsp;‘NITRO User&#8217; column with configuration same as the Requester column shown above. Requester Manager Email: A ‘Single line of text’ column will be used to autofill the Manager’s email. Requester Manager’s Manager: It is a ‘NITRO User’ column with a configuration similar to above two NITRO User columns. 3. Once all the above-configured columns have been added to the designer page of the form, navigate to the ‘Form Settings’ section at the left of the designer page, expand this section, and select ‘Auto-fill User Information’ as shown below: 4. On the opened page, select the ‘User Profile’ option for ‘Get user information from’ section and select ‘New Setting’ as shown below: 5. In the opened ‘New Setting’ window, configure the settings to autofill the ‘Requester’ column based on the value from the logged-in user as shown below: 6. On selecting ‘New Mapping’ button from the above screenshot, select the column as ‘Requester Manager’ and ‘User Property’ as ‘Other Property’ and type the field as ‘Manager’ as shown below: The purpose of this configuration is to autofill the name of the requester’s manager in the column ‘Requester Manager’ based on the current logged-in user. 7. Once the auto-fill user settings have been configured, navigate to the left of the designer page, and expand the ‘Advanced’ section -> ‘Form Event Actions’ -> ‘New Configuration’, and configure it as shown below: 8. On selecting ‘Update Form Controls’, configure the column mapping for ‘Requester Manager’s Manager’ column by selecting ‘New Mapping’ as shown below: 9. The column mapping can be configured as shown below: In the above screenshot, the function used is ‘$getspuserproperty’ and the placeholder is ‘Requester Manager’ column as shown below: The full syntax used above is: $getspuserproperty([Requester Manager|RequesterManager],manager) This configuration helps in auto populating the value for the ‘Requester Manager’s Manager’ column as soon as the value in the ‘Requester Manager’ column is populated (using the previously configured autofill settings). Note: More information about the ‘$getspuserproperty’ can be found from this article . 10. Similarly, to auto fill the ‘Requester Manager Email’ column, we can configure another column mapping in the same Form Event Action by selecting New Action -> Update Form Controls -> Provide a title for the action -> New Mapping as shown below: The full syntax is ‘$getspuserproperty([Requester Manager|RequesterManager],email)’. The configured Form Event Action with all the above mentioned settings will be as shown below: 11. Once all the above configuration is saved, publish the NITRO Forms. A sample output from a ‘New’ NITRO Form is as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "749",
    "name": "749 - Auto-assignment in Crow Canyon helpdesk applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/749%20-%20Auto-assignment%20in%20Crow%20Canyon%20helpdesk%20applications.html",
    "title": "Auto Assignment In Crow Canyon Helpdesk Applications",
    "text": "Auto-assignment in Crow Canyon helpdesk applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto-assignment in Crow Canyon helpdesk applications Auto-assignment in Crow Canyon helpdesk applications 278 views 3 min , 9 sec read 0 Applies to : Crow Canyon helpdesk applications (SharePoint Online) Description Auto-assignment refers to assigning new Tickets (or Requests) automatically to specified staff based on the configured rules. This can be done in following ways: Based on the Category and Issue Type. Specific staff users can be set for each category and issue type. Based on users in the staff list. This list has all the staff users and assignment is done based on staff load or in round-robin fashion. Steps to configure auto assignment Auto assignment feature can be enabled in the configuration item in all Crow Canyon helpdesk applications. Go to application administration page -> Auto Assignment tab -> Click ‘Ticket Assignment’ tile and select ‘Auto-assign Staff Selection’ as per the requirement. Auto assign staff selection can happen in below ways: Issue Type or Category or Staff List : Select this option to auto assign Ticket with below priority order: If Ticket is created with an Issue Type and selected Issue Type has staff and team, then Ticket will be assigned to that staff and team. This will take the highest precedence. Else if selected Category has staff and team, then Ticket will be assigned based on the staff and team in the selected Category. This will take the second highest precedence. Else if selected category doesn’t have designated staff and team, then Ticket will be assigned based on the users in the “Staff” list. 2. Issue Type or Category : Select this option if “Staff” list is not to be used and only assign based on the selected Issue Type and Category. 3. Staff List: Select this option to auto assign Ticket only based on the users in the “Staff” list. 4. None : Select this option to disable the auto assignment feature. Auto-assign Mode : Selection of staff user for auto-assignment can be done in below ways: Round Robin : By default, this option is selected. Staff will be assigned in round robin fashion. Multiple users can be specified in the Category and Issue Type items. For example, ‘VPN Access’ category has “John Smith“ and “Joe Bloggs” in the Assigned Staff column. First Ticket created with this category will be auto assigned to “John Smith”. Second Ticket created with this category will be auto assigned to “Joe Bloggs” and the cycle will repeat. Load Balance: Select this option to auto assign the Tickets to the staff user with lowest number of assigned active Tickets. This count is maintained by the application in the ‘Staff’ list. Maintain users in “Staff” list. Staff list has “Tickets Count” and this count will be updated whenever Ticket gets assigned to a staff. For example, “John Smith” has 5 Tickets and “Joe Bloggs” has 3 Tickets. If Ticket is created, then it will be assigned to “Joe Bloggs”. Configure staff in Category, Issue Type or Staff list: Category To specify the staff and team in Category, go to Application Administration -> Categorization tab -> Edit the Category -> Specify the “Assigned Team” and “Assigned Staff”. Issue Type To specify the staff and team in Issue Type, go to Application Administration -> Categorization tab -> Edit the Issue Type -> Specify the “Assigned Team” and “Assigned Staff”. Staff List To create the users in staff list, go to Application Administration -> Auto Assignment tab -> Create users in “Staff” list. Staff : Specify title for staff user. Staff Name : Ticket will be assigned to the user specified in this column. Tickets Count : This value is zero in the beginning. It will be increased by 1 whenever a Ticket is assigned to that user. User with lowest Tickets count will be assigned the next Ticket (if load balance option is selected). Is Active? : Staff can be marked as inactive if they are on leave or cannot work on Tickets for any other reason. Inactive staff will not be considered for auto-assignment. Is Next Staff? : This is used for round-robin assignment and is used by the application to select the next staff for assignment. Please do not modify the value of this column. Override team and staff on Category and Issue Type change Ticket is auto assigned and modified the category/Issue Type on Ticket update, enable override feature to reassign the Staff and Team as per the selected category/Issue Type. To override the staff and team on Category and Issue Type change, go to application administration page -> Auto Assignment tab -> click ‘Ticket Assignment’ tile -> Enable “Override Team” and “Override Assigned Staff”. Auto-assignment behavior If Ticket is already resolved or closed, then auto-assignment is not done. For example, if Ticket does not have a staff set, and it is categorized while being resolved, application will not auto-assign at this stage. If Ticket is auto assigned by application, and Ticket status is not equal to ‘Unassigned’, then status is not changed by the application. Ticket status is changed to ‘Assigned’ only if status before the auto-assignment is ‘Unassigned’. If user creating/updating the Ticket manually specifies the staff/team in the Ticket: If Override is not enabled, then auto-assignment will not be done, and user specified values will not be changed If Override is enabled, then user specified values will not be changed if auto-assignment is not already done, otherwise application will reassign the staff/team. If Category/Issue Type is changed in the Ticket: If Override is not enabled, then reassignment will not be done. If Override is enabled, then application will reassign the Ticket to staff in the new Category/Issue Type 5. If Ticket is edited and staff is cleared, then application will set the staff based on selected Category/Issue Type again if override is enabled. If override is not enabled, then staff will not be set in this case. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "75",
    "name": "75 - Use AI to Auto-Set Category and Issue Type.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/75%20-%20Use%20AI%20to%20Auto-Set%20Category%20and%20Issue%20Type.html",
    "title": "Use AI To Auto Set Category And Issue Type",
    "text": "Use AI to Auto-Set Category and Issue Type - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use AI to Auto-Set Category and Issue Type Use AI to Auto-Set Category and Issue Type 278 views 5 min , 58 sec read 0 Applies To: NITRO Helpdesk Application (SharePoint Online) Description: In Crow Canyon Helpdesk applications, Tickets list has category and issue types. Categories are used to organize the Tickets. Using artificial intelligence (AI) Tickets can be auto categorized based on the Ticket’s subject and description. By analysing the Ticket’s subject and description, AI identifies the best match from predefined list of issue types/categories, simplifying Ticket management. This article describes the instructions to use artificial intelligence in Crow Canyon helpdesk applications in SharePoint online. Ticket classification process using AI : When a Ticket is created (either manually or via email), the system extracts key phrases from its subject and description. AI compares these phrases with the descriptions in the category/issue type list. Using embeddings, the AI calculates the semantic similarity between the Ticket&#8217;s text and the description in the category/issue type list, selecting the best match. If necessary, the AI recalculates embeddings to ensure up-to-date matching. Summary of steps : List schema NITRO form changes Configure AI settings Auto categorization process Other methods to auto set Category and Issue Type in a Ticket Detailed Steps: List Schema: Create columns below lists with the internal names and display names given below: Category/Issue Type list: Create below columns in “Category” and “Issue Type” lists. Go to the helpdesk site -> Administration page -> Configure lists -> Category/Issue Type -> List Settings -> Create below columns: Column Internal Name Column Display Name Column Type Embedding Embedding Multiple lines of text (Plain Text) Checksum Checksum Single line of text Description Description Multiple lines of text (Rich Text) Embedding : A &#8220;Multiple lines of text&#8221; column to store AI-generated embeddings, which are numerical representations of text meaning. Checksum: A &#8220;Single line of text&#8221; column used to track any changes in data. Description: A &#8220;Multiple lines of text&#8221; column where you provide description for issue type/category. Configurations Create below columns in ‘Configurations’ list. Go to the helpdesk application -> Administration page -> Configure lists -> Configurations -> Create below columns: Column Internal Name Column Dispaly Name Column Type AISettingsJSON AISettingsJSON Multiple lines of text (Plain Text) NITRO Form Changes Add above created columns to the NITRO forms. Category/Issue Type list: Add “Description” column to the NITRO forms and publish the forms. Go to the Category/Issue Type lists -> List Settings -> Crow Canyon NITRO Forms -> add ‘Description’ column to the form and publish NITRO forms. Specify the category/issue type details in ‘Description’ column for the issue type/category. This helps AI to understand and classify Tickets based on their content. Configurations list: Create a new tab ‘AI Connection Settings’ and add ‘AISettingsJSON’ column to this tab Go to the ‘Configurations’ list -> List Settings -> Crow Canyon NITRO Forms ->Create new tab ‘AI Connection Settings’ and ‘AISettingsJSON’ to the form and publish NITRO forms. Configure AI Settings Configure AI settings in ‘General Configurations’ in helpdesk applications. Go to application administration -> General Configurations tab -> Click ‘General Configurations’ tile -> ‘AI Connection Settings’ -> Specify below JSON settings in the ‘AISettingsJSON’ column. This JSON tells the system how to use AI for Ticket classification. Enter below JSON in AISettingsJSON { &#8220;AIConnection&#8221; : &#8220;Azure Open AI&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:true, &#8220;EmbeddingColumn&#8221;:&#8221;Embedding&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;Checksum&#8221;, &#8220;CalculateEmbeddings&#8221;:true, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } AIConnection : Specifies the AI service (in this case, Azure Open AI) name configured in the Crow Canyon NITRO Site Settings. If AI connection is not configured, application will use SharePoint search to find the matching category/issue type. However, for proper matching, it is recommended that AI settings are configured. To create azure services, refer this article: https://www.crowcanyon.help/article/747/ To configure AI connection settings in NITRO Site Settings, go to site settings -> Crow Canyon NITRO Site Settings -> AI Connection Settings -> New AI Connection AutoPopulateIssueType : Enabling this setting will auto set category/issue type based on the Ticket subject and description. EmbeddingColumn: Specify internal name of the ‘Embedding’ column created in category/issue type lists. Checksum Column : Specify internal name of the ‘Checksum’ column created in category/issue type lists. Calculate Embeddings : Enable this to generate embeddings (requires AI connection setup) for the category/issue types. DescriptionColumn : Specify internal name of the ‘Description’ column created in category/issue type lists. Auto categorization process in the helpdesk application Case 1: Configured AI connection and enabled calculate Embedding Configuration Check: Verify if AI and embedding columns are configured for processing Ticket data. Key Phrase Extraction: Extract key phrases from the subject and body of the ticket. These key phrases likely summarize the main issues or topics mentioned in the ticket. Search on Issue Type List: Perform a search using the extracted key phrases against an Issue Type list. Top 10 Matching Items: Identify the top 10 Issue Types that best match the extracted key phrases from the Ticket. Embedding Retrieval: Retrieve embeddings (embedding vectors) for the Ticket subject and body. Embeddings are numerical representations that capture the semantic meaning of text. Matching with Issue Types: Compare the embeddings of the Ticket subject and body with the embeddings of the top 10 Issue Types. Ensure that each Issue Type has an associated embedding value for comparison. Calculation and Update: If any Issue Type does not have an embedding value, trigger a calculation process within the product application to generate and update the embedding for that Issue Type. Checksum Validation: Monitor changes in checksum (likely referring to a hash or a unique identifier) to determine if there have been updates or modifications to the embeddings or other data. Recalculation of Embeddings: If the checksum has changed, initiate a recalculation of embeddings to ensure that all embeddings are up to date and reflect any changes in the ticket data or Issue Type definitions. Clarifications: AI and Embedding Columns: These likely refer to the use of artificial intelligence algorithms for natural language processing (NLP) and the configuration of columns or fields in a database or system where embedding vectors are stored. Issue Type List: This is a predefined list categorizing different types of issues or Tickets based on their nature or purpose. Checksum: Used to track changes and ensure data integrity, especially concerning embeddings and possibly other relevant data points. Result: We get better matching result if AI connection and Embedding is present Case 2: An AI connection is configured in NITRO Site Settings; the Embedding column is not in the Issue Type list. If embedding functionality is not available and you&#8217;re relying solely on key phrases for searching and categorizing Tickets, here&#8217;s how the process would typically work: AI and Key Phrase Extraction: Utilize AI algorithms to extract key phrases from the subject and body of the ticket. Key phrases are important keywords or phrases that summarize the main topics or issues discussed in the ticket. Search on Issue Type List: Perform a search using the extracted key phrases against an Issue Type list. This list categorizes tickets into different types such as tasks, incidents etc. Top 10 Matching Items: Identify the top 10 Issue Types that best match the extracted key phrases from the ticket. Matching Process: Compare the extracted key phrases directly with the descriptions or keywords associated with each Issue Type in the list. JSON used in this case { &#8220;AIConnection&#8221; : &#8220;Azure Open AI&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:false, &#8220;EmbeddingColumn&#8221;:&#8221;&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;&#8221;, &#8220;CalculateEmbeddings&#8221;:false, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } Result: In this case,we get a less accurate result compared to Embedding based method if an AI connection is present, but Embedding is not present Case 3: An AI connection and Embedding are not both present If both AI and embedding capabilities are not available, then SharePoint search is used to match the issue type based on Ticket title. Since matching is done based on the full title text, search will be less effective than the keywords-based search. Ticket Title Extraction: Extract the ticket title (subject) from the ticket details. Search for Matching Issue Type: Perform a search using the ticket title against a predefined list of issue types. Top Matching Item Selection: Select the top matching issue type based on the relevance or similarity of the ticket title to the descriptions or keywords associated with each issue type. Assignment and Processing: Assign the selected issue type to the ticket for further processing JSON used in this case { &#8220;AIConnection&#8221; : &#8220;&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:true, &#8220;EmbeddingColumn&#8221;:&#8221;&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;&#8221;, &#8220;CalculateEmbeddings&#8221;:false, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } Other methods to auto set Category and Issue Type in a Ticket When a Ticket is created via email, the system automatically sets the Category and Issue Type according to the following steps: Check the Issue Type List : The system first looks at the Issue Type List for any entries that include the email ticket list name in the &#8216;Receivers&#8217; column. If it finds a match, it assigns the first relevant Issue Type along with its corresponding Category to the ticket. Category Assignment Only : If the Issue Type List does not have the email ticket list name in the &#8216;Receivers&#8217; column, but the Category List does contain it in the &#8216;Auto Categorization&#8217; column, then only the Category will be assigned to the ticket. Fallback to AI or SharePoint : If neither the Issue Type List nor the Category List includes the email ticket list name, the system will use AI methods to determine the appropriate values, assuming an AI connection is available. If there is no AI connection, a SharePoint search will be conducted to find the suitable Category and Issue Type. This process ensures that each email ticket is accurately categorized and assigned based on the available data and resources. Refer below article to auto set Category and Issue Type SharePoint Online: Auto fill Category and/or Issue Type on Email to Ticket conversion &#8211; Crow Canyon Software Support How to auto set category when Tickets gets created via Email? &#8211; Crow Canyon Software Support Note: This method takes precedence over AI based method to auto set Category and Issue Type in a Ticket. When a Recurring Ticket is created using a Recurring Template, the process for assigning the Category and Issue Type depends on the template&#8217;s specifications. Using the Template : If the template includes a specified Category and Issue Type, the ticket will be assigned those attributes directly. AI-Based Assignment : If the template does not specify these attributes, and if an AI connection is established, the system will use AI to determine and assign the appropriate Category and Issue Type. SharePoint Search : If neither of the above methods is applicable—meaning there&#8217;s no specified information in the template and no AI connection—the system will then resort to a SharePoint search. It will match the Ticket Title and Description to assign the most relevant Category and Issue Type. This ensures that each ticket is categorized appropriately based on the available resources and methods. Follow this article to configure Recurring Tickets Examples for configuring Recurring Tickets (Weekly/Specific Date) &#8211; Crow Canyon Software Support About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "750",
    "name": "750 - Use AI to Auto-Set Category and Issue Type.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/750%20-%20Use%20AI%20to%20Auto-Set%20Category%20and%20Issue%20Type.html",
    "title": "Use AI To Auto Set Category And Issue Type",
    "text": "Use AI to Auto-Set Category and Issue Type - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use AI to Auto-Set Category and Issue Type Use AI to Auto-Set Category and Issue Type 278 views 5 min , 58 sec read 0 Applies To: NITRO Helpdesk Application (SharePoint Online) Description: In Crow Canyon Helpdesk applications, Tickets list has category and issue types. Categories are used to organize the Tickets. Using artificial intelligence (AI) Tickets can be auto categorized based on the Ticket’s subject and description. By analysing the Ticket’s subject and description, AI identifies the best match from predefined list of issue types/categories, simplifying Ticket management. This article describes the instructions to use artificial intelligence in Crow Canyon helpdesk applications in SharePoint online. Ticket classification process using AI : When a Ticket is created (either manually or via email), the system extracts key phrases from its subject and description. AI compares these phrases with the descriptions in the category/issue type list. Using embeddings, the AI calculates the semantic similarity between the Ticket&#8217;s text and the description in the category/issue type list, selecting the best match. If necessary, the AI recalculates embeddings to ensure up-to-date matching. Summary of steps : List schema NITRO form changes Configure AI settings Auto categorization process Other methods to auto set Category and Issue Type in a Ticket Detailed Steps: List Schema: Create columns below lists with the internal names and display names given below: Category/Issue Type list: Create below columns in “Category” and “Issue Type” lists. Go to the helpdesk site -> Administration page -> Configure lists -> Category/Issue Type -> List Settings -> Create below columns: Column Internal Name Column Display Name Column Type Embedding Embedding Multiple lines of text (Plain Text) Checksum Checksum Single line of text Description Description Multiple lines of text (Rich Text) Embedding : A &#8220;Multiple lines of text&#8221; column to store AI-generated embeddings, which are numerical representations of text meaning. Checksum: A &#8220;Single line of text&#8221; column used to track any changes in data. Description: A &#8220;Multiple lines of text&#8221; column where you provide description for issue type/category. Configurations Create below columns in ‘Configurations’ list. Go to the helpdesk application -> Administration page -> Configure lists -> Configurations -> Create below columns: Column Internal Name Column Dispaly Name Column Type AISettingsJSON AISettingsJSON Multiple lines of text (Plain Text) NITRO Form Changes Add above created columns to the NITRO forms. Category/Issue Type list: Add “Description” column to the NITRO forms and publish the forms. Go to the Category/Issue Type lists -> List Settings -> Crow Canyon NITRO Forms -> add ‘Description’ column to the form and publish NITRO forms. Specify the category/issue type details in ‘Description’ column for the issue type/category. This helps AI to understand and classify Tickets based on their content. Configurations list: Create a new tab ‘AI Connection Settings’ and add ‘AISettingsJSON’ column to this tab Go to the ‘Configurations’ list -> List Settings -> Crow Canyon NITRO Forms ->Create new tab ‘AI Connection Settings’ and ‘AISettingsJSON’ to the form and publish NITRO forms. Configure AI Settings Configure AI settings in ‘General Configurations’ in helpdesk applications. Go to application administration -> General Configurations tab -> Click ‘General Configurations’ tile -> ‘AI Connection Settings’ -> Specify below JSON settings in the ‘AISettingsJSON’ column. This JSON tells the system how to use AI for Ticket classification. Enter below JSON in AISettingsJSON { &#8220;AIConnection&#8221; : &#8220;Azure Open AI&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:true, &#8220;EmbeddingColumn&#8221;:&#8221;Embedding&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;Checksum&#8221;, &#8220;CalculateEmbeddings&#8221;:true, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } AIConnection : Specifies the AI service (in this case, Azure Open AI) name configured in the Crow Canyon NITRO Site Settings. If AI connection is not configured, application will use SharePoint search to find the matching category/issue type. However, for proper matching, it is recommended that AI settings are configured. To create azure services, refer this article: https://www.crowcanyon.help/article/747/ To configure AI connection settings in NITRO Site Settings, go to site settings -> Crow Canyon NITRO Site Settings -> AI Connection Settings -> New AI Connection AutoPopulateIssueType : Enabling this setting will auto set category/issue type based on the Ticket subject and description. EmbeddingColumn: Specify internal name of the ‘Embedding’ column created in category/issue type lists. Checksum Column : Specify internal name of the ‘Checksum’ column created in category/issue type lists. Calculate Embeddings : Enable this to generate embeddings (requires AI connection setup) for the category/issue types. DescriptionColumn : Specify internal name of the ‘Description’ column created in category/issue type lists. Auto categorization process in the helpdesk application Case 1: Configured AI connection and enabled calculate Embedding Configuration Check: Verify if AI and embedding columns are configured for processing Ticket data. Key Phrase Extraction: Extract key phrases from the subject and body of the ticket. These key phrases likely summarize the main issues or topics mentioned in the ticket. Search on Issue Type List: Perform a search using the extracted key phrases against an Issue Type list. Top 10 Matching Items: Identify the top 10 Issue Types that best match the extracted key phrases from the Ticket. Embedding Retrieval: Retrieve embeddings (embedding vectors) for the Ticket subject and body. Embeddings are numerical representations that capture the semantic meaning of text. Matching with Issue Types: Compare the embeddings of the Ticket subject and body with the embeddings of the top 10 Issue Types. Ensure that each Issue Type has an associated embedding value for comparison. Calculation and Update: If any Issue Type does not have an embedding value, trigger a calculation process within the product application to generate and update the embedding for that Issue Type. Checksum Validation: Monitor changes in checksum (likely referring to a hash or a unique identifier) to determine if there have been updates or modifications to the embeddings or other data. Recalculation of Embeddings: If the checksum has changed, initiate a recalculation of embeddings to ensure that all embeddings are up to date and reflect any changes in the ticket data or Issue Type definitions. Clarifications: AI and Embedding Columns: These likely refer to the use of artificial intelligence algorithms for natural language processing (NLP) and the configuration of columns or fields in a database or system where embedding vectors are stored. Issue Type List: This is a predefined list categorizing different types of issues or Tickets based on their nature or purpose. Checksum: Used to track changes and ensure data integrity, especially concerning embeddings and possibly other relevant data points. Result: We get better matching result if AI connection and Embedding is present Case 2: An AI connection is configured in NITRO Site Settings; the Embedding column is not in the Issue Type list. If embedding functionality is not available and you&#8217;re relying solely on key phrases for searching and categorizing Tickets, here&#8217;s how the process would typically work: AI and Key Phrase Extraction: Utilize AI algorithms to extract key phrases from the subject and body of the ticket. Key phrases are important keywords or phrases that summarize the main topics or issues discussed in the ticket. Search on Issue Type List: Perform a search using the extracted key phrases against an Issue Type list. This list categorizes tickets into different types such as tasks, incidents etc. Top 10 Matching Items: Identify the top 10 Issue Types that best match the extracted key phrases from the ticket. Matching Process: Compare the extracted key phrases directly with the descriptions or keywords associated with each Issue Type in the list. JSON used in this case { &#8220;AIConnection&#8221; : &#8220;Azure Open AI&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:false, &#8220;EmbeddingColumn&#8221;:&#8221;&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;&#8221;, &#8220;CalculateEmbeddings&#8221;:false, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } Result: In this case,we get a less accurate result compared to Embedding based method if an AI connection is present, but Embedding is not present Case 3: An AI connection and Embedding are not both present If both AI and embedding capabilities are not available, then SharePoint search is used to match the issue type based on Ticket title. Since matching is done based on the full title text, search will be less effective than the keywords-based search. Ticket Title Extraction: Extract the ticket title (subject) from the ticket details. Search for Matching Issue Type: Perform a search using the ticket title against a predefined list of issue types. Top Matching Item Selection: Select the top matching issue type based on the relevance or similarity of the ticket title to the descriptions or keywords associated with each issue type. Assignment and Processing: Assign the selected issue type to the ticket for further processing JSON used in this case { &#8220;AIConnection&#8221; : &#8220;&#8221;, &#8220;AutoPopulateIssueType&#8221; : { &#8220;Enabled&#8221;:true, &#8220;EmbeddingColumn&#8221;:&#8221;&#8221;, &#8220;ChecksumColumn&#8221;:&#8221;&#8221;, &#8220;CalculateEmbeddings&#8221;:false, &#8220;DescriptionColumn&#8221; : &#8220;Description&#8221;, &#8220;RefinerString&#8221; : &#8220;&#8221; } } Other methods to auto set Category and Issue Type in a Ticket When a Ticket is created via email, the system automatically sets the Category and Issue Type according to the following steps: Check the Issue Type List : The system first looks at the Issue Type List for any entries that include the email ticket list name in the &#8216;Receivers&#8217; column. If it finds a match, it assigns the first relevant Issue Type along with its corresponding Category to the ticket. Category Assignment Only : If the Issue Type List does not have the email ticket list name in the &#8216;Receivers&#8217; column, but the Category List does contain it in the &#8216;Auto Categorization&#8217; column, then only the Category will be assigned to the ticket. Fallback to AI or SharePoint : If neither the Issue Type List nor the Category List includes the email ticket list name, the system will use AI methods to determine the appropriate values, assuming an AI connection is available. If there is no AI connection, a SharePoint search will be conducted to find the suitable Category and Issue Type. This process ensures that each email ticket is accurately categorized and assigned based on the available data and resources. Refer below article to auto set Category and Issue Type SharePoint Online: Auto fill Category and/or Issue Type on Email to Ticket conversion &#8211; Crow Canyon Software Support How to auto set category when Tickets gets created via Email? &#8211; Crow Canyon Software Support Note: This method takes precedence over AI based method to auto set Category and Issue Type in a Ticket. When a Recurring Ticket is created using a Recurring Template, the process for assigning the Category and Issue Type depends on the template&#8217;s specifications. Using the Template : If the template includes a specified Category and Issue Type, the ticket will be assigned those attributes directly. AI-Based Assignment : If the template does not specify these attributes, and if an AI connection is established, the system will use AI to determine and assign the appropriate Category and Issue Type. SharePoint Search : If neither of the above methods is applicable—meaning there&#8217;s no specified information in the template and no AI connection—the system will then resort to a SharePoint search. It will match the Ticket Title and Description to assign the most relevant Category and Issue Type. This ensures that each ticket is categorized appropriately based on the available resources and methods. Follow this article to configure Recurring Tickets Examples for configuring Recurring Tickets (Weekly/Specific Date) &#8211; Crow Canyon Software Support About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "751",
    "name": "751 - Modern NITRO Studio (3.0) Installation Guide.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/751%20-%20Modern%20NITRO%20Studio%20%283.0%29%20Installation%20Guide.html",
    "title": "Modern NITRO Studio (3.0) Installation Guide",
    "text": "Modern NITRO Studio (3.0) Installation Guide - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Modern NITRO Studio (3.0) Installation Guide Modern NITRO Studio (3.0) Installation Guide 353 views 4 min , 36 sec read 0 Applies To : SharePoint Online Pre-requisites NITRO Studio can be installed using below permission levels: NITRO API (Tenant level) NITRO Site API (site.selected) Activate NITRO for a Site Collection (Applicable for NITRO API and NITRO Site API) The first step is to decide which permission level to use for the installation. For more details about NITRO API vs NITRO Site API permission levels and other permissions required for NITRO Studio, please refer to this article . User Permissions The user doing the installation requires Office 365 Global Admin rights on the SharePoint online tenancy where NITRO Studio is being installed. Note : If NITRO Studio is already installed in any other site collection in the tenancy, then a user with site collection Administrator permissions can perform the installation. In this case, Office 365 Global Admin permissions are not required. App Catalog NITRO Studio modern apps to be added to the app catalog site of the tenancy for installation. If app catalog site does not already exist in your tenancy, it can be created as per the steps given in this article . Site Collection : To install NITRO Studio in a new site collection, the SharePoint Administrator can create a new site collection. Or installation can be done in an existing site collection. Custom Scripting : NITRO Studio installation requires that custom scripting is enabled for the site collection. Please refer to this article for details on the use of custom scripting in NITRO Studio. Enable custom script in app catalog site collection and the site collection in which NITRO Studio will be installed. Use the PowerShell to set the Tenant level flag to not disable the custom script (see the last step in below article) Please refer to this article How to enable scripting capabilities with PowerShell – Crow Canyon Software Support to enable custom script. Access Control: If &#8220;Allow access from specific IP Address locations&#8221; is enabled in Access Control for the tenancy, please refer to this article https://www.crowcanyon.help/article/397/#Symptom2 &nbsp;and allow the IP Addresses. Detailed Steps 1. Navigate to the site below to initiate installation of modern NITRO Studio. https://crowcanyonnitro.azurewebsites.net 2. Above site requires user to login with Microsoft 365 account credentials. To login, use a Global Administrator account of the tenancy where NITRO Studio is to be installed. With a Global Administrator account, the user will see the below prompt: Select “Consent on behalf of your organization” and click “Accept” so that this prompt will not be shown when other users open the NITRO page. Users accessing this page with SharePoint Admin permissions or only Site Collection Administrator permissions will not see &#8220;Consent on behalf of your organization&#8221;. Note: SharePoint Admin has SharePoint specific Admin privileges, but not on complete office 365 which has various other parts. 3. After accepting Crow Canyon Authentication API prompt, the user will navigate to the NITRO page (NITRO API Tenant-level permissions) by default. Refer to this article for more details on permissions. To continue installation using NITRO API, stay on this page and follow the below steps. To install using NITRO Site API, click NITRO Studio (Site) link at the bottom of the page and follow the steps given here . Install using NITRO API (Tenant-level permissions): Note : The user needs Global Admin rights to Grant permissions and install Modern NITRO Studio. On below page, user can grant permissions by clicking the &#8216;Grant Permissions&#8217; button. After clicking &#8216;Grant Permissions&#8217; below window will be shown: Click &#8216;Accept&#8217; to grant permissions. Permission granted message will be displayed. Repeat the same steps for other apps and grant permissions. Step 2 : After granting the permissions, page will be refreshed to show active site collections in the tenancy. Proceed to install Modern NITRO Studio in the required site collection. After installation is completed, &#8216;Manage&#8217; link will be shown besides the Site Collection. Clicking ‘Install NITRO Studio’ will open the window shown below. Enter the Site Collection URL to install the modern NITRO Studio. After installation is completed, &#8216;Manage&#8217; link will be shown besides the Site Collection. Clicking &#8216;Manage&#8217; will navigate to the NITRO Studio page for the Site Collection as shown below: To activate NITRO Studio in a sub-site of the site collection, follow steps given here . Install using NITRO Site API (site.selected) By default, user will navigate to the NITRO API page (URL: https://crowcanyonnitro.azurewebsites.net/NITRO ). Click &#8220;NITRO Studio (Site)&#8221; link to install NITRO Studio with &#8220;NITRO Site API&#8221; permissions level. NITRO Site API permissions: When user clicks &#8220;NITRO Studio (Site)&#8221;, below prompt will be shown. This permission is required for login to NITRO Studio installation home page. Users with Global Administrator permissions can accept the API permissions. These are delegated permissions that require user to be logged-in to perform any operations using this API. These permissions are used only on this page and do not grant any additional access to NITRO APIs. These permissions are used for allowing access to NITRO Studio Site API / NITRO Approval Site API / NITRO Workflow Site API / NITRO Product Site API on the site collection where NITRO Studio is being installed. After accepting the API permissions, it will open the NITRO Studio site page: Granting permissions with the Global Administrator account will enable NITRO site API for the Tenant. This step will not grant access to NITRO site API to any of the site collections. Whenever NITRO Studio is installed in any of the site collections, then the NITRO site API will get full control permissions on that site collection (using the delegated permissions granted to Crow Canyon Authentication API). Refer this article for more details on NITRO Site API access on a specific SharePoint site collections. Note : All the above app permissions have the same level as NITRO Site API (full control on the site collection). We need to grant permissions separately as we need to identify which app context has been used to create/update items in the SharePoint lists. After granting permissions for all the apps, Site Collection Administrator permissions are enough to install NITRO Studio for a site collection. Note: User should have read permissions on the app catalog site collection. Click &#8216;setup&#8217; button to install the NITRO modern apps in the tenant app catalog. Click &#8220;Install NITRO Studio&#8221; button to install NITRO Studio for a site collection. All site collections where NITRO Studio is installed will be shown on the below page under &#8220;ACTIVE SITE COLLECTIONS&#8221;. NITRO Site API does not have access to all the site collections, due to this it cannot list the site collections in the tenancy. Specify the site collection URL and click Ok. This will install the NITRO Studio in the site collection. Note : Enable custom script for the site collection to install NITRO Studio. This process will take some time, please wait until it is completed. Activate NITRO for a Site Collection (Applicable for NITRO API and NITRO Site API) Open the Crow Canyon NITRO Studio page from the site collection where NITRO is installed. This page link can be accessed in below ways in the Site Collection: Click &#8220;Crow Canyon NITRO Studio&#8221; quick launch link in the root site collection. Click Site Settings button (gear icon) in top right corner -&gt; click &#8216;Crow Canyon NITRO Studio&#8217; link. Go to Site Settings -&gt; Click &#8216;Crow Canyon NITRO Studio&#8217; link as shown below: 3. Click &#8216;Activate&#8217; button to activate NITRO studio apps for a site. Select &#8216;License Type&#8217; and click &#8216;Ok&#8217;. 4. After NITRO Apps activation, the &#8220;Crow Canyon NITRO Apps&#8221; and &#8220;Crow Canyon Branding&#8221; links will be available in &#8216;Quick launch&#8217; and also under &#8216;Site Administration&#8217; of &#8216;Site Settings&#8217;. Site Settings: Crow Canyon NITRO Apps page: Note : In Modern NITRO Studio, &#8216;ID Column&#8217; app is not supported. You can configure the &#8216;ID Column&#8217; functionality using NITRO Workflows/Custom Actions/Form Event Actions. The rest of the app&#8217;s functionality will be same as the classic NITRO Studio. In Classic NITRO Studio, pages are hosted in an Azure site outside of the SharePoint tenancy. In modern NITRO Studio, pages are hosted within the SharePoint site collection as SPFx components. Observe the difference between Classic and Modern Nitro Studio URL as shown below Classic NITRO Studio URL: Modern NITRO Studio URL: Troubleshooting steps for NITRO Studio installation/activation If using Firefox browser to install NITRO Studio, turn off &#8216;Enhanced Tracking Protection&#8217; in the browser tab. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "752",
    "name": "752 - Upgrade NITRO Studio from 1.0_2.0 to Modern NITRO Studio (3.0).html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/752%20-%20Upgrade%20NITRO%20Studio%20from%201.0_2.0%20to%20Modern%20NITRO%20Studio%20%283.0%29.html",
    "title": "Upgrade NITRO Studio From 1.0 2.0 To Modern NITRO Studio (3.0)",
    "text": "Upgrade NITRO Studio from 1.0/2.0 to Modern NITRO Studio (3.0) - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Upgrade NITRO Studio from 1.0/2.0 to Modern NITRO Studio (3.0) Upgrade NITRO Studio from 1.0/2.0 to Modern NITRO Studio (3.0) 414 views 2 min , 59 sec read 0 Applies To: SharePoint Online Pre-requisites: 1. The user doing the upgrade requires global admin rights on the SharePoint online tenancy. 2. Custom scripting should be enabled for the site collection. Refer below article for details on the use of custom scripting in NITRO Studio. https://www.crowcanyon.help/article/742/#CustomScript 3. Refer to NITRO Studio permissions from: https://www.crowcanyon.help/article/742 4. Refer to the “Detailed Steps” section from Modern NITRO Studio (3.0) Installation Guide &#8211; Crow Canyon Software Support to grant the permissions before proceeding to the NITRO Studio 3.0 upgrade page. (Note: If you don&#8217;t see the Crow Canyon NITRO API permission, it means the permission has already been granted in your tenancy) 5. NITRO ID column is not supported in modern NITRO Studio 3.0 version. If any list is using NITRO ID column, reconfigure the settings using NITRO Workflows/Custom Actions. Refer to this article: https://www.crowcanyon.help/article/753/ 6. Customers using NITRO Studio 1.0/2.0 need to update to the latest version of NITRO Studio 2.0 first. To do this, navigate to the Site -&gt; Site Settings -&gt; Crow Canyon NITRO Apps -&gt; NITRO Admin Home -&gt; Click Update All Activated Sites After updating to the latest version of NITRO Studio 2.0, proceed to the NITRO Studio 3.0 upgrade page, as explained later in this article. 7. Listed below are the apps that were used prior to NITRO Studio. If these apps are detected in any site, NITRO upgrade will not run. Please contact Crow Canyon Support to move the configurations to NITRO Studio and then run the upgrade. Crow Canyon Forms Manager App Crow Canyon Advanced Portal Crow Canyon Common Utilities Crow Canyon Advanced Lookup Crow Canyon Advanced Email Crow Canyon Print Manager Crow Canyon Conditional Formatting Crow Canyon Color Indicator Column Crow Canyon Charts, Dashboards and Reports Crow Canyon Report Manager Crow Canyon Branding App Crow Canyon Cascaded Lookup Column Crow Canyon Discussion Column Crow Canyon Employee Portal Crow Canyon Linked Items Column Crow Canyon List Search Crow Canyon Tiles and Dials Description: This article describes detailed steps to upgrade the classic NITRO Studio (1.0/2.0) to modern NITRO Studio (3.0) Instructions Step 1: Navigate to the below site to upgrade NITRO Studio from classic (1.0/2.0) to modern (3.0). https://crowcanyonnitro.azurewebsites.net Step 2: Click ‘Upgrade’ button in NITRO Studio installation page as shown below. This upgrade button will navigate to the NITRO upgrade page ( https://crowcanyonnitro.azurewebsites.net/Upgrade ). All the site collections that require NITRO upgrade will be shown in this page. Note: It takes about 15 minutes to upgrade a site to NITRO 3.0. If there are 4 activated sites, then it may take about 1 hour to upgrade. Please plan the upgrade process accordingly and notify your users. Click the upgrade link next to the Site Collection you want to upgrade. ‘Upgrade’ link will open below popup, click ‘Ok’ button to proceed with the NITRO upgrade for the site collection. A maintenance message stating, &#8220;NITRO Upgrade is in progress in this site collection&#8221;, will be displayed at the top of the sites during the upgrade process. Once all the sites are upgraded in the site collection, upgrade status of each site will be shown as below: Manage Multiple Site Collections Click ‘Manage Multiple Site Collections’ button to select Modern NITRO Studio–activated site collections with available upgrades, and upgrade NITRO apps in the selected site collections. Below changes will be done in site as part of the upgrade: 1. All the app links in Application Administration page will navigate to the new NITRO Studio pages. Below apps should navigate to the URL like: WEBURL/SitePages/NITROStudio.aspx Crow Canyon NITRO Studio Email and Text Sync Advanced Approvals Crow Canyon Product App NITRO Engage 2. All the Crow Canyon app links in Application Administration page, Site Settings, List Settings and List Ribbon will navigate to the new NITRO Studio pages. Except above apps in #1, all other apps will be navigate the URL like: WEBURL/SitePages/NITROAddin.aspx 3. Events will be removed for all below apps for the lists and webhooks will be registered on the lists for below apps. Advanced Approval Product App NITRO Workflows NITRO Signature Remove NITRO SharePoint Add-ins from the Site Collection NITRO Studio 2.0 uses SharePoint add-ins. These are not removed automatically after the upgrade. If there is a need to rollback, then these add-ins will be required. After usage, if no issues are detected in NITRO 3.0, remove the NITRO SharePoint Add-ins from the site collection. Navigate to the NITRO upgrade page (URL below) https://crowcanyonnitro.azurewebsites.net/Upgrade 2. Click ‘Delete’ icon to remove the NITRO SharePoint Add-ins from the site collection. Below window will popup To view SharePoint Add-ins , navigate to the Site Contents of the site collection. Before cleaning SharePoint Add-ins After the SharePoint Add-ins have been cleaned up Rollback NITRO Studio from Modern to Classic If any issues are discovered after NITRO upgrade, rollback option is available to go back to NITRO Studio 2.0. Go to Site Contents of the site collection -> Open Crow Canyon NITRO Studio app -> Locate “ROLLBACK SITE” link in the bottom right side of the page -> Click “ROLLBACK SITE” link as shown below: Click ‘Ok’ button to proceed with rollback to classic NITRO Studio. A message stating, &#8220;NITRO Upgrade is in progress in this site collection&#8221;, will be displayed at the top of the sites during the rollback process. Success message will be shown after the completion of all sites rollback in the site collection. Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "753",
    "name": "753 - Reconfigure NITRO ID column settings using Custom Actions_NITRO Workflows - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/753%20-%20Reconfigure%20NITRO%20ID%20column%20settings%20using%20Custom%20Actions_NITRO%20Workflows%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Reconfigure NITRO ID Column Settings Using Custom Actions NITRO Workflows Crow Canyon Software Sup",
    "text": "Reconfigure NITRO ID column settings using Custom Actions/NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Reconfigure NITRO ID column settings using Custom Actions/NITRO Workflows Reconfigure NITRO ID column settings using Custom Actions/NITRO Workflows 287 views 3 min , 10 sec read 0 Applies to : NITRO Studio upgrade from 1.0/2.0 to 3.0 (SharePoint Online) Description NITRO ID column is not supported in NITRO Studio Modern (3.0). Microsoft is phasing out SharePoint Add-Ins and Remote Event Receivers (RERs). NITRO ID column uses RERs to set the ID column value before/after save of the item. After RERs retirement, ID column value cannot be set before item is saved (as synchronous events handling before item is saved are no longer supported). To set ID column value before item is saved, custom script can be used in NITRO Forms. Submit button can invoke the script to generate the ID value based on other columns, date time etc. After item save, ID column value can be set using Custom Actions or NITRO Workflows. Before upgrading your site collection to NITRO Studio Modern (3.0), it is required that NITRO ID column settings are migrated manually. Out of the box, ID column is used in below NITRO applications. Out of the box, ID column is used in below NITRO applications. NITRO Helpdesk NITRO Purchase Requests We need to reconfigure the NITRO ID column using NITRO Workflows/NITRO Custom Actions in NITRO Studio (3.0). The rest of this article has steps to move ID column settings. NITRO Helpdesk In NITRO Helpdesk application, &#8220;Knowledge Base&#8221; list is using the Crow Canyon ID column. Syntax of the ID column is as below: Sample value: KB_000023 First part of Id value is fixed string &#8220;KB_&#8221;. Second part is SharePoint generated Id of the item padded with zeros to left to make it a six-digit value. Go to Application Administration -> Configure Lists -> Click &#8220;Knowledge Base&#8221; -> Crow Canyon ID Column -> Delete the configurations. Go to Application Administration -> Configure Lists -> Click &#8220;Knowledge Base Revisions&#8221; -> Crow Canyon ID Column -> Configure the same functionality using Crow Canyon Custom Actions: Go to Crow Canyon Custom Actions -> Edit &#8220;Publish&#8221; custom action and configure &#8220;Process KB ID&#8221; custom action as shown below: Column Mapping: For more details about &#8220;Pad&#8221; function, refer to article: https://www.crowcanyon.help/article/710/ NITRO Purchase Requests In NITRO Purchase Request application, ID column is configured in &#8220;Purchase Orders&#8221; and &#8220;Purchase Requests&#8221; lists. Purchase Requests In NITRO Purchase Requests application, &#8220;Purchase Requests&#8221; list is using the Crow Canyon ID column. Syntax of the ID column is as below: Sample value: PR_2024_00023 First part of Id value is fixed string &#8220;PR_&#8221;. Second part is the year from the created date of the item: &#8220;2024_&#8221; Third part is SharePoint generated Id of the item padded with zeros to left to make it a five-digit value. Go to Purchase Requests list -> List Settings -> Delete NITRO ID column settings as shown below: Configure ID column functionality using custom actions: 1. Create custom action &#8220;Update PR number&#8221; 2. Configure update item action &#8220;Update PR Number&#8221; as shown below: Column mapping: 3. Edit &#8220;Submit for Approval&#8221; custom action and configure the &#8220;Update PR Number&#8221; action as shown below: Condition Gateway: If the purchase request number value is not set, then this gateway will first invoke the action to set this value. If the value is already set, then gateway will invoke the other actions required for submission. Update PR Number : Configure update item action same as above. NITRO Form Changes: Invoke above created &#8220;Update PR Number&#8221; custom action in NITRO forms. Go to Purchase Requests list -> Crow Canyon NITRO Forms -> Edit &#8220;Purchase Requests&#8221; form and make below changes and publish the forms. Hide default save button and configure &#8220;Submit&#8221; action button as shown below: Drag and drop two submit action buttons on to the form and configure them as shown below: Submit Action button 1: This submit action button will save the item and invoke the above created &#8220;Update PR Number&#8221; custom action to generate the &#8220;Purchase Request #&#8221; value and set it in the item. Show this button only in new form and hide in edit form. Hide permissions: Submit Action button 2: This submit action button will save the item. Show this button only in edit form and hide in new form. Script used in button : functionCallback(); Hide permission : Purchase Orders In NITRO Purchase Requests application, &#8220;Purchase Orders&#8221; list using the Crow Canyon ID column. Syntax of the ID column is as below: Sample value: PO_2024_00023 First part of Id value is fixed string &#8220;PO_&#8221;. Second part is the year of created date of the item &#8211; &#8220;2024_&#8221; Third part is SharePoint generated Id of the item padded with zeros to left to make it a five-digit value. 1. Delete ID column settings and reconfigure using Custom Actions Go to Application Administration -> Configure Lists -> Purchase Orders -> Crow Cany ID column settings -> Delete the settings 2. Reconfigure using Custom Actions Go to Purchase Requests list -> Custom Actions -> Edit &#8220;Create Purchase Order&#8221; custom action -> Configure update item action as shown below: Update PO #: Configure update item action to update &#8220;Purchase Order #&#8221; in the Purchase Order. Column mapping: Other Applications/NITRO Site If you have configured NITRO ID column on any other list in the application or in any NITRO activated site, use NITRO workflows to reconfigure the ID column functionality. In this article, we have reconfigured &#8220;Project ID&#8221; column in &#8220;Projects&#8221; list using NITRO Workflows. &#8220;Projects&#8221; list using the Crow Canyon ID column and syntax of the ID column is as below: Sample value: Project_2024_00023 First part of Id value is fixed string &#8220;Project_&#8221;. Second part is the year of the item created date &#8211; &#8220;2024_&#8221; Third part is SharePoint generated Id of the item padded with zeros to left to make it a five-digit value. NITRO Workflow Configure a workflow on an item created event as shown below: Configure update item action to update the &#8220;Project ID&#8221;. Column Mapping: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "754",
    "name": "754 - Troubleshooting Merge Fields Mappings in Generate Document Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/754%20-%20Troubleshooting%20Merge%20Fields%20Mappings%20in%20Generate%20Document%20Action.html",
    "title": "Troubleshooting Merge Fields Mappings In Generate Document Action",
    "text": "Troubleshooting Merge Fields Mappings in Generate Document Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Merge Fields Mappings in Generate Document Action Troubleshooting Merge Fields Mappings in Generate Document Action 272 views Less than a minute 0 Applies to: SharePoint Online and SharePoint On-Premises (NITRO Workflows and NITRO Custom Actions) Symptoms Data is not merging into the Microsoft Word document generated using ‘Microsoft Office API’. While adding ‘Merge Fields Mappings’ in generate document action, the ‘Merge Field’ drop-down is empty. Cause &#8220;Preserve formatting during updates&#8221; option is enabled for merge fields in the selected Microsoft Word template file in Generate Document action. Resolution Uncheck &#8220;Preserve formatting during updates&#8221; option for all the merge fields in Microsoft Word template file as shown below: Navigate to the library where Microsoft Word template file is uploaded -&gt; Download the Word template → Edit the document. Right click the merge field → Select ‘ Edit Field… ’ -&gt; Uncheck the option ‘Preserve formatting during updates’ → Click OK. 3. Repeat #2. for all the merge fields -&gt; Save the document. 4. Upload the Word document to the same library and replace it with the existing document. 5. Edit the configured ‘Generate Document’ action → Select the template file edited in #2. and #3. from ‘Template File’ drop down → Click ‘Add Column Mapping’ button → ‘Merge Field’ drop down will display all the available merge fields → Map the merge fields as needed -&gt; Click Ok -&gt; Publish the NITRO Custom action/ NITRO Workflow. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "755",
    "name": "755 - Troubleshooting Crow Canyon NITRO Branding For Modern Sites.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/755%20-%20Troubleshooting%20Crow%20Canyon%20NITRO%20Branding%20For%20Modern%20Sites.html",
    "title": "Troubleshooting Crow Canyon NITRO Branding For Modern Sites",
    "text": "Troubleshooting Crow Canyon NITRO Branding For Modern Sites - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Crow Canyon NITRO Branding For Modern Sites Troubleshooting Crow Canyon NITRO Branding For Modern Sites 279 views Less than a minute 0 Applies to: SharePoint Online Description This article describes the fixes for common issues in Crow Canyon NITRO Branding for modern sites. Issue 1: Text is overlapping in top link bar of the page. Resolution Specify custom CSS in ‘Extended CSS’ option available under ‘General Settings’ of the Crow Canyon Branding for Modern Sites. Detailed steps: Navigate to the site -> Site Settings -> Site Administration -> ‘Crow Canyon Branding (Modern sites)’ -> ‘Site UI Settings’ -> General Settings -> Specify custom CSS in ‘Extended CSS’ as shown below: Custom CSS: [data-automationid=&#8221;SiteHeaderGroupInfo&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } [title=&#8221;Go to the Microsoft Teams channel&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } [data-automationid=&#8221;MemberCountButton&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } 2. Click ‘Save Settings’ -> Clear the browser’s cache. Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "756",
    "name": "756 - NITRO Studio Report Error Feature.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/756%20-%20NITRO%20Studio%20Report%20Error%20Feature.html",
    "title": "NITRO Studio Report Error Feature",
    "text": "NITRO Studio Report Error Feature - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Studio Report Error Feature NITRO Studio Report Error Feature 286 views 3 min , 2 sec read 0 Applies To SharePoint Online Description: NITRO Studio components provide a variety of features for configuring business process flows in SharePoint. Sometimes an error can occur during execution due to various reasons like invalid configurations or data, intermittent connectivity or Office 365 issues, NITRO issues etc. NITRO Custom Actions component has a feature to log details of error and related data in a list in the site. This data can be used by administrators to investigate the issue and correct the configurations. For NITRO issues, these can be submitted by administrators to Crow Canyon for further investigation and fixes as required. This feature will be added to other NITRO components in upcoming releases. This article describes the process of submitting these errors and investigation thereafter. When an error is detected by NITRO, logged-in user is shown an option to report the error. &nbsp;Site administrator (Full Control) will get a notification along with link to the details of the error. Note: This feature is available in NITRO 2.x and is already included as part of the NITRO Applications package. It will be made available soon in NITRO 3.x. Summary of steps: Install NITRO Extensions setup Report Error to administrator Report Error to Crow Canyon Detailed Steps: 1. Install NITRO Extensions setup Step 1: Navigate to root site of the site collection -&gt; Crow Canyon NITRO Studio app -&gt; click on NITRO Applications as shown below: Please go to Updates tab in NITRO Applications -&gt; click on NITRO Extensions as shown below Select the required NITRO site and click Ok to finish the setup as shown below. Once the above setup is complete, a new list called “NITROErrorLog” will be created in the site. This list helps track all errors reported by users. The Application administrator can use it to monitor and manage issues. A workflow can also be set up to send automatic notifications when a new item is created. After the issue is resolved—either by the administrator or Crow Canyon Support—it can be marked as Completed . The list includes columns to capture detailed error information and comes with pre-configured actions for administrators to manage and respond to issues efficiently. To access the list, please go to Site Contents -&gt; NITROErrorLog &#8211; If the administrator wants to get notification, they can configure the workflow on NITROErrorLog list when the item is created. This workflow creation to get notification is an optional step. Go to site settings -&gt; Administration -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Workflows app -&gt; Create a new workflow on NITROErrorLog list on item added event to notify administrator. 2. Report Error to administrator When any error in encountered during custom action execution, a link to submit the error details is shown to user: On clicking this link a popup is shown with below options: &#8211; After the report is submitted, a message is shown to user as shown in the screenshot below. Error details along with optional information is created as an item in the ‘NITROErrorLog’ list. 3. Report Error to Crow Canyon Users with Site Administration (Full Control) permission can take the following actions on error log items: Send to Crow Canyon Mark Completed These actions are created by the Application in the ‘NITROErrorLog’ list. Administrators can navigate to the item from the notification (as configured in Step 2 above), review details, and decide the next steps whether to “Send to Crow Canyon” or work on it and “Mark Completed”. If error was temporary or fixed by configuration changes, administrator can mark the item as &#8216;Completed&#8217;. If the error is consistent and the administrator is not able to find the root cause, request assistance by using the &#8216;Send to Crow Canyon&#8217; action. The error details will then be sent to the Crow Canyon support team. These actions can be updated as required. Custom Action Functionality Send to Crow Canyon This custom action is used to escalate an error to Crow Canyon Support when the issue is in a &#8220;Pending&#8221; state. Functionality: Condition: The action runs only if the item’s status is set to &#8220;Pending&#8221; . It is available to all users. Update Work Log: A pop-up opens for the administrator to add a comment or note in the Work Log field to provide context or details about the issue. Here you can describe the steps already tried and whether the issue is consistent across users/browsers, etc. You can also include browser console logs/network traces during the issue. Send Email to Crow Canyon: On clicking ‘Ok’, an email is automatically sent to Crow Canyon Support with the item’s error details. Update Status: The item’s status is updated from &#8220; Pending &#8220; to &#8220; Sent to Crow Canyon &#8220; to indicate escalation. Mark Completed This custom action is used when the issue has been reviewed and resolved, either by the administrator or by the Crow Canyon support team. Functionality: Condition: Executes only if the item’s status is not set to &#8220; Completed &#8220; . It is available to all users. Update Work Log : Administrator can add the description of the fix or any other relevant details for future reference. Gateway Condition: If the item’s Status = &#8220;Sent to Crow Canyon&#8221; , a &#8220;Completed&#8221; notification email is sent to Crow Canyon Support. If not, the Work Log column is updated with the value &#8220;Completed&#8221; (no email is sent). Send Completion Email (if applicable): Uses a predefined mail template to notify Crow Canyon Support of the completion. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "757",
    "name": "757 - Switch Between the Tabs Using Custom Buttons in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/757%20-%20Switch%20Between%20the%20Tabs%20Using%20Custom%20Buttons%20in%20NITRO%20Forms.html",
    "title": "Switch Between The Tabs Using Custom Buttons In NITRO Forms",
    "text": "Switch Between the Tabs Using Custom Buttons in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Switch Between the Tabs Using Custom Buttons in NITRO Forms Switch Between the Tabs Using Custom Buttons in NITRO Forms 274 views 1 min , 44 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description This article describes the steps to configure custom ‘Next’ and ‘Previous’ buttons to navigate between the tabs in NITRO Forms using JavaScript. The configuration steps are explained in reference to the below use cases: Show all the tabs along with the ‘Next’ and ‘Previous’ buttons. Hide all the tabs and show only the ‘Next and ‘Previous’ buttons. Detailed steps ‘Tickets’ list is taken as an example in this article. The ‘Script Action’ buttons are added in all the tabs of the NITRO Form as specified below: One ‘Script Action’ button in the first tab (‘Employee’) to configure ‘Next’ button. Two ‘Script Action’ buttons in second, third and fourth tabs (‘Staff’, ‘Work Log’ and ‘Knowledge Base’) to configure ‘Next’ and ‘Previous’ buttons. One ‘Script Action’ button in the last tab (‘Related Items’) to configure ‘Previous’ button. Use Case 1: Show all the tabs along with the ‘Next’ and ‘Previous’ buttons. To configure ‘Next’ button, navigate to NITRO Forms designer for the ‘Tickets’ list -> Expand ‘Actions’ section from right-hand panel -> Drag and drop ‘Script Action’ button on the ‘Employee’ tab. 2. Select the ‘Script Action’ button -> Specify button title as ‘Next’ -> Click ‘Edit’ button beside ‘Process’. 3. In the opened window specify the JavaScript for ‘Next’ button as shown below: Script: formContext.showNextTabORSection(false,true); functionCallback(false); 4. For ‘Staff’ tab, drag and drop two ‘Script Action’ buttons to configure the ‘Next’ and ‘Previous’ buttons. Note: Configuration for ‘Next’ button is same as described in the above steps. 5. JavaScript for the ‘Previous’ button is as shown below: Script: formContext.showPreviousTabORSection(true); functionCallback(false); Similarly, configure ‘Previous’ and ‘Next’ buttons in other tabs. 6. Publish the NITRO Forms. Sample output Use Case 2: Hide all the tabs and show only the ‘Next’ and ‘Previous’ buttons. This is useful for configuring submission wizard. In wizard mode, user is presented a series of pages in a sequence to enter the data. On the last page, there is a form to submit the request. User can click previous/back buttons on intermediate pages to navigate to different pages. Using Crow Canyon NITRO Forms, this experience can be easily configured. For this use case, the ‘Script Action’ buttons can be configured as explained in ‘Use Case 1’. However, to hide the tabs, the script for the ‘Next’ and ‘Previous’ buttons is different. For the ‘Next’ button, the JavaScript used is as shown below: Script: formContext.showNextTabORSection(); functionCallback(); 2. For the ‘Previous’ button, the script used is as shown below: Script: formContext.showPreviousTabORSection(); functionCallback(); Note: Configure ‘Next’ and ‘Previous’ buttons in all the tabs as needed. 3. Specify ‘Custom JavaScript’, expand ‘Advanced’ section from the left-hand panel -> click Custom JavaScript Script: formContext.hideAllTabsORSections(); 4. Publish the NITRO Forms. Sample output In this case, on clicking the ‘Next’ button to navigate to the next tab, the previous tab is hidden and only the current tab is visible, as shown in the above screenshot. On clicking the ‘Next’ button in the ‘Employee’ tab, the ‘Staff’ tab is visible and the ‘Employee’ tab is hidden. Note: All the required columns must be filled before switching between the tabs. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "758",
    "name": "758 - Example to configure aggregate function using ‘Advanced’ operator in NITRO Associated Items column i.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/758%20-%20Example%20to%20configure%20aggregate%20function%20using%20%E2%80%98Advanced%E2%80%99%20operator%20in%20NITRO%20Associated%20Items%20column%20i.html",
    "title": "Example To Configure Aggregate Function Using ‘Advanced’ Operator In NITRO Associated Items Column I",
    "text": "Example to configure aggregate function using ‘Advanced’ operator in NITRO Associated Items column in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Example to configure aggregate function using ‘Advanced’ operator in NITRO Associated Items column in NITRO Forms Example to configure aggregate function using ‘Advanced’ operator in NITRO Associated Items column in NITRO Forms 263 views Less than a minute 0 Applies to: SharePoint Online and Onprem Description: This article describes the steps to configure aggregate function in the NITRO Associated Items column using ‘Advanced’ operator with an example. Sample use case In this article, ‘Associated Tasks’ is a NITRO Associated Items column in Tickets list. We have configured aggregate settings with ‘Advanced’ operator to count child items separately based on the value selected in their ‘Task Status’ column. Choice options of ‘Task Status’ column in the associated list are: ‘Not Started’, ‘In Progress’, and ‘Completed’. Detailed steps To configure the aggregate settings, navigate to NITRO Forms designer for the Tickets list -> Select ‘Associated Tasks’ associated items column -> Click ‘Edit’ button from column settings panel -> Open ‘Aggregates’ tab -> Click ‘New Aggregate’ button. 2. Specify ‘Display Text’, select ‘Task Status’ column, select ‘Advanced’ operator from the ‘Aggregate Function’ drop-down, and specify custom JavaScript in the advanced function. Aggregate setting for “Not Started” task status: Example to configure aggregate function using ‘Advanced’ operator in NITRO Associated Items column in NITRO Forms Aggregate setting for “In Progress” task status: Aggregate setting for “Completed” task status: Script: var count = 0; if (arrSelectColValues) { for (var i = 0; i &lt; arrSelectColValues.length; i++) { if (arrSelectColValues&#91;i] == \"Not Started\") { count++; } } } return count; Note: For “In Progress” task status, configure a new aggregate and replace “Not Started” with “In Progress” in the above script. For “Completed” task status, configure a new aggregate and replace “Not Started” with “Completed” in the above script. 3. Publish the NITRO Forms. Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "759",
    "name": "759 - Filter the lookup items based on form key in NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/759%20-%20Filter%20the%20lookup%20items%20based%20on%20form%20key%20in%20NITRO%20Forms.html",
    "title": "Filter The Lookup Items Based On Form Key In NITRO Forms",
    "text": "Filter the lookup items based on form key in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Filter the lookup items based on form key in NITRO Forms Filter the lookup items based on form key in NITRO Forms 261 views 1 min , 11 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description Lookup column shows lookup list items as per the selected ‘Lookup View’ in column settings. In case of multiple NITRO Forms configured for the list, it might be required to show different set of lookup list items based on the form key. This can be configured using custom script in NITRO Lookup column settings. &nbsp; In this article, we have taken an example of ‘Category’ lookup column of the Tickets list. It is required to show ‘All Items’ lookup list view items for the ‘Tickets’ form and ‘Public View’ lookup list view items for the ‘PortalTicket’ form. Category list has two SharePoint list views, ‘All Items’ and ‘Public View’. Detailed steps Add custom JavaScript to modify the ‘Category’ lookup column. Navigate to NITRO Forms designer for the Tickets list -> Open ‘Tickets’ form -> Select ‘Category’ column -> Click ‘Edit’ button from column settings panel -> Scroll down and click ‘Add/Edit Script’ button from the ‘Advanced Settings’ section. 2. Specify the custom script. There are two ways to modify the lookup view: By lookup view name By lookup view ID By lookup view name Script: var scriptManager = {}; //Modify the lookup view by view name. scriptManager.UpdateLookupView = function(objData, objLookupSetting){ //Modify objLookupSetting properties. var viewName = objLookupSetting.FilterView; if (objData.FormKey === 'PortalTicket') { viewName = 'Public View'; }; return viewName; }; return scriptManager; Note: Replace ‘PortalTicket’ form key and ‘Public View’ list view name as needed. b. By lookup view ID Navigate to ‘Category’ list -> Edit ‘Public View’ list view -> Copy view ID from address bar of the browser -> Specify view ID of ‘Public View’ in the script. Script: var scriptManager = {}; //Modify the lookup properties. scriptManager.PreRenderLookup = function(objData, objLookupSetting){ //Modify objLookupSetting properties. if (objData.FormKey === 'PortalTicket') { objLookupSetting.FilterViewID = 'CC1CFE48-4011-4732-9611-98F5CE61F9D2'; }; return objLookupSetting; }; return scriptManager; Note: Replace ‘PortalTicket’ form key as needed. Replace &#8216;CC1CFE48-4011-4732-9611-98F5CE61F9D2&#8217; with ‘Public View’ view ID as shown in the above screenshot. 3. Click Ok -> Click ‘Apply’ button -> Publish the NITRO Forms. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "76",
    "name": "76 - Update parent item when associated items are modified from parent item edit form - Crow Canyon Softw.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/76%20-%20Update%20parent%20item%20when%20associated%20items%20are%20modified%20from%20parent%20item%20edit%20form%20-%20Crow%20Canyon%20Softw.html",
    "title": "Update Parent Item When Associated Items Are Modified From Parent Item Edit Form Crow Canyon Softw",
    "text": "Update parent item when associated items are modified from parent item edit form - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Update parent item when associated items are modified from parent item edit form Update parent item when associated items are modified from parent item edit form 265 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes steps to update the parent item when its child items are modified from parent item edit form, using custom script in Form Event Actions. Sample use case: Update the status of parent item to ‘Complete’ when all the associated child items are completed. Detailed steps Configure ‘Form Event Actions’ on column value change event. a) Navigate to NITRO Forms designer of the parent list -> Select the pre-configured ‘NITRO Associated Items’ column -> Column Settings -> Expand ‘On column value change event’ section -> Click ‘Add’ button. b) Configure FEA for new and edit form. c) Configure ‘Execute Script’ action. In the ‘Configure Execute Script Action’ window, paste the script as shown below: Script: var linkedColumnName = \"&#91;Associated Column Internal Name in the parent list]\"; var statusColumn = \"&#91;Child list ‘Status’ column Internal Name]\"; var objLinkedColumn = _ccs_FormUI.linkItemsColumnSettings&#91;linkedColumnName]; var grid = $(\"#\" + objLinkedColumn.ControlID).data(\"kendoGrid\"); var gridData = grid.dataSource.data(); var itemCount = gridData.length; var allCompleted = true; for (var i = 0; i &lt; itemCount; i++) { var objRow = gridData&#91;i]; if(objRow&#91;statusColumn] != 'Completed'){ allCompleted = false; break; } } if(allCompleted){ _ccs_FormUI.setColumnControlValueByName(\"Status\", \"Closed\"); } functionCallback(); Note: Use child item ‘Status’ column value in the below line like ‘Completed’ or ‘Closed’. This value can be as per the requirement. ‘if(objRow[statusColumn] != &#8216;Completed&#8217;){‘ For line ‘_ccs_FormUI.setColumnControlValueByName(&#8220;RequestStatus&#8221;, &#8220;Closed&#8221;);’, use parent form’s ‘Status’ column internal name and set the value as ‘Closed’/ ‘Completed’. d) Click Ok to save the FEA -> Click ‘Apply’ -> Publish the NITRO Forms. Sample output from the parent list edit form when the status of child items is set to ‘Completed’: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "760",
    "name": "760 - Update parent item when associated items are modified from parent item edit form - Crow Canyon Softw.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/760%20-%20Update%20parent%20item%20when%20associated%20items%20are%20modified%20from%20parent%20item%20edit%20form%20-%20Crow%20Canyon%20Softw.html",
    "title": "Update Parent Item When Associated Items Are Modified From Parent Item Edit Form Crow Canyon Softw",
    "text": "Update parent item when associated items are modified from parent item edit form - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Update parent item when associated items are modified from parent item edit form Update parent item when associated items are modified from parent item edit form 265 views Less than a minute 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes steps to update the parent item when its child items are modified from parent item edit form, using custom script in Form Event Actions. Sample use case: Update the status of parent item to ‘Complete’ when all the associated child items are completed. Detailed steps Configure ‘Form Event Actions’ on column value change event. a) Navigate to NITRO Forms designer of the parent list -> Select the pre-configured ‘NITRO Associated Items’ column -> Column Settings -> Expand ‘On column value change event’ section -> Click ‘Add’ button. b) Configure FEA for new and edit form. c) Configure ‘Execute Script’ action. In the ‘Configure Execute Script Action’ window, paste the script as shown below: Script: var linkedColumnName = \"&#91;Associated Column Internal Name in the parent list]\"; var statusColumn = \"&#91;Child list ‘Status’ column Internal Name]\"; var objLinkedColumn = _ccs_FormUI.linkItemsColumnSettings&#91;linkedColumnName]; var grid = $(\"#\" + objLinkedColumn.ControlID).data(\"kendoGrid\"); var gridData = grid.dataSource.data(); var itemCount = gridData.length; var allCompleted = true; for (var i = 0; i &lt; itemCount; i++) { var objRow = gridData&#91;i]; if(objRow&#91;statusColumn] != 'Completed'){ allCompleted = false; break; } } if(allCompleted){ _ccs_FormUI.setColumnControlValueByName(\"Status\", \"Closed\"); } functionCallback(); Note: Use child item ‘Status’ column value in the below line like ‘Completed’ or ‘Closed’. This value can be as per the requirement. ‘if(objRow[statusColumn] != &#8216;Completed&#8217;){‘ For line ‘_ccs_FormUI.setColumnControlValueByName(&#8220;RequestStatus&#8221;, &#8220;Closed&#8221;);’, use parent form’s ‘Status’ column internal name and set the value as ‘Closed’/ ‘Completed’. d) Click Ok to save the FEA -> Click ‘Apply’ -> Publish the NITRO Forms. Sample output from the parent list edit form when the status of child items is set to ‘Completed’: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "761",
    "name": "761 - Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – III - Crow Canyon Soft.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/761%20-%20Use%20%E2%80%98Form%20Event%20Actions%E2%80%99%20Feature%20Of%20NITRO%20Forms%20To%20Add%20Custom%20Functionality%20%E2%80%93%20III%20-%20Crow%20Canyon%20Soft.html",
    "title": "Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – III Crow Canyon Soft",
    "text": "Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – III - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – III Use ‘Form Event Actions’ Feature Of NITRO Forms To Add Custom Functionality – III 262 views 1 min , 5 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO Forms have a lot of built-in functionality to customize the layout, design and functionality as required in common business applications. For any specific cases not covered directly by the configurations, custom JavaScript and CSS can be added. These custom scripts can be invoked on form load, on column values change and before/after an item is submitted. For all these cases, scripts can be invoked conditionally based on various values entered in the form. Please refer to&nbsp; this article&nbsp; for form event actions’ basic usage and configurations. Refer to this article for more FEA use cases. This article describes some sample use cases to configure form event actions in NITRO forms. Use case 1: Update closed date when a task is completed Sample list schema and use case Standard SharePoint list Columns: Column Display Name Column Internal name Column Type Column Value Status Status Choice Column New In-process Complete DateOfCompletion DateOfCompletion Date and Time &nbsp; Use case: Update ‘DateOfCompletion’ with current date and time when a task is ‘Completed’. Steps to configure Navigate to NITRO Forms designer for the list -> Expand ‘Advanced’ section from the left-hand panel -> ‘Form Event Actions’ -> Click ‘New Configuration’ button as shown below: 2. Configure a form event action on ‘Execute on column value change’ event and select the ‘Status’ column. This FEA will trigger when the value of ‘Status’ column changes. 3. Expand ‘New Action’ menu -> Click ‘Update Form Controls’. 4. Specify condition: Status ‘equal’ Complete. Click ‘New Mapping’ button. 5. Configure column mapping: ‘DateOfCompletion’ -> {Now} ‘{Now}’ captures the current date and time as per the site’s regional settings. 6. Click ‘Ok’ to save the Form Event Action configurations à Publish the NITRO form. Sample output: Note: We can configure ‘Hide’ permissions to show ‘DateOfCompletion’ column only in the display form and hide from the new and edit forms. Refer to ‘Column Permissions’ from the manual for detailed steps to configure the column permissions. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "762",
    "name": "762 - Troubleshooting Classic UI To Modern UI Conversion In SharePoint 2019.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/762%20-%20Troubleshooting%20Classic%20UI%20To%20Modern%20UI%20Conversion%20In%20SharePoint%202019.html",
    "title": "Troubleshooting Classic UI To Modern UI Conversion In SharePoint 2019",
    "text": "Troubleshooting Classic UI To Modern UI Conversion In SharePoint 2019 - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Classic UI To Modern UI Conversion In SharePoint 2019 Troubleshooting Classic UI To Modern UI Conversion In SharePoint 2019 266 views Less than a minute 0 Applies to: SharePoint On-Premises 2019 Description This article lists the troubleshooting steps for various possible errors that might be encountered after converting classic UI to modern UI in SharePoint 2019. Symptom 1: &#8220;Create Pages&#8221; button in the NITRO Studio apps page failed. Cause: ‘Site Pages’ feature is not activated in site features. Resolution: Activate the ‘Site Pages’ feature. Navigate to Site Settings -&gt; ‘Site Actions’ -&gt; Click ‘Manage site features’ -&gt; Click ‘Activate’ option present adjacent to ‘Site Pages’. Once the feature has been successfully activated, the ‘Active’ button will be highlighted as shown below: Note: If some pages were created during earlier attempts when the error was noticed, then those pages should be deleted before clicking &#8220;Create Pages&#8221; button again. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "763",
    "name": "763 - Configure standard notification ‘Notification on Ticket Creation’ using NITRO Workflows - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/763%20-%20Configure%20standard%20notification%20%E2%80%98Notification%20on%20Ticket%20Creation%E2%80%99%20using%20NITRO%20Workflows%20-%20Crow%20Canyo.html",
    "title": "Configure Standard Notification ‘Notification On Ticket Creation’ Using NITRO Workflows Crow Canyo",
    "text": "Configure standard notification ‘Notification on Ticket Creation’ using NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure standard notification ‘Notification on Ticket Creation’ using NITRO Workflows Configure standard notification ‘Notification on Ticket Creation’ using NITRO Workflows 260 views 1 min , 31 sec read 0 Applies to : SharePoint Online and On-premises (2013, 2016, 2019 and SE) Application type : NITRO Helpdesk, Facilities 2020, Request Management 2020 and Customer Service 2020 Description This article explains the steps to configure a notification system for the Crow Canyon service request applications in such a way that when a new ticket is created, the notification goes to only specific users as per the conditions. For reference, this configuration is implemented on ‘Tickets’ and ‘Email Tickets’ lists of the Helpdesk Application using NITRO Workflows. The objective of such a configuration is to exclude some users from the application’s notification emails based on a specific domain when a ticket is created either from an email or through the backend/portal site. Note: It is not necessary to use domain for the filter criteria. Any keyword can be used as needed. Detailed s teps To configure a custom notification system, it is required to first disable the standard notifications that are already configured in the application. To disable the default notification system, navigate to the Helpdesk application -> ‘Administration’ from the top link bar -> ‘Notifications’ from the quick launch -> Click ‘Notification on Ticket Creation’ as shown below: 2. Unselect ‘Notify Requester’ column -> Save the settings. 3. From the ‘Administration’ page, expand ‘Advanced’ section in the quick launch -> ‘Configure Lists’ -> Click ‘Configure Email Tickets’ tile -> Under ‘Permissions and Management’ section from the list settings page, click ‘Crow Canyon NITRO Workflow’ as shown below: 4. Create a new workflow on the ‘Email Tickets’ list based on ‘an item is modified’ event. This workflow is being created so that the ‘Requester’ can be notified when a ticket is created from an email. 5. Configure NITRO Workflow as per the below screenshot: 6. Click ‘Conditions’ button from the ‘WORKFLOW’ ribbon -> Specify conditions. Conditions: Column Name Operator Value Related Ticket ID equal afterchange:[[Any]] ProcessStatus equal Created Sender doesn’t contain contoso Note: ‘contoso’ is the keyword based on which the notification will not be sent. 7. Add a ‘Send Email’ action and specify the details as shown below: 8. A sample mail template for reference is as shown below: 9. Publish the NITRO Workflow. 10. Navigate to the ‘Tickets’ list -> Configure a NITRO Workflow based on ‘an item is created’ event. This workflow is configured for tickets created from the backend site and from the application portal. 11. Specify conditions. Column Name Operator Value Ticket Source not equal Email Requester Email doesn’t contain contoso 12. Add a ‘Send Mail’ action. The mail template can be configured as shown in #8. 13. Publish the NITRO Workflow. Note: The above configured NITRO Workflows will execute when a ticket is either created from an email or from the backend/portal site. Requester will not be notified on ticket creation if a new ticket contains ‘contoso’ in the ‘Sender’ column of the ‘Email Tickets’ list or in the ‘Requester Email’ column of the ‘Tickets’ list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "764",
    "name": "764 - SLA Feature.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/764%20-%20SLA%20Feature.html",
    "title": "SLA Feature",
    "text": "SLA Feature - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SLA Feature SLA Feature 268 views 10 min , 32 sec read 0 Applies to: NITRO Help Desk Online Application Type : NITRO Help Desk Description SLAs (service Level Agreements) are a documented agreement between a service provider and a customer that identifies both the services required and the expected level of service. These agreements can be formal or informal. Web level settings for SLAs applies to all the SLAs. For example: Setting up of business days and business hours will apply for calculation of time for all the SLAs List Level settings for SLAs are configurable options applied to each SLA that define various attributes of SLA like priority, due date, request status etc. In the context of ITSM (IT Service Management), SLAs help set and manage the expectations of end users when they raise a request or report an incident. In IT service desks, SLAs are primarily used to define the time it takes for services to be delivered and incidents to be resolved. SLA feature is now added in Crow Canyon IT helpdesk applications. This article is useful for configuring the SLA feature in standard IT helpdesk applications. SLA Configurations Navigation Go to Application Administration -&gt; Service Level Agreements Tab -&gt; Click SLA tile, this will open the SLA configuration page as shown below: New Policy: Click this button to create new SLA Policy. Change Priority Order: Click this button to change the priority of SLA policies in case of multiple SLA. List Level settings: Click this button to configure List level settings for SLA. Web Level settings: Click this button to configure web level settings for SLA. Web Level Settings Web Level Settings in SLA determine the business hours during which SLAs are applied and calculated. These settings ensure that SLA timers only run during specified working hours, preventing unnecessary breaches due to non-working hours. There are two ways to configure Web Level Settings: Site Regional Settings: By default, Web Level Settings are automatically populated based on the site’s regional settings. This ensures consistency across the system. If users need to make adjustments, they must navigate to the Site Regional Settings and modify the working hours there. Custom Settings: If users prefer more control, they can override the default settings and define their own work week directly within Web Level Settings. This allows them to customize working days and hours as per specific business needs. Once these settings are updated, SLAs will be applied according to the newly configured schedule. Site Regional Settings: Custom Settings: List Level Settings List Level Settings are used to set various conditions for the SLA like priority, due date, request status etc. These settings can be configured for list level as shown below: Priority Column : This dropdown will show all choice type of columns from Tickets list. SLA policies will be configured based on the selected priority column. In this sample use case, we have configured ‘Priority’ column from Tickets list. Below are the options in ‘Priority’ column in Tickets list. Low Normal High Due Date Column : This dropdown will show all date and time type of columns from Tickets list. Resolution due date will be updated in the selected column in this dropdown. In this sample use case, resolution due date will be updated in ‘Due Date’ column in the Tickets list. Resolution Due Hours Column : This dropdown will show all number type of columns from Tickets list. We can use this column to override the resolution hours specified in the SLA policy when calculating the resolution due date. Note : Value specified in this column will be considered as hours. If we specify value in the selected column in the Ticket then ‘Due Date’ will be calculated based on the hours specified in this column by overriding the resolution hours configured in the SLA policy, otherwise it will consider the resolution hours specified in the SLA policy. Calculate SLA Using : SLA will be calculated in below ways: Calendar Time Business Time Calendar Time : Selecting this option will calculate the SLA in 24&#215;7 format. Business Time : Selecting this option will calculate the SLA as per business time settings configured in web level settings in SLA. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Holiday List: Select a custom list which is used to maintain all holidays in this list. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Holiday Date Column : Select date column from above selected list. Note : Holidays configured in this list will be ignored while calculating the SLA. On policy change consider time already spent : Enable this setting to consider the time that is already spent on the Ticket on policy change. For example, initially a Ticket is created with low priority after its escalation priority of the Ticket is changed to high then in this case, SLA will be calculated by considering the time that is already spent on the Ticket. Otherwise, it will calculate the SLA as per the new policy. Update remaining time (every 15 minutes): Enable this setting to update the remaining times for a Ticket every 15 minutes. Remaining times for all Tickets will be updated in a custom list “Tickets_SLA_Data” and the reminder and escalation workflows will be triggered by the service. SLA States : We have below states in SLA configurations Pause : It will stop calculating the SLA times when the specified conditions are matched for this rule Resume : It will resume the SLA calculations when the specified conditions are matched for this rule Completion : It will finish the SLA calculations when the specified conditions are matched. In this sample use case, we have configured Pause, Resume and Completion conditions based on the Ticket status. Pause Conditions : When Ticket status is ‘On Hold’ or ‘Waiting on Customer’ then system will stop calculating the SLA times. Resume Conditions : When Ticket status is ‘Unassigned’ or ‘Assigned’ then system will start or resume the SLA calculations. Completion Condition : When Ticket status is ‘Resolved’ or ‘Closed’ then system will finish the SLA calculations. SLA Policies Define SLA policies as required. Based on the specified criteria, if any of the Ticket is matched then system will apply that SLA policy. We can define one or more SLA policies based on our requirement. Click ‘New Policy’ button to create the policies. Note : Conditions are required to create a policy except for default policy. When &#8216;Send Reminder&#8217; is enabled, the &#8216;Remind Before&#8217; and &#8216;Reminder Workflow&#8217; columns become visible. Resolution Tab: Title – This is the name of the SLA, which helps users identify the specific agreement being applied. It should be descriptive and meaningful, such as &#8220;High Priority Incident SLA&#8221; or &#8220;Standard Customer Support SLA.&#8221; Description – This field provides additional details about the SLA, including its purpose, scope, and any specific conditions or rules. The description helps users understand what the SLA covers and under what circumstances it applies. Start Date – This defines when the SLA becomes active. It could be the date when the agreement is signed, the date a service contract begins, or the date when a request/ticket is created in the system. Conditions &#8211; Define the rules for when the SLA is applied. Priority Levels : This column allows you to set different priority levels for tickets, such as High, Normal, and Low. Each priority level can have its own first reply/resolution time. First Reply Time : This column sets the time frame within which the first response to a ticket should be made. This helps ensure that users receive timely acknowledgment of their requests. Resolution Time : This column specifies the time frame within which tickets of a particular priority level should be resolved. For example, High priority tickets might have a resolution time of 24 hours, while Low priority tickets might have a resolution time of 168 hours (7 days). Send Reminder : This column allows you to enable or disable reminders for SLA breaches. If enabled, reminders will be sent when the SLA is breached, prompting action to resolve the ticket. Escalation Workflow : This column allows you to select a workflow that will be triggered if the SLA is breached. These workflows will be triggered if response or resolution times are breached.This ensures that appropriate actions are taken to address the breach and resolve the ticket. Each of these columns serves a specific purpose in managing and prioritizing support tickets effectively, ensuring that users receive timely responses and resolutions based on the priority of their requests. Sample Configuration: Note : If we specify resolution time as ‘0’ then that policy will not be applied. If we specify first reply time as ‘0’ then first reply will not be applied for the Ticket, only resolution time will be applied for the Ticket. Default Policy We cannot create default policies from the SLA page directly. After creating a policy, we can make the policy as default by adding the ‘DefaultPolicy’ property in the SLA settings file saved in Site Assets. To make a policy as default, go to the Site à Site Assets à Download the policy settings file and put ‘DefaultPolicy’ property as shown below: After updating the default property, upload the settings file again in the same location. Note : Default policy can be configured with or without any conditions. We cannot change the priority of default policy. Priority of default policy should always be at last in the page. Default policy will not be shown in ‘Change Priority Order’ setting page SLA Columns SLA feature uses below list of columns in Tickets list. These columns will be created automatically when we save the settings at list level or create a new SLA policy in SLA configuration page. Make sure all below columns are created in Tickets list. Column Name Column Type Description SLAOverdueStatus Single line of Text Specifies if the Ticket is overdue or not SLAStartTime Date and Time Captures the time when the SLA policy is applied SLATotalTimeSpent Number Specifies the total time taken to resolve or close the Ticket SLAType Single line of Text Specifies the type of SLA i.e., SLA or OLA SLAStatus Single line of Text Specifies the state (Active or Inactive) of SLA for a Ticket &nbsp; SLAPolicyId Single line of Text Applied SLA policy Id will be captured in this column SLAPolicyApplied Single line of Text Applied SLA policy name will be captured in this column SLAPolicyJSON Multiple lines of Text Applied policy configuration settings will be saved as JSON in this column SLAReminderResolutionDate Date and Time Reminder date for Ticket resolution SLAReminderFirstReplyDate Date and Time Reminder date for first reply to the Ticket SLAFirstReplyDueDate Date and Time Due date for first reply SLAFirstReplyRemainingTime Number Remaining time for the first reply will be captured in this column SLAResolutionRemainingTime Number Remaining time for Ticket resolution will be captured in this column SLAResumeDate Date and Time Captures the time on which the SLA calculation is resumed SLAPausedDate Date and Time Capture the time on which the SLA calculation is paused SLAFirstReplyBreached Yes/No Specifies whether the Ticket is responded within the first reply due date or not SLAResolutionBreached Yes/No Specifies whether the Ticket is resolved within the due date or not SLAWorkLog Multiple lines of Text Used to capture the SLA process log in this column. SLAAvailableTime Number Used to capture the time available to resolve or close the Ticket SLAFirstReplyEscalationWFSent Yes/No Specifies whether the escalation workflow triggered on Ticket first reply overdue or not SLAResolutionEscalationWFSent Yes/No Specifies whether the escalation workflow triggered on Ticket resolution overdue Change Priority Order Giving priority order to policy settings is useful when there are multiple policies configured with same conditions. This option will give the ability to prioritize the policies. SLA Response Indication First reply will be captured below ways for a Ticket. Incoming Email Item Update Outgoing Email To capture the first reply response in a Ticket, we need to enable the response indication feature in configuration item. Instructions to enable SLA response Indication: This feature uses below columns. Make sure all below columns exist in the corresponding lists, if not, create all the columns. List Name Column Name Column Type Description Configurations Internal Name : KPISettings Display Name : KPI Settings &nbsp; Multiple lines of plain text This column will be used to enable or disable the response indication feature Tickets Internal Name: FirstAssignedStaff Display Name: First Assigned Staff Single line of text or person or group Used to capture the first staff assigned for a Ticket Tickets Internal Name : FirstRespondedBy Display Name : First Responded By Single line of text or person or group Used to capture the user who is first responded for a Ticket Tickets Internal Name : FirstRespondedVia Display Name : First Responded Via Single line of text Captures the first response indication type Tickets Internal Name : FirstAssignmentDate Display Name: First Assignment Date Date and Time Capture the time when Ticket is assigned first time Tickets Internal Name : FirstResponseDateTime Display Name : First Responded On Date and Time Capture the time when the Ticket is first responded Tickets Internal Name : TimeToAssign Display Name : Time To Assign Number Time taken to assign a Ticket from its creation Tickets Internal Name : FirstResponseTime Display Name: First Response Time Number Time taken to respond to a Ticket from its creation Tickets Internal Name : TimeToRespondAfterAssign Display Name : Time To Respond After Assign Number Time taken to respond to a Tickets from its assignment Add ‘KPISettings’ column to ‘Configuration’ list form Go to Configurations list -&gt; List Settings -&gt; Crow Canyon NITRO Forms -&gt; Add ‘KPI Settings’ column in ‘Extended Settings’ tab. Configure below JSON in ‘KPI Settings’ in configuration item. Go to Application Administration -&gt; General Settings -&gt; Navigate to Extended Settings -&gt; Configure the below JSON in ‘KPI Settings’ JSON : { \"Enable\": true, \"FirstResponse\": { \"Enable\": true, \"ResponseIndicators\": &#91; \"IncomingEmail\", \"ItemUpdate\", \"OutgoingEmail\" ] }, \"FirstAssignTime\": { \"Enable\": true }, \"TimeToFirstAssign\": { \"Enable\": true, \"BusinessTime\": true }, \"FirstResponseTime\": { \"Enable\": true, \"BusinessTime\": true }, \"TimeToRespondAfterAssign\": { \"Enable\": true, \"BusinessTime\": true } } FirstResponse : Enabling this property will update the below columns in Tickets when user responded for a Ticket. Below are the response indicators: Incoming Email : When non-requester sends an email to an existing Ticket. Item Update : When non-requester updated the Ticket directly in the site. Outgoing Email : When non-requester sends mail directly from the Ticket using ‘Send Mail’ button. In all above cases, below columns will be updated. First Responded By First Responded Via First Responded On FirstAssignTime : Enable this property to capture the staff assignment information in below columns: FirstAssignedStaff FirstAssignmentDate TimeToFirstAssign: Enable this property to capture the time taken to assign the staff for a Ticket. Time will be updated in ‘Time To Assign’ column in the Ticket. FirstResponseTime : Enable this property to capture the time taken to respond for a Ticket. Time will be captured in ‘First Response Time’ column. TimeToRespondAfterAssign: Enable this property to capture the time taken to respond to a Ticket after staff assignment. Time will be captured in ‘Time To Respond After Assign’ column. SLA Reports Dashboard “SLA Reports” dashboard page will be created in “Site Pages” library. This page will show default reports configured on SLA. Below are the reports for SLA Tickets overdue (Last 7 days) Tickets overdue by week Resolution SLA Breach by Staff Resolution SLA Breach by Category and Issue Type Resolution SLA Breach by Priority Response SLA Breach by Staff Response SLA Breach by Category and Issue Type Response SLA Breech by Priority Resolution SLA Status Response SLA Status 1. Tickets overdue (Last 7 days) – This report shows the number of Tickets that are overdue in the last 7 days. On hovering the mouse over dots in the report it will show the number of Tickets “overdue” or “not overdue”. On clicking the dot, it will navigate to the Ticket page showing the details of those Tickets. On clicking “Overdue: 2”, it will show the overdue Tickets in last 7 days as shown below: 2. Tickets overdue by week – This report shows the number of Tickets that are overdue in every week over past 12 weeks. On hovering the mouse over dots in the report it will show the number of Tickets “overdue” or “not overdue”. On clicking the dot, it will navigate to the Ticket page showing the details of those Tickets. 3. Resolution SLA breach by Staff – This report will show the number of Tickets for which resolution SLA has been breached by each Staff member The report is represented in Bar Diagram Ticket details can be seen by clicking on a Bar. It will navigate to the “SLA Breach Tickets” page for that assigned staff. 4. Resolution SLA Breach by Category and Issue Type – This report shows the number of Tickets for which resolution SLA has been breached for each Category and Issue Type The report is represented in Bar Diagram with horizontal axis representing the category. For each category the Bar represents the number of Tickets for which resolution SLA has been breached. Each Issue type for which resolution SLA has been breached is represented by a colour on the bar and shows a separate count of Ticket. Ticket details can be seen by clicking on a Bar. It will navigate to the “SLA Breach Tickets” page for that Category. 5. Resolution SLA Breach by Priority – This report shows the number of Tickets for which resolution SLA has been breached grouped by “Priority” of the Ticket This report is represented in a Pie-Chart. To see the details of Tickets for which resolution SLA has been breached for a particular “Priority”, click on the corresponding area of the pie-chart. This will open “SLA Breach Tickets” page listing Tickets for which SLA has been breached for that “Priority” 6. Response SLA breach by Staff – This report will show the number of Tickets for which response SLA has been breached by each Staff member The report is represented in Bar Diagram Ticket details can be seen by clicking on a Bar. It will navigate to the “SLA Breach Tickets” page for that assigned staff. 7. Response SLA Breach by Category and Issue Type – This report shows the number of Tickets for which response SLA has been breached for each Category and Issue Type The report is represented in Bar Diagram with horizontal axis representing the category. For each category the Bar represents the number of Tickets for which response SLA has been breached. Each Issue type for which response SLA has been breached is represented by a color on the bar and shows a separate count of Ticket. Ticket details can be seen by clicking on a Bar. It will navigate to the “SLA Breach Tickets” page for that Category. 8. Response SLA Breach by Priority – This report shows the number of Tickets for which response SLA has been breached grouped by “Priority” of the Ticket This report is represented in a Pie-Chart. To see the details of Tickets for which response SLA has been breached for a particular “Priority”, click on the corresponding area of the pie-chart. This will open “SLA Breach Tickets” page listing Tickets for which SLA has been breached for that “Priority” 9. Resolution SLA Status – This report shows the count of Tickets for which resolution SLA status was met or breached. To see the details of Tickets for which resolution SLA has been met or breached, click on the corresponding area of the chart. This will open “SLA Breach Tickets” page listing Tickets for which SLA has been met or breached. 10. Response SLA Status – This report shows the count of Tickets for which response SLA status was met or breached. To see the details of Tickets for which response SLA has been met or breached, click on the corresponding area of the chart. This will open “SLA Breach Tickets” page listing Tickets for which SLA has been met or breached. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "765",
    "name": "765 - General Configuration in NITRO Helpdesk.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/765%20-%20General%20Configuration%20in%20NITRO%20Helpdesk.html",
    "title": "General Configuration In NITRO Helpdesk",
    "text": "General Configuration in NITRO Helpdesk - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / General Configuration in NITRO Helpdesk General Configuration in NITRO Helpdesk 264 views 5 min , 58 sec read 0 Applies To: NITRO Helpdesk Application Description This article describes the detail of General Configuration of NITRO Helpdesk Application. Typically, the General Configuration fields are filled out by Crow Canyon upon initial implementation of the program, and for any future adjustments. Unless directed by Crow Canyon Support, these field values should not be changed. The following document outlines the standard configurations that come with the out-of-the-box application. General Configuration For advanced or custom setup of program, general configuration is provided. Click ‘General Configurations’ tile to see settings as shown below: In General Configuration, configure settings or Ticket list. Product app will work according to these settings. In General tab: Title: Provide Title Product: Select product type Ticket list name: Provide name of Ticket list Case Id Format: Specify the prefix to parse the Ticket ID in the incoming/outgoing emails. Ticket Link Description: Provide Ticket link description Ticket URL: provide Ticket Form URL here Portal Ticket Link URL: Provide portal Ticket link URL here Portal Ticket Link Description: provide Portal Ticket Link Description here SR logs Retention Days: provide Retention days here Requester Information Tab: The &#8220;Requester Information&#8221; tab in the General Configuration of the NITRO Helpdesk application allows automatic population of requester details in the ticket based on their SharePoint user profile. Below is an explanation of the key fields in this tab: Fill Requester Information This checkbox enables or disables the automatic filling of requester details in the ticket. Read Information From SharePoint User Profile : If selected, requester details are fetched from the SharePoint user profile properties. Requester Meta Data Columns &amp; Properties These fields define how information from the SharePoint User Profile is mapped to the ticket fields: Requester meta data column1 : Defines a ticket field (e.g., &#8220;Requester Email&#8221;). Property1 : Corresponding SharePoint user profile property (e.g., &#8220;WorkEmail&#8221;). Requester meta data column2 : Defines another ticket field (e.g., &#8220;Requester Phone&#8221;). Property2 : Corresponding SharePoint property (e.g., &#8220;WorkPhone&#8221;). Requester meta data column3 : Defines the requester&#8217;s department in the ticket. Property3 : Corresponding SharePoint property (e.g., &#8220;Department&#8221;). Additional Fields (Optional) Requester meta data column4 &amp; 5 : These allow mapping additional requester details if required. Property4 &amp; 5 : Corresponding SharePoint user profile properties for additional metadata. Provide Requester related information under this tab as shown below: Knowledge Base Tab: Provide knowledge base related mapping under this tab as shown below: The Knowledge Base tab in the General Configuration of the NITRO Helpdesk application allows administrators to map fields between the Tickets list and the Knowledge Base (KB) list . This configuration ensures that relevant ticket information is accurately transferred to the knowledge base for future reference and streamlined issue resolution. Configuration in the Knowledge Base Tab KB Mappings This section enables the mapping of fields from the Tickets list to the corresponding fields in the Knowledge Base list . The mapping follows the format: Knowledge Base Field = Ticket Field Example: Title=Title Category1=Category1 IssueType=IssueType WikiContent=Description1 Resolution=Resolution ResolutionNotes=ResolutionNotes This ensures that when a resolved ticket is converted into a knowledge base article, the relevant details are automatically populated in the appropriate fields. Use Cases Auto-Generating Knowledge Base Articles : When a support agent resolves a ticket, they can create a KB article with resolution details to assist with similar future cases. Ensuring Consistency : Standardized field mapping ensures uniform data entry across tickets and KB articles. Enhanced Search and Categorization : Mapping fields like Category1 and IssueType helps in organizing KB articles for easy retrieval and reference. Use Cases Auto-Generating Knowledge Base Articles : When a support agent resolves a ticket, they can create a KB article with resolution details to assist with similar future cases. Ensuring Consistency : Standardized field mapping ensures uniform data entry across tickets and KB articles. Enhanced Search and Categorization : Mapping fields like Category1 and IssueType helps in organizing KB articles for easy retrieval and reference. Email Handing: Configure settings in email sync app for this. Provide settings for handing emails under this tab as shown below: Email Tickets Lists Names: Provide name of Email Ticket list Close Ticket if Subject starts with: If an email (with case id in subject) is send which starts with ‘Helpdesk’ in the subject, then it should close the Ticket. Close Ticket If Subject Ends with: If an email (with case id in subject) is send which ends with ‘Close’ in the subject, then it should close the Ticket. Copy CC Users To: Internal name of Ticket list column where users copied to the email have to be stored. Example: AdditionalContact (display name could be Additional Contact). Note that only those users who get resolved in the SharePoint will get added. Copy CC Users to Domains: Allowed domain names separated by semicolon. Users from these domains only will be stored in the above column. Example: google.com; abc.com If this is left blank, then users from all domains will be stored. Update Worklog: &nbsp; If an email is sent for existing Ticket (case id in subject), then it will add the email content to Ticket worklog. Stop Creating Tickets for new Emails: Enable this option to stop the Email to Ticket conversion feature. Other functionality like linking of emails to existing Tickets and auto-status and close Ticket functionality is not impacted by this change. Create Tickets for Emails from these addresses: This is used if &#8216;Stop creating Tickets for new Emails&#8217; is enabled. Emails from addresses specified here will be excluded and their emails will get converted to Tickets. Multiple email addresses can be specified by putting each address in separate line Email to Ticket Column Mapping : Parse email content and map to Ticket. Refer: https://www.crowcanyon.help/article/454/ Email Threading Options: Parameters to determine if an incoming email is a reply to an existing Ticket. Refer: https://www.crowcanyon.help/article/492/ Extended Settings Tab: Mail Response Separators : Keywords to determine where the latest response in email ends and old mail thread starts. E.g., De: From: wrote: Extended Settings: Additional options to manage Ticket process. State Management: Status values for Ticket. { \"Unassigned\": { \"DisplayName\": \"New\", \"AutoSetOnStaffClear\": \"Yes\" }, \"Assigned\": { \"DisplayName\": \"In Progress\", \"AutoSetOnAssign\": \"Yes\", \"SetFirstAssignedDate\": \"Yes\" }, \"Resolved\": { \"DisplayName\": \"Resolved\" }, \"Closed\": { \"DisplayName\": \"Closed\" } } For example: Here, ‘Unassigned’ can be changed to ‘New’ (DisplayName will remain same ‘New’) ‘Assigned’ can be changed to ‘In Progress’ (Display Name will remain same’ In Progress’) Status Tracking Settings: Provide bellow settings in this column for Status tracking of Ticket { \"EnableStatusTracking\": true, \"StatusTrackingListName\": \"Tickets Status Tracking\", \"EventsToTrack\": { \"Status\": true, \"Staff\": true, \"Team\": true, \"Priority\": true, \"Team and Staff\": true }, \"AdditionalColumnMappings\": &#91;] } If ‘Request Status’ of Ticket is changed then an entry gets created in ‘Tickets Status Tracking’ list with ‘Type of change&#8217; column value ‘Status’, show ‘Previous Status and ‘New Status’ value of Ticket If ‘Assigned Staff’ of Ticket is changed then an entry gets created in ‘Tickets Status Tracking’ list with ‘Type of change’ column value ‘Staff’ If ‘Assigned Team’ of Ticket is changed then an entry gets created in ‘Tickets Status Tracking’ list with ‘Type of change’ column value ‘Team’ If ’Priority’ of Ticket is changed then an entry gets created in ‘Tickets Status Tracking’ list with ‘Type of change’ value ‘Priority’ If ’Assigned Staff’ and ‘Assigned Team’ of Ticket is changed altogether then an entry gets created in ‘Tickets Status Tracking’ list with ‘Type of change’ value ‘Team and Staff’. KPI Settings: Key Performance Indicators (KPI) settings are as shown below: { \"Enable\": true, \"FirstResponse\": { \"Enable\": true, \"ResponseIndicators\": &#91; \"IncomingEmail\", \"ItemUpdate\", \"OutgoingEmail\" ] }, \"FirstAssignTime\": { \"Enable\": true }, \"TimeToFirstAssign\": { \"Enable\": true, \"BusinessTime\": true }, \"FirstResponseTime\": { \"Enable\": true, \"BusinessTime\": true }, \"TimeToRespondAfterAssign\": { \"Enable\": true, \"BusinessTime\": true } } Ticket Assignment Tab: Auto-assignment Staff Selection: Create a Ticket with ‘Category’ and ‘Issue Type’, ‘Assigned staff’ is filled in Ticket based on ‘Issue Type’ first, if ‘IssueType’ is not having staff then it will come according to ‘Category’. If ‘Category’ is also not having staff then it will come according to ‘Staff List’. Auto assign ‘Category’ and ‘Issue Type on email conversion to Ticket: If receivers are set in ‘Issue Type’, then ‘Issue Type’ is filled, based on ‘Issue Type’ corresponding ‘Category’ is also filled automatically in email to Ticket conversion. Similarly, if ‘Associated from Email Address or Email Tickets List Name’ is filled in ‘Category’ then ‘Category’ is autofill in email to Ticket conversion. If ‘Receivers’ and ‘Associated From Email Address or Email Tickets List Name’ filled in multiple categories and issuetypes then first one will be filled in Tickets. Auto-Assign Mode: Two types of auto-assign mode are Round Robin Load balance Round Robin distributes tasks equally among team members, while Load Balancing distributes tasks based on the current workload of each team member. Override Team: Enable this option if user wants to change the assigned team if ‘Category’ or ‘Issue Type’ change in the Ticket. Override Assigned Staff: Enable this option if the user wants to change the assigned staff if ‘Category’ or ‘Issue Type’ change in the Ticket. Business Time Configuration: configure business time configuration as shown below: Enabled=Yes/No BusinessTimeType=Site/Custom StartTime=9 (as per site time zone) EndTime=18 BusinessDays=Number (127 for all days) HolidaysCalendarList=Calendar HolidayCalendarFieldValue=Category,Holiday On Call Tech Assignment Configurations: Configure this setting as shown below: Enabled=Yes/No BusinessHoursTechnician=user1 HolidayTechnician=user2 NonBusinessHoursTechnician=user3 TechnicianCalendarList=Calendar TechnicianCalendarField=Technician TechnicianCalendarFilter=Category,OnCall AI Settings Tab: Configure AI settings in ‘General Configurations’ in helpdesk applications. Go to application administration -> General Configurations tab -> Click ‘General Configurations’ tile -> ‘AI Connection Settings’ -> Specify below JSON settings in the ‘AISettingsJSON’ column. This JSON tells the system how to use AI for Ticket classification. Enter below JSON in AISettingsJSON { \"AIConnection\" : \"Azure Open AI\", \"AutoPopulateIssueType\" : { \"Enabled\":true, \"EmbeddingColumn\":\"Embedding\", \"ChecksumColumn\":\"Checksum\", \"CalculateEmbeddings\":true, \"DescriptionColumn\" : \"Description\", \"RefinerString\" : \"\" } } AIConnection : Specifies the AI service (in this case, Azure Open AI) name configured in the Crow Canyon NITRO Site Settings. If AI connection is not configured, the application will use SharePoint search to find the matching category/issue type. However, for proper matching, it is recommended that AI settings are configured. To create azure services, refer this article: https://www.crowcanyon.help/article/747/ To configure AI connection settings in NITRO Site Settings, go to site settings -> Crow Canyon NITRO Site Settings -> AI Connection Settings -> New AI Connection AutoPopulateIssueType : Enabling this setting will auto set category/issue type based on the Ticket subject and description. EmbeddingColumn: Specify internal name of the ‘Embedding’ column created in category/issue type lists. Checksum Column : Specify internal name of the ‘Checksum’ column created in category/issue type lists. Calculate Embeddings : Enable this to generate embeddings (requires AI connection setup) for the category/issue types. DescriptionColumn : Specify internal name of the ‘Description’ column created in category/issue type lists. Please refer below article for more details on AI settings: Use AI to Auto-Set Category and Issue Type &#8211; Crow Canyon Software Support About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "766",
    "name": "766 - Configure choice bar in NITRO Forms to show current status of the request - Crow Canyon Software Sup.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/766%20-%20Configure%20choice%20bar%20in%20NITRO%20Forms%20to%20show%20current%20status%20of%20the%20request%20-%20Crow%20Canyon%20Software%20Sup.html",
    "title": "Configure Choice Bar In NITRO Forms To Show Current Status Of The Request Crow Canyon Software Sup",
    "text": "Configure choice bar in NITRO Forms to show current status of the request - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure choice bar in NITRO Forms to show current status of the request Configure choice bar in NITRO Forms to show current status of the request 245 views 1 min , 23 sec read 0 Applies to: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description NITRO Forms support configuring a choice bar in the form. This feature provides a visual representation of workflow stages, making it easier for users to track the current status of a request. The choice bar dynamically updates based on the selected column value and can be customized in terms of choice options, color, design, etc. Use Cases IT Change Request Workflow Scenario: In an IT Change Management system, a request goes through multiple stages before approval. A visual choice bar helps users track the current status of the request. Configured statuses: Draft → Pending Approval → In Progress → Completed → Closed The status dynamically updates as the request moves through these stages. &nbsp; Example: A user submits a change request. Initially, the status is “Draft”. After submission, it changes to “Pending Approval”. The choice bar updates dynamically in the form based on the ‘Status’ column value. HR Employee Onboarding Process Scenario: The HR department tracks new employee onboarding process. Choice bar helps HR identify at which stage the employee has reached. &nbsp; Configured statuses: Application Received → Background Check → Offer Sent → Onboarding → Completed Example: A recruiter updates the ‘Onboarding Status’ field, and the form displays the corresponding step highlighted in the choice bar. Ticket Status in Helpdesk Application Scenario: Tracking Ticket status in IT Helpdesk Helpdesk system receives tickets for IT issues. Users want to track the progress of their Ticket in a clear and visual manner. Configured statuses for Ticket workflow: Unassigned → Assigned → On Hold → Waiting on Requester → Resolved → Closed Example: Requester raises an IT support ticket. Initially, the status is “Unassigned”. When Ticket is assigned to IT staff, the status changes to “Assigned”, and the choice bar updates dynamically. If additional information is needed, the status moves to “Waiting on Requester”, then “Resolved”, when the Ticket is resolved by IT staff, and finally “Closed”. Configuration steps for choice bar in the helpdesk application Open NITRO Forms designer for the required list. Here it is ‘Ticket’ list. Go to the Helpdesk application -> Administration -> Configure Lists -> ‘Configure Tickets’ -> Crow Canyon NITRO Forms -> Edit the ‘Tickets’ form à Expand ‘Form Controls’ section from the left-hand panel -> Drag and drop ‘Choice Bar’ on top of the form. Sample Settings: 2. After configuring the settings, click ‘Apply’ button -&gt; Publish the NITRO forms. Note: Choice bar can be configured in ‘PortalTicket’ form by following the same steps. Choice bar displayed as ‘Tab: Choice bar displayed as ‘Stepper’: Sample Output: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "767",
    "name": "767 - Coming soon…..html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/767%20-%20Coming%20soon%E2%80%A6..html",
    "title": "Coming Soon….",
    "text": "Coming soon…. - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Coming soon&#8230;. Coming soon&#8230;. 213 views Less than a minute 0 About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "768",
    "name": "768 - Hide Crow Canyon Controls from SharePoint List Ribbon.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/768%20-%20Hide%20Crow%20Canyon%20Controls%20from%20SharePoint%20List%20Ribbon.html",
    "title": "Hide Crow Canyon Controls From SharePoint List Ribbon",
    "text": "Hide Crow Canyon Controls from SharePoint List Ribbon - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Hide Crow Canyon Controls from SharePoint List Ribbon Hide Crow Canyon Controls from SharePoint List Ribbon 205 views 1 min , 25 sec read 0 Applies to : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2019/SharePoint Server Subscription Edition Description SharePoint list ribbon shows Crow Canyon components such as Custom Actions, NITRO Forms, Email Manager, NITRO Workflow, Print Settings, List Print and Item Print for the Crow Canyon NITRO activated sites. In some cases, it is required to hide these components from the list ribbon. This article has steps to hide Crow Canyon controls from the SharePoint list ribbon. By adding custom CSS in Crow Canyon Site Branding, we can hide these Crow Canyon components as needed. Detailed steps Specify custom CSS in Crow Canyon Branding (Modern sites). Navigate to the site -&gt; Click gear icon from the suite navigation bar -&gt; Click ‘Site settings’ from the menu -&gt; Click ‘Crow Canyon Branding (Modern sites)’ under ‘Site Administration’ section -&gt; Paste the following CSS in ‘Extended CSS’ section. CSS for SharePoint Online: &#91;data-automationid^=\"CustomActionNavigationCommand_NITRO Workflow\"], &#91;data-automationid^=\"CustomActionNavigationCommand_NITRO Forms\"], &#91;data-automationid^=\"CustomActionNavigationCommand_Custom Actions\"], &#91;data-automationid^=\"CustomActionNavigationCommand_Email Manager\"], &#91;data-automationid^=\"CustomActionNavigationCommand_Print Settings\"], &#91;data-automationid=\"SpfxCustomActionNavigationCommand_APCOMMAND_1\"], &#91;data-automationid=\"SpfxCustomActionNavigationCommand_APCOMMAND_2\"] { display: none; } This table lists the commands that are used to hide different NITRO controls in SharePoint online. We can hide specific controls or all the controls as needed from SharePoint list ribbon. Command NITRO component [data-automationid^=&#8221;CustomActionNavigationCommand_NITRO Workflow&#8221;] NITRO Workflow [data-automationid^=&#8221;CustomActionNavigationCommand_NITRO Forms&#8221;] NITRO Forms [data-automationid^=&#8221;CustomActionNavigationCommand_Custom Actions&#8221;] Custom Actions [data-automationid^=&#8221;CustomActionNavigationCommand_Email Manager&#8221;] Email Manager [data-automationid^=&#8221;CustomActionNavigationCommand_Print Settings&#8221;] Print Settings [data-automationid=&#8221;SpfxCustomActionNavigationCommand_APCOMMAND_1&#8243;] List Print [data-automationid=&#8221;SpfxCustomActionNavigationCommand_APCOMMAND_2&#8243;] Item Print CSS for SharePoint On-Premises: .CommandBarItem&#91;aria-label=\"Custom Actions\"] { display: none; } .CommandBarItem&#91;aria-label=\"Email Manager\"] { display: none; } .CommandBarItem&#91;aria-label=\"NITRO Forms\"] { display: none; } .CommandBarItem&#91;aria-label=\"Print Settings\"] { display: none; } .CommandBarItem&#91;aria-label=\"List Print\"] { display: none; } .CommandBarItem&#91;aria-label=\"Item Print\"] { display: none; } This table lists the commands that are used to hide different NITRO controls in SharePoint on-premises. We can hide specific controls or all the controls as needed from SharePoint list ribbon. Command NITRO component .CommandBarItem[aria-label=&#8221;NITRO Forms&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } NITRO Forms .CommandBarItem[aria-label=&#8221;Custom Actions&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } Custom Actions .CommandBarItem[aria-label=&#8221;Email Manager&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } Email Manager .CommandBarItem[aria-label=&#8221;Print Settings&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } Print Settings .CommandBarItem[aria-label=&#8221;List Print&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } List Print .CommandBarItem[aria-label=&#8221;Item Print&#8221;] { &nbsp;&nbsp;&nbsp; display: none; } Item Print 2. Save settings. Click ‘Save Settings’ button -&gt; Clear browser cache -&gt; Refresh the SharePoint list. Sample Output: CSS is applied to hide NITRO Forms, Custom Actions and NITRO Workflow from the SharePoint list ribbon. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "769",
    "name": "769 - Auto-fill Email Address Based on User Specified in A Single Line of Text Column in NITRO Forms - Cro.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/769%20-%20Auto-fill%20Email%20Address%20Based%20on%20User%20Specified%20in%20A%20Single%20Line%20of%20Text%20Column%20in%20NITRO%20Forms%20-%20Cro.html",
    "title": "Auto Fill Email Address Based On User Specified In A Single Line Of Text Column In NITRO Forms Cro",
    "text": "Auto-fill Email Address Based on User Specified in A Single Line of Text Column in NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Auto-fill Email Address Based on User Specified in A Single Line of Text Column in NITRO Forms Auto-fill Email Address Based on User Specified in A Single Line of Text Column in NITRO Forms 204 views 1 min , 12 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description ‘ Auto-fill User Information ’ settings in NITRO Forms are configured based on logged-in user or based on a user column. In some cases, it is required to store user name in a single line of text column, instead of a user column and configure auto-fill user information settings based on this column. This can be configured using form event actions in NITRO Forms. This article describes steps to auto-populate user’s email address in a text column based on the user that is stored in a single line of text column. List schema Custom SharePoint list The details of the columns used in this example are as follows: Display Name Internal Name Column Type Manager Manager Single line of text Manager Email ManagerEmail Single line of text Detailed steps Configure two single line of text columns and add them on to the NITRO Form: “Manager” “ManagerEmail” This column is to auto-fill email address of the user whose name is entered in the ‘Manager’ column. 2. Configure a Form Event Action in the NITRO Forms. Navigate to NITRO Forms designer for the list -&gt; Expand ‘Advanced’ section from the left-hand panel -&gt; Form Event Actions -&gt; ‘New Configuration’ as shown below: 3. In the ‘Configure Form Event Action’ window, enable ‘Execute on column value change’ -> Select ‘Manager’ column -> Click ‘New Action’ button -> Select ‘Execute Script’ action. 4. Configure execute script action. Specify script in the ‘Configure Execute Script Action’ and save the action. Script: window.ccs_manager_email = ''; var webURL = window.ccs_g_FormUI.formSetting.WebURL; var managerName = window.ccs_g_FormUI.fetchColumnValueUI(\"Manager\"); var spContext = window.ccs_g_FormUI.SPUtils.Context; if (spContext &amp;&amp; managerName) { var spUser = spContext.get_web().ensureUser(managerName); spContext.load(spUser); spContext.executeQueryAsync( function(){ window.ccs_manager_email = spUser.get_email(); functionCallback(); },function(sender, args){ console.log(\"NITRO Forms: User not resolved - \" + managerName + \". Error: \" + args.get_message()); functionCallback(); } ); } else { functionCallback(); } 5. Configure ‘Update Form Controls’ action and save the settings. Click ‘New Action’ button -&gt; Select ‘Update Form Controls’. Configure new mapping. Map ‘Manager Email’ column with custom script. Script: return window.ccs_manager_email; 6. Publish the NITRO Forms. Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "77",
    "name": "77 - Capture Console Logs for Crow Canyon Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/77%20-%20Capture%20Console%20Logs%20for%20Crow%20Canyon%20Custom%20Actions.html",
    "title": "Capture Console Logs For Crow Canyon Custom Actions",
    "text": "Capture Console Logs for Crow Canyon Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Capture Console Logs for Crow Canyon Custom Actions Capture Console Logs for Crow Canyon Custom Actions 196 views 1 min , 35 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description Custom actions run in the browser. In some cases, it is required to capture custom action logs for the purpose of troubleshooting. Console logs for the custom actions can be captured and stored in a custom list. &nbsp; This article describes steps to capture console logs for a custom action by configuring ‘Execute Script’ action and ‘Add List Item’ action in the same custom action. ‘Add List Item’ action is configured to store logs in a separate custom list. Similarly, we can create or modify any custom action to capture and store the custom action console logs. If multiple actions are configured in a custom action, then we can configure ‘Execute Script’ action and ‘Add List Item’ action at the beginning and at the end of all the actions to ensure that the custom action is completely executed. List schema Custom SharePoint list titled as ‘Console Logs’ with following columns to capture the console logs:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Column display name Column internal name Column type Title Title Single line of text ListName ListName Single line of text ItemID ItemID Single line of text Logs Logs Multiple line of text CustomAction CustomAction Single line of text Execution Execution Single line of text Detailed steps In this example, it is required to capture console logs for an existing custom action.&nbsp; Sample flowchart of the custom action: Configure an empty variable. Edit the required custom action -&gt; Click ‘Variables’ from the ‘CUSTOM ACTION’ ribbon -&gt; Click ‘New Variable’ and configure an empty variable. Variable Name: ‘ConsoleLog’ Default Value: 2. Configure ‘Execute Script’ action. Expand ‘Actions’ section -> Drag and drop ‘Execute Script’ action and place it as the first action on the canvas -> Specify below script in the execute script action. Script: var CLog = JSON.stringify(console.NITROLogs); ccs_setwfvariablevalue(\"ConsoleLog\", CLog); functionCallback(); Note : “ConsoleLog” is the variable name. 3. Configure ‘Add List Item’ action to store the custom action console logs. Drag ‘Add List Item’ action from the ‘Actions’ section and drop it after the ‘Execute Script’ action -> Configure the action as shown below: Column mappings: Column Name Value Expression CustomAction Specify name of the current custom action ItemID [ID|ID] ListName {ListName} Logs ConsoleLog##Value Title [Title|Title] Execution Started (To indicate that these console logs are captured at the beginning of custom action execution.) 4. Configure an execute script action and add list item action same as configured above in #2 and #3 at the end of all the actions configured in the custom action. 5. Configure column mappings in the ‘Add List Item Action’ action as shown below: Column mappings: Column Name Value Expression CustomAction Specify name of the current custom action ItemID [ID|ID] ListName {ListName} Logs ConsoleLog##Value Title [Title|Title] Execution Ended (To indicate that these console logs are captured at the end of custom action execution.) Sample output Console logs are stored in the ‘Console Logs’ list after execution of the custom action on ‘Virtual Machine’ item of ‘Tickets’ list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "770",
    "name": "770 - Capture Console Logs for Crow Canyon Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/770%20-%20Capture%20Console%20Logs%20for%20Crow%20Canyon%20Custom%20Actions.html",
    "title": "Capture Console Logs For Crow Canyon Custom Actions",
    "text": "Capture Console Logs for Crow Canyon Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Capture Console Logs for Crow Canyon Custom Actions Capture Console Logs for Crow Canyon Custom Actions 196 views 1 min , 35 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description Custom actions run in the browser. In some cases, it is required to capture custom action logs for the purpose of troubleshooting. Console logs for the custom actions can be captured and stored in a custom list. &nbsp; This article describes steps to capture console logs for a custom action by configuring ‘Execute Script’ action and ‘Add List Item’ action in the same custom action. ‘Add List Item’ action is configured to store logs in a separate custom list. Similarly, we can create or modify any custom action to capture and store the custom action console logs. If multiple actions are configured in a custom action, then we can configure ‘Execute Script’ action and ‘Add List Item’ action at the beginning and at the end of all the actions to ensure that the custom action is completely executed. List schema Custom SharePoint list titled as ‘Console Logs’ with following columns to capture the console logs:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Column display name Column internal name Column type Title Title Single line of text ListName ListName Single line of text ItemID ItemID Single line of text Logs Logs Multiple line of text CustomAction CustomAction Single line of text Execution Execution Single line of text Detailed steps In this example, it is required to capture console logs for an existing custom action.&nbsp; Sample flowchart of the custom action: Configure an empty variable. Edit the required custom action -&gt; Click ‘Variables’ from the ‘CUSTOM ACTION’ ribbon -&gt; Click ‘New Variable’ and configure an empty variable. Variable Name: ‘ConsoleLog’ Default Value: 2. Configure ‘Execute Script’ action. Expand ‘Actions’ section -> Drag and drop ‘Execute Script’ action and place it as the first action on the canvas -> Specify below script in the execute script action. Script: var CLog = JSON.stringify(console.NITROLogs); ccs_setwfvariablevalue(\"ConsoleLog\", CLog); functionCallback(); Note : “ConsoleLog” is the variable name. 3. Configure ‘Add List Item’ action to store the custom action console logs. Drag ‘Add List Item’ action from the ‘Actions’ section and drop it after the ‘Execute Script’ action -> Configure the action as shown below: Column mappings: Column Name Value Expression CustomAction Specify name of the current custom action ItemID [ID|ID] ListName {ListName} Logs ConsoleLog##Value Title [Title|Title] Execution Started (To indicate that these console logs are captured at the beginning of custom action execution.) 4. Configure an execute script action and add list item action same as configured above in #2 and #3 at the end of all the actions configured in the custom action. 5. Configure column mappings in the ‘Add List Item Action’ action as shown below: Column mappings: Column Name Value Expression CustomAction Specify name of the current custom action ItemID [ID|ID] ListName {ListName} Logs ConsoleLog##Value Title [Title|Title] Execution Ended (To indicate that these console logs are captured at the end of custom action execution.) Sample output Console logs are stored in the ‘Console Logs’ list after execution of the custom action on ‘Virtual Machine’ item of ‘Tickets’ list. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "771",
    "name": "771 - Configure ‘Previous’ and ‘Next’ buttons in NITRO Forms to save the current item and open the previou.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/771%20-%20Configure%20%E2%80%98Previous%E2%80%99%20and%20%E2%80%98Next%E2%80%99%20buttons%20in%20NITRO%20Forms%20to%20save%20the%20current%20item%20and%20open%20the%20previou.html",
    "title": "Configure ‘Previous’ And ‘Next’ Buttons In NITRO Forms To Save The Current Item And Open The Previou",
    "text": "Configure ‘Previous’ and ‘Next’ buttons in NITRO Forms to save the current item and open the previous/next item available in Crow Canyon List View - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure ‘Previous’ and ‘Next’ buttons in NITRO Forms to save the current item and open the previous/next item available in Crow Canyon List View Configure ‘Previous’ and ‘Next’ buttons in NITRO Forms to save the current item and open the previous/next item available in Crow Canyon List View 196 views 2 min , 15 sec read 0 Applies to: SharePoint Online and SharePoint On-Premises Description This article outlines the steps to configure the following buttons using ‘Submit Action’ button with custom JavaScript in the NITRO Forms. The functionality of these buttons is to save the current item, and open the previous/next item form in a popup dialog, that is available in the Crow Canyon List View. &#8216;Next item edit form&#8217;: to open edit form for the next item available in Crow Canyon list view. ‘Previous item edit form’: to open edit form for the previous item available in Crow Canyon list view. ‘Next item display form’: to open display form for the next item available in Crow Canyon list view. ‘Previous item display form’: to open display form for the previous item available in Crow Canyon list view. Note : ‘Launch Form in a Dialog’ setting should be enabled in the Crow Canyon List View configurations to open NITRO Forms in a dialog. Detailed steps &nbsp;&nbsp; &#8216;Next item edit form&#8217; : Configure Submit Action button to open edit form for the next item available in Crow Canyon list view. Navigate to NITRO Forms designer for the list -> Expand ‘Layouts and Theme’ section from the left-hand panel. Under the ‘Buttons’ section, select ‘Hide Save Button’ option to hide default &#8216;Save&#8217; button from the NITRO form. 2. Expand ‘Actions’ section from the left-hand panel -> Drag and drop a ‘Submit Action’ button to the desired position on the form designer, as shown below: 3. Select the dragged Submit Action button -> Configure button settings from the right-hand panel. Button title: &#8220;Next Item Edit Form&#8221;. 4. Click ‘Edit’ button and specify the ‘Pre-Save Process’ script à Click Ok to save the settings. Script: &nbsp; functionCallback(); 5. Under ‘Post Save’, select ‘Execute Script and Redirect’ option for the button -> Click ‘Edit’ button to specify the custom JavaScript, as shown below: Script: functionCallback(false, {\"URLType\": \"nextedit\"}); 6. Click ‘Apply’ button and save the NITRO Forms. ‘Next item display form’ : Configure Submit Action button to open display form for the next item available in Crow Canyon list view. Drag and drop second ‘Submit Action’ button onto the NITRO forms designer -> Configure button settings from the right-hand panel. Button title: &#8220;Next Item Display Form&#8221;. Click ‘Edit’ button and specify the ‘Pre-Save Process’ script -> Click Ok to save the settings. Script: &nbsp; functionCallback(); 3. In the ‘Post Save’ section, select ‘Execute Script and Redirect’ option -> Click ‘Edit,’ and enter the following script: Script: functionCallback(false, {\"URLType\": \"nextdisplay\"}); 4. Click ‘Apply’ button and save the NITRO Forms. ‘Previous item edit form’ : Configure Submit Action button to open edit form for the previous item available in Crow Canyon list view. Drag and drop third ‘Submit Action’ button onto the NITRO forms designer -> Configure button settings from the right-hand panel. Button title: &#8220;Previous Item Edit Form&#8221;. Click ‘Edit’ button and specify the ‘Pre-Save Process’ script -> Click Ok to save the settings. Script: &nbsp; functionCallback(); 3. In the ‘Post Save’ section, select ‘Execute Script and Redirect’ option -> Click ‘Edit,’ and enter the following script: Script: functionCallback(false, {\"URLType\": \"previous\"}); 4. Click ‘Apply’ button and save the NITRO Forms. Previous item display form: Configure Submit Action button to open display form for the previous item available in Crow Canyon list view: Drag and drop forth ‘Submit Action’ button onto the NITRO forms designer -> Configure button settings from the right-hand panel. Button title: &#8220;Previous Item Display Form&#8221;. Click ‘Edit’ button and specify the ‘Pre-Save Process’ script -> Click Ok to save the settings. Script: &nbsp; functionCallback(); 5. In the ‘Post Save’ section, select ‘Execute Script and Redirect’ option -> Click ‘Edit,’ and enter the following script: Script: functionCallback(false, {\"URLType\": \"previousdisplay\"}); 6. Click Ok -> Click ‘Apply’ -> Publish the NITRO Forms. After completing all the steps, the configured buttons will appear as shown below: Additional steps: Configure a Crow Canyon List View for the above list by referring to the application manual . Under the ‘Page Actions’ tab in the Crow Canyon List View, enable ‘Launch Form in a Dialog’ and save the settings. 3. Add this list view webpart on a site page. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "772",
    "name": "772 - Notify the Requester_Sender If They Reply to A Closed Ticket.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/772%20-%20Notify%20the%20Requester_Sender%20If%20They%20Reply%20to%20A%20Closed%20Ticket.html",
    "title": "Notify The Requester Sender If They Reply To A Closed Ticket",
    "text": "Notify the Requester/Sender If They Reply to A Closed Ticket - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Notify the Requester/Sender If They Reply to A Closed Ticket Notify the Requester/Sender If They Reply to A Closed Ticket 192 views 1 min , 14 sec read 0 Applies to : SharePoint Online and On-premises (2013, 2016, 2019 and SE) Application type : NITRO Helpdesk, NITRO Facilities, NITRO Request Management and Customer Service 2020 Description&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A Ticket is closed by the requester from PortalTicket form or a resolved Ticket is auto-closed 3 days after its ‘Resolved Date’. Sometimes, requester replies to the closed Ticket and we need to notify them to open a new Ticket as the old Ticket has been closed. This article has steps to configure a NITRO Workflow to notify the Ticket requester/sender on replying to a ticket that was previously closed. Note: The steps explained below are in relation to the NITRO Helpdesk application. Detailed steps Configure a NITRO Workflow on the ‘Email Tickets’ list. Navigate to the site -> Application Administration -> Crow Canyon NITRO Apps -> NITRO Workflows as shown below: 2. To configure a new workflow in designer experience, click ‘New’ button -> select the ‘List’ as ‘Email Tickets’ and ‘Event’ as ‘an item is modified’. Configure NITRO Workflow on one of the following lists for different applications: Application name List name NITRO Helpdesk Email Tickets NITRO Facilities Email Work Orders NITRO Request Management Email Requests Customer Service 2020 Email Tickets 3. Click ‘Settings’ button from the ‘WORKFLOW’ ribbon -> Enable trigger options as shown below: 4. Click ‘Conditions’ button and specify workflow conditions using the ‘AND’ operator as shown below: The conditions specified in the above screenshot are as follows: Column Name Operator Value Related Ticket ID equal afterchange:[[Any]] Related Ticket ID::Status equal Closed Title contains CaseId Email Type equal Incoming Email 5. Expand ‘Actions’ section from the left-hand panel -> Add a ‘Send Mail’ action to the workflow canvas and configure the action as shown below: Sample mail template: To convert ‘Click here’ text into a hyperlink, select the text -&gt; Click ‘Insert hyperlink’ from the mail body toolbar -&gt; Specify web address using the below syntax: Syntax : ##PortalSiteURL##/SitePages/CCSDisplayForm.aspx?ItemID=[[Related Ticket ID column placeholder]]&amp;FormKey=PortalTicket&amp;WebURL=##BackendSiteURL##&amp;ListID={##TicketsListID##} Example : https://contoso.sharepoint.com/sites/HELPDESK/Portal/SitePages/CCSDisplayForm.aspx?ItemID= [[RelatedTicketID||Related%20Ticket%20ID]]&amp;FormKey=PortalTicket&amp;WebURL=https://contoso.sharepoint.com/sites/HELPDESK&amp;ListID={35fad0a8-eff2-45b5-b920-815cde86512f} 6. Save the send mail action -> Publish the NITRO Workflow. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "773",
    "name": "773 - Create and configure Workspaces in Crow Canyon Applications.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/773%20-%20Create%20and%20configure%20Workspaces%20in%20Crow%20Canyon%20Applications.html",
    "title": "Create And Configure Workspaces In Crow Canyon Applications",
    "text": "Create and configure Workspaces in Crow Canyon Applications - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Create and configure Workspaces in Crow Canyon Applications Create and configure Workspaces in Crow Canyon Applications 186 views Less than a minute 0 Applies to: SharePoint Online and SharePoint On-Premises Description Workspace acts as a centralized location for viewing information related to libraries and lists on a page. The overall process of creating a workspace involves creating a web page and adding the required web parts to that page. The below steps explain the process of creating and configuring a workspace using Crow Canyon NITRO Apps. Steps to create a workspace page For Classic UI Sites Navigate to the SharePoint site -> Site Contents -> Site Pages -> Click ‘New’ button -> Select ‘Web Part Page’ as shown below: 2. Specify details for the new web part page as shown below: 3. We can add required webparts to the page by clicking ‘Add a Web Part’ link from any section of the page. Refer to the below manual links to add different Crow Canyon NITRO web parts to a web part page (classic UI): Crow Canyon NITRO Reports/Report Centre Crow Canyon List Rollup Crow Canyon List View Crow Canyon List Search Crow Canyon Tiles and Dials For Modern UI Sites Navigate to the SharePoint site -> Site Contents -> Site Pages -> Click ‘New’ -> Select ‘Site Page’ as shown below: 2. Specify details for the new site page as shown below: Refer to the below manual links to add different Crow Canyon NITRO web parts to a site page (modern UI): Crow Canyon NITRO Reports/Report Centre : Refer to “To add Report or Report Centre to Modern page” section. Crow Canyon List Rollup Crow Canyon List View Crow Canyon List Search Crow Canyon Tiles and Dials About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "774",
    "name": "774 - Troubleshooting Steps for Crow Canyon Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/774%20-%20Troubleshooting%20Steps%20for%20Crow%20Canyon%20Custom%20Actions.html",
    "title": "Troubleshooting Steps For Crow Canyon Custom Actions",
    "text": "Troubleshooting Steps for Crow Canyon Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting Steps for Crow Canyon Custom Actions Troubleshooting Steps for Crow Canyon Custom Actions 179 views 1 min , 9 sec read 0 Applies to: SharePoint On-Premises Symptom 1 When a ‘Generate Document Action’ is being added to a Custom Action then a UI error message is received as shown below: Cause The above error message is received when the web application (Application Pool Account) account does not have farm admin permissions in the local environment. Resolution Add application pool account to ‘Farm Administrators’ group. a) Navigate to SharePoint Central Administration -> Security -> Users -> ‘Manage the farm administrators group’ as shown below: b) Click ‘New’ -> ‘Add Users’ -> Add the web application account (Application Pool account) to this group. c) Restart the SharePoint Server. If the issue persists after following the steps given in #1 above, then follow the steps given in #2 below. 2. Grant full control permissions to everyone on “Avalon.Graphics” registry key and change impersonation settings in IIS and web.config file. a) Grant full control permissions to everyone on “Avalon.Graphics” registry key by following the below path: i. Open the ‘Run’ command -> Type ‘regedit’ -> Click ok to open ‘Registry Editor’. ii. Navigate to ‘HKEY_CURRENT_USER\\Software\\Microsoft\\Avalon.Graphics’ -> Right-click the ‘Avalon.Graphics’ key -> Click ‘Permissions…’ from the menu as shown below: iii. Click “Add…” -> Grant “Full Control” permissions to “Everyone” as shown below: b) Change impersonation settings in IIS and ‘web.config’ file as below: i. Open ‘Internet Information Services (IIS) Manager’ -> Select the server from left-hand panel -> Expand ‘Sites’ -> Select the web application where the issue is experienced -> Click ‘Authentication’ under IIS section -> Disable ‘Anonymous Authentication’ and ‘ASP.NET Impersonation’ as shown below: To disable the authentication items, right-click the name and click ‘Disable’. Note: In some cases, disabling and then re-enabling the ‘Anonymous Authentication’ can also help in negating the error. ii. Edit ‘web.config’ file of the web application that has this issue in all SharePoint servers in the farm -> Change “aspnet.AllowAnonymousImpoersonation” value to “false” as shown below: Path of the ‘web.config’ file: C:\\inetpub\\wwwroot\\wss\\VirtualDirectories\\&lt;&lt;portnumber&gt;&gt;\\web.config About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "775",
    "name": "775 - Convert text into Hyperlink In the mail template.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/775%20-%20Convert%20text%20into%20Hyperlink%20In%20the%20mail%20template.html",
    "title": "Convert Text Into Hyperlink In The Mail Template",
    "text": "Convert text into Hyperlink In the mail template - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Convert text into Hyperlink In the mail template Convert text into Hyperlink In the mail template 185 views 1 min , 35 sec read 0 Applies To: SharePoint Online and SharePoint On-Premises Description: This article explains the steps to convert text into hyperlink in mail body of the mail template. The hyperlink should open NITRO Form for the related SharePoint list item. In this sample use case, a NITRO Workflow has been configured on the Tickets list with ‘Send Mail’ action that contains a hyperlink in the mail body to open ‘Edit NITRO Form’ of the related item. Note : The steps explained below can be used to configure mail template in NITRO Custom Actions and NITRO Workflows. Detailed Steps: Configure a mail template in the ‘Send Mail’ action in NITRO Workflows. Navigate to the site -> Site settings -> Site Administration -> Crow Canyon NITRO Workflow -> Edit the required workflow -> Drag and drop a ‘Send Mail’ action available under ‘Actions’ section. 2. Specify the action settings as shown below: 3. Configure the mail template. 4. Select the required text to convert into hyperlink -&gt; Click ‘Insert Hyperlink’ from the mail body toolbar -&gt; Specify ‘Web address’ of the Tickets list edit form as shown below: Syntax to specify web address for the modern form experience in modern UI sites: Edit Form: ##Site URL##/SitePages/CCSEditForm.aspx?ListID=##ID of the list used##&amp;ItemID=[[ID||ID]]## Display Form: ##Site URL##/SitePages/CCSDisplayForm.aspx?ListID=##ID of the list used##&amp;ItemID=[[ID||ID]]## New Form: ##Site URL##/SitePages/CCSNewForm.aspx?ListID=##ID of the list used##&amp;ItemID=[[ID||ID]]## Example of modern edit form: https://contoso.sharepoint.com/sites/Helpdesk/SitePages/CCSEditForm.aspx?ListID=6199dd40-00f6-46aa-b707-3b48b5c58f76&amp;ItemID=[[ID||ID]] Note : [[ID||ID]] placeholder will be replaced with the Tickets list item Id during action execution. Refer to this article to get Id of a SharePoint list. Syntax to specify web address for the classic form experience in classic UI sites: Edit Form: ##ListURL##/ccs_EditForm.aspx?ID=&#91;&#91;ID||ID]] New Form: ##ListURL##/ccs_NewForm.aspx Display Form: ##ListURL##/ccs_DispForm.aspx?ID=&#91;&#91;ID||ID]] Example of classic edit form: https:&#47;&#47;contoso.sharepoint.com/sites/Helpdesk/Lists/Tickets/ccs_EditForm.aspx?ID=&#91;&#91;ID||ID]] Note : [[ID||ID]] placeholder with be replaced with the Tickets list item Id during action execution. 5. Save the mail template -> Save the ‘Send Mail’ action settings -> Publish the NITRO Workflow. Sample output of modern edit form Email: On clicking the above highlighted hyperlink, ‘NITRO Edit Form’ of the related Ticket opens in modern form. Sample output of classic edit form Email: On clicking the above highlighted hyperlink, ‘Edit Form’ of the related Ticket opens in classic form. Note: To check the complete execution of the above configured NITRO Workflow, we can use the ‘Debug’ option present as shown below: Select the item with the required ‘ID’ and click ‘Ok’ to initiate the debugging process. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "776",
    "name": "776 - Configure Survey Feature for Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/776%20-%20Configure%20Survey%20Feature%20for%20Tickets.html",
    "title": "Configure Survey Feature For Tickets",
    "text": "Configure Survey Feature for Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure Survey Feature for Tickets Configure Survey Feature for Tickets 181 views 3 min , 13 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes the steps to configure survey feature for taking feedback about service request experience from the requester when their ticket is closed. The requester receives an email when their Ticket is closed, with ‘Satisfied’ and ‘Not Satisfied’ hyperlinks. They can click the link, rate their service request experience and provide additional comments. Note: This article is useful for configuring the survey feature for any application that does not have it by default and for any custom list where survey feature is needed. Summary of steps Create ‘Survey’ list and configure NITRO Forms. Disable ‘Notification on Ticket Completion’ to the requester for service request applications. Configure Survey notifications. Detailed steps Create a custom SharePoint list with name ‘Survey’. Navigate to the site -&gt; Site Contents -&gt; Create a custom list and name it as ‘Survey’ -&gt; Create below columns in the Survey list. Column display name Column internal name Column Type Details Title Title Single line of text Updated using form event actions. Described in this article. Related Ticket RelatedTicket NITRO Lookup column Lookup column pointing to the list for which survey feature needs to be configured. Satisfied? Satisfied Choice (Radio Buttons) Choice options: SatisfiedNot Satisfied Rate&nbsp;your service request experience ServiceRequestExperience NITRO Rating Scale column Described in this article. Additional&nbsp;Comments AdditionalComments Multiple lines of plain text Requester can provide feedback in this column. 2. Configure NITRO Forms for the Survey list. Navigate to NITRO Forms designer for the Survey list -&gt; Create the following NITRO columns: “Related Ticket”: NITRO Lookup column In this example, ‘Related Ticket’ column is pointing to the Tickets list. b. “Satisfied?”: Choice column “Rate your service request experience”: NITRO Rating Scale column c. This column is used to collect user feedback to measure satisfaction of their service request experience. Refer to the manual for more details. Note: The columns used while configuring ‘New Sub Question’ section in the above screenshot are all ‘Single line of text’ columns as shown below: d. Additional Comments: Multiple line of text column e. Drag and drop all the above columns to the NITRO Forms designer. f. ‘Related Ticket’ column will be auto populated in the Survey form. Configure ‘Read’ permissions on this column for everyone by referring to this manual . g. Configure Form event actions. Action 1: Update Related Ticket This action will update ‘Related Ticket’ column value in the Survey form. Configure ‘Update Related Ticket’ update form control values action. Column value mapping: ‘Related Ticket’ -&gt; [Related Ticket|RelatedTicket] Save the form event action. Action 2: GetTicket This action is configured to fetch the related Ticket and update ‘Title’ in Survey list item using Id and title of that Ticket. Configure ‘GetTicket’ fetch list items action. Query builder condition: ID ‘equal’ %%$lookupid([Related Ticket|RelatedTicket])%% Configure ‘Update Title’ update form controls action. Column value mapping: Title -&gt; $strcat(Survey: [CaseId: ,CCSQLGetTicket##[ID|ID],] &#8211; ,CCSQLGetTicket##[Title|Title]) Save the form event action. h. Publish the NITRO Forms. 3. Disable ‘Notification on Ticket Completion’ for the requester in service request applications For service request applications (NITRO Helpdesk, NITRO Facilities, NITRO Request Management and Customer Service 2020), disable notification to the requester on their Ticket completion. Go to Application Administration -&gt; Click ‘Notification on Ticket Completion’ tile from the ‘Notifications’ tab -&gt; Clear ‘Notify Requester’ checkbox as shown below -&gt; Click ‘Save’. 4. Configure Survey Notifications: Configure NITRO Workflow on the Tickets List: Navigate to the Tickets list -&gt; List Settings -&gt; Crow Canyon NITRO Workflow. Configure a workflow on ‘an item is modified’ event. b. Click ‘Settings’ button from the ‘WORKFLOW’ ribbon and configure as shown below: c. Click ‘Conditions’ button and specify the workflow conditions as shown below: Condition: Status ‘equal’ afterchange:Closed d. Add a ‘Send Mail’ action and configure it as shown below: Sample mail template. Convert ‘Satisfied’ text into hyperlink. Satisfied Hyperlink: Web Address: Syntax: &nbsp;[##Portal Site Url##]/SitePages/CCSNewForm.aspx?FormKey=Survey&amp;RelatedTicket=[[Ticket::ID||Ticket::ID]]&amp;Satisfied=Satisfied&amp;WebURL=[##Backend site URL##]&amp;ListID={[Survey List Id]} [[Ticket::ID||Ticket::ID]] : This placeholder will be replaced with actual Ticket list item Id. Example: https://contoso.sharepoint.com/sites/Helpdesk/Portal/SitePages/CCSNewForm.aspx?ListID=dc24ce9a-5d94-48e0-860b-f0a20dbb1813&amp;FormKey=Survey&amp;RelatedTicket=[[ID||ID]]&amp;WebURL=https://contoso.sharepoint.com/sites/Helpdesk&amp;ListID={dc24ce9a-5d94-48e0-860b-f0a20dbb1813} ‘Satisfied’ hyperlink will open the Survey form as shown below Convert ‘Not Satisfied’ text into hyperlink. Web Address: Syntax: [##Portal Site Url##]/SitePages/CCSNewForm.aspx?FormKey=Survey&amp;RelatedTicket=[[Ticket::ID||Ticket::ID]]&amp;Satisfied=Not Satisfied&amp;WebURL=[##Backend site url##]&amp;ListID={[Survey List Id]} Example: https://contoso.sharepoint.com/sites/Helpdesk/Portal /SitePages/CCSNewForm.aspx?FormKey=Survey&amp;RelatedTicket=[[Ticket::ID||Ticket::ID]]&amp;Satisfied=Not Satisfied&amp;WebURL=https://contoso.sharepoint.com/sites/Helpdesk&amp;ListID={3c86335a-d079-43ad-ba19-4f99547aa269} ‘Not Satisfied’ hyperlink will open the Survey form as shown below: Email template configured with direct Survey link The ‘Mail Template’ can be configured as shown below: 2. Convert ‘Survey Link’ text into hyperlink. Syntax: ##Portal site URL##/SitePages/CCSNewForm.aspx?ListID=##Survery list ID##&amp;FormKey=Survey&amp;RelatedTicket=[[ID||ID]]&amp;WebURL=##Backend Site URL##&amp;ListID=##{Survey List ID}## Example: https://contoso.sharepoint.com/sites/Helpdesk/Portal/SitePages/CCSNewForm.aspx?ListID=dc24ce9a-5d94-48e0-860b-f0a20dbb1813&amp;FormKey=Survey&amp;RelatedTicket=[[ID||ID]]&amp;WebURL=https://contoso.sharepoint.com/sites/Helpdesk&amp;ListID={dc24ce9a-5d94-48e0-860b-f0a20dbb1813} 3. Save the send mail action and publish the NITRO Workflow. Sample output of the survey email received after closing the ticket is as shown below: ‘Survey Link’ opens the following survey form. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "777",
    "name": "777 - Configure table properties for the list views added to mail template in NITRO Workflows - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/777%20-%20Configure%20table%20properties%20for%20the%20list%20views%20added%20to%20mail%20template%20in%20NITRO%20Workflows%20-%20Crow%20Canyo.html",
    "title": "Configure Table Properties For The List Views Added To Mail Template In NITRO Workflows Crow Canyo",
    "text": "Configure table properties for the list views added to mail template in NITRO Workflows - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Configure table properties for the list views added to mail template in NITRO Workflows Configure table properties for the list views added to mail template in NITRO Workflows 173 views 2 min , 29 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description List view placeholders can be added to the mail template of ‘Send Mail’ action in NITRO Workflows. By default, list view is printed in the form of a simple table in the email. It is possible to modify table properties by specifying JSON in the mail template. Table properties, such as, table styles that includes background color, text alignment, border width and color; header that includes column styles, cell styles and row styles; rows and alternate rows that include row styles and cell styles, can be specified in ‘Advanced Settings JSON’. Detailed steps Configure a NITRO Workflow with ‘Send Mail’ action and add list views to the mail body. a) Navigate to the Tickets list -> List Settings -> Permissions and Management -> Crow Canyon NITRO Workflow as shown below: b) Click ‘New’ -> Select ‘Designer’ experience -> Event as ‘an item is created’ -> Click OK. c) Enable execution history for the workflow from action settings. d) Configure ‘Send Mail’ action. Expand ‘Actions’ section -> Drag and drop a ‘Send Mail’ action onto the workflow canvas. ‘Send Mail’ action settings. Sample mail template e) Configure table properties for the list views. Scroll down to the bottom of the mail template page and specify the ‘Advanced Settings JSON’ as show below: JSON used in the above screenshot: { \"ViewTable\": { \"TableStyles\": \"background-color: #D6EEEE; width: 50%; text-align: left; border: 3px solid black;\", \"Header\": { \"RowStyles\": \"height: 70px;\", \"CellStyles\": \"padding: 5px; height: 50px; vertical-align: bottom;\", \"ColumnStyles\": { \"LinkTitle\": \"width:100px;\", \"TicketSource\": \"width:90px;\", \"ID\": \"width:60px;\", \"Author\": \"width:100px;\", \"Created\": \"width:100px;\", \"Requester\": \"width:150px;\", \"Priority1\": \"width:100px;\", \"RequestStatus\": \"width:120px;\" } }, \"Rows\": { \"RowStyles\": \"\", \"CellStyles\": \"color:white;\" }, \"AltRows\": { \"RowStyles\": \"background-color: coral;\", \"CellStyles\": \"color: wheat;\" } } } ( #D6EEEE is the code for Light greyish cyan color) f) Publish the NITRO Workflow. Sample output Email: Explanation of the different values used in JSON: Values specified for ‘TableStyles’: background-color: #00bfff : This value is used to specify background color of the table’s cells (#00bfff is Pure Blue). width: 100% : This value is used to specify total width of the table displayed in the scheduled report. text-align: right : This value can be used to align text inside the table cell to ‘right/left/centre’ as needed. border: 5px solid black : This value is used to specify width and color of the table border. Table header: Values specified for table header: For &#8220;RowStyles&#8221;: height: 70px: This value sets the height of header row to 70 pixels. For &#8220;CellStyles&#8221;: padding: 10px: This value applies 10 pixels of padding inside each cell, creating space between the cell content and the cell border. height: 50px: This value sets the height of each cell to 50 pixels. vertical-align: middle; text-align:center This value is used to place the content in centre within the container (both horizontally and vertically). Table row: Column width: Syntax : “Column internal name”: “width:100px;” Example : &#8220;LinkTitle&#8221;: &#8220;width:100px;&#8221; This value specifies width of the ‘Title’ column as 100 pixels to be displayed in the list view. Note: Refer to this article to get internal name of a list column. By default, the column width adjusts dynamically based on the cell contents. To prevent this behaviour and to enforce specified width of the column, ‘table-layout: fixed;’ can be specified in ‘TableStyles’ section as below: &#8220;TableStyles&#8221;: &#8220;background-color: #00bfff; width: 100%; text-align: right; border: 5px solid black; table-layout: fixed;&#8221; Output: Explanation for styling the rows individually: \"Rows\": { \"RowStyles\": \"background-color: #f0f0f0;\", \"CellStyles\": \"color:white;\" } &#8220;Rows&#8221;: This key defines the style that will be applied to the regular (non-header, non-alternate) rows of the table. &#8220;RowStyles&#8221;: This property can be used to style the entire row, such as background color, border, or height. Example: &#8220;RowStyles&#8221;: &#8220;background-color: #f0f0f0;&#8221;, background-color: #f0f0f0; This value sets (#f0f0f0 ) light grey background color for each row. &#8220;CellStyles&#8221;: &#8220;color: black;&#8221; This value is used to specify text color of the cells. It is black in this example. Sample output is shown below: Styling the alternate rows: \"AltRows\": { \"RowStyles\": \"background-color: coral;\", \"CellStyles\": \"color: wheat;\" } &#8220;AltRows&#8221;: This is used to style the alternate rows in a table. &#8220;RowStyles&#8221;: &#8220;background-color: #FFE4C4;&#8221;, This specifies CSS applied to the entire row. In this case, it sets background color of the alternate rows to &#8220;Bisque (#FFE4C4).&#8221; &#8220;CellStyles&#8221;: &#8220;color: #808080;&#8221; This specifies CSS applied to the cells within alternate rows. Here, it sets text color of the cells in those rows to &#8220;grey” (#808080). The output is as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "778",
    "name": "778 - Track who has accessed a list item through NITRO Forms.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/778%20-%20Track%20who%20has%20accessed%20a%20list%20item%20through%20NITRO%20Forms.html",
    "title": "Track Who Has Accessed A List Item Through NITRO Forms",
    "text": "Track who has accessed a list item through NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Track who has accessed a list item through NITRO Forms Track who has accessed a list item through NITRO Forms 179 views 1 min , 52 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes the process for logging email Id of the user who accesses a list item through NITRO display or edit form. The configuration involves creating a Form Event Action (FEA) that triggers when the display or edit form loads. This action records the user’s email ID in a secondary list. This secondary list is monitored by a NITRO Workflow that is configured based on ‘an item is created’ event and includes a ‘Send Mail’ action to notify the recipient about users who have viewed the list item. List schema ‘Requests’: Custom SharePoint list ‘Requests’ list items are tracked in this example. Create ‘Request Logs’ custom SharePoint list Navigate to the Site -&gt; Site contents -&gt; New -&gt; List and create a new list titled ‘ Request Logs ’. Create columns in ‘Request Logs’ list as per the below details: Column Display Name Column Internal Name Column Type Title Title Single line of text Email Address EmailAddress Single line of text Related Ticket ID RelatedTicketID Lookup ‘Related Ticket ID’ column settings: Detailed steps Configure a form event action on the Requests list. Navigate to Requests list -&gt; List Settings -&gt; Permissions and Management -&gt; Crow Canyon NITRO Forms. On the NITRO Forms designer page, expand the ‘Advanced’ section from the left-hand panel -&gt; ‘Form Event Actions’ -&gt; ‘New Configuration’ as shown below: Configure a form event action on form load as shown below: Configure ‘Execute Script’ action. Click ‘New Action’ -&gt; Select ‘Execute Script’ action -&gt; Specify custom JavaScript as shown below: Script: var ccsSPContext = _ccs_FormUI.SPUtils.Context; if(ccsSPContext != null &amp;&amp; ccsSPContext) { var LogsList = ccsSPContext.get_web().get_lists().getByTitle(\"Name_Of_the_logs_list\"); var oListItemCreationInformation = new SP.ListItemCreationInformation(); var oListItem = LogsList.addItem(oListItemCreationInformation); var useremail = _spPageContextInfo.userEmail; var itemId = _ccs_FormUI.listItem.get_id(); oListItem.set_item('Title', 'Accessed List Item'); oListItem.set_item('EmailAddress', useremail); oListItem.set_item('RelatedTicketID', itemId); oListItem.update(); ccsSPContext.load(oListItem); ccsSPContext.executeQueryAsync(function(){ window.ccs_g_FormUI.SetVariableValuebyName(\"varApproverLogItemId\",oListItem.get_id()) functionCallback(); }, function(){ console.log('Failed' + args.get_message() + '\\n' + args.get_stackTrace()); window.alert(\"Something went wrong. Please refersh the form before entering the data.\"); functionCallback(); }); } Save the form event action and publish the NITRO Forms. Configure a NITRO Workflow on ‘Request Logs’ list. Navigate to the ‘Request Logs’ list -&gt; List settings -&gt; Permissions and Management -&gt; Crow Canyon NITRO Workflow -&gt; Configure a NITRO Workflow based on ‘an item is added’ event as shown below: Click ‘Settings’ button from the ‘WORKFLOW’ ribbon and configure as shown below: Expand the ‘Actions’ section and add a ‘Send Mail’ action to the workflow as shown below: Configure the ‘Send Mail’ action as shown below: Sample mail template: Publish the NITRO Workflow. Sample output Navigate to the ‘Requests’ list (list from which the information needs to be tracked) and view or edit an item using NITRO Forms. This will create an entry in the ‘Request Logs’ list using the form event action. Once this entry is created, workflow will send an email to the designated user. An entry gets created in the ‘Request Logs’ list when an item is accessed through NITRO display form by a user: Sample email received: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "779",
    "name": "779 - Send an Email with NITRO form image of an item.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/779%20-%20Send%20an%20Email%20with%20NITRO%20form%20image%20of%20an%20item.html",
    "title": "Send An Email With NITRO Form Image Of An Item",
    "text": "Send an Email with NITRO form image of an item - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Send an Email with NITRO form image of an item Send an Email with NITRO form image of an item 140 views 1 min , 39 sec read 0 Applies To : SharePoint Online and Onprem Note: The “ShowTabs” and “EmailTo” features are not yet available in the On-Premises version. This article will be updated once they are implemented. Description&nbsp;&nbsp; An enhancement has been added to the NITRO Item Print feature, enabling the ability to send an email that includes an image of the item&#8217;s NITRO form. This functionality is implemented using a custom script and allows users to open the email dialog with a single click on the form, streamlining the process of sharing form details via email. Detailed steps: Configure NITRO Form item print template: Go to site contents → navigate to the list, click on list settings → Click on ‘Crow Canyon Print Manager Settings’ under permissions and management Navigate to ‘Manage Item print templates’ tab and click on ‘new Item print template’ 3. Configure the item print template settings as shown below and click on save Configure the button to print the NITRO Form and send an email: Go to site contents → navigate to the list, click on list settings → Click on ‘Crow canyon NITRO Forms’ under permissions and management → Select the form and click on edit Drag and drop ‘script action’ under actions section from the left 3. Click on the button and configure the settings as Configure the general settings as shown below Click on ‘Edit’ beside the process and paste the script from the attachment Script Used above: var listId = window.ccs_g_FormUI.formSetting.ListID; var srcURL = window.ccs_g_FormUI.formSetting.WebURL; var ItemId = (window.ccs_g_FormUI.listItem.get_id ? window.ccs_g_FormUI.listItem.get_id() : window.ccs_g_FormUI.listItem.get_item('ID')); if (CCS_Utility.IsModernNITROAddInsPageExist &amp;&amp; CCS_Utility.IsModernNITROAddInsPageExist(window.ccs_g_FormUI.formSetting.WebURL)) { srcURL += \"/SitePages/NITROAddin.aspx?page=APItemPrint&amp;env=WebView&amp;SPListItemId=\" + ItemId + \"&amp;SPListId=\" + listId; } else { srcURL += \"/CrowCanyonAppsLib/AdvPrint/Pages/ItemPrint.aspx?SPListItemId=\" + ItemId + \"&amp;SPListId=\" + listId; } var objextraSettings = {}; objextraSettings.DataFunction = function (funCallBack) { var objAutoMateData= { \"DefaultTemplate\": \"NITRO Form Template\", \"OpenEmailDialog\": true, \"PrintTabForm\": true, \"ShowTabs\":\"All\", \"ToEmails\": &#91;\"John.smith@crowcanyon365.com\",\"joeb@crowcanyon365.com\"] } objAutoMateData.SelectTabIndex = $(\"#tabStripForm\").data().kendoTabStrip.select().parent().children().index($(\"#tabStripForm\").data().kendoTabStrip.select()) funCallBack(objAutoMateData); }; var iconUrl = 'https://cdn.crowcanyon.com/' + (CCS_Utility._ccs_appIconPath ? CCS_Utility._ccs_appIconPath : \"AppsIcon\") + '/PrintManager/default_Y_36x36.png'; srcURL += \"&amp;IsNITRO=1\"; CCS_Nitro_PopupDialog(\"Crow Canyon Print Manager\", srcURL, iconUrl, 1040, true, \"\", \"\", true, objextraSettings); functionCallback(); Click on ‘Add’ under ‘Permissions’ section and configure the settings as shown below and save it 4. Publish the form and check the results Sample Output: Sample NITRO Form: After clicking &#8216;Send an Email with NITRO form image of an item&#8217; button, below window will pop up Note: if Email address is not provided in script &#8216;EmailTo&#8217; setting, then user can select the email address manually i. Sample Output of Email with All tabs Visible: ii. Sample Output with Active Tab: Email with active tab: iii. Sample Output with ‘None’: Only the contents of active tab will be visible, but tab will not be visible About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "78",
    "name": "78 - Change The Currency Type in NITRO Form Dynamically.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/78%20-%20Change%20The%20Currency%20Type%20in%20NITRO%20Form%20Dynamically.html",
    "title": "Change The Currency Type In NITRO Form Dynamically",
    "text": "Change The Currency Type in NITRO Form Dynamically - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Change The Currency Type in NITRO Form Dynamically Change The Currency Type in NITRO Form Dynamically 114 views 1 min , 33 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In most European countries, the comma is used as a decimal separator to distinguish the integral part of the number from its decimal part. For example, &#8220;Three Hundred Euros and Ten Cents&#8221; is written as 300,10 , with a comma serving as the decimal marker. In contrast, regions outside Europe commonly use decimal for the same amount, writing it as 300.10 . Based on this requirement, this article demonstrates the use of custom JavaScript within form event actions in NITRO Forms to dynamically format the entered amount according to the appropriate currency style. List schema Custom SharePoint list List columns: Column Display Name Column Internal Name Column Type Amount Amount Number Amount Type AmountType Choice &nbsp;Choice options: US DollarEuroOther &nbsp; Amount In Selected Currency AmountInSelectedCurrency Single line of text ‘Amount’ column settings: b. ‘Amount Type’ column settings: Users can select the desired currency format from this column. c. ‘Amount In Selected Currency’ column settings: The value in this column will be auto populated using form event actions. Detailed steps Configure a form event action in the NITRO Forms. Navigate to Crow Canyon NITRO Forms designer for the list -> Drag and drop all the above created columns onto the NITRO Form -> Expand ‘Advanced’ section -> Form Event Actions -> New Configuration as shown below: 2. Configure a FEA on form load and on column value change -> Select &#8220;Amount&#8221; and &#8220;Amount Type&#8221; columns from the drop down. 3. Configure &#8220;Update Form Controls&#8221; action -> Map &#8220;Amount In Selected Currency&#8221; column using custom JavaScript. The JavaScript used above is: var vFundsType = _ccs_FormUI.fetchColumnValueUI(\"AmountType\"); var vAmount = _ccs_FormUI.fetchColumnValueUI(\"Amount\"); var vACHTotal = \"\"; function format (locale, currency, number) { return new Intl.NumberFormat(locale, { style: 'currency', currency, currencyDisplay: \"code\" }) .format(number) .replace(currency, \"\") .trim(); } if(vFundsType == \"Euro\"){ vACHTotal = format('de-DE', 'EUR', vAmount); // 123.456,79 } else { vACHTotal = format('en-US', 'USD', vAmount); //vACHTotal = format('ja-JP', 'JPY', vAmount); // 123,457 } return vACHTotal; Note: Specify internal name of ‘Amount’ and ‘AmountType’ columns in the script. Refer to this article to get internal name of a list column. The script is designed in a way that if the &#8220;Amount Type&#8221; column is set to &#8220;Euro,&#8221; the value in the &#8220;Amount In Selected Currency&#8221; column will be formatted according to the German locale. For the &#8220;US&#8221; option, the value will be formatted in the US locale. If the selected option is &#8220;Other,&#8221; the value will be formatted using the default locale. 4. Save the above configured Form Event Action and publish the NITRO Forms. Sample output: Based on the above configuration, sample output for different currency types is as shown below: For &#8220;Amount Type&#8221; set to “ US Dollars”: For &#8220;Amount Type&#8221; set to “Euros”: For &#8220;Amount Type&#8221; set to &#8220;Other&#8221;: &#8220;Other&#8221; option formats the ‘Amount’ column value using the default format based on site&#8217;s regional settings. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "780",
    "name": "780 - Change The Currency Type in NITRO Form Dynamically.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/780%20-%20Change%20The%20Currency%20Type%20in%20NITRO%20Form%20Dynamically.html",
    "title": "Change The Currency Type In NITRO Form Dynamically",
    "text": "Change The Currency Type in NITRO Form Dynamically - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Change The Currency Type in NITRO Form Dynamically Change The Currency Type in NITRO Form Dynamically 114 views 1 min , 33 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In most European countries, the comma is used as a decimal separator to distinguish the integral part of the number from its decimal part. For example, &#8220;Three Hundred Euros and Ten Cents&#8221; is written as 300,10 , with a comma serving as the decimal marker. In contrast, regions outside Europe commonly use decimal for the same amount, writing it as 300.10 . Based on this requirement, this article demonstrates the use of custom JavaScript within form event actions in NITRO Forms to dynamically format the entered amount according to the appropriate currency style. List schema Custom SharePoint list List columns: Column Display Name Column Internal Name Column Type Amount Amount Number Amount Type AmountType Choice &nbsp;Choice options: US DollarEuroOther &nbsp; Amount In Selected Currency AmountInSelectedCurrency Single line of text ‘Amount’ column settings: b. ‘Amount Type’ column settings: Users can select the desired currency format from this column. c. ‘Amount In Selected Currency’ column settings: The value in this column will be auto populated using form event actions. Detailed steps Configure a form event action in the NITRO Forms. Navigate to Crow Canyon NITRO Forms designer for the list -> Drag and drop all the above created columns onto the NITRO Form -> Expand ‘Advanced’ section -> Form Event Actions -> New Configuration as shown below: 2. Configure a FEA on form load and on column value change -> Select &#8220;Amount&#8221; and &#8220;Amount Type&#8221; columns from the drop down. 3. Configure &#8220;Update Form Controls&#8221; action -> Map &#8220;Amount In Selected Currency&#8221; column using custom JavaScript. The JavaScript used above is: var vFundsType = _ccs_FormUI.fetchColumnValueUI(\"AmountType\"); var vAmount = _ccs_FormUI.fetchColumnValueUI(\"Amount\"); var vACHTotal = \"\"; function format (locale, currency, number) { return new Intl.NumberFormat(locale, { style: 'currency', currency, currencyDisplay: \"code\" }) .format(number) .replace(currency, \"\") .trim(); } if(vFundsType == \"Euro\"){ vACHTotal = format('de-DE', 'EUR', vAmount); // 123.456,79 } else { vACHTotal = format('en-US', 'USD', vAmount); //vACHTotal = format('ja-JP', 'JPY', vAmount); // 123,457 } return vACHTotal; Note: Specify internal name of ‘Amount’ and ‘AmountType’ columns in the script. Refer to this article to get internal name of a list column. The script is designed in a way that if the &#8220;Amount Type&#8221; column is set to &#8220;Euro,&#8221; the value in the &#8220;Amount In Selected Currency&#8221; column will be formatted according to the German locale. For the &#8220;US&#8221; option, the value will be formatted in the US locale. If the selected option is &#8220;Other,&#8221; the value will be formatted using the default locale. 4. Save the above configured Form Event Action and publish the NITRO Forms. Sample output: Based on the above configuration, sample output for different currency types is as shown below: For &#8220;Amount Type&#8221; set to “ US Dollars”: For &#8220;Amount Type&#8221; set to “Euros”: For &#8220;Amount Type&#8221; set to &#8220;Other&#8221;: &#8220;Other&#8221; option formats the ‘Amount’ column value using the default format based on site&#8217;s regional settings. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "781",
    "name": "781 - Print Item Version History from A Version Enabled Multiple Lines of Text Column In an Email - Crow C.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/781%20-%20Print%20Item%20Version%20History%20from%20A%20Version%20Enabled%20Multiple%20Lines%20of%20Text%20Column%20In%20an%20Email%20-%20Crow%20C.html",
    "title": "Print Item Version History From A Version Enabled Multiple Lines Of Text Column In An Email Crow C",
    "text": "Print Item Version History from A Version Enabled Multiple Lines of Text Column In an Email - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Print Item Version History from A Version Enabled Multiple Lines of Text Column In an Email Print Item Version History from A Version Enabled Multiple Lines of Text Column In an Email 115 views Less than a minute 0 Applies to: &nbsp;Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description This article describes steps to print version history of a multiple lines of textcolumn with &#8220;Append Changes to Existing Text&#8221; in an email. This is useful for tracking updates made over time in fields like comments, logs, notes, etc. &#8216;Worklog&#8217; column from the Tickets list in Helpdesk application is taken as an example in this article. All the updates made to the ‘Worklog’ column, including content of each update, who made it, and when it was added, will be printed in the email. Detailed steps Create ‘Worklog’ column and add it on to the NITRO Form. Navigate to NITRO Forms designer for the Tickets list -> Create ‘Worklog’ column -> Add it on to the form -> Publish the NITRO Forms. Column Internal Name Column Display Name Column Type Worklog Worklog Multiple lines of text (‘Append Changes to Existing Text’ enabled) 2. Configure a NITRO Workflow with Send Mail action on the Tickets list. Navigate to ‘NITRO Workflow’ from the Tickets list ribbon -> Click ‘New’ -> Select the event as needed. Configure the ‘Send Mail’ action. Syntax to print version history of a multiline column: [[VersionHistory:ColumnInternalName||ColumnDisplayName]] Example: [[VersionHistory:Worklog||Worklog]] Sample mail template: 3. Save the mail template and the Send Mail action -> Publish the NITRO workflow. Sample worklog of a Ticket: Version history of the above Ticket Sample output About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "782",
    "name": "782 - Troubleshooting NITRO Studio GCC High installation issues.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/782%20-%20Troubleshooting%20NITRO%20Studio%20GCC%20High%20installation%20issues.html",
    "title": "Troubleshooting NITRO Studio GCC High Installation Issues",
    "text": "Troubleshooting NITRO Studio GCC High installation issues - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Troubleshooting NITRO Studio GCC High installation issues Troubleshooting NITRO Studio GCC High installation issues 100 views 1 min , 27 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online &#8211; GCC Environment Description This article lists the fixes for common issues in NITRO Studio GCC High installation. Symptom 1 On executing a NITRO Custom Action, an error message as stated below is received: ‘One or more NITRO script files are not up to date. Please clear browser cache files, reopen the site, and try again.’ The issue persists even after clearing the browser’s cache. Cause One of the CDN script files has not been updated properly when applied using NITRO Studio tool. Resolution Upload the&nbsp;required file manually into CDN and purge. Following are the steps to deploy specific file(s) from the CDN package in to Azure portal CDN web application manually. In this example, we are updating “CCS_CustomActionsV3.js” script file manually. Detailed steps: Navigate to the path containing NITRO Studio setup file in the Azure Virtual Machine (generally it is ‘C:\\CrowCanyon\\NITROSetup’). 2. Open ‘C:\\CrowCanyon\\NITROSetup\\Working\\CDN.zip\\CustomActionsV2\\Script’ folder. Copy ‘CSS_CustomActionsV3.js’ file to a temporary location. 3. Navigate to Azure portal -> App Services -> Open the CDN web application that was created for ‘NITRO Apps (CDN)’ as a part of the original setup and copy the URL as shown below: 4. Edit the URL copied from #3 above: Add ‘.scm’ before ‘.azurewebsites’ For example, if the copied URL in #3 is https://nitroappsoct25.azurewebsites.us then the modified URL will be https://nitroappsoct25.scm.azurewebsites.us 5. Open the modified URL in Google Chrome browser. This will open the environment details page. 6. From the ‘Debug console’ menu at the top, select ‘CMD’ as shown below: 7. A page displaying a grid will open on selecting the ‘CMD’ option. On that page, select ‘Site’ as shown below: 8. Navigate to ‘site/wwwroot/CustomActionsV2/Scripts’ location. In this location, all the script files will be visible. Among these script files, there will be ‘CCS_CustomActionsV3.js’ that needs to be replaced by the file copied in #2. 9. Drag and drop “CCS_CustomActionsV3.js” file saved into temporary location in #2 into the grid as shown below: 10. Open the Azure portal from the browser -> Open “CDN Profiles” -> Open the Crow Canyon CDN profile created as part of the original setup -> Click “ Purge ” button in the ribbon -> Select CDN end point created as part of the original setup in “Endpoint” dropdown -> Check “Purge all” checkbox -> Click “ Purge ” button. Wait until this step is completed successfully. 11. Once the purge is completed, clear the browser’s cache -> Restart the browser -> Open the site and try executing the NITRO Custom Actions. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "783",
    "name": "783 - Restrict Number Of Users Selection In A Multiple Selections Enabled Person Or Group Column In NITRO.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/783%20-%20Restrict%20Number%20Of%20Users%20Selection%20In%20A%20Multiple%20Selections%20Enabled%20Person%20Or%20Group%20Column%20In%20NITRO.html",
    "title": "Restrict Number Of Users Selection In A Multiple Selections Enabled Person Or Group Column In NITRO",
    "text": "Restrict Number Of Users Selection In A Multiple Selections Enabled Person Or Group Column In NITRO Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Restrict Number Of Users Selection In A Multiple Selections Enabled Person Or Group Column In NITRO Forms Restrict Number Of Users Selection In A Multiple Selections Enabled Person Or Group Column In NITRO Forms 91 views 2 min , 27 sec read 0 Applies to:&nbsp; Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In SharePoint list, it is directly not possible to restrict the number of users that can be selected in multiple selections enabled person or group column. This can be achieved using form event actions in NITRO Forms. Sample use case: The configuration explained in this article is performed based on the following scenario: When the ‘Project’ column value (which is a NITRO lookup column) is selected, then the value in ‘Max People Allowed’ column is automatically filled as per the auto-fill lookup data column mappings. When users are selected in the ‘People’ column, the count of these users is automatically filled in ‘People Count’ column using first Form Event Action. The value in ‘People Count’ column is then matched with the value in ‘Max People Allowed’ column using custom JavaScript. Based on the conditions specified in custom JavaScript, background colour of the ‘People Count’ column is changed to Red, Green, or Yellow, using custom JavaScript that is configured in the second Form Event Action. Validation is configured on the ‘People’ column that checks if ‘People Count’ column value matches with the value in ‘Max People Allowed’ column. If the validation fails, the form cannot be submitted. List schema Custom SharePoint list. Columns: Column Display Name Column Internal Name Column Type Title Title Single line of text Project Project NITRO Lookup People People Person or Group (multiple selections are allowed) People Count PeopleCount Single line of text Max People Allowed MaxPeopleAllowed Single line of text Max Allowed Resources MaxAllowedResources Single line of text column in the lookup list ‘Project’ column settings: ‘People’ column settings: Detailed steps Configure two form event actions in the NITRO Form: For counting the number of users/people selected in the ‘People’ column. For updating the background colour of ‘People Count’ column. Navigate to NITRO Forms designer for the list -> Add all the columns, configured above, onto the form. To configure the Form Event Actions, expand the ‘Advanced’ section from left-hand panel -> ‘Form Event Actions’ -> ‘New Configuration’. Configure the first form event action ‘Count number of people’ to execute on form load and on ‘People’ column value change. 4. Configure ‘Update Form Controls’ action, click ‘New Mapping’ as shown below: 5. Map ‘People Count’ column -> Select ‘Format Value using JavaScript’ as shown below: Script: return window.ccs_g_FormUI.fetchColumnValueUI(\"COLUMN_INTERNAL_NAME\", false, true).length; Note : Replace ‘COLUMN_INTERNAL_NAME’ with internal name of the ‘People’ column. Refer to this article to get internal name of a list column. 6. Similarly, configure the second form event action ‘Assign Colour’ to execute on form load and on ‘People Count’ and ‘Max People Allowed’ column value change. 7. Configure the ‘Execute Script’ action as shown below: Script: var PeopleCount = window.ccs_g_FormUI.fetchColumnValueUI(\"COLUMN_INTERNAL_NAME_FOR_PEOPLE/GROUP_COLUMN\") || 0; var MaxPeople = window.ccs_g_FormUI.fetchColumnValueUI(\"COLUMN_INTERNAL_NAME_FOR_MAXIMUM_PEOPLE_ALLOWED_COLUMN\") || 0; var color = \"\"; if (PeopleCount === 0 || PeopleCount &lt; MaxPeople) { color = \"red\"; } else if (PeopleCount === MaxPeople) { color = \"green\"; } else if (PeopleCount > MaxPeople) { color = \"yellow\"; } $(\"#CCSPeopleCountStyle\").remove(); if (color) { var cssText = \"#row_PeopleCount .ccs_ColumnControl{background-color: \" + color + \"}\"; var style = document.createElement('style'); style.type = 'text/css'; style.id = \"CCSPeopleCountStyle\"; if (style.styleSheet) { style.styleSheet.cssText = cssText; } else { style.appendChild(document.createTextNode(cssText)); } $(\"head\").append(style); } functionCallback(); Note: Replace ‘COLUMN_INTERNAL_NAME_FOR_PEOPLE/GROUP_COLUMN’ with internal name of the ‘People Count’ column. Replace ‘COLUMN_INTERNAL_NAME_FOR_MAXIMUM_PEOPLE_ALLOWED_COLUMN’ with internal name of the ‘Max People Allowed’ column. Configure validation: To configure validation on the ‘People’ column, select the column -> Expand ‘Validations’ section from the column settings panel -> Click ‘Add’ -> Configure validation as shown below: Column validation condition: ‘People Count’ “not equal” ‘MaxPeopleAllowed’ Note : ‘Read’ permissions can be configured on the ‘Max People Allowed’ column as it is auto-filled and should not be updated manually. Refer to this article to configure column permissions. Sample output: Lookup list: Maximum resources allowed in ‘Task 1’ are ‘2’. Sample output showing ‘Green’ background colour and successful validation for ‘Task 1’ is as below: Validation configured on the ‘People’ column fails as the value in ‘People Count’ column is less than the value in ‘Max People Allowed’ column. As a result, the background colour of ‘People Count’ column changes to ‘Red’ as shown below: If the value in ‘People Count’ column is more than the value in ‘Max People Allowed’ column, then the background colour of ‘People Count’ column changes to ‘Yellow’ as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "784",
    "name": "784 - Implement Parent-Child relationship in Tickets.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/784%20-%20Implement%20Parent-Child%20relationship%20in%20Tickets.html",
    "title": "Implement Parent Child Relationship In Tickets",
    "text": "Implement Parent-Child relationship in Tickets - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Implement Parent-Child relationship in Tickets Implement Parent-Child relationship in Tickets 78 views 2 min , 45 sec read 0 Applies to : Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In IT helpdesk application, parent-child relationship in tickets is a way to link multiple related tickets together in a hierarchical structure. This means one &#8220;parent&#8221; ticket represents a main issue or request, and several &#8220;child&#8221; tickets are created to address specific sub-issues, tasks, or related inquiries that contribute to the resolution of the parent. This article describes steps to implement ‘Parent-child’ relationship between the items in Tickets list. Child Ticket will be closed when it is merged into the parent ticket. List schema Display Name Internal Name Column Type ID ID Default ID column in the SharePoint list Parent Ticket ParentTicket NITRO Lookup Column Child Ticket ChildTicket NITRO Associated Items Column Is Parent Ticket IsParentTicket Yes/No column with default value as ‘No’ Work Log WorkLog NITRO Discussion Column The name of all these columns can be changed as per the requirement. Detailed steps Configure above columns in the Tickets list Navigate to Crow Canyon NITRO Forms for the Tickets list -> Click ‘Create Column’ from the ‘FORM’ ribbon -> Click ‘NITRO Lookup Column’ and configure the ‘Parent Ticket’ column as shown below: 2. Create a ‘Yes/No’ type column and name it as ‘Is Parent Ticket’ with ‘No’ as default value. Note: It is not required to add this column to the NITRO Forms as it will be used only for the condition(s) mentioned in subsequent steps below. 3. Create a ‘NITRO Associated Items Column’ titled ‘Child Tickets’ and configure it as shown below: Click ‘Ok’ to save the configuration and add this column onto the NITRO Form. 4. Configure permissions for the ‘Child Tickets’ column such that it remains hidden for the child item(s) and is visible for the parent items. To configure permissions, select ‘Child Tickets’ column -&gt; Expand ‘Permissions’ section from column settings panel -&gt; Click ‘Add’ and configure settings as shown below: Configure ‘Hide’ permission for ‘Everyone’. Configure ‘Show/Write’ permission for everyone. Add a condition to show this column only when the value of ‘Is Parent Ticket’ column is equal to ‘Yes’. 5. Check ‘Apply permissions by dynamically evaluating condition while the form is running’ setting -> Click ‘Apply’. 6. Publish the NITRO Forms. Configure a Custom Action for establishing ‘Parent – Child’ relationship between the Tickets: Navigate to Tickets list -> Click ‘Custom Actions’ from the list ribbon -> Click ‘New Custom Action’ -> Select ‘Tickets’ list -> Select ‘Designer’ experience -> Click ‘Ok’. Flowchart of the custom action: 2. Define an empty variable : Click ‘Variables’ from the ‘CUSTOM ACTION’ ribbon -> Click ‘New Variable’. Variable name -&gt; Value ‘ParentCaseId’ -&gt; (‘Default Value’ is empty) 3. ‘Parent Ticket Search’ Query List (Search) Action: Expand ‘Actions’ section from the left-hand panel -> Drag and drop ‘Query List (Search)’ action onto the canvas and configure as shown below: The ‘Grid Settings’ for this action can be configured as shown below: The ‘Variable Mappings’ for this action can be configured as shown below: Mapping: VarParentTicket -&gt; Select Parent Ticket##[ID|ID] 4. ‘Select Parent Ticket’ update item action: Drag and drop an ‘Update List Item’ action onto the canvas and configure as shown below: The above shown columns are mapped using expression builder as shown below: ‘Parent Ticket’ column mapping using expression builder: ‘Work Log’ column mapping using expression builder: ‘Status’ column mapping using expression builder: 5. ‘Update WorkLog in Parent Ticket’ update list item action: Add another ‘Update List Item’ action. Run this action for the ‘Lookup’ column ‘Parent Ticket’. Columns are mapped using expression builder as shown below: ‘Work Log’ column mapping: For ‘Work Log’ column in the parent ticket to specify details of the merged child ticket: ‘Is Parent Ticket’ column mapping: To set the value of ‘Is Parent Ticket’ column to ‘Yes’ for the selected parent ticket: 7. Expand ‘Events and Controls’ section from left-hand panel -> Drag and drop ‘Gateway’ control onto the canvas as shown in the flowchart above: 8. Configure ‘Gateway’ settings as shown below: 9. Drag and drop ‘Send Mail’ action onto the canvas. This is configured to notify ‘Assigned Staff’ of the parent ticket (if ‘Assigned Staff’ is not empty) when a child ticket is merged with the parent ticket as shown below: Sample mail template: Example: Navigate to the Tickets list -> Open the Ticket display form that needs to be linked/merged to the parent ticket -> Execute the ‘Merge Ticket’ custom action. Ticket List data: 2. Search for the required ticket that should be selected as the parent ticket. 3. After selecting the parent ticket, the custom action will execute successfully as shown below: Sample Output: In the above example, after successful execution of the custom action, child ticket’s ‘Work Log’ column value is updated, and the ‘Parent Ticket’ column value is set to the selected parent ticket. Title and Id of the parent ticket are mapped to the child ticket as shown below: Parent ticket’s ‘Work Log’ column value is updated. ‘Child Tickets’ associated column shows the child ticket merged with this parent ticket as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "785",
    "name": "785 - Address Lookup Column Rendering Issue With Large Data in Standard SharePoint List Forms - Crow Canyo.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/785%20-%20Address%20Lookup%20Column%20Rendering%20Issue%20With%20Large%20Data%20in%20Standard%20SharePoint%20List%20Forms%20-%20Crow%20Canyo.html",
    "title": "Address Lookup Column Rendering Issue With Large Data In Standard SharePoint List Forms Crow Canyo",
    "text": "Address Lookup Column Rendering Issue With Large Data in Standard SharePoint List Forms - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Address Lookup Column Rendering Issue With Large Data in Standard SharePoint List Forms Address Lookup Column Rendering Issue With Large Data in Standard SharePoint List Forms 76 views 1 min , 6 sec read 0 Applies to: SharePoint On-Premises Issue In standard SharePoint forms, if a lookup column has to load a large amount of data, then it throws the below error message: “System.InvalidOperationException: Error during serialization or deserialization using the JSON JavaScriptSerializer. The length of the string exceeds the value set on the maxJsonLength property.”&nbsp;&nbsp; Cause This error occurs when the amount of data being serialized into a JSON string by the JavaScriptSerializer exceeds its default or configured maxJsonLength limit. (SharePoint uses JavaScriptSerializer to communicate data between the server and the client by facilitating the exchange of data in JSON format.) Resolution Increase &#8216;MaxJsonLength&#8217; property to its maximum value for the SharePoint web application. Refer to this article for details. Note: The maximum characters allowed in JSON output are 2,097,152 (2 MB). If even after performing the steps mentioned in above article does not resolve the issue, then it means that the data in lookup column exceeds the maximum limit permitted in the web application. In such a case, below solutions can be performed: Solution 1: Perform the archival functionality in any Crow Canyon Application: Archival feature moves old list items to the corresponding archived lists. This feature if not enabled by default, can be configured by referring to the below article: Archival functionality in Crow Canyon Application &#8211; Crow Canyon Software Support Solution 2 : As a workaround, hide the lookup column (containing large data) in default ‘Content Type’ of the list. To hide the lookup column in a content type, navigate to the list -> List settings -> Advanced Settings -> Select ‘Yes’ for ‘Allow management of content types?’ -> Click ‘Ok’ to save the settings. On the list settings page, click the default content type. ‘Item’ is the default content type in this example. In the opened page, select the lookup column (that has large data) -> select the option ‘Hidden (Will not appear in the forms)’ -> Click ‘Ok’. Solution 3: Upgrade to Crow Canyon NITRO Studio. Please contact&nbsp; Sales@crowcanyon.com for the upgrade. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "786",
    "name": "786 - Avoid SharePoint Version Conflict Error in NITRO Forms Using Background Monitoring - Crow Canyon Sof.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/786%20-%20Avoid%20SharePoint%20Version%20Conflict%20Error%20in%20NITRO%20Forms%20Using%20Background%20Monitoring%20-%20Crow%20Canyon%20Sof.html",
    "title": "Avoid SharePoint Version Conflict Error In NITRO Forms Using Background Monitoring Crow Canyon Sof",
    "text": "Avoid SharePoint Version Conflict Error in NITRO Forms Using Background Monitoring - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Avoid SharePoint Version Conflict Error in NITRO Forms Using Background Monitoring Avoid SharePoint Version Conflict Error in NITRO Forms Using Background Monitoring 65 views 2 min , 18 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019/SharePoint Server Subscription Edition Description In SharePoint, version conflict error occurs when multiple users or processes attempt to update the same item simultaneously. In Crow Canyon applications, this error typically occurs if automated process (like NITRO Workflows, Crow Canyon Product App, etc.) updates the system-managed columns (such as Case ID, SLA fields, etc.) at the same time when a user is editing that item manually. To handle and avoid such conflicts, NITRO Forms provide an advanced background monitoring feature. This feature ensures smoother user experience and conflict resolution. Steps to enable background monitoring in NITRO Forms: Navigate to Application Administration → Configure Lists → Configure Tickets → Crow Canyon NITRO Forms → Manage Forms → Advanced Settings à Enable background monitoring settings as shown below: Under the ‘Background Item Update’ section, enable ‘Monitor item update in background’. Set an appropriate ‘Background update monitor interval’ (example, 10 seconds ): NITRO form will check for background updates made to an item as per this time interval. Form Reload : It has two options &#8211; 1. Manual: NITRO Form will be reloaded by the user manually. Below setting is visible if this option is selected: &#8211; ‘Allow overwriting background update changes’: If this setting is enabled, then in case of an update to item by another user or process in background, current user is allowed to overwrite with their changes to the NITRO Form. 2. Automatic: If this option is selected, then the changes will be applied to an item automatically based on the selected reload option. ‘Reload Option’ has three options: &#8211; Keep Background Changes: For columns modified by user and also by background update, column value will be set as per changes done in background update. For columns modified only by user or only by background save, latest value will be set. &#8211; Keep User Changes: For columns modified by user and also by background update, column value will be set as per user changes. For columns modified only by user or only by background save, latest value will be set. &#8211; Discard User Changes: All changes done by user on the form will be discarded and item will be reloaded as per changes done in the background save. Publish the NITRO Forms. Conflict resolution options displayed to users: When version conflict occurs, NITRO Forms will prompt the user with following action buttons to resolve the update: Discard my changes → The changes made by current user will be discarded. Item will reload with the most recent updates from other user/background process. Keep my changes → If two users or current user and automated process modified the same columns, the current user’s changes will be saved. All other columns will be updated with the latest values. Keep background changes → If two users or current user and automated process modified the same columns, the other user’s (background) changes will be kept. All other columns will reflect the latest values. Enabling background item monitoring helps avoid version conflict error in NITRO Forms proactively. It ensures better user collaboration and prevents data loss. Example with manual form load: Settings for ‘Background Item Update’: Selected manual form reload. Joe Bloggs updates and saves the item while John Smith is attempting to make changes at the same time. As a result, the following version conflict error message is displayed to John Smith. Clicking the ‘Reload’ option will present John Smith with three choices to manually reload the form based on the selected option as shown below. If John Smith selects &#8220; Keep background changes &#8220;, then background changes will be applied to the column values that were modified by John Smith and by the background process. If John Smith selects &#8220; Keep my changes &#8221; option, then the column values updated by John Smith will be set for the columns updated by both the users and Joe Bloggs&#8217; changes will be discarded. For columns updated only by John Smith and only by Joe Bloggs, latest values will be set. If John Smith selects &#8220; Discard my changes &#8221; option, then the column values updated by Joe Bloggs will be set. All the changes made by John Smith will be discarded. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "787",
    "name": "787 - Disable ‘HTML Text – Crow Canyon’ SPFx Web Part At Tenant Level.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/787%20-%20Disable%20%E2%80%98HTML%20Text%20%E2%80%93%20Crow%20Canyon%E2%80%99%20SPFx%20Web%20Part%20At%20Tenant%20Level.html",
    "title": "Disable ‘HTML Text – Crow Canyon’ SPFx Web Part At Tenant Level",
    "text": "Disable ‘HTML Text – Crow Canyon’ SPFx Web Part At Tenant Level - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Disable ‘HTML Text – Crow Canyon’ SPFx Web Part At Tenant Level Disable ‘HTML Text – Crow Canyon’ SPFx Web Part At Tenant Level 62 views 1 min , 12 sec read 0 Applies to: SharePoint Online Description In a modern SharePoint site, web parts present meaningful content. However, in some cases, SharePoint administrators may need to disable a specific web part. This article explains how to disable ‘HTML Text—Crow Canyon’ SPFx web part at the tenant level. Points to note: Before proceeding to disable any of the web parts, below points should be considered: Only SharePoint administrators can govern this setting. Web parts utilizing third-party services can be disabled. If disabled, web parts previously added on the page will not be rendered. Detailed steps To disable the web part, it is required to know its GUID. If GUID of the web part is unknown and the web part has not yet been added to a page, then it must first be added to a site page to retrieve the GUID before it can be disabled. Note: If the web part has been already added to a page but the GUID is not known, proceed directly to #5. 2. To add web part to a site page, navigate to the page and click ‘Edit’ as shown below: 3. When the page is opened in ‘Edit’ mode, click ‘+’ sign available on the page to add a web part and search for ‘HTML Text &#8211; Crow Canyon’ as shown below: 4. Select the above shown web part to add it to the page and then re-publish the page. 5. Open the web part in maintenance mode by appending “ ?maintenancemode=true ” at the end of page URL as shown below: 6. Select ‘HTML Text – Crow Canyon’ web part displaying all the details as shown below: 7. Click “Copy data” button to copy summary of the web part and paste it in notepad. ‘Id’ parameter highlighted in the above image represents GUID of the ‘HTML Text – Crow Canyon’ web part. 8. Remove “ ?maintenancemode=true ” from the end of site page URL to leave the maintenance mode. 9. For disabling ‘HTML Text – Crow Canyon’ web part, execute the below command in PowerShell: Set-SPOTenant -DisabledWebPartIds 24d191de-0f3c-4b58-99d6-d1d58efd9fa4 Note: The web part(s) can be disabled at tenant level and cannot be selectively disabled on a particular SharePoint site. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "788",
    "name": "788 - NITRO Workflows Execution Logs.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/788%20-%20NITRO%20Workflows%20Execution%20Logs.html",
    "title": "NITRO Workflows Execution Logs",
    "text": "NITRO Workflows Execution Logs - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / NITRO Workflows Execution Logs NITRO Workflows Execution Logs 71 views 3 min , 41 sec read 0 Applies to: Crow Canyon NITRO activated sites in: SharePoint Online and On-Premises 2013/2016/2019 Description NITRO Workflows execution logs provide information about how and when the workflows run. These logs are very useful for troubleshooting. Execution logs for a workflow can be accessed from: Logs Button CCSWFHistory_ListName_Number (Selected workflow execution history list) CCSWFHistory_ListName_Common (Common workflow execution history list) This article describes the following about workflow execution history lists: Enable execution logs for the workflows Workflow execution history lists Reusing same history list for multiple workflows on a list Navigating to workflow execution history list Managing items in this list Enable execution logs for the workflows To enable execution logs for a workflow: Navigate to the site -&gt; Site settings -&gt; Site Administration -&gt; ‘Crow Canyon NITRO Apps’ -&gt; ‘NITRO Workflows’ -&gt; Edit the required workflow and scroll down to “Workflow execution history settings” section. Select “Enable execution history” and choose the history list from “Select history list” drop-down. Execution history logs can be enabled while configuring a new workflow or by editing an existing workflow. Workflow execution history lists Enabling execution history for a workflow will create two workflow execution history lists in the site. CCSWFHistory_Tickets_1 CCSWFHistory_Tickets_Common Note: In this article, execution history is enabled for the workflows that are configured on the Tickets list. CCSWFHistory_Tickets_1 It is the main workflow execution history list. All the detailed execution logs are created in this list when a workflow is executed. Users can debug the workflows by reading the debug log and execution logs created in this list. There can be different history lists for workflows configured on the same list. CCSWFHistory_Tickets_Common It is a common logs list that is created to store execution history of all the workflows configured on the Tickets list. There is only one common workflow execution history list that gets created for a list. Difference between a specific logs list and common logs list In common logs list, after its creation, logs for all the workflows configured for a list are saved, even though some workflows configured on that list have not enabled execution history. The specific logs list, selected in workflow execution history settings, store detailed logs for that workflow. Both the lists are useful for checking workflow logs. For example, there are four workflows configured on a list, only two of them have enabled execution history. The common logs list store logs for all four workflows, whereas specific logs list store logs for those two workflows that have enabled the execution history. Columns used in both the workflow execution history lists: Title: The item title is displayed as ‘Workflow Name – Item ID – Workflow Status’. Workflow Name: Name of the workflow Item ID: Specifies item id on which the workflow is executed Workflow Status: Specifies execution status of the current workflow. Item: This is the lookup column pointing to that item on main list on which the workflow is executed. Status: Specifies the status of workflow execution. Below are the possible status options. Success: Represents that the workflow executed successfully. Fail: Represents that the workflow execution failed. Flow Name: Name of the workflow. Flow ID: Specifies Id of the workflow. Event Type: Event on which the workflow has been triggered. Example, timer based, item added, etc. Event Trigger: ‘Event triggered by’ related information is stored in this column. An event can be triggered by the logged in user or by an automated process. Start Time: The time when workflow execution begins. End Time: The time when workflow execution completes. Executed By: By whom is this workflow executed. This column contains logged in username for the event-based workflows, if it is a timer-based workflow then this column is left blank and if the workflow is executed by automated process, then it contains ‘SharePoint App’. Execution Log: This column contains execution logs for the workflow. It contains brief information about the workflow such as ‘Workflow ID’, ‘Name’, ‘List’, ‘Workflow Status’, etc. Debug Log: This column contains detailed logs for the workflow and are useful for troubleshooting. Reusing same history list for multiple workflows on a list It is possible to reuse same history list to store logs for multiple workflows configure on the same SP list. All the history lists for that list are available in “Select history list” drop-down along with the new list. If multiple workflows are configured on a list, either an existing logs list (‘CCSWFHistory_Workflow Tickets_1’) or new logs list (‘CCSWFHistory_Workflow Tickets_2 (New)’) can be selected to store logs for the workflow as needed. Name of the existing logs list is shown as: CCSWFHistory_List Name_List Number Example: CCSWFHistory_Workflow Tickets_1 Name of the new logs list is shown as: CCSWFHistory_List Name_List Number (New) Example: CCSWFHistory_Workflow Tickets_2 (New) Navigating to workflow execution history list There are three ways to navigate to the logs list: Navigate to ‘Crow Canyon NITRO Workflows’ main page. This page shows all the workflows for the current site. Click ‘Logs’ button for the required workflow. ‘Workflow Logs’ dialog appears. If execution history is enabled for the workflow, then link to log lists ‘Execution logs are stored in SharePoint lists for this workflow:’ is shown. First list is the selected logs list for this workflow, and second list is the common logs list. 2. Go to ‘Site Contents’ and access the required logs list. 3. Edit the required NITRO Workflow -&gt; Navigate to ‘Workflow execution history settings’ section -&gt; Click the navigation arrow next to the selected history list. Managing items in this list In SharePoint, there is a limit to not retrieve more than 5000 items at a time in a single view, to overcome performance issues while retrieving items from a large SharePoint list. Following are the ways to overcome list view threshold and manage items in the history list: Delete the current selected history list if it exceeds list view threshold limit and select new list to store logs for the workflow. This does not affect execution of the workflow. Navigate to ‘Site Contents’ -&gt; Search for the required logs list -&gt; Click ECB next to the list name -&gt; Click ‘Delete’. Edit the workflow and select new history list to store further logs. Navigate to the NITRO Workflows main page -&gt; Edit the required workflow -&gt; Select new history list from ‘Select history list’ dropdown. Note: We can skip #1a. and directly follow #1b., that is, edit the workflow and select new history list to store workflow logs without deleting the previous list. 2. Delete bulk list items using PowerShell. For more information, please refer this article . About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "789",
    "name": "789 - AI Connection Settings in NITRO Site Settings.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/789%20-%20AI%20Connection%20Settings%20in%20NITRO%20Site%20Settings.html",
    "title": "AI Connection Settings In NITRO Site Settings",
    "text": "AI Connection Settings in NITRO Site Settings - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / AI Connection Settings in NITRO Site Settings AI Connection Settings in NITRO Site Settings 33 views 2 min , 44 sec read 0 Applies to : SharePoint Online Description In NITRO Site Settings, the AI Connection Settings allow user to configure and manage connections to various AI services. Here’s a brief overview of how to set up these connections: Accessing AI Connection Settings: 1. Open NITRO Site Settings and locate “AI Connection Settings.” Creating a New AI Connection: Click “New AI Connection” and fill in connection details. Fill in the required details such as the connection name, service type, and API key. The API key is a unique authentication token provided by the AI service provide r. Supported Connection Types: &#8211; Azure OpenAI: Access OpenAI’s language models like GPT-4. &#8211; Open AI: An OpenAI connection integrates OpenAI’s powerful AI models into applications and workflows for tasks like text generation, language translation, and more. &#8211; Document Intelligence: Extract text and data from documents using machine learning. &#8211; Azure AI Search: Support information retrieval over vector and textual data. Testing and Saving: 1. Test the connection after entering details. 2. Save the settings when the connection is verified. These settings enable NITRO Studio to leverage AI capabilities effectively. AI connection settings are used across Nitro Workflows and Copilot. This article explains how to configure AI Connections in NITRO Site Settings. Pre-requisites: Users generally need an Azure subscription to set up and use Azure services. User needs permission to create Azure resources and to deploy models for Azure Open AI. Please refer to this article for more details on Azure Services: Instructions to create Azure Services &#8211; Crow Canyon Software Support AI Connections in NITRO Site Settings Connections are a way to authenticate and consume both Microsoft and other resources within your Azure AI Studio projects. Below are the supported connection types in NITRO copilot. Connection Type Description Azure Open AI Azure OpenAI Service provides REST API access to OpenAI&#8217;s powerful language models including GPT-4o, GPT-4 Turbo with Vision, GPT-4, GPT-3.5-Turbo, and Embeddings model series. Open AI OpenAI is a cloud-based platform that allows developers to access a variety of models hosted by OpenAI, configure and submit prompts to said models and use their generative outputs in automations. Document Intelligence AI Document Intelligence is an AI service that applies advanced machine learning to extract text, key-value pairs, tables, and structures from documents automatically and accurately. Azure AI Search Azure AI Search is an Azure resource that supports information retrieval over your vector and textual data stored in search indexes. To configure the connections in NITRO Studio, go to the site -> Site Settings -> Crow Canyon NITRO Site Settings -> Expand “AI Connection Settings” and configure the connections as shown below: Azure Open AI Connection Settings: Name: Specify the connection name. Service Type: Select the type of service you are using from the dropdown. API Key: Enter the API key provided by the service provider. API key is a unique authentication token that grants access to the AI service capabilities, including text generation and natural language processing. API key value can be accessed from the settings of the Azure Open AI resource in the Azure portal. Completions Model: Enter the name of the Completion Model provided by the service provider. Models can be added to the Azure Open AI resource from the Azure portal. The completion model generates text based on the input provided, utilizing advanced natural language processing capabilities. Example: gpt -35-turbo. Embedding Model: Enter the name of the Embedding Model provided by the service provider. Models can be added to the Azure Open AI resource from the Azure portal. The Embedding Model transforms text into numerical representations (embeddings) that capture semantic meaning and context. Endpoint: Enter the endpoint URL provided by the service provider. This endpoint serves as the gateway for making API requests to utilize advanced AI capabilities such as text generation and natural language processing. Endpoint URL value can be accessed from the settings of the Azure Open AI resource in the Azure portal API Version : Enter the API Version provided by the service provider. Open AI Connection Settings These details can be accessed from your Open AI subscription settings. Document Intelligence AI Connection Settings For document intelligence AI connection, users need Azure AI services multi-service account. API key and Endpoint value can be accessed from the corresponding resource in Azure portal. Azure AI Search Connection Settings API Key (Admin): Enter your Admin API key to authenticate and authorize administrative tasks and configurations for Azure API search. This key grant access to manage indexes, query settings, and other administrative functions within your Azure API Search service. API key can be accessed from the settings of the Azure AI Search resource in the Azure portal. API Key (Query): Enter your Query API key to authenticate and authorize queries made to Azure API search. This key allows access to perform search operations and retrieve search results from your Azure API Search service. API key can be accessed from the settings of the Azure AI Search resource in the Azure portal. About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "79",
    "name": "79 - Calculate Embeddings Custom Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/79%20-%20Calculate%20Embeddings%20Custom%20Action.html",
    "title": "Calculate Embeddings Custom Action",
    "text": "Calculate Embeddings Custom Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Calculate Embeddings Custom Action Calculate Embeddings Custom Action 30 views 1 min , 31 sec read 0 Applies to : SharePoint Online Description An embedding is a numerical format of a text that represents its meaning. It converts words or sentences into floating-point numbers so that computers can understand and compare their meanings. Embeddings are especially useful during search. When a user types a query, the system calculates the embedding for that query and compares it with the embeddings of Knowledge Base (KB) articles. If the distance between them is small, it means the meanings are similar. The closer the match, the higher the article ranks in the results. In NITRO Helpdesk, we use Custom Actions to: Calculate the embedding for each KB article. Store this embedding in a column in the KB list. Use this stored embedding to help the KB Copilot return more accurate and relevant answers. This article explains how to configure: The Calculate Embeddings action These actions work together to make KB articles searchable using natural language and improve the Copilot&#8217;s response quality. In this sample use case, we have used a ‘Knowledge Base’ list and below is the list of columns required for this configuration. Column Name Column Type Use in NITRO Copilot Title Single line of text &nbsp; Wiki Content Enhanced rich text Will be used as search column in NITRO copilot Embeddings Multiple line of text-Plain In this sample, use case we have used ‘SharePoint and Embedding Search’ and this column is used to store embedding values Checksum Single line of text Will use this column to store checksum values Please refer below article to set up AI Connection. AI Connection Settings in NITRO Site Settings &#8211; Crow Canyon Software Support Configure Calculate Embeddings Custom Action Navigate to Helpdesk Application -&gt; Application Administration in Top Link bar -&gt; Advanced Section in left side -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Click Custom Actions -&gt; Select list -&gt; Drag and drop Calculate Embeddings custom action under Actions section to the designer part Action: Calculate Embeddings Drag and drop ‘Calculate embeddings’ action as shown below General Settings: provide action name, action description and delay execution. Embeddings Settings: AI Connection: This dropdown will show all AI connections configured in NITRO site settings. select the AI Connection as required. Click arrow link to configure new connection. Search Text Column(s): Select the column(s) for which embeddings has to be calculated. This will be the column where KB article text is stored. Embeddings Column: Select the multi-line text column to store the embedding value. MD5 Checksum Column: Select the single-line text column to store the checksum of the search text column(s). A checksum is used to detect changes in search content, and embedding is recalculated only if the content has changed. When a knowledge base article is added, embeddings are calculated as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "790",
    "name": "790 - Calculate Embeddings Custom Action.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/790%20-%20Calculate%20Embeddings%20Custom%20Action.html",
    "title": "Calculate Embeddings Custom Action",
    "text": "Calculate Embeddings Custom Action - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Calculate Embeddings Custom Action Calculate Embeddings Custom Action 30 views 1 min , 31 sec read 0 Applies to : SharePoint Online Description An embedding is a numerical format of a text that represents its meaning. It converts words or sentences into floating-point numbers so that computers can understand and compare their meanings. Embeddings are especially useful during search. When a user types a query, the system calculates the embedding for that query and compares it with the embeddings of Knowledge Base (KB) articles. If the distance between them is small, it means the meanings are similar. The closer the match, the higher the article ranks in the results. In NITRO Helpdesk, we use Custom Actions to: Calculate the embedding for each KB article. Store this embedding in a column in the KB list. Use this stored embedding to help the KB Copilot return more accurate and relevant answers. This article explains how to configure: The Calculate Embeddings action These actions work together to make KB articles searchable using natural language and improve the Copilot&#8217;s response quality. In this sample use case, we have used a ‘Knowledge Base’ list and below is the list of columns required for this configuration. Column Name Column Type Use in NITRO Copilot Title Single line of text &nbsp; Wiki Content Enhanced rich text Will be used as search column in NITRO copilot Embeddings Multiple line of text-Plain In this sample, use case we have used ‘SharePoint and Embedding Search’ and this column is used to store embedding values Checksum Single line of text Will use this column to store checksum values Please refer below article to set up AI Connection. AI Connection Settings in NITRO Site Settings &#8211; Crow Canyon Software Support Configure Calculate Embeddings Custom Action Navigate to Helpdesk Application -&gt; Application Administration in Top Link bar -&gt; Advanced Section in left side -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Click Custom Actions -&gt; Select list -&gt; Drag and drop Calculate Embeddings custom action under Actions section to the designer part Action: Calculate Embeddings Drag and drop ‘Calculate embeddings’ action as shown below General Settings: provide action name, action description and delay execution. Embeddings Settings: AI Connection: This dropdown will show all AI connections configured in NITRO site settings. select the AI Connection as required. Click arrow link to configure new connection. Search Text Column(s): Select the column(s) for which embeddings has to be calculated. This will be the column where KB article text is stored. Embeddings Column: Select the multi-line text column to store the embedding value. MD5 Checksum Column: Select the single-line text column to store the checksum of the search text column(s). A checksum is used to detect changes in search content, and embedding is recalculated only if the content has changed. When a knowledge base article is added, embeddings are calculated as shown below: About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "791",
    "name": "791 - Document Intelligence Custom Actions.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/791%20-%20Document%20Intelligence%20Custom%20Actions.html",
    "title": "Document Intelligence Custom Actions",
    "text": "Document Intelligence Custom Actions - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Document Intelligence Custom Actions Document Intelligence Custom Actions 32 views 3 min , 22 sec read 0 Applies to : SharePoint Online Description Document Intelligence action is required to extract the content of the documents and save them in a target location which is further used by copilot. Pre-requisites: Users generally need an Azure subscription to set up and use Azure services. User needs permission to create Azure resources and to deploy models for Azure Open AI. Please refer below article to create Azure Services: Instructions to create Azure Services &#8211; Crow Canyon Software Support Copilot can work with different data sources; prerequisites vary based on the type of data source that is used to generate the answers. Please refer below article to set up Document Intelligence Connection. AI Connection Settings in NITRO Site Settings &#8211; Crow Canyon Software Support Configuration of Document Intelligence Action List used: ‘Knowledge Base’ list in Helpdesk application Knowledge Base’ list stores all the documents. Document Intelligence action is required to extract the content of the documents and save them in a target location. Target location can be ‘Current Item’, ‘Variable’, ‘Azure AI Search’ or a’ SharePoint List’. The following Custom Action is configured on the ‘Knowledge Base’ list in the NITRO Helpdesk application Navigate to Helpdesk Application -&gt; Application Administration in Top Link bar -&gt; Advanced Section in left side -&gt; Crow Canyon NITRO Apps -&gt; Crow Canyon NITRO Studio -&gt; Click Custom Actions -&gt; Select list -&gt; Drag and drop Document Intelligence custom action under Actions section to the designer part Action settings: General Settings: Enter an action name and select execution status whether to show or hide this action from user during execution. This does not affect action execution, it only changes the visibility to the user. Content Settings: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Operations: Add/Update Content :This option adds/Update the content from Knowledge Base list in target location for the copilot Remove Content: This option removes the content so that content is not used in copilot. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Content Source: Select the source of the content, either a document or any multi-line text column. If custom action is configured on a custom list, it will ask for a file name for the document option. Content Columns : One or more columns selected for processing and indexing. Strip HTML : Option to remove HTML tags from column content before processing. Document Intelligence Settings: AI Connection: Select the Document Intelligence connection configured in NITRO Site Settings. If no connection is configured yet, click the plus ‘+’ icon to configure one. This column will be visible only when Content Source is selected as ‘Document’ in Content Settings section. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Split Document: select ‘yes’ if you want to split the document. The ‘Chunk Size’ and ‘Chunk Overlap’ columns will be visible if the split document is selected. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Chunk Size: The entered number will show the maximum number of characters in each chunk of the document after splitting. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Chunk Overlap: It determines how much chunks overlap with each other. It is used to give continuity and preserve the meaning of text in the chunks. Target Settings: Select Target: Choose where the data extracted from the documents should be stored. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Current Item: Use this option to extract the content from the document and put it in some multi-line text column of the current item for later use. This option will be disabled in the case of the Split Document option because it is not possible to store multiple document data in single target column. In current item, we can store data from one document in target column. Creating multiple columns to store multiple documents data is not a valid option as the target ‘Text column’ doesn’t support the selection of multiple columns. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set in Variable: This option can be used in scenarios where the user wants to extract the data from the document and store it in a variable. The variable can then be used for example to send data by email by send mail action template. This option will be disabled in the case of the Split Document option. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Azure AI Search: Use this option to store the data extracted from documents in Azure AI Search as an index. When a user makes a query, NITRO copilot will use the index to give more relevant results. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SharePoint List: Use this option to store the data extracted from a document in a multi-line text column of a list. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Embeddings AI Connection: Select the Embeddings AI connection configured in NITRO Site Settings. If no connection is configured yet, click the plus ‘+’ icon to configure one. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Azure AI Search Connection: Select the Azure AI Search connection configured in NITRO Site Settings. If no connection is configured yet, click the plus ‘+’ icon to configure one. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Azure AI Search Index: Select the search index from the dropdown. For more information please refer Document Intelligence documentation &#8211; Quickstarts, Tutorials, API Reference &#8211; Azure AI services | Microsoft Learn About supportTeam View all posts by supportTeam &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "9",
    "name": "9 - SharePoint pie chart_ Label Column Error.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/9%20-%20SharePoint%20pie%20chart_%20Label%20Column%20Error.html",
    "title": "SharePoint Pie Chart Label Column Error",
    "text": "SharePoint pie chart: Label Column Error - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint pie chart: Label Column Error SharePoint pie chart: Label Column Error 845 views Less than a minute 0 Instead of the pie chart view, the screen shows &#8220;Label column error: &lt;name of column&gt;&#8221;. This means that the column in the error was removed or is missing from the All Items view of Tickets List, which is the view that is used in the My Ticket Status Chart Web Part. Check that the column is in the All Items view of the Tickets List. If not, add that field to the All Items view of the Tickets list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "98",
    "name": "98 - SharePoint pie chart_ Label Column Error.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/98%20-%20SharePoint%20pie%20chart_%20Label%20Column%20Error.html",
    "title": "SharePoint Pie Chart Label Column Error",
    "text": "SharePoint pie chart: Label Column Error - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint pie chart: Label Column Error SharePoint pie chart: Label Column Error 845 views Less than a minute 0 Instead of the pie chart view, the screen shows &#8220;Label column error: &lt;name of column&gt;&#8221;. This means that the column in the error was removed or is missing from the All Items view of Tickets List, which is the view that is used in the My Ticket Status Chart Web Part. Check that the column is in the All Items view of the Tickets List. If not, add that field to the All Items view of the Tickets list. About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "99",
    "name": "99 - SharePoint — first field cannot be typed in.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/99%20-%20SharePoint%20%E2%80%94%20first%20field%20cannot%20be%20typed%20in.html",
    "title": "SharePoint — First Field Cannot Be Typed In",
    "text": "SharePoint — first field cannot be typed in - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / SharePoint &#8212; first field cannot be typed in SharePoint &#8212; first field cannot be typed in 844 views Less than a minute 0 &nbsp; ISSUE: When adding a new ticket or contact, users are unable to type in the first field. If they move the cursor to another field then back to the first field, they can then begin typing. This doesn&#8217;t happen in Firefox but the enterprise is set up with Internet Explorer and IE users have to do this with every ticket. SOLUTION: For this we have work around as mentioned below. a. Go to List Settings for the Ticket list b. Create a dummy field (column) in ticket list. Name can be &#8220;Dummy Field&#8221; and it is a field type of &#8220;Single line of text&#8221; 3. Make the newly created Dummy Field as first column as mentioned below. Click on Item content type. Click on Column order Change “position from top” for Dummy field to 1 About supportTeam View all posts by supportTeam &rarr; Leave a Reply Cancel reply You must be logged in to post a comment. © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  },
  {
    "id": "Comprehensive list of Functions in NITRO Studio.html",
    "name": "Comprehensive list of Functions in NITRO Studio.html",
    "url": "https://amalinpf.github.io/postfalls-nitro-reference/kb-html/Comprehensive%20list%20of%20Functions%20in%20NITRO%20Studio.html",
    "title": "Comprehensive List Of Functions In NITRO Studio",
    "text": "Comprehensive list of Functions in NITRO Studio - Crow Canyon Software Support --> Support Homepage Community Forum Submit a Support Ticket CrowCanyon.com Website Version Release Notes Home / Comprehensive list of Functions in NITRO Studio Comprehensive list of Functions in NITRO Studio 4306 views 15 min , 2 sec read 2 Applies To: SharePoint On-premises (2013/2016/2019/SharePoint Server Subscription Edition) and SharePoint Online Description: This article and related articles describe the syntax and examples of the functions that are available in NITRO Custom Actions and NITRO Workflow components. Related articles: S. No . Article Link 1 Function: GetGroupMembers and Join 2 Function: Get Column Value For Version 3 Comprehensive List Of Functions In NITRO Studio – 2 4 Function: Format Value 2 5 Function: Append in NITRO Workflows and Custom Actions Functions available in both NITRO Custom Actions and NITRO Workflows: $add(DateTimeField,TimeSpan) This function performs the sum of two values or adds a given time span to a date time object. Syntax: Column Value: $add(ColumnValue,ColumnValue) Column name: $add(([ColumnDisplayName|ColumnInternalName]),Days:Hours:Minutes:Seconds) Query List: $add(QuerylistActionName##ColumnInternalName,ColumnValue) Variable: $add(WFActionName##ColumnInternalName,ColumnValue) Example Column Value &#8211; $add(97, 3) Output: 100 Column name &#8211; $add([Due Date|DueDate],2:0:0:0) Due Date: 12/2/20 Output: 12/4/20 Query List &#8211; $add(GetPurchaseItem##Price,100) GetPurchaseItem##Price: $1000 Output: $1100 WF Variable &#8211; $add(WFaction##Price,[TaxAmount|TaxAmount]) WFaction##Price: $1000 Tax Amount: $80 Output: $1080 Note: Source and Target columns should be of type Number, currency or Date Time. $addmonths(DateTimeField,Number) This function adds a given number of months to a date time. Syntax $addmonths([ColumnDisplayName|ColumnInternalName],Value) Example $addmonths([Due Date|DueDate],5) Due Date: 12/2/20 Output: 5/2/21 $addmonths([Due Date|DueDate],-5) Due Date: 12/2/20 Output: 7/2/20 Note: Target field should be a Date Time column. $calcbusinesstime(DateTimeField,TimeSpan) This function adds business time to a given date time. Business time configuration is read from site regional settings. Go to site settings -&gt; site administration -&gt; Regional settings to check the existing business time and days setup for the site. Syntax Column Name: $calcbusinesstime([ColumnDisplayName|ColumnInternalName],Days:Hours:Minutes:Seconds) Example Created: 12/2/20 $calcbusinesstime([Created|Created],5:0:0:0) Output: 12/9/20 Note: Target column should be a Date Time column $calcdate(DateTimeField,TimeSpan) This function adds specified period to a date time object. Syntax $calcdate([ColumnDisplayName|ColumnInternalName],number, Days/Weeks/Months/Years) Example Due date: 12/2/20 $calcdate([Due Date|DueDate],5,Months) Output: 5/2/21 $calcdate([Due Date|DueDate],-5,Days) Output: 07/2/20 Note: Works with only Date Time columns. $divide([value/placeholder],[value/placeholder]) This function divides the first value by the second value. The arguments can be either direct values or placeholders of column values from the SharePoint list item. Syntax Column Value:&nbsp; $divide(ColumnValue,ColumnValue) Column name:&nbsp; $divide(([ColumnDisplayName|ColumnInternalName]), ([ColumnDisplayName|ColumnInternalName])) Query List:&nbsp; $divide (QuerylistActionName##ColumnInternalName,ColumnValue) Variable:&nbsp; $divide (WFActionName##ColumnInternalName,ColumnValue) Examples $divide(100/25) Output: 4 $divide([Total Cost|TotalCost],3) Total Cost: 30 Output: 10 $divide(Var1##value,Var2##value) Var1##value: 30 Var2##value: 3 Output: 10 $firstitem([ID|ID]) This function is used in Query List actions to capture the first item ID in an item collection and store this in a variable. This allows for running iterative loops through queried items to get beyond the 100-item query limit. Used in conjunction with $lastitem([ID|ID]) and variables. Syntax QueryListName##$firstitem([ID|ID]) $formatvalue(placeholder) This function returns the given lookup or user column display value. This strips out the leading information that SharePoint adds to Person or Group columns, e.g. “22;#James Restivo” Syntax $formatvalue([Placeholder]) Example Requester: 22;#James Restivo $formatvalue([Requester|Requester]) Output: James Restivo Supported Columns in Parameters: lookup, person or group. More than two parameters can be used in this function. Note: Target column type should be string. $jsonpath2([Value/placeholder],JsonPath) This function is similar to $jsonpath() defined further below in the documentation. $jsonpath gets the output as array of objects whereas $jsonpath2() directly gives us the element from the array. First Argument possible parameters: Literal/Custom Value: Syntax: $jsonpath2(any valid json object,@jsonpath) Other column value (Place holder of current item) Syntax: $jsonpath2([placeholder],@jsonpath) Other column value (Place holder of query list action executed prior to this) Syntax: $jsonpath2(QuerylistActionName##Field placeholder,@jsonpath) Variable value Syntax: $jsonpath2(VariableName##Value,@jsonpath) Detailed Examples with output Example My JSON object input for this example: {&#8220;MovieDatabase&#8221;: { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;movie&#8221;: [{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;name&#8221;: &#8220;The Change-Up&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;genre&#8221;: &#8220;comedy&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;director&#8221;: &#8220;David Dobkin&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;Facebook_like&#8221;: 252 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;name&#8221;: &#8220;Rise of the Planet of the Apes&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;genre&#8221;: &#8220;SciFi&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;director&#8221;: &#8220;Rupert Wyatt&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;Facebook_like&#8221;: 472 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } } Expression: $jsonpath2(JSON object, @$.MovieDatabase.movie[*].director) Output: David Dobkin,Rupert Wyatt $lastitem([ID|ID]) This function is used in Query List actions to capture the last item ID in an item collection and store this in a variable. This allows for running iterative loops through queried items to get beyond the 100-item query limit. Used in conjunction with $firstitem([ID|ID]) and variables. Syntax QueryListName##$lastitem([ID|ID]) $lookupid(placeholder) This function returns the given lookup/user column’s ID. This is used to compare ID values of lookup items. For instance, by comparing a lookup value on one item to the lookup value on another item you can verify that it is the same value. Syntax $lookupid([ColumnDisplayName|ColumnInternalName]) Example Requester: #22;James Restivo $lookupid([Requester|Requester]) Output: 22 $parselookupvalue(lookup column value) This function is used in column mappings (create/update item) to set the value for a lookup column. The function will try to get the item from lookup list with the text value given as parameter and returns the first item matching that value. The output is the same as the argument you add to the function, however, this will allow you to add a string of text to set the lookup column. Otherwise, you’ll need to add in the leading information that SharePoint adds. For instance, to set a Category value you could directly use “#1;Hardware Problem” in the column mapping. With this function, though, you can use “Hardware Problem” in the argument to get the same thing. Syntax: Column Value: $parselookupvalue(LookupColumnValue) Column name: $parselookupvalue([ColumnDisplayName|ColumnInternalName]) Query List: $parselookupvalue(QuerylistActionName##ColumnInternalName) Variable: $parselookupvalue(VarCCS1##value) Example Column value &#8211; $parselookupvalue(Calendar) Column name &#8211; $parselookupvalue([Title|Title]) Query list placeholder &#8211; &#8220;$parselookupvalue(ConfigurationItem##Title)&#8221; Variable placeholder &#8211; &#8220;$parselookupvalue(UsersVariable##Value)&#8221; Note: This function is only used in field mappings and the target column should be a lookup column. $parsemetadatavalue() This function is used in column mappings (create/update item) to set the value for a Managed Metadata column. The function will try to set value for Managed Metadata column with the text value given as parameter and returns the first item matching that value. Syntax: Column Value: $ parsemetadatavalue(MetadataValue) Column Name: $ parsemetadatavalue([ColumnDisplayName|ColumnInternalName]) Query List: $ parsemetadatavalue(QuerylistActionName##ColumnInternalName) Variable: $ parsemetadatavalue(VariableName##value) Example $ parsemetadatavalue(Calendar) Output: Calendar Note: This function is only used in field mappings and the target column should be a Managed Metadata column. $parseuservalue(value) This function is used in column mappings (create/update item) to set the value for a user column. The function will try to ensure user from web i.e, we will try to resolve the user based on the parameter provided in the function. Syntax $parseuservalue(User Display Name/Alias/Email Address) Example $parseuservalue( james@contoso.com ) Output: James Restivo Note: This function can be used only in field mappings and the target field should be User field. $product([value/placeholder],[value/placeholder]) This function performs the product of (multiplies) two values. Syntax: Column Value:&nbsp; $product(ColumnValue,ColumnValue) Column name:&nbsp; $product(([ColumnDisplayName|ColumnInternalName]), ([ColumnDisplayName|ColumnInternalName])) Query List:&nbsp; $product(QuerylistActionName##ColumnInternalName,ColumnValue) Variable:&nbsp; $product(VariableName##value,ColumnValue) Example Column Value &#8211; $product (25, 5) Output: 125 Column name &#8211; $product([Price|Price],[Quantity|Quantity]) Price: $1200 Quantity: 4 Output: $4800 Query List &#8211; $product(GetPurchaseItem##Price,2) GetPurchaseItem##Price: $1200 Output: $2400 Variable &#8211; $product(VarCCS1##value,5) VarCCS1: $500 Output: $2500 Note: The values used in the function should be number values or should be resolved to numbers and target column should be number or currency field $querylistactionname##$count(placeholder) This function performs the count operation on values returned from parameters. This can only be used on query list action to count the values from multiple items. Syntax QuerylistActionName##$count([ColumnDisplayName|ColumnInternalName]) Example GetPurchaseItem##$count([Cost|Cost]) $regextract([value/placeholder],@expression) This function is used to extract a pattern value from a string using regex expression. Syntax $regextract([ColumnDisplayName|ColumnInternalName],@expression) Example $regextract([Subject|Subject],@.*\\[CaseId: (.+)\\].*) Subject: Printer broken [CaseId: 2] Output: 2 $split(separator,[value/placeholder])&nbsp; This function splits the string to a collection of strings using the separator. Syntax $split(separator,[ColumnDisplayName|ColumnInternalName]) Example $split(:,[Title|Title]) Input: Title: Re: Custom Actions NITRO Studio Output: [&#8220;Re&#8221;,&#8221;Custom Actions NITRO Studio&#8221;]​ $split(@,[Requester|Requester]) Input: Requester: james.restivo@contoso.com Output: [“james.restivo”, “contoso.com”] $strcat(TextField,TextFieldsOrValues) This function performs concatenation on given parameter values. Syntax: Column Value: $strcat(ColumnValue,ColumnValue) Column name: $strcat((ColumnDisplayName | ColumnInternalName),ColumnValue/([ColumnDisplayName|ColumnInternalName])) Query List: $strcat(QuerylistActionName##ColumnInternalName,ColumnValue) Variable: $strcat(WFActionName##ColumnInternalName,ColumnValue) Example Column Value &#8211; $strcat(Crow Canyon ,rocks) Output: Crow Canyon rocks Column name &#8211; $strcat([Title|Title], new) Title: Request for PTO Output: Request for PTO new Query List &#8211; $strcat(GetPurchaseItem##Price,100) WF Variable &#8211; $strcat(WFaction##Title,[Title|Title]) Note: Target column should be a text or Multi Line text column. This function accepts more than two parameters. $strlen(value) This function returns the length of the specified parameter return value. Syntax: Column Value: $strlen(LookupColumnValue) Column name: $strlen([ColumnDisplayName|ColumnInternalName]) Query List: $strlen(QuerylistActionName##ColumnInternalName) Variable: $strlen(WFActionName##ColumnInternalName) Example Column value &#8211; $strlen(crowcanyon) Output: 9 Column name &#8211; $strlen([Title|Title]) Query list place holder &#8211; &#8220;$strlen(ConfigurationItem##Title)&#8221; WF variable place holder &#8211; &#8220;$strlen(UsersVariable##Value)&#8221; Note: Target column should be number/currency/text. $subtract(NumberField,Number) This function is used to subtract two values or subtract a given time span from a date time object. Syntax: Column Value: $subtract(ColumnValue,ColumnValue) Column name: $subtract (([ColumnDisplayName|ColumnInternalName]),Days:Hours:Minutes:Seconds) Query List: $subtract(QuerylistActionName##ColumnInternalName,ColumnValue) Variable: $subtract(WFActionName##ColumnInternalName,ColumnValue) Example Column Value &#8211; $subtract(103, 3) Output: 100 Column name &#8211; $subtract([Due Date|DueDate],2:0:0:0) Due Date: 12/2/20 Output: 11/30/20 Query List &#8211; $subtract(GetPurchaseItem##Price,100) WF Variable &#8211; $subtract(WFaction##Price,[Discount|Discount]) Note: Source and Target columns should be either Number or Currency or Date Time columns. Today $usercollection([value/placeholder],[value/placeholder]) This function gets the collection of users from different fields that can be mapped to a multi user column. When configured in a WF Variable action, the collection of users returned can be used to create an item for each user. Syntax $usercollection([ColumnDisplayName|ColumnInternalName],[ColumnDisplayName|ColumnInternalName]). Example Create Task for each user entered in ‘Level 1 Technician’, ‘Level 2 Technician’. $usercollection([Level 1 Technician|Level1Technician],[Level 2 Technician|Level 2 Technician]). Input: Level 1 Technician: Pavan Kumar, Prakash Arya Level 2 Technician: James Restivo, Scott Restivo Output: Create Task 1 for Pavan Kumar Create Task 2 for Prakash Arya Create Task 3 for James Restivo Create Task 4 for Scott Restivo For more detailed use case, please refer Using User Collection . Note Source column should be a person or group column. $xpath([value/placeholder],@xpath) This function is used to navigate through elements and attributes in an XML. Syntax Column Name: $xpath([value/placeholder],xpath) Query List: $xpath(QuerylistActionName##ColumnInternalName,xpath) WF Variable: $xpath(WFActionName##ColumnInternalName,xpath) Example $xpath([xmlvalue|xmlvalue], /birds/parrot) Input: Value in ‘xmlvalue’ column is &lt;birds&gt;&lt;parrot&gt;&lt;color&gt;green&lt;/color&gt;&lt;/parrot&gt;&lt;pigeon&gt;&lt;color&gt;white&lt;/color&gt;&lt;/pigeon&gt;&lt;/birds&gt; Output: &lt;parrot&gt;&lt;color&gt;green&lt;/color&gt;&lt;/parrot&gt; $xpath(TicketItem##Xml,/Category/CategoryOwner) Input: TicketItem is a query list that is getting the XML value from Category or a lookup list item. Output: Pavan Kumar Where Category Owner of the selected category is Pavan Kumar Note: To repeat attribute/element collection on a workflow action, this function should be configured in WF Variable action and can be used later in field mappings of create item action by using the syntax ‘@{CollectionValue}tag/attribute name’. For single value, directly use full function. Functions exclusively available in NITRO Workflows $datediffbusinesshours(DateTimeField,DateTimeField) This function is used to get the business hours difference of two Date and Time fields. Site Regional Time zone settings will be considered in this case to calculate the business hours Syntax $datediffbusinesshours(DateTimeField,DateTimeField) Example $datediffbusinesshours([Start Time|StartTime],[End Time|EndTime]) Output: 12 Note: Target columns should be either single line of Text/Number column $datediffhours(DateTimeField,DateTimeField) This function is used to get the total hours difference of two Date and Time fields. Syntax $datediffhours(DateTimeField,DateTimeField) Example $datediffhours([Start Time|StartTime],[End Time|EndTime]) Output: 18 $extractheaders(Separator,[value/placeholder],option) This function gets a collection of key value pairs from a value based on separator. It can only be used in WF Variable action. Syntax $extractheaders(separator,[ColumnDisplayName|ColumnInternalName],firstupper/upper/lower&nbsp;) Parameter Sequence&nbsp; Description Optional / Default Value Example 1 Separator between name and value. Also, it is the separator between the value and next key Required Semicolon ; &nbsp; Note: Comma cannot be used as a separator as it is reserved character in function syntax 2 Column specifier in format [ColumnDisplayName|ColumnInternalName] Required We can specify column name that has the text that needs to be parsed to extract name value pairs 3 Optional Parameter Optional firstupper: to extract the key value with setting first character as capital letter upper: to extract the key value with setting all characters as capital letters lower: to extract the key value with setting all characters as small letters Example&nbsp; Find the ‘Importance’ of the email received by SharePoint announcement list (Incoming email enabled list) WF Variable: WfVar: $extractheaders(:,[E-Mail Headers|EmailHeaders],firstupper) Input: x-sender: James@contoso.com x-receiver: contoso@server.domain.com Sensitivity: NORMAL Importance: Normal Received: from &#8230; &#8230;. In Field Mappings: WfVar##Importance Output: Normal Note: Comma can&#8217;t be used like separator as it is used as function parameters separator. $getaduserproperty $getexpressionvalue $getspgroupmembers(displayValue,joinchar,UserField) This function is used to get the list of users that are present in a SharePoint group. Syntax $getspgroupmembers(displayValue,joinchar,UserColumn) Example $getspgroupmembers(name,;,[Assigned Team|AssignedTeam]) Input: ‘Assigned Team’ is ‘Crow Canyon Service Request Owners’ Output: James Restivo;Crow Admin;Pavan Kumar; Note: Target column need to be either Single line of text/multiple lines of text. $getspuserproperty(displayValue,joinchar,UserField) This function is used to get the values of Person or Group column and set the value to a single line of text column. Syntax $getspuserproperty(displayValue,joinchar,UserColumn) displayValue can be email, name, id, loginname, Userprincipalname and manager joinchar is separator like ; UserField is a person or group column placeholder Example $getspuserproperty(email,;,[Assigned Staff|AssignedStaff]) Input: Pavan Kumar, James Restivo Output: pavan@contoso.com;james@contoso.com Note: Target column should be either Single line of text or multiple lines of text field. $getspuserproperty(manager,;,[Requester|Requester]) Input: James Restivo Output: Scott Restivo $itemsharedwith(Id) This function is used to get the list of users for which current Item is shared with or has access to view the item. Syntax $itemsharedwith(Id) Example Get all users and insert in a multiple selection enabled person or group column ‘All Techinicians’ $itemsharedwith([ID|ID]) Input: [ID|ID] (list item ID) Output: Pavan Kumar;James Restivo;Scott Restivo Note: Target column need to be a multiple selection enabled Person or group type. {ListId} This function returns the List ID of the list on which workflow is configured on and can be set in text/note columns Syntax {ListId} {ListName} This function returns the Title of the list on which workflow is configured on and can be set in text/note columns Syntax {ListName} Now $regexreplace(,,) The function $regexreplace(,,) has the feature to check for a matching value based on Regular Expression and replace it with another string in a column. Syntax &nbsp;$regexreplace(Column Placeholder,Regular expression,replace value,type) Example Remove spaces in given text $regexreplace([Title|Title],@\\s,,,1) Input: Title has value as “This is a Test”. Output: ThisisaTest {SiteCollectionId} This function returns the Site Collection GUID data and can be set in text/note columns Syntax {SiteCollectionId} {SiteCollectionUrl} This function returns the Site Collection URL and can be set in text/note columns Syntax {SiteCollectionUrl} $Sum(NumberField,NumberField,number) This function will sum up several number fields and/or numbers Syntax $sum([Column1 Display Name|Column1InternalName],[Column2 Display Name|Column2InternalName]) Example $sum([Total Cost|TotalCost],[Tax|Tax]) UtcNow $variablecollection(Separator,[value/placeholder],option) This function gets the collection of values from parameters and combines them into a single value by joining the collection of values with a separator. It can also be used to get the collection of column values from query list items. Syntax SharePoint Online: $variablecollection(separator,[ColumnDisplayName|ColumnInternalName]) SharePoint On-Premises: $variablecollection([ColumnDisplayName|ColumnInternalName],separator) Example Combine Requester and Assigned To column values and insert in a multiple person or group column: $variablecollection(;#,[Requester|Requester],[AssignedTo|AssignedTo]) Input: Requester: Pavan Kumar Assigned To: James Restivo Output: Pavan Kumar;#James Restivo Query list Syntax $querylistactionname##$variablecollection(separator,[value/placeholder],optional) Example 1 Read related child tasks assignee and insert in a multiple selection person or group column on a parent item. $GetRelatedTasks##$variablecollection(;#,[Assigned To|AssignedTo]) Input: Task 1 Assignee: Pavan Kumar Task 2 Assignee: James Restivo Output: Pavan Kumar, James Restivo Note: More than two parameters can be used in this function Example 2 When we have title with | as separator, and we need to use them in create item action each item separated by |, then we can define this variable collection as variable. Input: Title: Email | Calendar | Outlook We can use this Wf variable of variable collection to create each item for each collection value with @{CollectionValue} as column mapping for each task when inserted in Title column mapping Output: Task 1 created with Email as Title Task 2 created with Calendar as Title Task 3 created with Outlook as Title $variablecollection2(Separator,unique,[Placeholder1],[Placeholder2]) This function is similar to $variablecollection(), but the advantage of this function is to get multiple column values from each item and place in a multiple lines of text column. Syntax SharePoint Online: $variablecollection(separator,[ColumnDisplayName|ColumnInternalName]) SharePoint On-Premises: $variablecollection([ColumnDisplayName|ColumnInternalName],separator) Example $variablecollection2(;#,[Requester|Requester],[AssignedTo|AssignedTo]) Query list $querylistactionname##$variablecollection2(separator,unique,[value/placeholder], [value/placeholder], [value/placeholder]) Note: More than two parameters and multiple column placeholders can be used in this function. {WebId} This function returns the Current web GUID and can be set in text/note columns Syntax {WebId} {WebUrl} This function returns the Current web URL and can be set in text/note columns Syntax {WebUrl} Functions exclusively available in NITRO Custom Actions $getuserattr(User Id/{Me}/[UserColumn],Email/DisplayName) This function is used to return Email/Display Name attribute of a user based on User ID or Logged in user or a person or group column. Syntax $getuserattr(User Id/{Me}/[UserColumn],Email/DisplayName) Examples: Input: $getuserattr(15,Email) Output: pavan@contoso.com Where ‘Pavan Kumar’ User id is 15 $getuserattr([Created By|Author],Email) Output: jamesr@contoso.com Where item is created by ‘James Restivo’ $getuserattr({Me},DisplayName) Output: Pavan Kumar Where logged in user is ‘Pavan Kumar’ $jsonpath([value/placeholder],@jsonpath) This function is used to navigate through objects in an JSON object/array. This function takes two arguments as input. First argument is one of the following possible parameters and returns the value as per the “json path” given in second argument. Second argument is always expected to be a valid json path. First Argument possible parameters: Literal/Custom Value: Syntax: $jsonpath (any valid json object,@jsonpath) Other column value (Place holder of current item) Syntax: $jsonpath ([placeholder],@jsonpath) Other column value (Place holder of query list action executed prior to this) Syntax: $jsonpath (QuerylistActionName##Field placeholder,@jsonpath) Variable value Syntax: $jsonpath (VariableName##Value,@jsonpath) Detailed Examples with output Example 1 My JSON object input for this example: {&#8220;MovieDatabase&#8221;: { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;movie&#8221;: [{ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;name&#8221;: &#8220;The Change-Up&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;genre&#8221;: &#8220;comedy&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;director&#8221;: &#8220;David Dobkin&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;Facebook_like&#8221;: 252 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;name&#8221;: &#8220;Rise of the Planet of the Apes&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;genre&#8221;: &#8220;SciFi&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;director&#8221;: &#8220;Rupert Wyatt&#8221;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#8220;Facebook_like&#8221;: 472 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } } Expression: $jsonpath(JSON object, @$.MovieDatabase.movie[*].director) Output: [&#8220;David Dobkin&#8221;,&#8221;Rupert Wyatt&#8221;] Example 2 My input is coming from a column of Query List Action (action name: TicketItem, Cities is a column name in the query list action list) result list item. And sample input is same as above, Expression 1: $jsonpath(TicketItem##Movies, @$.MovieDatabase.*) Output: [[{&#8220;name&#8221;:&#8221;The Change-Up&#8221;,&#8221;genre&#8221;:&#8221;comedy&#8221;,&#8221;director&#8221;:&#8221;David Dobkin&#8221;,&#8221;Facebook_like&#8221;:252},{&#8220;name&#8221;:&#8221;Rise of the Planet of the Apes&#8221;,&#8221;genre&#8221;:&#8221;SciFi&#8221;,&#8221;director&#8221;:&#8221;Rupert Wyatt&#8221;,&#8221;Facebook_like&#8221;:472}]] Expression 2: $jsonpath(TicketItem##Movies, @$.MovieDatabase..Facebook_like) Output: [252,472] Expression 3: $jsonpath(TicketItem##Movies, @$..movie[(@.length-1)]) Output: [{&#8220;name&#8221;: &#8220;Rise of the Planet of the Apes&#8221;,&#8221;genre&#8221;: &#8220;SciFi&#8221;,&#8221;director&#8221;: &#8220;Rupert Wyatt&#8221;,&#8221;Facebook_like&#8221;: 472}] $parsefieldvalue(placeholder,Id/Value Type,Separator) This function is used to return required output from field value object Default value type: String Default Separator: ; (semi colon) $parsefieldvalue(Column placeholder) $parsefieldvalue(Column placeholder, value type) $parsefieldvalue(Column placeholder, value type, separator) Available value types: Id Value Email Dateonly url string object Syntax $parsefieldvalue(Column placeholder) Example: $parsefieldvalue([Requester|Requester],Email,;) Input: Requester, a person or group column value is James Restivo Output: james@contoso.com $parsefieldvalue([Category|Category],Id,;) Input: Category is a lookup column that has value ‘Networking’ Output: 13 where 13 is the item id of the list item ‘Networking’ in lookup list For more functions, refer this Article About James Restivo View all posts by James Restivo &rarr; © 2025 Crow Canyon Systems, Inc. All Rights Reserved Terms of Service Privacy Policy www.crowcanyon.com"
  }
]
